[{"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add user", "content_type": 4, "codename": "add_user"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change user", "content_type": 4, "codename": "change_user"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete user", "content_type": 4, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view user", "content_type": 4, "codename": "view_user"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add content type", "content_type": 5, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change content type", "content_type": 5, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete content type", "content_type": 5, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view content type", "content_type": 5, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add session", "content_type": 6, "codename": "add_session"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change session", "content_type": 6, "codename": "change_session"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete session", "content_type": 6, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view session", "content_type": 6, "codename": "view_session"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add post", "content_type": 7, "codename": "add_post"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change post", "content_type": 7, "codename": "change_post"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete post", "content_type": 7, "codename": "delete_post"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view post", "content_type": 7, "codename": "view_post"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add profile", "content_type": 8, "codename": "add_profile"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change profile", "content_type": 8, "codename": "change_profile"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete profile", "content_type": 8, "codename": "delete_profile"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view profile", "content_type": 8, "codename": "view_profile"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add follow", "content_type": 9, "codename": "add_follow"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change follow", "content_type": 9, "codename": "change_follow"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete follow", "content_type": 9, "codename": "delete_follow"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view follow", "content_type": 9, "codename": "view_follow"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add subscription", "content_type": 10, "codename": "add_subscription"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change subscription", "content_type": 10, "codename": "change_subscription"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete subscription", "content_type": 10, "codename": "delete_subscription"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view subscription", "content_type": 10, "codename": "view_subscription"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add Comment", "content_type": 11, "codename": "add_comment"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change Comment", "content_type": 11, "codename": "change_comment"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete Comment", "content_type": 11, "codename": "delete_comment"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view Comment", "content_type": 11, "codename": "view_comment"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add tag", "content_type": 12, "codename": "add_tag"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change tag", "content_type": 12, "codename": "change_tag"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete tag", "content_type": 12, "codename": "delete_tag"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view tag", "content_type": 12, "codename": "view_tag"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add tagged item", "content_type": 13, "codename": "add_taggeditem"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change tagged item", "content_type": 13, "codename": "change_taggeditem"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete tagged item", "content_type": 13, "codename": "delete_taggeditem"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view tagged item", "content_type": 13, "codename": "view_taggeditem"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$390000$qof2UXxmcsfGNmfwHG7Zre$rdrw9hiVqSzLwUxQcOBmpBU3XMV3emkdiSeF28w71Bc=", "last_login": "2022-11-26T20:42:27.036Z", "is_superuser": true, "username": "super_yogesh", "first_name": "Super", "last_name": "Yogesh", "email": "yogeshsirsat000@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2022-11-26T20:31:58.327Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$390000$G5lfnukjH7U4FTTE5jPUr6$QjM9JpvlXzYXj1B/h4cdN93T66LayGeIuenCpsV+EC0=", "last_login": "2022-11-27T17:57:20.851Z", "is_superuser": false, "username": "grodier", "first_name": "George Rodier", "last_name": "", "email": "grodier@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:54:00.066Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 3, "fields": {"password": "pbkdf2_sha256$390000$aBPWyY2MBEyihfogNx8YyV$fmyCBwHhvNMF1iD8rQ24Ytsx6TNWqKApnXgX+cMN1zs=", "last_login": null, "is_superuser": false, "username": "tungnxu", "first_name": "ܓܨTiêu Dao", "last_name": "", "email": "tungnxu@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:54:03.282Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 4, "fields": {"password": "pbkdf2_sha256$390000$dldgeVcNRelnxEz9kEEj2C$BbAUi1hVhrlNFFKQWHBnNbpxrKxIHPcDQmKSekefVFQ=", "last_login": null, "is_superuser": false, "username": "askjkrishna", "first_name": "Jaya Krishna Namburu", "last_name": "", "email": "askjkrishna@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:54:08.288Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 5, "fields": {"password": "pbkdf2_sha256$390000$3hIUHbhsXKQvf19IwlvNTb$rrTqFHwX/PvJSEHWiOtW/WpZmfOi25V6edIq+hR8aEg=", "last_login": null, "is_superuser": false, "username": "humrochagf", "first_name": "Humberto Rocha", "last_name": "", "email": "humrochagf@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:01.663Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 6, "fields": {"password": "pbkdf2_sha256$390000$zZColtU4plmEul6tvq9GHn$xT2S0nN9hk0yyFAP3wFYlTCixlpSLImAzCkd+maP6w4=", "last_login": null, "is_superuser": false, "username": "luturol", "first_name": "Rafael Ahrons", "last_name": "", "email": "luturol@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:04.745Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 7, "fields": {"password": "pbkdf2_sha256$390000$egg9z0PxHsWbN2z1JZUby5$GheoesLtyPHerJ3eoWjRaYTWP4OOTKgUjPiEIHVZxRY=", "last_login": null, "is_superuser": false, "username": "mstamstrom", "first_name": "Marcus Stamström", "last_name": "", "email": "mstamstrom@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:07.375Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 8, "fields": {"password": "pbkdf2_sha256$390000$ZrHMcy9Clwdl1x6Jro06NK$7D6KvCzh7Gg6i2AyajTC6LJEImHe3gcv9AwhG1xuNCg=", "last_login": null, "is_superuser": false, "username": "tobiassn", "first_name": "Tobias SN", "last_name": "", "email": "tobiassn@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:09.884Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 9, "fields": {"password": "pbkdf2_sha256$390000$rAj1EBSCp7Bq6LAGXizAVK$vXkdvXFeP5hzVec+oDo8K+A25+HxPd8ln6AsoM0F0us=", "last_login": null, "is_superuser": false, "username": "oxyyyyy", "first_name": "Alexandr Vlasenko", "last_name": "", "email": "oxyyyyy@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:11.831Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 10, "fields": {"password": "pbkdf2_sha256$390000$pUhEA62pIlRPiu7rHd4yfy$FLpB2nO5msjqax1wOBifFjJMVVkEgedZJOhH0vC8jiM=", "last_login": null, "is_superuser": false, "username": "josemunoz", "first_name": "José Muñoz", "last_name": "", "email": "josemunoz@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:13.815Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 11, "fields": {"password": "pbkdf2_sha256$390000$PGXzM2yiDpFGkNaTbYZNJV$vNZh+Yu/mu8KhJ2UXbJ9OdCg2eONHiSSAwNR1q6WYQU=", "last_login": null, "is_superuser": false, "username": "stegriff", "first_name": "Stephen Griffiths", "last_name": "", "email": "stegriff@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:16.135Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 12, "fields": {"password": "pbkdf2_sha256$390000$VaOavfgENxt7O5N3a35X8n$JgAyDoQn24+cEa5QZL0OzvNtQZWTQLGoP4zV5fw4Bg4=", "last_login": null, "is_superuser": false, "username": "zeitschlag", "first_name": "Nathan Mattes", "last_name": "", "email": "zeitschlag@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:19.325Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 13, "fields": {"password": "pbkdf2_sha256$390000$nc6SdxAQlBV6qpd2GXwjWE$PMjW8VSfQ5fA4le1Gyzbmzj4sHPjVeysErRXBLw/yNg=", "last_login": null, "is_superuser": false, "username": "vlasales", "first_name": "Vlastimil Pospichal", "last_name": "", "email": "vlasales@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:22.330Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 14, "fields": {"password": "pbkdf2_sha256$390000$PMc3pDVI7cZg4UV937te05$O4vsGBjHkhbBdQig+hvkznZfbM2/vyhN5/gO0G/Iurc=", "last_login": null, "is_superuser": false, "username": "sloan", "first_name": "Sloan", "last_name": "", "email": "sloan@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:25.428Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 15, "fields": {"password": "pbkdf2_sha256$390000$8gygT1GLdRDsplPN0vXbKb$t8W3pX91CIOCoigPg9lWKNeNdVotOM15jn5BRhnIAEQ=", "last_login": null, "is_superuser": false, "username": "bemmio", "first_name": "Edward Mike ", "last_name": "", "email": "bemmio@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:28.334Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 16, "fields": {"password": "pbkdf2_sha256$390000$U7UKTTnchvjWuGNUz5Co5R$d6hRPv7BmD2SV/Z92KLcdmEKD5dxzLTyli+IH7qUczw=", "last_login": null, "is_superuser": false, "username": "jaymesdowner", "first_name": "Jaymes Downer ✌🏼", "last_name": "", "email": "jaymesdowner@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:29.758Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 17, "fields": {"password": "pbkdf2_sha256$390000$0s05Y943feO2uywnpjFDxa$fzBQtaenRJWNSnUOjUCPHY9qap/YP9GIA+AHxOU9SZY=", "last_login": null, "is_superuser": false, "username": "rapasoft", "first_name": "Pavol Rajzak", "last_name": "", "email": "rapasoft@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:31.113Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 18, "fields": {"password": "pbkdf2_sha256$390000$GO2oUo07582GVeCbdLGtHr$T9eQsjSwWZoVoUTI1hVKoRux675Ma1BMSSLqD48mmkY=", "last_login": null, "is_superuser": false, "username": "andrewbrown", "first_name": "Andrew Brown 🇨🇦", "last_name": "", "email": "andrewbrown@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:32.345Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 19, "fields": {"password": "pbkdf2_sha256$390000$aLmyiyoK1ZC1NATQ5qm0HL$4LyhLciIAEFG8uohsUDnBZ32hjTcbt1kxRMcASzhAEM=", "last_login": null, "is_superuser": false, "username": "sandordargo", "first_name": "Sandor Dargo", "last_name": "", "email": "sandordargo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:33.879Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 20, "fields": {"password": "pbkdf2_sha256$390000$HH4M6v03E0CxyL4toslfTD$uXEj2Hm+0CQG0NmjC8JMZMQcfOhmAmvCyQGquzO30mc=", "last_login": null, "is_superuser": false, "username": "theodesp", "first_name": "Theofanis Despoudis", "last_name": "", "email": "theodesp@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:35.052Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 21, "fields": {"password": "pbkdf2_sha256$390000$n5eRqfODifwXws67g60dej$6qh5SSsQFEkLTpo/hv5waEPCOpKabhMne5q9TZUdMNI=", "last_login": null, "is_superuser": false, "username": "niorad", "first_name": "Antonio Radovcic", "last_name": "", "email": "niorad@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:36.442Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 22, "fields": {"password": "pbkdf2_sha256$390000$YUbYk2JoP0N1ZIwfgKdLle$vhHZZsSQXOtAxzcNigNO03qvzi+UpabfvS/G11ln9aM=", "last_login": null, "is_superuser": false, "username": "ben", "first_name": "Ben Halpern", "last_name": "", "email": "ben@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:37.571Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 23, "fields": {"password": "pbkdf2_sha256$390000$Xo20FccBzX0bciGux3iS4h$BGlsl66SPHga0YL8kO99JHx4VWjcT1Kl2Q4S+TBs++Y=", "last_login": null, "is_superuser": false, "username": "bugmagnet", "first_name": "Bruce Axtens", "last_name": "", "email": "bugmagnet@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:39.069Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 24, "fields": {"password": "pbkdf2_sha256$390000$Uq3CPByrP8NmLt9GtlRAD2$xqsk5NfY4KOgeyMvcwRylP62804KtzhYHCvgQDM1ZOo=", "last_login": null, "is_superuser": false, "username": "aritdeveloper", "first_name": "Arit Developer", "last_name": "", "email": "aritdeveloper@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:40.895Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 25, "fields": {"password": "pbkdf2_sha256$390000$YhvkuVzpJ8oi9LxWZPTcFh$xygJ/xq6O8D1ABq4IDkzDXMy5nup9JyTmOOkbPdjnBA=", "last_login": null, "is_superuser": false, "username": "sergiodxa", "first_name": "Sergio Daniel Xalambrí", "last_name": "", "email": "sergiodxa@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:42.640Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 26, "fields": {"password": "pbkdf2_sha256$390000$U2gUHOpnAjlKLrG4QuYebM$/3coPdHpmo9U0ecr1gCI7rqYZPKdQV0Qr/bNIg/J1TM=", "last_login": null, "is_superuser": false, "username": "huijing", "first_name": "Chen Hui Jing", "last_name": "", "email": "huijing@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:45.580Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 27, "fields": {"password": "pbkdf2_sha256$390000$60UPHgdYAfxTwTuoE1hRsB$f3pEvuHr1DsXXa92LkLeoHE1a4VMTl/SYA6oAKp0bLA=", "last_login": null, "is_superuser": false, "username": "westbrook", "first_name": "Westbrook Johnson", "last_name": "", "email": "westbrook@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:49.574Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 28, "fields": {"password": "pbkdf2_sha256$390000$c8BLtx7bd4iMbc6MwrmgMd$dNcSKGhAV4zdOqpgTfAKjdNsMmbj2gb9KCFFEY4NhWw=", "last_login": null, "is_superuser": false, "username": "sesay", "first_name": "sesay", "last_name": "", "email": "sesay@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:54.151Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 29, "fields": {"password": "pbkdf2_sha256$390000$uyRIITIme5rt3SL0YOUBPx$yYC07igHtki3JoUFsy3C8kUZbp5pz8eopHiWFXXVb8E=", "last_login": null, "is_superuser": false, "username": "dpaine20", "first_name": "David Paine20", "last_name": "", "email": "dpaine20@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:58:56.988Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 30, "fields": {"password": "pbkdf2_sha256$390000$PAdSeZb3X7EABK0YZKY9eI$Yv1dbxEv3hwgiU3zGxM8qJ5uEqh6wquE1nmj7hEdpMA=", "last_login": null, "is_superuser": false, "username": "openspeedtest", "first_name": "OpenSpeedtest.com", "last_name": "", "email": "openspeedtest@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:04.809Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 31, "fields": {"password": "pbkdf2_sha256$390000$MeohBqSTKvJZ7GoZy5SNsA$kQtartSj/TEEn9LFJULc8OaQpxTJFhxjc1ClwR4KT2g=", "last_login": "2022-11-27T17:40:35.567Z", "is_superuser": false, "username": "deep75", "first_name": "Karim", "last_name": "", "email": "deep75@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:08.045Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 32, "fields": {"password": "pbkdf2_sha256$390000$Ef8a98nZjmJPwja34PQPr8$tbH/SBs4heGRXTQgZSlQXveZ72ht5AO8Y2UzVYs5rJI=", "last_login": null, "is_superuser": false, "username": "changoman", "first_name": "Hunter Chang", "last_name": "", "email": "changoman@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:28.204Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 33, "fields": {"password": "pbkdf2_sha256$390000$C6dvuurkTNjetFqyi1OMtr$EpMgk4vc+hXV7iRlP4XVO0BAvHYUBFj0ixXKl31Eopw=", "last_login": null, "is_superuser": false, "username": "codestuff2", "first_name": "Adam Whitlock", "last_name": "", "email": "codestuff2@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:31.550Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 34, "fields": {"password": "pbkdf2_sha256$390000$KrJWVyW4ZXbOwL7jAC2Uxo$obup7Z7i/0VavhYJvxPg7TMGZtimA3ZalRuJm15kLK4=", "last_login": null, "is_superuser": false, "username": "alyssaw90", "first_name": "Alyssa Williams", "last_name": "", "email": "alyssaw90@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:34.639Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 35, "fields": {"password": "pbkdf2_sha256$390000$aMlMi4Dq9AG8DcciPlmbTW$QNvJQP26nPSOf+0asxB9kppPixgs61AfAXnt8dVjdBg=", "last_login": null, "is_superuser": false, "username": "ldralighieri", "first_name": "Vladimir Raupov", "last_name": "", "email": "ldralighieri@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:38.570Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 36, "fields": {"password": "pbkdf2_sha256$390000$mwwGsdnHKHznILg0U5vaK3$cXenG4H9v7roh4jdr/wMtJwOuR42V3EEH4O4aCrNIC8=", "last_login": null, "is_superuser": false, "username": "damcosset", "first_name": "Damien Cosset", "last_name": "", "email": "damcosset@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:44.353Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 37, "fields": {"password": "pbkdf2_sha256$390000$0mQrTItFa4VXHCOk0iP0r1$23WSAQenVB1sFBOvFjJz4K1tfcRbuLbkVVmsGtHwk/M=", "last_login": null, "is_superuser": false, "username": "florimondmanca", "first_name": "Florimond Manca", "last_name": "", "email": "florimondmanca@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:47.031Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 38, "fields": {"password": "pbkdf2_sha256$390000$E6GJBTbx0KyWbJiuAA5bWF$Yvrfmi+01osWQLoRp1MW2wjH1CmMziUwfdQHur/kVlk=", "last_login": null, "is_superuser": false, "username": "pretaporter", "first_name": "Maksim", "last_name": "", "email": "pretaporter@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:50.041Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 39, "fields": {"password": "pbkdf2_sha256$390000$TYFKLobFO2A4NkRSdhfvmR$wmQHSrDC75tQO7RSEAW3YLUow1htaVWRBxK2l38Vchs=", "last_login": null, "is_superuser": false, "username": "stearm", "first_name": "Stefano Armenes", "last_name": "", "email": "stearm@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:52.703Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 40, "fields": {"password": "pbkdf2_sha256$390000$j29rSFfWMII4dxiEftsGC8$q/jv3qf7T2hK8B/MJ0njlPcqu8e2DDssUGurnLRPInI=", "last_login": null, "is_superuser": false, "username": "kristemmerman", "first_name": "Kris Temmerman", "last_name": "", "email": "kristemmerman@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:54.750Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 41, "fields": {"password": "pbkdf2_sha256$390000$XQBFZY3v9DkZb5vs7EzCQ9$K66nxxRQFFfsRuUeqJF/+8jH989vuIiCt2ySfsIq3cY=", "last_login": null, "is_superuser": false, "username": "wolverineks", "first_name": "Kevin Sullivan", "last_name": "", "email": "wolverineks@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:56.802Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 42, "fields": {"password": "pbkdf2_sha256$390000$ubdv9CIvl0Aq8GjclgUYrb$NpX/Mkbz+JScpgT6XCP6Cn6TFkaODZ+/3xib2hipbOI=", "last_login": null, "is_superuser": false, "username": "charlex", "first_name": "HCB", "last_name": "", "email": "charlex@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T10:59:59.003Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 43, "fields": {"password": "pbkdf2_sha256$390000$2IzKdipct15wlPghatF3k0$86FOMcP0Q5LBDXUtYXOMUixmHm1kCxVOSQdgodTvZ0o=", "last_login": null, "is_superuser": false, "username": "mbrtn", "first_name": "Ruslan Shashkov", "last_name": "", "email": "mbrtn@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:00.849Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 44, "fields": {"password": "pbkdf2_sha256$390000$UzbZ7HIRmiL1Yb7G6DdUY3$3uq9vFal+j3KwKUe0wdJ6r5X4cgYYwCsUtz/y4k9r3s=", "last_login": null, "is_superuser": false, "username": "ericandre615", "first_name": "Eric Andre", "last_name": "", "email": "ericandre615@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:02.983Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 45, "fields": {"password": "pbkdf2_sha256$390000$ee9fF5e4uS5cDSykOallRK$w/KJCUjzuUV0B2wpaMdhGy5EGTobYmcE5lN4EHsWERM=", "last_login": null, "is_superuser": false, "username": "nikomontana", "first_name": "Niko Montana", "last_name": "", "email": "nikomontana@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:05.707Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 46, "fields": {"password": "pbkdf2_sha256$390000$rD4Efj0VPc7dnGHF042pbZ$Q0SYQfal5av6hjeKaoHi5+c9R/HKv6Tl24J0qv0w1U4=", "last_login": null, "is_superuser": false, "username": "razbakov", "first_name": "Aleksey Razbakov", "last_name": "", "email": "razbakov@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:07.911Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 47, "fields": {"password": "pbkdf2_sha256$390000$iOjEXWmg1dFBhBYikyHyJP$RQWy2b2930nzwNVwU9evLh2CI6ZjbBWsE3G3G/8PM70=", "last_login": null, "is_superuser": false, "username": "yaronwittenstein", "first_name": "Yaron Wittenstein", "last_name": "", "email": "yaronwittenstein@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:10.995Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 48, "fields": {"password": "pbkdf2_sha256$390000$GMcNuaNEE0txY7Oml8zi5d$DwGnfFLptrF/NQRuIyhAGfvOxNedKM0GENWqPet4VNo=", "last_login": null, "is_superuser": false, "username": "edrome", "first_name": "EdRome", "last_name": "", "email": "edrome@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:15.530Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 49, "fields": {"password": "pbkdf2_sha256$390000$C5Wfv2J9aRvw3goyCC0HSS$x6lbv8BLVACl9F6dNsVXDlO1EsIm0bnPO0yHjJr646I=", "last_login": null, "is_superuser": false, "username": "ilonacodes", "first_name": "Ilona Codes", "last_name": "", "email": "ilonacodes@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:21.218Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 50, "fields": {"password": "pbkdf2_sha256$390000$H7j87KirOtkTeIlc2MkQze$YIQh1f6BpdnjTjN6PRBY5b0VFnUAEEOVvzAaUjAolLw=", "last_login": null, "is_superuser": false, "username": "tttfifo", "first_name": "Todor Todorov", "last_name": "", "email": "tttfifo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:24.297Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 51, "fields": {"password": "pbkdf2_sha256$390000$PLhgvhcEqNzgV9K0TYbw9W$y3W4kn5mUUVp4+zSOqc+YWq4CRrkHcsg/2sV1MKIPsA=", "last_login": null, "is_superuser": false, "username": "pavlosisaris", "first_name": "Paul Isaris", "last_name": "", "email": "pavlosisaris@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:25.596Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 52, "fields": {"password": "pbkdf2_sha256$390000$7eaVOO9C9qdObVlNIdFpOm$yUYw7TXmSYbnYbBT88uMABkJUJQ/o1DjMCF31Ucdp4k=", "last_login": null, "is_superuser": false, "username": "lankydandev", "first_name": "Dan Newton", "last_name": "", "email": "lankydandev@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:27.071Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 53, "fields": {"password": "pbkdf2_sha256$390000$XpuoeqziRLEg3pmXAZWjcO$po1I1O/2x+UD9r2fGSe4/iGV/VF6c70dNA1wjbVn+t4=", "last_login": null, "is_superuser": false, "username": "jenc", "first_name": "Jen Chan", "last_name": "", "email": "jenc@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:28.902Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 54, "fields": {"password": "pbkdf2_sha256$390000$gC77laOpBGXENDSBb0FISb$AbEl8UKTJamqD0QP3KNKdH9W+qSYllswA8SM+PnB7qs=", "last_login": null, "is_superuser": false, "username": "guitarino", "first_name": "Kirill Shestakov", "last_name": "", "email": "guitarino@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:31.073Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 55, "fields": {"password": "pbkdf2_sha256$390000$0yw3gFmaDZ1AaiilwQDbhZ$0zIYInFHkLo9TmyFmQTRYsVeHiZSQ+zt3T0zi6f00/A=", "last_login": null, "is_superuser": false, "username": "mjuraj", "first_name": "Juraj Malenica", "last_name": "", "email": "mjuraj@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:32.509Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 56, "fields": {"password": "pbkdf2_sha256$390000$vSasGxCYkbWeRaXK9rXCSC$KmdLaNUZzS1Q3KFmS5aS3VUs0k5Q7nevW8dAIlDKfZU=", "last_login": null, "is_superuser": false, "username": "5422m4n", "first_name": "Sven Kanoldt", "last_name": "", "email": "5422m4n@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:34.300Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 57, "fields": {"password": "pbkdf2_sha256$390000$h6jWVA0AL06tMaWL2T9zkM$47VOonwxMP506FDtfQVUnFHoOqVVJEPAHPThhjdwih8=", "last_login": null, "is_superuser": false, "username": "hozefaj", "first_name": "Hozefa", "last_name": "", "email": "hozefaj@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:36.731Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 58, "fields": {"password": "pbkdf2_sha256$390000$7jDHvG7zGjOdOj2hK7IWcb$JDNMGTTbz53eVQbX5kDhW+0DPoXnq8tQpqA3Qj0i9/c=", "last_login": null, "is_superuser": false, "username": "disccomp", "first_name": "Mark Moran", "last_name": "", "email": "disccomp@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:39.009Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 59, "fields": {"password": "pbkdf2_sha256$390000$lW6erFEytVZFGx59uHkYmg$b2mMGNtruqxwlEaUu8buSjc0EKhtx6i85xWv38q4w7k=", "last_login": null, "is_superuser": false, "username": "theashraf", "first_name": "Abdelrahman Ashraf", "last_name": "", "email": "theashraf@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:41.896Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 60, "fields": {"password": "pbkdf2_sha256$390000$CfErv8V2nPN7rcMqDE2peg$69Tv9Eqxw+4BB1dbBhK1LltoJqkhuB6jkIuvu/mDhAk=", "last_login": null, "is_superuser": false, "username": "aziziyazit", "first_name": "Azizi Yazit", "last_name": "", "email": "aziziyazit@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:45.303Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 61, "fields": {"password": "pbkdf2_sha256$390000$D34uNJ2fdT8XLkyobZDbQb$/py3THB9OJAV02pWoojbKe3X6ZN05hBa4P6EC+cjyFo=", "last_login": null, "is_superuser": false, "username": "ngnam", "first_name": "NamNguyen", "last_name": "", "email": "ngnam@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:48.361Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 62, "fields": {"password": "pbkdf2_sha256$390000$Md6PCOWfPNyH9bfMHETSuV$sFqG5F00Ia0ILybRcs9plJiF0Sh4sgyvpSqjmNnn+Io=", "last_login": null, "is_superuser": false, "username": "ak_8085", "first_name": "Anurag", "last_name": "", "email": "ak_8085@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:51.102Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 63, "fields": {"password": "pbkdf2_sha256$390000$UrnT0TE4nH4c5TkHYpkUcT$NsBB0YZAoPyzVhCUSkf7ed0/OCNn1bs3sAQShGVwU7A=", "last_login": null, "is_superuser": false, "username": "fredrikbergqvist", "first_name": "Fredrik Bergqvist", "last_name": "", "email": "fredrikbergqvist@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:55.149Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 64, "fields": {"password": "pbkdf2_sha256$390000$glywXJjfnupnA0dzfbybIm$DNGSN/9NLekNd/0ViPlSuSkzS/RxVdudCdpOBPE+JPQ=", "last_login": null, "is_superuser": false, "username": "lewatt23", "first_name": "Mfou'ou Medjo stanly", "last_name": "", "email": "lewatt23@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:00:57.927Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 65, "fields": {"password": "pbkdf2_sha256$390000$hP5MF7bZqKBe8x9HIM6Mt3$u1sYweGh+aTt4yq/ia9ldqN/uaG/bbpysM99beQx3Iw=", "last_login": null, "is_superuser": false, "username": "rfornal", "first_name": "bob.ts", "last_name": "", "email": "rfornal@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:00.279Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 66, "fields": {"password": "pbkdf2_sha256$390000$uvnGJOLmcnklSTsgtcvojs$fzyiwyv3tzSBs65MmgLmv2LMNwlZ08kSGrVWat2gql4=", "last_login": null, "is_superuser": false, "username": "integerman", "first_name": "Matt Eland", "last_name": "", "email": "integerman@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:04.609Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 67, "fields": {"password": "pbkdf2_sha256$390000$0ZCHc04SBIxW9SHiEuDKdr$lxsVO5TTOm9dfb9JabkiIAe7UQwznp/7282FLE8mhkE=", "last_login": null, "is_superuser": false, "username": "vaderdan", "first_name": "Danny L", "last_name": "", "email": "vaderdan@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:08.989Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 68, "fields": {"password": "pbkdf2_sha256$390000$8qNqJG6BvncPP4mPGWDlT3$AojEpGMn1CuaaVHKqB9Fc4TJggyE0cb3FQLrH75I9GU=", "last_login": null, "is_superuser": false, "username": "sergey_telpuk", "first_name": "Sergey Telpuk", "last_name": "", "email": "sergey_telpuk@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:17.859Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 69, "fields": {"password": "pbkdf2_sha256$390000$CksQecIXerUESoggvd81q5$nzUZ7iYyIasdlDbf1aM7gDgfKCIx7R2IJUdatGqYYh0=", "last_login": null, "is_superuser": false, "username": "knheidorn", "first_name": "Kim Heidorn", "last_name": "", "email": "knheidorn@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:21.290Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 70, "fields": {"password": "pbkdf2_sha256$390000$y9rDoWpqsbJA7po8VnYcCx$dzO0vfTh3bZa23tnHcTJA/WmhrGysG/1eyBXoI1s+Kk=", "last_login": null, "is_superuser": false, "username": "buphmin", "first_name": "buphmin", "last_name": "", "email": "buphmin@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:23.677Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 71, "fields": {"password": "pbkdf2_sha256$390000$yWtRV3GOzhcwt140yUJ7CS$NkJRoOw/3HjWB0KxhY9VRg6R06bk7Lt877jMxV11Uxo=", "last_login": null, "is_superuser": false, "username": "phacus", "first_name": "Tiago Rinaldi", "last_name": "", "email": "phacus@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:27.087Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 72, "fields": {"password": "pbkdf2_sha256$390000$5ojtOAwLawONo7rpdPQkNQ$avcu3up/Iyi2IjJ6n5divfjJeFQ34yiFMGnsGStJ1N0=", "last_login": null, "is_superuser": false, "username": "bce_merde", "first_name": "*******", "last_name": "", "email": "bce_merde@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:29.181Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 73, "fields": {"password": "pbkdf2_sha256$390000$I5u7Dx6QFUviBdjKhdkqZV$aVVTvvm1yAChHxQ4qQkQF/SfHPhEULm8j8tYuFgjU6g=", "last_login": null, "is_superuser": false, "username": "2ezpz2plzme", "first_name": "Steven Liao", "last_name": "", "email": "2ezpz2plzme@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:30.741Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 74, "fields": {"password": "pbkdf2_sha256$390000$GT6GIdvKehcg1zIRKvBBYS$am2rmKacF03OtYuqYCDxpYV6S2idMzPYUJiYW5A3gM8=", "last_login": null, "is_superuser": false, "username": "codercatdev", "first_name": "Alex Patterson", "last_name": "", "email": "codercatdev@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:33.153Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 75, "fields": {"password": "pbkdf2_sha256$390000$JBCtVYqpEqRGFFC95OddXV$eJw7gIa1pS7Rp72/HiAzMg0mZL2nmh8E+6ONfg3R+oE=", "last_login": null, "is_superuser": false, "username": "brunooliveira", "first_name": "Bruno Oliveira", "last_name": "", "email": "brunooliveira@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:34.746Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 76, "fields": {"password": "pbkdf2_sha256$390000$WrWY6WSMQgB7Mg16ObTBQd$3OgJl6W+PiLH0r+mrY3wv4n07+7NyTjtBbtjT4Wdwdw=", "last_login": null, "is_superuser": false, "username": "hamatti", "first_name": "Juha-Matti Santala", "last_name": "", "email": "hamatti@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:36.479Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 77, "fields": {"password": "pbkdf2_sha256$390000$kHBrc3uGeD3d09icrEdefr$diLBzvASy4Z7pRYpKdo0SoWkcCSHy8iK70AObf1yknY=", "last_login": null, "is_superuser": false, "username": "ssbozy", "first_name": "Sandilya Bhamidipati", "last_name": "", "email": "ssbozy@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:38.683Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 78, "fields": {"password": "pbkdf2_sha256$390000$W89crubxHQztkMP2qkQZG8$d+6RsNcXt2P1Hj7Ss/gQTAjYbfoVudunNN373LCvr0c=", "last_login": null, "is_superuser": false, "username": "aquasar", "first_name": "Alex Quasar", "last_name": "", "email": "aquasar@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:40.407Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 79, "fields": {"password": "pbkdf2_sha256$390000$R1x52DsJrgDvH4f44IEcV3$ofkubqccHeULhIvbblX5H9u291U0mbRUFd2ibCkTxXY=", "last_login": null, "is_superuser": false, "username": "msamgan", "first_name": "Mohammed Samgan Khan", "last_name": "", "email": "msamgan@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:42.479Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 80, "fields": {"password": "pbkdf2_sha256$390000$vtaKTRy7onzD1o2lHmPD1Z$uoHt9FEfESoDVRJU0xAz1V0SsOZ4Tjg9iAcyaSvbySI=", "last_login": null, "is_superuser": false, "username": "ux4web", "first_name": "Chaman Sharma", "last_name": "", "email": "ux4web@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:44.699Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 81, "fields": {"password": "pbkdf2_sha256$390000$8FwOkImrKkwPMITakP5I5N$vV8mGRJ9cC1fiOu6IeCVTwuj4BE6cZLsgQW4OUT/GW4=", "last_login": null, "is_superuser": false, "username": "therealkevinard", "first_name": "Kevin Ard", "last_name": "", "email": "therealkevinard@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:46.729Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 82, "fields": {"password": "pbkdf2_sha256$390000$RhttSVpHXpaHXEr4NAEvTz$sWjPKitiP4sTYktr2r05EOrs6fDuO6q0+jJl5zP5pUA=", "last_login": null, "is_superuser": false, "username": "ward", "first_name": "Davis", "last_name": "", "email": "ward@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:48.525Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 83, "fields": {"password": "pbkdf2_sha256$390000$UrYEkcBYh1qeD5kMzDQ4fQ$1jHoHeeU+3pY5Fjp5ygUTOD9vPkbhI6hvWa87/ZFpg8=", "last_login": null, "is_superuser": false, "username": "sarafian", "first_name": "Alex Sarafian", "last_name": "", "email": "sarafian@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:49.956Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 84, "fields": {"password": "pbkdf2_sha256$390000$7MWPlrmHsOAsh5hTklTt0H$KoM4YpYJ5J7evN8+KmWqs4SWYajSrey/Qb6Cofex9JA=", "last_login": null, "is_superuser": false, "username": "dvddpl", "first_name": "Davide de Paolis", "last_name": "", "email": "dvddpl@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:51.650Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 85, "fields": {"password": "pbkdf2_sha256$390000$HbomcqxnvKf0JtqlzvMuQC$HzaT9Nq8mQ4bYgDtgzXqyz2v6BuHXDAOLT8/CWqsvbw=", "last_login": null, "is_superuser": false, "username": "devtlk", "first_name": "Shaprieh", "last_name": "", "email": "devtlk@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:53.949Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 86, "fields": {"password": "pbkdf2_sha256$390000$8L1BtxJXkE3CyzOXxeVMlw$/jyCdQGEsX3Qelr6pGiTLweNRJUm8nqJ2KLDnOuPqNw=", "last_login": null, "is_superuser": false, "username": "dels07", "first_name": "Deli Soetiawan", "last_name": "", "email": "dels07@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:55.343Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 87, "fields": {"password": "pbkdf2_sha256$390000$fTJnZLeg7OtPM3S7N3QQxp$CsXOtQJqaC5xympWInDxgnVrrF0UfdecbJWrhgkniog=", "last_login": null, "is_superuser": false, "username": "kensixx", "first_name": "Ken Flake", "last_name": "", "email": "kensixx@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:57.579Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 88, "fields": {"password": "pbkdf2_sha256$390000$bH5Pml1vbGkO0dezZwENYx$/PCLWqcWkcTzcLzHkG0c2SaApZvZEMtoFif6YtI0csc=", "last_login": null, "is_superuser": false, "username": "shamimahossai13", "first_name": "Shamima Hossain", "last_name": "", "email": "shamimahossai13@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:01:58.978Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 89, "fields": {"password": "pbkdf2_sha256$390000$gE78WgkYCepFvOzHAPU5ww$A7OHiEc5FbhIhJWcyatfCZcmvvL7wNYt1EoRKaHHvh8=", "last_login": null, "is_superuser": false, "username": "scriptmunkee", "first_name": "Ken Simeon", "last_name": "", "email": "scriptmunkee@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:00.730Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 90, "fields": {"password": "pbkdf2_sha256$390000$1C1YT00HaUfR0b5acT46UY$Lna80L5W0mWEgTfDmlZ0uDRY+7d2S7g12Y3GTwX5VwE=", "last_login": null, "is_superuser": false, "username": "waylonwalker", "first_name": "Waylon Walker", "last_name": "", "email": "waylonwalker@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:04.265Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 91, "fields": {"password": "pbkdf2_sha256$390000$NvLMBCBkGhJmcc92vOkhAz$f6PGnxnObym6DJi8I5754yvnLia9bwI2/iAFH8WT1JA=", "last_login": null, "is_superuser": false, "username": "steveblue", "first_name": "Stephen Belovarich", "last_name": "", "email": "steveblue@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:06.619Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 92, "fields": {"password": "pbkdf2_sha256$390000$byEsfIVsEjNt1h2w7ZzGzI$QRq8+PLavN1kQU2S+SX0xLw28gMYsN4gL4HxwGr4Ojg=", "last_login": null, "is_superuser": false, "username": "amjadmh73", "first_name": "Amjad Abujamous", "last_name": "", "email": "amjadmh73@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:09.111Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 93, "fields": {"password": "pbkdf2_sha256$390000$7kFhpKSJddQrWGowsF4dvV$9dMBCjPN78Z464ueFbjgUxZxm+kJqnT6myZQKC6Zu6g=", "last_login": null, "is_superuser": false, "username": "mzaini30", "first_name": "Zen", "last_name": "", "email": "mzaini30@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:11.849Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 94, "fields": {"password": "pbkdf2_sha256$390000$Pyd5wtW6IIKtPFdhyczcEP$qu1SDM+9pCxcnm0fVtFAzWlzRqek5kgAdEUXSm21n4Y=", "last_login": null, "is_superuser": false, "username": "davidallyoung", "first_name": "David Young", "last_name": "", "email": "davidallyoung@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:14.382Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 95, "fields": {"password": "pbkdf2_sha256$390000$RkEWI3qDyks08Huby1zP2W$d37uXbPI8vqN3WJg89WdtybIPYIgT7wBNEPmGxcnn2A=", "last_login": null, "is_superuser": false, "username": "bugsysailor", "first_name": "Bugsy Sailor", "last_name": "", "email": "bugsysailor@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:16.217Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 96, "fields": {"password": "pbkdf2_sha256$390000$aiEsVHQv2TUCrSVMfCgD7L$gTGyRZ/AkHeJqmir0k21Pp96oigmsNU/9nDQDRJ1pkE=", "last_login": null, "is_superuser": false, "username": "190245", "first_name": "Dave", "last_name": "", "email": "190245@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:17.977Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 97, "fields": {"password": "pbkdf2_sha256$390000$9LqOFuKnygiLK4oGnrLdBM$rCrTFJ4HIBm/o9WBBzEJPee26A3Bl6SgJq0oEnd+AFc=", "last_login": null, "is_superuser": false, "username": "achimoraites", "first_name": "Achilles Moraites", "last_name": "", "email": "achimoraites@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:20.247Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 98, "fields": {"password": "pbkdf2_sha256$390000$cKLuVImhja7Eo8iR4C2olJ$qd13V/cX7BgJyTa788JVRHzShZ/qZK6arIEwn1re/so=", "last_login": null, "is_superuser": false, "username": "qcha0s", "first_name": "Robert French", "last_name": "", "email": "qcha0s@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:22.094Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 99, "fields": {"password": "pbkdf2_sha256$390000$REWhbELZUmMCsL6vYRPQVC$wXIFLxiuMPeGA2b2y3uyPOF/T5iwGbR8fGBGluNCSgs=", "last_login": null, "is_superuser": false, "username": "max_tulian", "first_name": "Max (he/his)", "last_name": "", "email": "max_tulian@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:23.517Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 100, "fields": {"password": "pbkdf2_sha256$390000$qQcKJtTnE2CdW9co3G7CAj$QZPp7XJWPWE1g8VJKBbfpUkyjoAKrnK3+hX9g/dWQ4g=", "last_login": null, "is_superuser": false, "username": "jerilbills", "first_name": "Jeril Bills", "last_name": "", "email": "jerilbills@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:25.854Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 101, "fields": {"password": "pbkdf2_sha256$390000$8JKq6vD4BLI6Ma0fdFFKAq$NS8BPeWAQi/nB8G1JfbUlVE2zrcm3pfEVtCYKwQBXJs=", "last_login": null, "is_superuser": false, "username": "francoscarpa", "first_name": "Franco Scarpa", "last_name": "", "email": "francoscarpa@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:28.684Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 102, "fields": {"password": "pbkdf2_sha256$390000$AhKIIjqiRSgQxCPVnV2koz$pUJ3R65UJhcWDx0vMkgSd5VPNOQ9wbRBmPuO/us3CIk=", "last_login": null, "is_superuser": false, "username": "softchris", "first_name": "Chris Noring", "last_name": "", "email": "softchris@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:32.369Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 103, "fields": {"password": "pbkdf2_sha256$390000$4zDHEULbCIaepZED3syY16$UQDPphJIthwhOC4Pp+aOPD3n99Yd3KIF1ePBcXFr+j8=", "last_login": null, "is_superuser": false, "username": "ponickkhan", "first_name": "Md.Rafiuzzaman Khan 🇧🇩", "last_name": "", "email": "ponickkhan@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:34.413Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 104, "fields": {"password": "pbkdf2_sha256$390000$Ec7dKhMTP2XzR8P3tTQ9TX$CZ5v/e1iuK8xvEGalZRITYFbNGgpj7Rwg82pNesSMAI=", "last_login": null, "is_superuser": false, "username": "stereobooster", "first_name": "stereobooster", "last_name": "", "email": "stereobooster@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:38.036Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 105, "fields": {"password": "pbkdf2_sha256$390000$5DjimBTT13neM5uWUqktaw$+JQjZ5iOSv3/y2CXt02o4CSntfiT3siWXUA+rppvAX4=", "last_login": null, "is_superuser": false, "username": "shethiakamya", "first_name": "kamya", "last_name": "", "email": "shethiakamya@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:42.368Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 106, "fields": {"password": "pbkdf2_sha256$390000$uimCLHcBide2ogqOX6tZrF$Kk0sCorN59biNg2DReuh6A9B1B3GumxGi6sm1cCYZ/A=", "last_login": null, "is_superuser": false, "username": "yaser", "first_name": "Yaser Al-Najjar", "last_name": "", "email": "yaser@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:47.834Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 107, "fields": {"password": "pbkdf2_sha256$390000$1z1xFzZqYl8zVd1LHCLNoA$WKw+w6ll+DgCEAbG3xKttsCKmG12Xn4YUy7O6oy7xv8=", "last_login": null, "is_superuser": false, "username": "jeddevs", "first_name": "Theo", "last_name": "", "email": "jeddevs@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:49.131Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 108, "fields": {"password": "pbkdf2_sha256$390000$f9t42N9lWStw6eDQfjxmBY$dnUM47HIdPjdjoxbTtKbpCRtVV5lVwrYppZnHY2XuPg=", "last_login": null, "is_superuser": false, "username": "feruzoripov", "first_name": "Feruz Oripov", "last_name": "", "email": "feruzoripov@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:52.267Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 109, "fields": {"password": "pbkdf2_sha256$390000$7DkwE5ph9m75fR063mEnDt$vVvLsirenWR5YEwsD61PTIcTSsGe6wrW68DKvonPWv0=", "last_login": null, "is_superuser": false, "username": "rhymes", "first_name": "rhymes", "last_name": "", "email": "rhymes@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:54.430Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 110, "fields": {"password": "pbkdf2_sha256$390000$dekw45sikskhlsqc6xWAru$I5rmfodd+xkitD1zM7PhjijHB6mFastu+JdC+665g6w=", "last_login": null, "is_superuser": false, "username": "scrabill", "first_name": "Shannon Crabill", "last_name": "", "email": "scrabill@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:56.549Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 111, "fields": {"password": "pbkdf2_sha256$390000$TEhLkhfQgSXHazgeN5n64M$Mi38A9l4w2FcU6kYD4O3XdcWIYakPmVFta87wYW8Jqg=", "last_login": null, "is_superuser": false, "username": "spaghettifunk", "first_name": "Davide Berdin", "last_name": "", "email": "spaghettifunk@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:02:59.716Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 112, "fields": {"password": "pbkdf2_sha256$390000$T3gSSaH6MADCEirV6DoNUq$loLf8SPfh9TFt4b3JnPMWZZVbws2SJRZPmfR0ZhdiTw=", "last_login": null, "is_superuser": false, "username": "yusufcodes", "first_name": "yusufcodes", "last_name": "", "email": "yusufcodes@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:04.656Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 113, "fields": {"password": "pbkdf2_sha256$390000$yPMCde2zyIlz7IRBgyYITl$MViceJkNzjfdqDa4Lmr911tzTC317VfChYEoZQiReEY=", "last_login": null, "is_superuser": false, "username": "marcelimxo", "first_name": "Marcelim Rondón", "last_name": "", "email": "marcelimxo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:07.202Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 114, "fields": {"password": "pbkdf2_sha256$390000$fXU0yfDPiODQsysPjSRcrI$vHBK6WKZqM0EH6cimUBPidFMbeRx5kMl63v9oXqVfOM=", "last_login": null, "is_superuser": false, "username": "maniflames", "first_name": "Maniflames", "last_name": "", "email": "maniflames@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:09.402Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 115, "fields": {"password": "pbkdf2_sha256$390000$O5lzUJKbYbWPzLuTyFRQ7l$wTHwASCfKocdHkzNO0SzmIv9d2gf78MjKQ2CJknIWBs=", "last_login": null, "is_superuser": false, "username": "elenaraujo", "first_name": "Elen Araujo", "last_name": "", "email": "elenaraujo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:12.087Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 116, "fields": {"password": "pbkdf2_sha256$390000$5hF4rJElIMuAtbXVl8Pz8q$lIN4u7Vcd6ETVNio8NAQENTQwBe4G8kVz52QUxp3fkQ=", "last_login": null, "is_superuser": false, "username": "dance2die", "first_name": "Sung M. Kim", "last_name": "", "email": "dance2die@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:17.376Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 117, "fields": {"password": "pbkdf2_sha256$390000$69uf2oUxFx0g90h69N2BPK$A+6jyge9AhAEc+lyfiff3w+p2SThoHFPuDhTvyNXg/4=", "last_login": null, "is_superuser": false, "username": "yaireo", "first_name": "Yair Even Or", "last_name": "", "email": "yaireo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:19.790Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 118, "fields": {"password": "pbkdf2_sha256$390000$6H88peNOjwlePevxKMSg2X$EeGQWTWzcj54h5AhMDCh5tyg0dcc1i9npkyvd1BqvdE=", "last_login": null, "is_superuser": false, "username": "chrisachard", "first_name": "Chris Achard", "last_name": "", "email": "chrisachard@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:21.266Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 119, "fields": {"password": "pbkdf2_sha256$390000$m1JpqsFQMzmbC3AbmwBJGC$mIv9bjTKNBGsI1vIVr4698xsdWxWvwGK7h9/XW16NGA=", "last_login": null, "is_superuser": false, "username": "justingrant", "first_name": "Justin Grant", "last_name": "", "email": "justingrant@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:23.043Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 120, "fields": {"password": "pbkdf2_sha256$390000$Kd4nVL79B3z8QrPiZ7TMLT$zPhwROinCt1br7dGfvdx8rGIa2YOPbsLIhCrEgHfWvM=", "last_login": null, "is_superuser": false, "username": "matthew_collison", "first_name": "Matthew Collison", "last_name": "", "email": "matthew_collison@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:26.221Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 121, "fields": {"password": "pbkdf2_sha256$390000$wjcZdkvk6aSQTJv0LraTb4$pI/GeGpPeb0jgbN5s/5tP2d8sZO5+39gpc7uqU/AHlA=", "last_login": null, "is_superuser": false, "username": "hayrettinm", "first_name": "Hayrettin Mavis", "last_name": "", "email": "hayrettinm@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:29.266Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 122, "fields": {"password": "pbkdf2_sha256$390000$iUP1fItGxrxgbhCDrBtWvd$oWk68IqklS9ckKKdN8IiLdy8phCXMWJ2UB5QeCDvAmk=", "last_login": null, "is_superuser": false, "username": "sophiabrandt", "first_name": "Sophia Brandt", "last_name": "", "email": "sophiabrandt@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:30.918Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 123, "fields": {"password": "pbkdf2_sha256$390000$0LAsaAm7u7sNpmGttEIP7j$5eZZlWGXfJ/FegSdlW6fdYK6Pec0SGoBdmB32zvVasU=", "last_login": null, "is_superuser": false, "username": "frozzare", "first_name": "Fredrik Forsmo", "last_name": "", "email": "frozzare@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:33.243Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 124, "fields": {"password": "pbkdf2_sha256$390000$3rS7dF3USxXSvc6nCmD7WJ$xMio2TjQ5cQuUkAOVX4nQUxBrobMZ4rg4de12hv8+6E=", "last_login": null, "is_superuser": false, "username": "jhonsontian", "first_name": "Jhonson", "last_name": "", "email": "jhonsontian@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:35.273Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 125, "fields": {"password": "pbkdf2_sha256$390000$edvSxZFTqA7aUovNjFwRPg$4zfSqutHd4ciNxDAmOLiH3is8DvR3NQ+k8Co15Jtkow=", "last_login": null, "is_superuser": false, "username": "_justirma", "first_name": "Irma Mesa", "last_name": "", "email": "_justirma@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:36.714Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 126, "fields": {"password": "pbkdf2_sha256$390000$rx9zt7udjvsluIYXVrUFQH$IcJeEg09oKuQe52LOaq1yyrJ4IIV1KDFY+apR/ZfGiM=", "last_login": null, "is_superuser": false, "username": "bakerchad79", "first_name": "bakerchad79", "last_name": "", "email": "bakerchad79@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:38.663Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 127, "fields": {"password": "pbkdf2_sha256$390000$Bc8YnGWWCJMjQ4PvUi4v0w$ixC+9HNuaOqHqxITw8Amhw9HD7ex8MQuS5BdsWzL4C4=", "last_login": null, "is_superuser": false, "username": "masoneg", "first_name": "MasonEG", "last_name": "", "email": "masoneg@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:40.671Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 128, "fields": {"password": "pbkdf2_sha256$390000$twNYGVARxT1egdaHIxNlQJ$qFLnQgdhPfVXQOmZxRx6yC01hAKO7vnfNV4vJWXftcg=", "last_login": null, "is_superuser": false, "username": "davidburbury", "first_name": "David Burbury", "last_name": "", "email": "davidburbury@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:43.006Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 129, "fields": {"password": "pbkdf2_sha256$390000$9ErhY4GAjXhRYGBQwyCxld$9QdaCds1e204XWFl13r6FactDJoKkosge4FLre+1upk=", "last_login": null, "is_superuser": false, "username": "aortizoj15", "first_name": "Alexis Ortiz Ojeda", "last_name": "", "email": "aortizoj15@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:44.695Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 130, "fields": {"password": "pbkdf2_sha256$390000$WQ5Gs8Js0OCVSbkJcObMS2$GUKAScrFUx9ar8hmeFjKHiMG/QbjU5TQcMcFRKpP+/I=", "last_login": null, "is_superuser": false, "username": "julianazuniga", "first_name": "Juliana", "last_name": "", "email": "julianazuniga@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:47.480Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 131, "fields": {"password": "pbkdf2_sha256$390000$ifUsKthyjNVSCIzHlg9fIF$y/shUNu4sQG1Bg1G02WHFom5agkmRRldgfIIneQpGUs=", "last_login": null, "is_superuser": false, "username": "gr33nlight", "first_name": "Bruno", "last_name": "", "email": "gr33nlight@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:48.975Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 132, "fields": {"password": "pbkdf2_sha256$390000$4jvesyGTDMPd8m1dPFNfVh$gZ9OFduL5JBDKBJcDAIcIweev+4NgwMLnzbU2o4d33A=", "last_login": null, "is_superuser": false, "username": "sbenemerito", "first_name": "Sam Benemerito", "last_name": "", "email": "sbenemerito@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:50.735Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 133, "fields": {"password": "pbkdf2_sha256$390000$PFwtP5A6Bdwe7Ndg1B9tYM$040+l1p4Y3brhYmjNWgQKwz0+mqTVvjI9h0x8i9a8Wk=", "last_login": null, "is_superuser": false, "username": "flyznex", "first_name": "Flyznex", "last_name": "", "email": "flyznex@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:56.036Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 134, "fields": {"password": "pbkdf2_sha256$390000$MvNUrczkhZopiW1ho826xj$QFrYSH/HcmUq369H6yJ7/7YgRXw7FE0Q2HHyUUUtlG0=", "last_login": null, "is_superuser": false, "username": "charcutero", "first_name": "charcutero", "last_name": "", "email": "charcutero@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:58.188Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 135, "fields": {"password": "pbkdf2_sha256$390000$ZgI8uLbwTqCLcaQnm0PHrz$u5KfBsdwEAAcLhdEBobxBIpox5zfUTY8LzEXfNHparQ=", "last_login": null, "is_superuser": false, "username": "refiloedig", "first_name": "Refiloe Digoamaye", "last_name": "", "email": "refiloedig@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:03:59.960Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 136, "fields": {"password": "pbkdf2_sha256$390000$6EWb8mJfnlZcw25Y1UKM7g$J9vQ+ghU2v4epVdzFrjVRFMxM6mCTGPoI2FtlG/SfPE=", "last_login": null, "is_superuser": false, "username": "ramansrsta", "first_name": "raman shrestha", "last_name": "", "email": "ramansrsta@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:01.564Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 137, "fields": {"password": "pbkdf2_sha256$390000$VdDfpLjAzn1uPGu1B8weqt$78q78ZEygzrv5/qMrB2x80qL9+wP65ibvcfWQWQ81m0=", "last_login": null, "is_superuser": false, "username": "wannabehexagon", "first_name": "ItsThatHexagonGuy", "last_name": "", "email": "wannabehexagon@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:03.657Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 138, "fields": {"password": "pbkdf2_sha256$390000$OvlcTtWt4V10CmRjtlNH0w$IO1IVzOeOz1+R4cLF9TjheRRdpV2gXTaRSLp5nFgJeE=", "last_login": null, "is_superuser": false, "username": "sheepswearhats", "first_name": "Sheepz", "last_name": "", "email": "sheepswearhats@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:05.337Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 139, "fields": {"password": "pbkdf2_sha256$390000$eIPIZi8J3xWyNGEWviNgzH$J5R72Bf81lozRT46lPuihlCnOoPC5Tl98XtfBzgG7EI=", "last_login": null, "is_superuser": false, "username": "macmacky", "first_name": "Mark Abeto", "last_name": "", "email": "macmacky@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:07.550Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 140, "fields": {"password": "pbkdf2_sha256$390000$iiMdrvKM14JMMYI7rQs0q0$X0eIpcKW8regQAgLnxplDN5BdxBrQpQboyiX6ws1eY8=", "last_login": null, "is_superuser": false, "username": "qpzm", "first_name": "Hyunmin Lee", "last_name": "", "email": "qpzm@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:10.448Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 141, "fields": {"password": "pbkdf2_sha256$390000$BZwcJxfT48g9exPDwlJg6f$U1MFX/nF0HUOmarP9A8nOhpiY1cdu/MQB6VfXPa6gRQ=", "last_login": null, "is_superuser": false, "username": "chiranjibilawati10", "first_name": "Chiranjibi Lawati", "last_name": "", "email": "chiranjibilawati10@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:12.604Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 142, "fields": {"password": "pbkdf2_sha256$390000$XwmfdppBD97z3Nt3c4IwKS$WDzJbnc21Jni2TmoiDq4hUcpzM1wZrGmPMJ6MvZt0Xo=", "last_login": null, "is_superuser": false, "username": "ihsaan700", "first_name": "Ihsaan700", "last_name": "", "email": "ihsaan700@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:14.064Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 143, "fields": {"password": "pbkdf2_sha256$390000$UPMnk93qJeP5XWDXXzzzpo$BVaxdKT2UOU9jF5PoGYPJ8m2OukzBonRIwZwBReKDa8=", "last_login": null, "is_superuser": false, "username": "bbarbour", "first_name": "Brian Barbour", "last_name": "", "email": "bbarbour@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:15.605Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 144, "fields": {"password": "pbkdf2_sha256$390000$hsD97wS0sTG0hMEFwqBya7$3otrsTNRlEk3sXCsMwzaTVEw2VHI854sxW3L+XdDXwk=", "last_login": null, "is_superuser": false, "username": "tyeshi181", "first_name": "tyeshi181", "last_name": "", "email": "tyeshi181@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:18.608Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 145, "fields": {"password": "pbkdf2_sha256$390000$394o886ko9sdBYZxdjXALy$i29u9sfj3d2Ki1aBZ4immNyQN310SNZqmoun/BXpggM=", "last_login": null, "is_superuser": false, "username": "vncntdzn", "first_name": "Vincent", "last_name": "", "email": "vncntdzn@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:20.753Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 146, "fields": {"password": "pbkdf2_sha256$390000$U211jbQb9ScPzfvjsoWSCa$Uz33ASOZrgrJ1o9JFpap7sQL87vddOB8TkuVmHxxF9E=", "last_login": null, "is_superuser": false, "username": "luciagirasoles", "first_name": "Mayra Navarro", "last_name": "", "email": "luciagirasoles@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:22.161Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 147, "fields": {"password": "pbkdf2_sha256$390000$foOW5kRqtR0f7Oe6JpCle0$/Ln84JV3yK947GLKjs5UHpJ2X8OV085SHgthrOrznLQ=", "last_login": null, "is_superuser": false, "username": "djpandab", "first_name": "Stephen Smith", "last_name": "", "email": "djpandab@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:24.231Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 148, "fields": {"password": "pbkdf2_sha256$390000$lNBNfJayhAuW3ND9Ed7qII$VnD8rUiiegeobdEJ4jIMhMVweTQ10nbryVgdC0vUZB0=", "last_login": null, "is_superuser": false, "username": "sebastiandg7", "first_name": "Sebastián Duque G", "last_name": "", "email": "sebastiandg7@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:25.840Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 149, "fields": {"password": "pbkdf2_sha256$390000$Fe8YE4iycJIPH3ELkdnPSP$MSQr3wSVJ0ynrEhyP8GynOqXDY+4tdoiOEJUOnTRmOY=", "last_login": null, "is_superuser": false, "username": "pacosoul", "first_name": "J Francisco Herrera Roldan", "last_name": "", "email": "pacosoul@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:27.794Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 150, "fields": {"password": "pbkdf2_sha256$390000$K4rbvjpHMyM6cB6PITAUZh$pfU++9vm6A1/i4R3jgDcYDbUYfQ+PJ+Kdkugi2yGXBg=", "last_login": null, "is_superuser": false, "username": "gummerandy", "first_name": "Andy Gummer", "last_name": "", "email": "gummerandy@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:29.495Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 151, "fields": {"password": "pbkdf2_sha256$390000$rbSWJvLiVABC5WX95vYhEm$4MRcA2t4btICXgAbNkFnrRBRX5+XlAlRtK9aohQkYq4=", "last_login": null, "is_superuser": false, "username": "naomatheus", "first_name": "mattmatt.world ", "last_name": "", "email": "naomatheus@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:31.530Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 152, "fields": {"password": "pbkdf2_sha256$390000$Dj6N1sydYJH2et0TsGlzXH$Pgxuy3a+dDMYzUcvnX60F6/c5U93zo6tRVFHb4PT4wk=", "last_login": null, "is_superuser": false, "username": "lmauromb", "first_name": "Luis Mauro", "last_name": "", "email": "lmauromb@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:32.811Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 153, "fields": {"password": "pbkdf2_sha256$390000$B78iK1YDtQePhorjRpxEBt$LESZHRjUOMEfTpKyROyqzBSOZ+YtWnm4Gzjp9olwBGU=", "last_login": null, "is_superuser": false, "username": "marcocornejo", "first_name": "Marco Cornejo", "last_name": "", "email": "marcocornejo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:34.600Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 154, "fields": {"password": "pbkdf2_sha256$390000$eMr4a0E8QsHgkbTEIqF5se$tF0lSi2qTyuiWZKtPbaxD9hZIPnae/2zCYVDgEuflHI=", "last_login": null, "is_superuser": false, "username": "lmolivera", "first_name": "Lucas Olivera", "last_name": "", "email": "lmolivera@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:36.706Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 155, "fields": {"password": "pbkdf2_sha256$390000$hQRcD9NoK9wzDpIymFfj7t$ZJ64lcWzE/a5GTCqIqn3rJ2o1+xGMkOERwQj86vYAu0=", "last_login": null, "is_superuser": false, "username": "venubattula", "first_name": "VenuBattula", "last_name": "", "email": "venubattula@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:40.390Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 156, "fields": {"password": "pbkdf2_sha256$390000$galPLakio8zCERMRLZPO8n$fEdawPdgevPBIQorRwtWejWd5zBCc6QSTOqOGjRMBSM=", "last_login": null, "is_superuser": false, "username": "kaka", "first_name": "Ruto Collins", "last_name": "", "email": "kaka@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:41.798Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 157, "fields": {"password": "pbkdf2_sha256$390000$3GPM7tNtYmUOt7MYftk8Z4$NWtEVi23lAIRtOP1x0ITouGlaJskje930aXZJodWbS0=", "last_login": null, "is_superuser": false, "username": "taragrg6", "first_name": "taragurung", "last_name": "", "email": "taragrg6@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:44.067Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 158, "fields": {"password": "pbkdf2_sha256$390000$fU5GzlLjpcDuqEsqdWMSkZ$Nt8mvhz7eUVpAjZ25C58I9INScnVbhDXXqaFG10a+Dk=", "last_login": null, "is_superuser": false, "username": "rayphaistos1", "first_name": "Raymond Karim Roberts", "last_name": "", "email": "rayphaistos1@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:47.014Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 159, "fields": {"password": "pbkdf2_sha256$390000$cKOM1ZcaGbnUy6eUyjTl40$vgc0DVbwnqKX2JAXgx8RcZBbLruT2Pi+FSE626JRd5M=", "last_login": null, "is_superuser": false, "username": "phillipgd1992", "first_name": "Felipe Guizar Diaz", "last_name": "", "email": "phillipgd1992@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:51.777Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 160, "fields": {"password": "pbkdf2_sha256$390000$jCzZz9BQkMpwtOzr4QP2wU$Pu6cavRtsUIzXC0KdnXPmeInHCvTbMi0ZQSiYYthkQ0=", "last_login": null, "is_superuser": false, "username": "ndiecodes", "first_name": "Ndifreke Friday", "last_name": "", "email": "ndiecodes@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:54.268Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 161, "fields": {"password": "pbkdf2_sha256$390000$Z3dH8mbocGeZ1xMherT8iE$53kb3DBWihQZvJhBUUBtGPicXphZeKrCwvwmLZeDrKQ=", "last_login": null, "is_superuser": false, "username": "wandieinnocents", "first_name": "WENAREEBA INNOCENT", "last_name": "", "email": "wandieinnocents@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:57.814Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 162, "fields": {"password": "pbkdf2_sha256$390000$AvYZi3XeqpcJYlLGkW7XeS$Tp6b2sVj5PHK//61BxseXUO0gU0EdAxFI+FW8D64yNg=", "last_login": null, "is_superuser": false, "username": "alih70442", "first_name": "Ali H", "last_name": "", "email": "alih70442@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:04:59.833Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 163, "fields": {"password": "pbkdf2_sha256$390000$BRCkZlTJABq4JUjDLkCKYM$MbNyz57SDrvEAIbHoA4aeBsj/qZ4sTAucNlP/iWp4YE=", "last_login": null, "is_superuser": false, "username": "dhavaldignizant", "first_name": "dhaval-dignizant", "last_name": "", "email": "dhavaldignizant@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:01.706Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 164, "fields": {"password": "pbkdf2_sha256$390000$0eVr20NFmSr6A0PCeOwsJn$EduPMu88CsqMQ4F9R9WXzYoqEscFF7+10mMepDMWKhk=", "last_login": null, "is_superuser": false, "username": "b6t3m6n", "first_name": "B6T3M6N", "last_name": "", "email": "b6t3m6n@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:04.280Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 165, "fields": {"password": "pbkdf2_sha256$390000$5jjjiAv2F8CsX4A9uAp8sd$/B7OVQlMeECYs37JAT4FCTm0NPlQZKMPt+mYszsbu54=", "last_login": null, "is_superuser": false, "username": "devsakib", "first_name": "Nazmus Sakib", "last_name": "", "email": "devsakib@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:07.777Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 166, "fields": {"password": "pbkdf2_sha256$390000$NYlChT8h2P6J94Fp3AoKBq$4P7C9DKVsiw3u1y+h9KQiI+VGf+f8nO4Jm4Mph5G+rM=", "last_login": null, "is_superuser": false, "username": "tadeubdev", "first_name": "Tadeu Barbosa", "last_name": "", "email": "tadeubdev@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:10.387Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 167, "fields": {"password": "pbkdf2_sha256$390000$LB8bzdD0nVYxmSvDXVzvac$U8bgP1bhcralHy+GqIVHBo/ygstH8+USEBXFcD9s/Sk=", "last_login": null, "is_superuser": false, "username": "brojenuel", "first_name": "Jenuel Oras Ganawed", "last_name": "", "email": "brojenuel@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:12.342Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 168, "fields": {"password": "pbkdf2_sha256$390000$nt2aPgO7HmHJr0KdXC95dt$Qq6sKREm0TuZkuR1Qq0k+OoDKLAmOQf2vrhsSwt+u54=", "last_login": null, "is_superuser": false, "username": "techautobahn", "first_name": "TechAutobahn", "last_name": "", "email": "techautobahn@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:14.791Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 169, "fields": {"password": "pbkdf2_sha256$390000$ZUTjUVSNYzlZDtu6WzVZwc$jYRtcs2T0pB9PYgYTaYVCeRj1WIU+UXvgHPzmk/He9k=", "last_login": null, "is_superuser": false, "username": "jaiminhothi", "first_name": "jaimin-hothi", "last_name": "", "email": "jaiminhothi@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:17.084Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 170, "fields": {"password": "pbkdf2_sha256$390000$HZIZUkzqoTfQnXuEzjgYod$IhAko2AFOxJcErd9K7gYK/MOUSec/B/gmL49rlV1C8c=", "last_login": null, "is_superuser": false, "username": "racedaemon", "first_name": "racedaemon", "last_name": "", "email": "racedaemon@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:18.948Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 171, "fields": {"password": "pbkdf2_sha256$390000$gXEf40Z9l3r9FTo1xSgIOL$TQfkJZh2pjcwAuJBjlMPeRRh+29lS7kYn5k4lL7xe4M=", "last_login": null, "is_superuser": false, "username": "be_anjos", "first_name": "Brenddon Anjos", "last_name": "", "email": "be_anjos@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:20.436Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 172, "fields": {"password": "pbkdf2_sha256$390000$a5OYJ3GZ8xIrDDyLcSnWnm$7N3PQMfakOSU1UgfZ2xlh5XFkoGs24CAIwN6wf5sUvA=", "last_login": null, "is_superuser": false, "username": "mamedioguilherme1", "first_name": "Guilherme Mamedio", "last_name": "", "email": "mamedioguilherme1@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:21.808Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 173, "fields": {"password": "pbkdf2_sha256$390000$ALsjaW7QAg64efZHWh0Tgy$9kkVrBhhpGN0HX0zf1h7gWGhjlGG+qqXvlLlb90Fm8o=", "last_login": null, "is_superuser": false, "username": "ainurrahms", "first_name": "Ainur Rahman", "last_name": "", "email": "ainurrahms@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:23.385Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 174, "fields": {"password": "pbkdf2_sha256$390000$WfNVGcAGUaYMSWGFVqeWby$NJJVH6F3n+zA1C86TvAbcaKrDrJLC7NFkrm+MLZZ8kA=", "last_login": null, "is_superuser": false, "username": "executions12", "first_name": "executions12", "last_name": "", "email": "executions12@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:24.778Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 175, "fields": {"password": "pbkdf2_sha256$390000$eEfBf7dBIiGMWgxdcJndbJ$wYDr28OBEVeXxmRicEhFNlxM28wrisrUmIqBJysfT1s=", "last_login": null, "is_superuser": false, "username": "mayank091193", "first_name": "Mayank Patel", "last_name": "", "email": "mayank091193@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:26.612Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 176, "fields": {"password": "pbkdf2_sha256$390000$120Aw1FS9JFLvTYrBhq9n7$M2yzHETBQwPw8bubLt0B38lQTAjnLShjjn3Wy0W2abQ=", "last_login": null, "is_superuser": false, "username": "isrortega", "first_name": "isrortega", "last_name": "", "email": "isrortega@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:28.923Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 177, "fields": {"password": "pbkdf2_sha256$390000$aiQ4bTB9n1kkD2vFutNM0T$+a6YXNoo0qQyHehJ1QOzJ8X5MTsX+gWunE6VP8l7dJM=", "last_login": null, "is_superuser": false, "username": "schallernicolas", "first_name": "schallernicolas", "last_name": "", "email": "schallernicolas@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:30.577Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 178, "fields": {"password": "pbkdf2_sha256$390000$3giYLJLlgX4t3YLvcggSpb$/hYDK52FKR4G3eISSLgU5W36EK55rvoEBDh5mWZOm1o=", "last_login": null, "is_superuser": false, "username": "amanuell2", "first_name": "amanuell2", "last_name": "", "email": "amanuell2@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:32.984Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 179, "fields": {"password": "pbkdf2_sha256$390000$McgGZuosrIwETzwhOUOYep$ELidTXDCsu2fERJCCVyveXWa/Pk1K3jv9Dwldm9SlY4=", "last_login": null, "is_superuser": false, "username": "guibattoni", "first_name": "Guilherme Battoni", "last_name": "", "email": "guibattoni@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:34.932Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 180, "fields": {"password": "pbkdf2_sha256$390000$eABTM6YirNBXGN1h193bJ3$NoDjDm7MeVUXGyWIMG1hMCuadCZLg7w4Npto/tDN42s=", "last_login": null, "is_superuser": false, "username": "nwaweru", "first_name": "Ndirangu Waweru", "last_name": "", "email": "nwaweru@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:36.985Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 181, "fields": {"password": "pbkdf2_sha256$390000$tORv9RTyszQHxZl6Rd8KVW$c4CMqLbpIvJldbLzCQb4fCTzEvBbo8tDQetOx2U1uAE=", "last_login": null, "is_superuser": false, "username": "cleathley", "first_name": "Chris Leathley", "last_name": "", "email": "cleathley@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:39.238Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 182, "fields": {"password": "pbkdf2_sha256$390000$NxltPYyMcFTfR6mnD83DO1$IbCcxV05dCyor6SchIcwU0gFfdV/lPbHYvhLHV6IJ8s=", "last_login": null, "is_superuser": false, "username": "sayajin101", "first_name": "Syns", "last_name": "", "email": "sayajin101@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:41.355Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 183, "fields": {"password": "pbkdf2_sha256$390000$qwqrdhb5S6OdPOLafeGZpv$i5f8g2c8S5l9XDLrdhodDdZ2xodWLqmhSqPHIO30CiQ=", "last_login": null, "is_superuser": false, "username": "kbzone", "first_name": "Cabello, Hector Guillermo", "last_name": "", "email": "kbzone@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:43.450Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 184, "fields": {"password": "pbkdf2_sha256$390000$YePRcBT7BOJu1nGe1dInhh$Ng6O0pjeLI815quX9NkFKME7PrsYDVbrkMxBW8VvK6M=", "last_login": null, "is_superuser": false, "username": "yunchurlee", "first_name": "yunchurlee", "last_name": "", "email": "yunchurlee@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:47.227Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 185, "fields": {"password": "pbkdf2_sha256$390000$sARo7EN14cG7qySWlA73xB$BnDTemKWAjXD9eLGK6NAehkgSCDQWbDJwFhTqfccx9I=", "last_login": null, "is_superuser": false, "username": "bosz", "first_name": "Fongoh Martin T.", "last_name": "", "email": "bosz@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:49.916Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 186, "fields": {"password": "pbkdf2_sha256$390000$HEVKkC5RvbYYouGKDSudG8$aTbArVOGuwT1byxARGC0Mri/54Iw8Eea4NHxxxWCxx0=", "last_login": null, "is_superuser": false, "username": "wmazed", "first_name": "Walid Yacine MAZED", "last_name": "", "email": "wmazed@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:51.855Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 187, "fields": {"password": "pbkdf2_sha256$390000$KqiU7li2DPWjuOGzvW3g7J$mUJun7es8CUDbCUOwV7eY3QC4hCWWNRC+RE6gKGwjDY=", "last_login": null, "is_superuser": false, "username": "debabratakarfa", "first_name": "Debabrata Karfa", "last_name": "", "email": "debabratakarfa@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:53.773Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 188, "fields": {"password": "pbkdf2_sha256$390000$b8N0CA0BZ5AzlLD5LteMzY$h4Z/a5isICC0WP6KRT/8mgWQSvyBu9Nqeowc3M1xzyM=", "last_login": null, "is_superuser": false, "username": "bluerabby", "first_name": "bluerabby", "last_name": "", "email": "bluerabby@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:55.305Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 189, "fields": {"password": "pbkdf2_sha256$390000$AelwCTdo8eMrvbC7Ce3If6$H1/uoLlDy00vDXtDUjnKpJAIaFXy7H8p7riH+N2537Y=", "last_login": null, "is_superuser": false, "username": "guimilleo", "first_name": "Guilherme Milléo", "last_name": "", "email": "guimilleo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:05:57.760Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 190, "fields": {"password": "pbkdf2_sha256$390000$IrJid5rx4tnWumjF3cbxC8$GuEcU7myZEm855bUIRJI0Co/JPUms/Gy7IhFp+5Sp4c=", "last_login": null, "is_superuser": false, "username": "raicuparta", "first_name": "Raicuparta", "last_name": "", "email": "raicuparta@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:07.317Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 191, "fields": {"password": "pbkdf2_sha256$390000$CYHrqU3d5wxkFrrwztI3UC$MQaD/0hohPr9zpnIvB/UTuSqRwBJvK1NZGdEWSfPxs4=", "last_login": null, "is_superuser": false, "username": "mongopark", "first_name": "Ola' John Ajiboye", "last_name": "", "email": "mongopark@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:10.101Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 192, "fields": {"password": "pbkdf2_sha256$390000$zBZ10Mlgfc4C48rvYKHP5H$Oy2tbOnlp/Deu54q+QeA8W2BuwvjEQ/2m2BWvQcNqkc=", "last_login": null, "is_superuser": false, "username": "monfernape", "first_name": "Usman Khalil", "last_name": "", "email": "monfernape@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:11.511Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 193, "fields": {"password": "pbkdf2_sha256$390000$C7jg38hNjtgtkbudNSDrEO$KvnrmYvOtgGc89M1JJLiutWi4SoDPgIh78Th8Mu1gt0=", "last_login": null, "is_superuser": false, "username": "jonathanburnhill", "first_name": "Jonathan Burnhill", "last_name": "", "email": "jonathanburnhill@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:13.165Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 194, "fields": {"password": "pbkdf2_sha256$390000$AOReiOBLUlmYXJnLawu2Dt$RDpJTNRp3o8gC+8f7pIhN4vtOCZaGwqGVpSc0biBlxA=", "last_login": null, "is_superuser": false, "username": "somedood", "first_name": "Basti Ortiz", "last_name": "", "email": "somedood@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:14.646Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 195, "fields": {"password": "pbkdf2_sha256$390000$tJqF3zjBWR7nsbht4a8gps$Tu/AFc6TU79PEoXG7+CF1FslWHGSyDlqk2E+tvMfJvU=", "last_login": null, "is_superuser": false, "username": "vlasterx", "first_name": "Vladimir Jovanović", "last_name": "", "email": "vlasterx@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:16.462Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 196, "fields": {"password": "pbkdf2_sha256$390000$83jqN6WH220RAIugpWSrO8$I0yM7q4+QAuFUdHWYa/xEXqVQRSPlZDt+ymMEwPmiNs=", "last_login": null, "is_superuser": false, "username": "heysam", "first_name": "hey-sam", "last_name": "", "email": "heysam@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:18.387Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 197, "fields": {"password": "pbkdf2_sha256$390000$NqEtTDiIvPSakswbi9cxzR$s7atmAr7R5gfBH/WdO5dFGrP6lNleeE1/YWICwLiWD8=", "last_login": null, "is_superuser": false, "username": "vladimirovici", "first_name": "Vladimirovici", "last_name": "", "email": "vladimirovici@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:21.111Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 198, "fields": {"password": "pbkdf2_sha256$390000$AfbINbtvppfaXVK3PFYW3j$PRCY3LMZNrToyTfzTM44W9EVLimq4PMsC0doARfeR5k=", "last_login": null, "is_superuser": false, "username": "kayzercode", "first_name": "Alex", "last_name": "", "email": "kayzercode@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:06:24.164Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 199, "fields": {"password": "pbkdf2_sha256$390000$Yu06A0vgFoiWDHEFIAQ4Rt$Touhj8YIzj2FYH4GSZRSuWpciIFQV3Wu8x4GF8zM/rg=", "last_login": null, "is_superuser": false, "username": "joaofranco19", "first_name": "João Franco", "last_name": "", "email": "joaofranco19@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:12:28.008Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 200, "fields": {"password": "pbkdf2_sha256$390000$6TynVU0ppnv1kfyItJkvaI$H3u+NhkTQiWyCD5UlQmUR1bTDbKJa98Mt5eKw4OXo6w=", "last_login": null, "is_superuser": false, "username": "almenon", "first_name": "Almenon", "last_name": "", "email": "almenon@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:12:32.181Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 201, "fields": {"password": "pbkdf2_sha256$390000$rOhBLUGtWv73WEe17Xyewj$Ued7JW2RKpYC6AFfW0dAOIjjjkpqw9Ibcmc/xczBwK8=", "last_login": null, "is_superuser": false, "username": "ninjasoards", "first_name": "David Y Soards", "last_name": "", "email": "ninjasoards@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:12:37.291Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 202, "fields": {"password": "pbkdf2_sha256$390000$X4C136BkI8WpfGgRVdPCOd$VvEh2BPY86fo+E8m2nmfRw3oK/kOhaRAVwEFaL9zSak=", "last_login": null, "is_superuser": false, "username": "hexrcs", "first_name": "Xiaoru Li", "last_name": "", "email": "hexrcs@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:12:39.697Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 203, "fields": {"password": "pbkdf2_sha256$390000$PDUNhl50bkCthFpifIqHLt$lRfGu8MuykPu3wj+iZQ/hm4ry/A1w9Ptellr/4YNGdk=", "last_login": null, "is_superuser": false, "username": "tomayac", "first_name": "Thomas Steiner", "last_name": "", "email": "tomayac@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:12:42.919Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 204, "fields": {"password": "pbkdf2_sha256$390000$oUUZ1fJgRvn6sMlspQIANU$+UzKp04ocUN993p5iuvMM3OmzMvUsNkITl7wKQ7FNKU=", "last_login": null, "is_superuser": false, "username": "dynamitebud", "first_name": "Rudra", "last_name": "", "email": "dynamitebud@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:12:44.592Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 205, "fields": {"password": "pbkdf2_sha256$390000$wuRq4tMaymJFCHhmGw84py$9O6zQLSUwsQldFfZRLZcvWJCCYWm6kenNgU3KYxPywI=", "last_login": null, "is_superuser": false, "username": "pgrm", "first_name": "Peter Grman", "last_name": "", "email": "pgrm@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:12:59.986Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 206, "fields": {"password": "pbkdf2_sha256$390000$P7nzi51YuPA6qfmviCFbSH$IGBHDKSkj4+AQPMalvzeQEpWbY8q575h5RaK8ADzTFg=", "last_login": null, "is_superuser": false, "username": "varundey", "first_name": "Varun Dey", "last_name": "", "email": "varundey@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:07.772Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 207, "fields": {"password": "pbkdf2_sha256$390000$FJcbQHLoErmH3tAZnEZC49$zWiDtvhq+LOmUmH2wMZ0TTElaqcUHt+o7NwR9deVetw=", "last_login": null, "is_superuser": false, "username": "blackmamba", "first_name": "The Black Mamba🔥", "last_name": "", "email": "blackmamba@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:11.118Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 208, "fields": {"password": "pbkdf2_sha256$390000$bAPZBZ3gxSRZLs0jfc7JNL$SL8P3TT/IDJ9dQwJOVr+uBJbDVssHTMzHozDEfRwf6s=", "last_login": null, "is_superuser": false, "username": "bugb", "first_name": "bugb", "last_name": "", "email": "bugb@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:12.335Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 209, "fields": {"password": "pbkdf2_sha256$390000$fTMqT3J03XCBAybNxwF6AW$clNg8BVB+ikLDYglXk5BMIsM+Jy7a4zkWbajdS2JCSc=", "last_login": null, "is_superuser": false, "username": "venkteshv", "first_name": "VenkteshV", "last_name": "", "email": "venkteshv@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:14.770Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 210, "fields": {"password": "pbkdf2_sha256$390000$0EoW8vakgfD7oyvg6rcrSj$o0Dw81uto1MlKLZPHdmVJ64RA4a/Pf4F265R5ovzCXs=", "last_login": null, "is_superuser": false, "username": "paddy3118", "first_name": "Paddy3118", "last_name": "", "email": "paddy3118@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:17.291Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 211, "fields": {"password": "pbkdf2_sha256$390000$HS81JE44CDe8EV3sICAFw1$snBOQnXpy8+i1TZQwlLT5P0PHWT0NNnOKJ75OG9lYWw=", "last_login": null, "is_superuser": false, "username": "netsi1964", "first_name": "netsi1964 🙏🏻", "last_name": "", "email": "netsi1964@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:19.153Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 212, "fields": {"password": "pbkdf2_sha256$390000$RMvoeWaXOjqfbNnsxaH1MG$owE9P+oiTKVlBSl0wBfAGo/Gcof3x02Iqg/SrlTa3gg=", "last_login": null, "is_superuser": false, "username": "cavezza", "first_name": "Bob Cavezza", "last_name": "", "email": "cavezza@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:28.572Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 213, "fields": {"password": "pbkdf2_sha256$390000$Fi78lM2W2XORvtKvLsLG65$NtIK7P6djSIkIxA7qO7M3B1joMxCV+Fye6Qtcl20FPo=", "last_login": null, "is_superuser": false, "username": "heymarkkop", "first_name": "Mark Kop", "last_name": "", "email": "heymarkkop@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:38.083Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 214, "fields": {"password": "pbkdf2_sha256$390000$NNsqiDj0pBPSp0crRtUI9Z$fG7ghdPUBlV3hgq38aL614y1JrnYgDEdM3iSKQLhhtg=", "last_login": null, "is_superuser": false, "username": "sihamza", "first_name": "Jouini Hamza", "last_name": "", "email": "sihamza@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:42.152Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 215, "fields": {"password": "pbkdf2_sha256$390000$zYQ5RYYhkIeXgaBKdj7GpN$HElPPXH7hfZNIINAIkZfRH692T2jgxqONqV+tKHHWJM=", "last_login": null, "is_superuser": false, "username": "codelitically_incorrect", "first_name": "codelitically_incorrect", "last_name": "", "email": "codelitically_incorrect@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:43.879Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 216, "fields": {"password": "pbkdf2_sha256$390000$I7t7L5OFfGT3WLcr4QXNSe$L2o5MOBzZg08SzwpdICSYGD7M30LcRUCu6JbrCFmpB4=", "last_login": null, "is_superuser": false, "username": "abhinav1217", "first_name": "Abhinav Kulshreshtha", "last_name": "", "email": "abhinav1217@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:46.162Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 217, "fields": {"password": "pbkdf2_sha256$390000$NnZTFpIJGLnXhgpFzO1CTi$Mgsn4cqoycdU7gciIA3fMil3yMqBfe4qmaUbzfYAqEc=", "last_login": null, "is_superuser": false, "username": "ragezbla", "first_name": "Olivier Lechevalier", "last_name": "", "email": "ragezbla@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:49.548Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 218, "fields": {"password": "pbkdf2_sha256$390000$K2rOx0B3AoqynqTxyGm6LS$fL610Ijjq3PDal9IBNaAX7EEbL+fo+eTxFiTiy4xVIk=", "last_login": null, "is_superuser": false, "username": "herchila", "first_name": "Hernán Chilabert", "last_name": "", "email": "herchila@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:52.453Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 219, "fields": {"password": "pbkdf2_sha256$390000$SXKcYxJVVP7ABUUtAmHEw9$POYHG1IpbJpRNNc9rs0RifOalbRFXEZjw8YocOZzIaw=", "last_login": null, "is_superuser": false, "username": "renegadecoder94", "first_name": "Jeremy Grifski", "last_name": "", "email": "renegadecoder94@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:54.915Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 220, "fields": {"password": "pbkdf2_sha256$390000$f1sgxiD60dOBbwEwwZduYm$IyYxd9t0aI2+oEuxcV1dQdwyHUMOiqPRUCwbzwPBLik=", "last_login": null, "is_superuser": false, "username": "thorstenhirsch", "first_name": "Thorsten Hirsch", "last_name": "", "email": "thorstenhirsch@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:58.037Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 221, "fields": {"password": "pbkdf2_sha256$390000$aBdmSJ3NyiJmvHadQ8mggZ$mtlfLKW1OHZjs659iUUSGORxYuFk38xGIxMdEkUHZdE=", "last_login": null, "is_superuser": false, "username": "orenovadia", "first_name": "orenovadia", "last_name": "", "email": "orenovadia@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:13:59.504Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 222, "fields": {"password": "pbkdf2_sha256$390000$h4GZ8Y34JwSsO862HeJdhP$eE5YHQX118RRcHYqn1RKskgstQRkv697Umh6iTlnsco=", "last_login": null, "is_superuser": false, "username": "ankushabhishek3", "first_name": "ABHISHEK KUMAR ", "last_name": "", "email": "ankushabhishek3@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:01.352Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 223, "fields": {"password": "pbkdf2_sha256$390000$N6kuwbjRu6pPX1vZPNURMv$l32gUQGVp7OFjSpPJnq/iPZOEwX3QAkwwFYEmAEHZe8=", "last_login": null, "is_superuser": false, "username": "harshrathod50", "first_name": "Harsh Rathod", "last_name": "", "email": "harshrathod50@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:03.147Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 224, "fields": {"password": "pbkdf2_sha256$390000$RuHtQopGfLD8vU2ZhGwmxo$wtNvqx4y5DgK4tpYzaR/oyree+H0ID0BePtpAO58Urs=", "last_login": null, "is_superuser": false, "username": "brettclawson75", "first_name": "Brett Clawson", "last_name": "", "email": "brettclawson75@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:06.473Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 225, "fields": {"password": "pbkdf2_sha256$390000$7s2Bkhra5MviiLSwEmKJEM$dg54mJr05503RqnqOua6nj871oqw17CgpCx54n9HVAQ=", "last_login": null, "is_superuser": false, "username": "mblayman", "first_name": "Matt Layman", "last_name": "", "email": "mblayman@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:10.943Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 226, "fields": {"password": "pbkdf2_sha256$390000$vh6W4fGeRHrmmQm5badeZR$oIS4WO/DmaYd2RhgQ3dLgw7hp6soEU7l9hHLBiP+o8s=", "last_login": null, "is_superuser": false, "username": "vicradon", "first_name": "Osinachi Chukwujama", "last_name": "", "email": "vicradon@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:16.133Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 227, "fields": {"password": "pbkdf2_sha256$390000$a60J9IspZqgvjnMqPbAnl4$cJD5Mk9736bHISH79Z4ZYx3t4QdbHnm6rtlYKA8YCeM=", "last_login": null, "is_superuser": false, "username": "angelarae63", "first_name": "Angela Whisnant", "last_name": "", "email": "angelarae63@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:18.870Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 228, "fields": {"password": "pbkdf2_sha256$390000$oCVWlUrmQKjzQaPi2Lol16$4VPyWhcJM09urGxmoxZlpQ8FBUxFjia0Nze86sor6jw=", "last_login": null, "is_superuser": false, "username": "ebenoladutemu", "first_name": "Ebenezer Oladutemu", "last_name": "", "email": "ebenoladutemu@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:20.080Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 229, "fields": {"password": "pbkdf2_sha256$390000$53a4QUWU99PuOFzHok4Ddp$8XZ3mo3qnYfG922hEpsCYGT0/BqQS/LmH8m8lB3O0wE=", "last_login": null, "is_superuser": false, "username": "ajinspiro", "first_name": "Arun Kumar", "last_name": "", "email": "ajinspiro@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:21.287Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 230, "fields": {"password": "pbkdf2_sha256$390000$tjW4rtYuyf2uRAraVIRjz1$Ss2XzZK7lreToevSLj2a4wF/CB09ZFu93jYj8/GHsSk=", "last_login": null, "is_superuser": false, "username": "scotthannen", "first_name": "Scott Hannen", "last_name": "", "email": "scotthannen@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:22.591Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 231, "fields": {"password": "pbkdf2_sha256$390000$OD9mymfK2dB9le8lb9S4Om$UvDoU6FVtR3gB1gkSlE85atyMA3PAN5xlSZ+GDuojzE=", "last_login": null, "is_superuser": false, "username": "dejvid98", "first_name": "dejvid98", "last_name": "", "email": "dejvid98@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:25.039Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 232, "fields": {"password": "pbkdf2_sha256$390000$nEWLbqQ1vH7SWCrlNCTxLk$Piv3l7A3wOuo88fDfOlhcNIMN23zjwyKDy4JHQee9E8=", "last_login": null, "is_superuser": false, "username": "jameslau", "first_name": "James Lau", "last_name": "", "email": "jameslau@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:27.010Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 233, "fields": {"password": "pbkdf2_sha256$390000$uDamaiWzl2tMGdfzoPkzGQ$s5PsL0+r1D42eWSHqANIzNcAIM1NJ/PLqIj/JqFVOWo=", "last_login": null, "is_superuser": false, "username": "erikwhiting88", "first_name": "Erik", "last_name": "", "email": "erikwhiting88@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:29.461Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 234, "fields": {"password": "pbkdf2_sha256$390000$KQDKCcf4srtgL9xC0vB8IE$FC+abJ5d+R5Jv+h83gK8sTiGtMbBC15jIZHBEar3X4c=", "last_login": null, "is_superuser": false, "username": "jsn1nj4", "first_name": "Elliot Derhay", "last_name": "", "email": "jsn1nj4@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:31.271Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 235, "fields": {"password": "pbkdf2_sha256$390000$UhNF0kKsgHt14GdEtznWtw$xcaXDWQR8EZPxcmn9my/sp5qlg6JXVPcdnXFK5BHpzc=", "last_login": null, "is_superuser": false, "username": "lennyroyroy", "first_name": "Lennyroy 💽", "last_name": "", "email": "lennyroyroy@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:35.775Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 236, "fields": {"password": "pbkdf2_sha256$390000$XEAb1GWtmhqWWvGoi0vSec$G8DI+Jmcyf+jpVLp2MCTNINMO53dXttI9kdTEOkWXSI=", "last_login": null, "is_superuser": false, "username": "jessekphillips", "first_name": "Jesse Phillips", "last_name": "", "email": "jessekphillips@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:39.817Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 237, "fields": {"password": "pbkdf2_sha256$390000$d1Sz2pBketJKsUilPDFMTN$wdlTCZnWgBKEHikPDsG9TFTwmNZIMbv/b9dDKb6+hOM=", "last_login": null, "is_superuser": false, "username": "dafuloth", "first_name": "David Thai", "last_name": "", "email": "dafuloth@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:44.486Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 238, "fields": {"password": "pbkdf2_sha256$390000$wE0hMKCUAyCCXbaS5EeIS9$chw19lbLnB7z2wBOr1Q1UzL08QvcYr3Ap10MAQNWIW4=", "last_login": null, "is_superuser": false, "username": "fannyvieira", "first_name": "Fanny", "last_name": "", "email": "fannyvieira@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:50.101Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 239, "fields": {"password": "pbkdf2_sha256$390000$2iBMssNzzA0yqU8LSe4Naq$WT5FejrZCHgsQe6ZSRxgQ+aOgiI7cqoBD9yau7AWHcI=", "last_login": null, "is_superuser": false, "username": "joseims", "first_name": "Ignácio Schmid", "last_name": "", "email": "joseims@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:53.788Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 240, "fields": {"password": "pbkdf2_sha256$390000$h8LqPexKa4ZJeTFDMvUije$8WCoC5PEV1w4ca2kbQ9esCWGrGFAVFz4d2q6LmasdvQ=", "last_login": null, "is_superuser": false, "username": "davidedup", "first_name": "davidedup", "last_name": "", "email": "davidedup@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:55.290Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 241, "fields": {"password": "pbkdf2_sha256$390000$jy3hFZ3jhREJQDEnKaVSGa$YmmaES8iWyqfEEtSGAhVKMzKRmaEVODiqdAkhBF7+jk=", "last_login": null, "is_superuser": false, "username": "lukehxh", "first_name": "Lucas de Medeiros", "last_name": "", "email": "lukehxh@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:14:57.571Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 242, "fields": {"password": "pbkdf2_sha256$390000$7p0G9RxZ3XpWFYadfPsIsa$05Qceox66wja+Fur16y6MkSzNYajguTHsQ+YyS+3m/8=", "last_login": null, "is_superuser": false, "username": "nabbisen", "first_name": "nabbisen", "last_name": "", "email": "nabbisen@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:00.804Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 243, "fields": {"password": "pbkdf2_sha256$390000$coUyw6KyxGEwHUoTp60UHy$AaBsAF2KXOWEaObppOoejY707my+eerFdaLpSxCKl08=", "last_login": null, "is_superuser": false, "username": "andresmontoyain", "first_name": "Andrés Montoya", "last_name": "", "email": "andresmontoyain@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:08.282Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 244, "fields": {"password": "pbkdf2_sha256$390000$R8RWdhiksfroLx1WepmT8S$PrBtE5SJpt5gp84beksmf2Bm/7Fu3SzhGy1E521Umvo=", "last_login": null, "is_superuser": false, "username": "oliverjumpertz", "first_name": "Oliver Jumpertz", "last_name": "", "email": "oliverjumpertz@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:10.853Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 245, "fields": {"password": "pbkdf2_sha256$390000$mea1XlArGYpNIe7TafdZeJ$G3Fbx3RPNmhMeQhtZDfN7GTDiKnmIs8H8QLwuXLGbDs=", "last_login": null, "is_superuser": false, "username": "mrcsharp", "first_name": "Rafael", "last_name": "", "email": "mrcsharp@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:12.768Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 246, "fields": {"password": "pbkdf2_sha256$390000$TDxZkO2jP9evZmZhGkIGXq$HAmb9I/e2wlDLMVlpxAlBsHy2SKEHdSdjkRXPH4ybkg=", "last_login": null, "is_superuser": false, "username": "tallerguy", "first_name": "tallerguy", "last_name": "", "email": "tallerguy@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:15.607Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 247, "fields": {"password": "pbkdf2_sha256$390000$yugrtxTwAdpo1jxH7v9wfc$LHtSrdoINRVmBWr5U00jj7KkvCxM0PE+0pB9oZd7vFc=", "last_login": null, "is_superuser": false, "username": "ashleemboyer", "first_name": "Ashlee (she/her)", "last_name": "", "email": "ashleemboyer@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:19.176Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 248, "fields": {"password": "pbkdf2_sha256$390000$I1mpa4uduw0A7UXGlUfb92$7trx4fgriZRl26AEWj8dTgF6CVB36857kCkJT4l5Hig=", "last_login": null, "is_superuser": false, "username": "leewarrickjr", "first_name": "Lee Warrick", "last_name": "", "email": "leewarrickjr@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:21.652Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 249, "fields": {"password": "pbkdf2_sha256$390000$0fR9smW4o9qXcqQFl4InBU$SCdf5JjDsWxxVlbmNQ701Fc/xuWKHNaTK6/fyKtQ/sw=", "last_login": null, "is_superuser": false, "username": "ahmadbassamemran", "first_name": "Ahmad Emran", "last_name": "", "email": "ahmadbassamemran@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:24.763Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 250, "fields": {"password": "pbkdf2_sha256$390000$GEwwT6XB9me7MWB0jvdQzb$Jx+t+7EKh/6M2z4q9vfuxw8EznXvY8kvsG3zzG1YZzw=", "last_login": null, "is_superuser": false, "username": "wangmao0324", "first_name": "Full Stack Web Developer", "last_name": "", "email": "wangmao0324@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:27.256Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 251, "fields": {"password": "pbkdf2_sha256$390000$xZblU7kGN8iCnKhzCO5WGY$qLNbc4PnnIMMz3X2S+J2Hs+KwRWjqPRAvae1ZlaWDHo=", "last_login": null, "is_superuser": false, "username": "nataliedeweerd", "first_name": "𝐍𝐚𝐭𝐚𝐥𝐢𝐞 𝐝𝐞 𝐖𝐞𝐞𝐫𝐝", "last_name": "", "email": "nataliedeweerd@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:29.007Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 252, "fields": {"password": "pbkdf2_sha256$390000$5RwRxqOfIw9ZDRBWSRJd8h$G53QPnwqkgGm0wSc9vnyNQukX/8ViFIWlRTad+UcNyI=", "last_login": null, "is_superuser": false, "username": "chris_bertrand", "first_name": "Chris Bertrand", "last_name": "", "email": "chris_bertrand@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:30.808Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 253, "fields": {"password": "pbkdf2_sha256$390000$IJYQkRRWgo31OQYmNU5LhI$CdVYrlQq5o6aviDzXAqNEVk+rhQvmrw6LYe0l3BthV0=", "last_login": null, "is_superuser": false, "username": "wouterxd", "first_name": "wouterXD", "last_name": "", "email": "wouterxd@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:32.039Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 254, "fields": {"password": "pbkdf2_sha256$390000$WBqwh183adjGtGc7YnIvQK$6jsjO+BDPL+jh8dldvrzPzxgq9Emr+8wxKNvDqEJGcw=", "last_login": null, "is_superuser": false, "username": "dhanushkadev", "first_name": "Dhanushka madushan", "last_name": "", "email": "dhanushkadev@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:33.332Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 255, "fields": {"password": "pbkdf2_sha256$390000$hum7WdOO05oCcLjCNQawPl$0MJGI7t96o7xS9XP4j6n0VzGtMIkoCfX0slmlcara68=", "last_login": null, "is_superuser": false, "username": "brguirra", "first_name": "Bruno Guirra", "last_name": "", "email": "brguirra@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:34.673Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 256, "fields": {"password": "pbkdf2_sha256$390000$YBclmNrpyCfHwxbVgDMx9z$eB3wDzTcJS6oOD9vCqLU4vONEbhh3ey0YlWJNkIStT0=", "last_login": null, "is_superuser": false, "username": "pavelloz", "first_name": "Paweł Kowalski", "last_name": "", "email": "pavelloz@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:36.413Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 257, "fields": {"password": "pbkdf2_sha256$390000$cM9v6HXCyQancxq7J6W0Vv$huB8p9rCG3qTI0dJp3O99I6XZ3//ARqAcd/lQukWBwo=", "last_login": null, "is_superuser": false, "username": "z2lai", "first_name": "z2lai", "last_name": "", "email": "z2lai@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:38.788Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 258, "fields": {"password": "pbkdf2_sha256$390000$EDRXOL1EibK1L52MftbAjy$7wCjznFnDsOfC/L2nOVSFKYaktPbAwulZ46ycxlsRrQ=", "last_login": null, "is_superuser": false, "username": "craigdev937", "first_name": "Craig Johnson", "last_name": "", "email": "craigdev937@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:40.603Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 259, "fields": {"password": "pbkdf2_sha256$390000$mrfrHEmxDurPnK3TDX5Abi$op34oBfKilx9w/Rar7glkZs0xUczjOcVj+IOjXl2QLA=", "last_login": null, "is_superuser": false, "username": "tisaconundrum2", "first_name": "Nicholas Finch", "last_name": "", "email": "tisaconundrum2@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:41.951Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 260, "fields": {"password": "pbkdf2_sha256$390000$RyrhKZqwPoPa8wEUHqI1Ij$rrvAeWwQ1oHJpN2F5MWmGbVJ8UW8clRE114qm2RzbWI=", "last_login": null, "is_superuser": false, "username": "dewofyouryouth_43", "first_name": "Jacob E. Shore", "last_name": "", "email": "dewofyouryouth_43@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:43.558Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 261, "fields": {"password": "pbkdf2_sha256$390000$Z9ljunzNavXVnWngSNMH15$HY+nhoUqQVrqrWQPGk1j+oHOSvN+iQ6dx+tmZwOLV3I=", "last_login": null, "is_superuser": false, "username": "elbugz", "first_name": "Greg Brown", "last_name": "", "email": "elbugz@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:45.191Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 262, "fields": {"password": "pbkdf2_sha256$390000$wFtmF8BfV8gueiGi4e8NnX$d8XrIgkDBCTPC/MZf/sTlss5X0sw7Yqb5q1scxI3JMA=", "last_login": null, "is_superuser": false, "username": "tyrw", "first_name": "Tyler Warnock", "last_name": "", "email": "tyrw@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:48.182Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 263, "fields": {"password": "pbkdf2_sha256$390000$RXiGJ5JsX8ZhgOoSp24LpI$+r6vo/VKmAdZzfpf6UIGCo6rvDii+0HnXWpny/jes60=", "last_login": null, "is_superuser": false, "username": "kris", "first_name": "kris", "last_name": "", "email": "kris@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:51.284Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 264, "fields": {"password": "pbkdf2_sha256$390000$sNOHVXYWTrG8HUaMonNiZI$9s8WjpLjbFj7nPRmW6P43LN+AU7TENxOFMM/Ti1IcCU=", "last_login": null, "is_superuser": false, "username": "the_power_coder", "first_name": "John Dorlus", "last_name": "", "email": "the_power_coder@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:15:55.828Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 265, "fields": {"password": "pbkdf2_sha256$390000$Vq6Zmf5VdQW5QZYAXgiWEN$kcw7lmVqrYYJ/p62OjbJp9aQFjD/lWt3B5yh4e34pZM=", "last_login": null, "is_superuser": false, "username": "afsarzan", "first_name": "Afsar", "last_name": "", "email": "afsarzan@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:00.436Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 266, "fields": {"password": "pbkdf2_sha256$390000$7Up55r8c57GCfS63lCDgZQ$tqxyMRZZQSRQQAI0Tx2+YCUZJMQIHPSqK9yFvGIoBbo=", "last_login": null, "is_superuser": false, "username": "danieldfc", "first_name": "Daniel Felizardo", "last_name": "", "email": "danieldfc@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:02.561Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 267, "fields": {"password": "pbkdf2_sha256$390000$VlnzhUxxAS7xAeBmgz5m9a$ZLx4BZUf+8nvci9KeeiQwxsNzuyCV581zjDeb6qFUv8=", "last_login": null, "is_superuser": false, "username": "hellixum", "first_name": "SANKALP PANDEY", "last_name": "", "email": "hellixum@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:04.089Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 268, "fields": {"password": "pbkdf2_sha256$390000$qHiZil9gO9wG1QANp38FjD$PSkxbZKT4cGGiFcj7W5lyH9UJV7oZhLThg0wEkF1b04=", "last_login": null, "is_superuser": false, "username": "logunlaja26", "first_name": "logunlaja26", "last_name": "", "email": "logunlaja26@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:06.564Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 269, "fields": {"password": "pbkdf2_sha256$390000$OhW4Kshuf287j2lMfnuc8Q$Ot2djFrI0xmJNXG3DnuP8yYA0/5CDspTaq2Ww2Rtp7I=", "last_login": null, "is_superuser": false, "username": "djoleb", "first_name": "Djordje Bajic", "last_name": "", "email": "djoleb@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:09.963Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 270, "fields": {"password": "pbkdf2_sha256$390000$MwzLO94PfaDUWm9sbXkz7d$SqAn3HTYV2R6HSIW9JJNFgy9EgVjP6Q2rZXSk7K3z94=", "last_login": null, "is_superuser": false, "username": "isalevine", "first_name": "Isa Levine", "last_name": "", "email": "isalevine@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:15.408Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 271, "fields": {"password": "pbkdf2_sha256$390000$U71SDt9C7kjjUbgga7huWc$tG9EuwJ7M7hZZ9bi6MoiKhTpiT33Fhz3wdO7WRbyGz4=", "last_login": null, "is_superuser": false, "username": "shahzaibkhalid", "first_name": "Shahzaib Khalid", "last_name": "", "email": "shahzaibkhalid@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:19.605Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 272, "fields": {"password": "pbkdf2_sha256$390000$bLThQtNWnLl6hXkjwHkn2k$62dyKPmXbsxbvH6VkpaI7hAH2ongu307cwTdSFwJgUc=", "last_login": null, "is_superuser": false, "username": "anduser96", "first_name": "Andrei Gatej", "last_name": "", "email": "anduser96@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:22.759Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 273, "fields": {"password": "pbkdf2_sha256$390000$a4H7P4RxAYHxfEcWhs2MQa$VNWTExCcQD5dXwFlk+yyshf/DTGa39NFlxUBPoyg7bU=", "last_login": null, "is_superuser": false, "username": "amcsi", "first_name": "Attila Szeremi⚡", "last_name": "", "email": "amcsi@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:24.434Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 274, "fields": {"password": "pbkdf2_sha256$390000$WAlGhMvR7mduyIdssApepD$KrTKcqMIkSThMkd+ZYfqLD6yBKCn8v94IBOHymns5zQ=", "last_login": null, "is_superuser": false, "username": "dean", "first_name": "Dean Bassett", "last_name": "", "email": "dean@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:26.368Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 275, "fields": {"password": "pbkdf2_sha256$390000$ENyd9n6IzoJ2aNSNZw4DS8$3VAhM4Irz0E2e+VgJVwCkSuzNwL/Ar1PGjaNMLZElbc=", "last_login": null, "is_superuser": false, "username": "karthikaruna", "first_name": "Karthikeyan A.", "last_name": "", "email": "karthikaruna@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:28.880Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 276, "fields": {"password": "pbkdf2_sha256$390000$aAGWNMWn30y7j4IBeHygBM$btWkTsiqHZ0JmmyJriKOduvslppxnrIR9EQDaU+xaBE=", "last_login": null, "is_superuser": false, "username": "thangchung", "first_name": "Thang Chung", "last_name": "", "email": "thangchung@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:34.774Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 277, "fields": {"password": "pbkdf2_sha256$390000$71Bc2qgzMbg6zIMGJCSxwT$pc25xa47xyLZMHsMjAqP8BNGD0k0mrmuqyZd+WM2Rbc=", "last_login": null, "is_superuser": false, "username": "zmaniace", "first_name": "Imran Zahid", "last_name": "", "email": "zmaniace@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:38.565Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 278, "fields": {"password": "pbkdf2_sha256$390000$4Yj3V1fDYCpReZrahWBVeO$SLk0RRhDJpQAhOntkO38p7OhPCPxC23i/Fi8uCT92pE=", "last_login": null, "is_superuser": false, "username": "dpkahuja", "first_name": "Deepak Ahuja 👨‍💻", "last_name": "", "email": "dpkahuja@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:42.058Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 279, "fields": {"password": "pbkdf2_sha256$390000$nLwUVzjbsYqeuifejet1hm$1MMmGf3Rnss5yi//tz4nNKz+6f9D4Z3mJ7caZsaN/z8=", "last_login": null, "is_superuser": false, "username": "patarapolw", "first_name": "Pacharapol Withayasakpunt", "last_name": "", "email": "patarapolw@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:44.217Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 280, "fields": {"password": "pbkdf2_sha256$390000$gwHGf0aQ7XS3e2LqLYd8Rq$l2nB1x6pAPr60rBlBR5p4h6GKvqz7FeFJH054CvEOhM=", "last_login": null, "is_superuser": false, "username": "raymag", "first_name": "Carlos Magno", "last_name": "", "email": "raymag@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:46.391Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 281, "fields": {"password": "pbkdf2_sha256$390000$6c6MSUxTmcqtJlwFi5d1eY$BOsOA3gOIPJOfu73dQgBGfAhhIef7Zxky3J7p2lZOi4=", "last_login": null, "is_superuser": false, "username": "rishidadheech", "first_name": "Rishi Dadheech", "last_name": "", "email": "rishidadheech@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:48.870Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 282, "fields": {"password": "pbkdf2_sha256$390000$C8ZajSbB2SDOEpF67nAsOw$JPG9pB5xyHsOSAzBKu3s5ldo8WRo5G9oCb4FHxoZ3Vw=", "last_login": null, "is_superuser": false, "username": "alostboy", "first_name": "A Lost Boy", "last_name": "", "email": "alostboy@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:50.674Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 283, "fields": {"password": "pbkdf2_sha256$390000$3rrBaBeFlRZECNhx0Olw8y$1xZkCmUeST+YaWq6qdm2Jh9FOGrI+c5iYfrv5zRfiQQ=", "last_login": null, "is_superuser": false, "username": "ayaanraj", "first_name": "ayaanraj", "last_name": "", "email": "ayaanraj@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:52.634Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 284, "fields": {"password": "pbkdf2_sha256$390000$1Sk4m0AVQ08JcYEfyrOPma$X7k/jm+8BMPg+qrNbyldkv228TjdWVIWmiasWrUXREg=", "last_login": null, "is_superuser": false, "username": "godcrampy", "first_name": "Sahil Bondre", "last_name": "", "email": "godcrampy@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:56.242Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 285, "fields": {"password": "pbkdf2_sha256$390000$yLY7xGad4iTWp1PQbFzxkl$P9EJRIxsH+cFTFixKkwnqSGNTygyhnDcUSSlZbJa0tU=", "last_login": null, "is_superuser": false, "username": "edisonpappi", "first_name": "Edison Augusthy", "last_name": "", "email": "edisonpappi@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:16:58.756Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 286, "fields": {"password": "pbkdf2_sha256$390000$a96zRete8ZZ22YbzpQ71EV$0l50ZpwVQ6fENVT5rC0DX1uCbJjNzqv2dgzeir3ypk8=", "last_login": null, "is_superuser": false, "username": "techdebtor", "first_name": "sam", "last_name": "", "email": "techdebtor@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:00.526Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 287, "fields": {"password": "pbkdf2_sha256$390000$h2UKmK7ppHEV3YEYgLUgTb$QM8Cfn05Jtf+7pcAMXFdZmeLFShplRa8RELr8rEvRRI=", "last_login": null, "is_superuser": false, "username": "chattes", "first_name": "Sourav Chatterjee", "last_name": "", "email": "chattes@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:02.817Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 288, "fields": {"password": "pbkdf2_sha256$390000$hCYTAc2huEVcysl0jk2J9K$oqWoNWzfKfyzG8fRaBG7i+Kl4zUqw1+lAn6qCvKuGNs=", "last_login": null, "is_superuser": false, "username": "takakd", "first_name": "Takahiro Kudo", "last_name": "", "email": "takakd@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:04.878Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 289, "fields": {"password": "pbkdf2_sha256$390000$0zSmlAvjBNbJHaQFQb5eIp$FJQqDv2j2LO/BH+trUeMJG+oRd9+lLfIxyKBbfSwuSk=", "last_login": null, "is_superuser": false, "username": "srisrinu", "first_name": "SRINU", "last_name": "", "email": "srisrinu@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:09.953Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 290, "fields": {"password": "pbkdf2_sha256$390000$1VuMCBkURGuTBNUwlL0GEt$b1kfupJLOj6Ee6SBIJ1LtyVpk0Nih1SHtx6IqAv9YJM=", "last_login": null, "is_superuser": false, "username": "farzanrashid", "first_name": "FarzanRashid", "last_name": "", "email": "farzanrashid@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:13.251Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 291, "fields": {"password": "pbkdf2_sha256$390000$CB2yoaraHDxiszxFTSuP3k$PKh5khq8Ed4j1cC73BSDWl+77UAf6ZVY304PDEMCevw=", "last_login": null, "is_superuser": false, "username": "goyo", "first_name": "Grzegorz Ziemonski", "last_name": "", "email": "goyo@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:14.982Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 292, "fields": {"password": "pbkdf2_sha256$390000$k8fTUStn9If3idai3S4IJK$/ccvPZ1Z/4yZOpRXua6iQjIjooi4nNSYzXcAHpSg4jg=", "last_login": null, "is_superuser": false, "username": "aadibajpai", "first_name": "Aadi Bajpai", "last_name": "", "email": "aadibajpai@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:16.825Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 293, "fields": {"password": "pbkdf2_sha256$390000$1K1YnDQZy3qC0sGMFf429D$VXgUam3J3/q8tfORhOaiaVDBzyzgNMyWx4AIA0++/UQ=", "last_login": null, "is_superuser": false, "username": "zakwillis", "first_name": "zakwillis", "last_name": "", "email": "zakwillis@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:18.757Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 294, "fields": {"password": "pbkdf2_sha256$390000$o8C682lffjiE1rUEJF4Qf0$U9We/SARaUVl7Iem4zq8lTmPPG74+Vp4JEvJKII6EZ8=", "last_login": null, "is_superuser": false, "username": "wajahatkarim", "first_name": "Wajahat Karim 🇵🇰", "last_name": "", "email": "wajahatkarim@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:23.125Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 295, "fields": {"password": "pbkdf2_sha256$390000$VmCkkZ1992vnLctlQJBG6g$4zrJwATwm0XSOR5ahKLP532nIMotuOJ7lp7hwItSNWo=", "last_login": null, "is_superuser": false, "username": "jmfayard", "first_name": "Jean-Michel Fayard 🇫🇷🇩🇪🇬🇧🇪🇸🇨🇴", "last_name": "", "email": "jmfayard@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:26.195Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 296, "fields": {"password": "pbkdf2_sha256$390000$oP4Bt74VQwr5sYiT8gpjna$VhKZ3RcrY93kg/yqLCIAafFMoczU5d5QJbRM5dZ+7jA=", "last_login": null, "is_superuser": false, "username": "brcprasanna", "first_name": "Prasanna Vishnuram", "last_name": "", "email": "brcprasanna@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:28.032Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 297, "fields": {"password": "pbkdf2_sha256$390000$gH071n6ppVG8rHoLOvvL4l$Cb4b6uGRIbD3pkLTandRhN0YO52HzwnRYUwIpBroQHI=", "last_login": null, "is_superuser": false, "username": "benjaminstrmer", "first_name": "Benjamin Stürmer", "last_name": "", "email": "benjaminstrmer@expressio.live", "is_staff": false, "is_active": true, "date_joined": "2022-11-27T11:17:29.573Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 298, "fields": {"password": "pbkdf2_sha256$390000$hTEwxeHZl6uG2wozpGRMxQ$cFeYQYBiJJ9/bMLBk8YGXEzFGGE4rkQ+96e9HDc31rc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qs26ed.com?hs=b892a3b9ae40f93c42e6663dc8a58250&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:05:51.504Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 299, "fields": {"password": "pbkdf2_sha256$390000$aPl8lhQ1Ae62Fkktp3xhvM$VqRNwG+s1K6Z4OwudgUC4SPOSHTRf0l7rnle9Em0klM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://da4x1e.com?hs=4c63f3eb4cc1ebe37b834f4b6293f25a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:05:55.995Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 300, "fields": {"password": "pbkdf2_sha256$390000$bA2Mt7KX2zexMGtowpeGiN$QIP1FaR5iZsgO+qilmLJosxCplbfjFSlBAd4Hvpvg10=", "last_login": null, "is_superuser": false, "username": "Hello World! https://gswwue.com?hs=f92a213e7fa1789a5fd3ec99f3cbb614&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:00.902Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 301, "fields": {"password": "pbkdf2_sha256$390000$FWv1VXRxl7BkkgpVnaUVV0$cuzlZp1pKg6enFtuek2rJRWjTKSgFcnqJ4aCPjdMgCM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://xvgpzs.com?hs=115a08143eb6bee35e3bd249e4d09bb3&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:04.989Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 302, "fields": {"password": "pbkdf2_sha256$390000$vmveXi0FyoCla1HfMuNpx5$0ObCPeyMQIp2EHP4iOIwK1Tyj9LxOkyQHe3UxkuHZRA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://yo4d7y.com?hs=9a752eb8c7f84727798e9bfa1608e61e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:08.953Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 303, "fields": {"password": "pbkdf2_sha256$390000$M9duSLQGtU55fKiUAD6LzN$GN0xbkFx4mMtLrT51EBlVqthbnyTAcwjnX5kV0Msh1c=", "last_login": null, "is_superuser": false, "username": "Hello World! https://xvrupn.com?hs=2bbbd0016edea299349a0743cfc4abf8&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:19.609Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 304, "fields": {"password": "pbkdf2_sha256$390000$3ONrRXAxfTiyUxirbg43Qp$HIsQY3rzm6vnMrIlSW6rlRmU3UHBWn7NN5hftFwTyNY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://o53bwc.com?hs=8d0b18711f473d5534daa49699f7ace5&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:27.367Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 305, "fields": {"password": "pbkdf2_sha256$390000$ADpQ9s3kI1FA1DfD15uaaH$l1UCfbvX4xkzmhc5GWsYlsnSCavH/dUGJ89Nb2OBohY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://s3cy2u.com?hs=9d91f14255246dde34abfac9f7df6a50&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:35.016Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 306, "fields": {"password": "pbkdf2_sha256$390000$52JG3I1IwrjZU7zLGwxl9Y$ERSW43afPj0ynTob3kSNAzS+APdbYoFWpkJKZS9BPZ4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://fyjnhh.com?hs=8f42dae1d2397e33bc69081caba1976a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:37.651Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 307, "fields": {"password": "pbkdf2_sha256$390000$y9gQDn5pz4NlvzClbWmQEg$wNWgRPnSlbnYJmlLXnP1mmet8uLPTxvyj3NNHtt7KOQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qjxsh0.com?hs=aeb26a186e845ab1786a0e1cf7b4e8c2&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:40.222Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 308, "fields": {"password": "pbkdf2_sha256$390000$f9HpCbl6fylNMwTYuafq66$netOwbgGkrasw8gjmfp/J25ntf25KdNebjaQqk6Vi54=", "last_login": null, "is_superuser": false, "username": "Hello World! https://f09kcj.com?hs=2d8e786928857817d69bd563934e2dfc&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:06:50.283Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 309, "fields": {"password": "pbkdf2_sha256$390000$EKJU4bqXU8UgerW6CprgHa$9mi8LE5Wz5yXxU+XC6pBjY6e6Z0KKvjK7SSHWo/22fc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://917dux.com?hs=62b8c0b5388b3af4796225748cb6771d&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:07:19.350Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 310, "fields": {"password": "pbkdf2_sha256$390000$B9XNCyPJGFyX71PQYF2sRQ$PnIzuGAUc/qa2f8DkuHzD++b2e/CaLm1dxa3yeweIgE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0d4n4f.com?hs=9ae8e691846c132a696f43121a44a572&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:07:39.557Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 311, "fields": {"password": "pbkdf2_sha256$390000$WqAfXVg89RJgVS8x6ORDA0$/9n1JgkFXqFUVvlsqeAUd1MFaeqW+q1OaDHCWLcyw4k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://m88y5u.com?hs=c700ebbd1f9a6dec2bb06ccf13772a71&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:07:44.427Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 312, "fields": {"password": "pbkdf2_sha256$390000$kwd93kclXXLZF1k2bAdgGU$sbihuZlZVoRDRb85KlNvnfYUdZs8PwHxqkiGj6agMoU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://rsbx4y.com?hs=f34d2a2e898d1ce9f479647546631b66&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:07:47.667Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 313, "fields": {"password": "pbkdf2_sha256$390000$y7ColQKdHV3aqsbE74x3DU$kd63m0/EuI4MHaz+E98zefKhMauEnhv072jdZy2Lipg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ff9pa1.com?hs=4f19fbaab722641d7db2b4d202b951bf&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:07:55.395Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 314, "fields": {"password": "pbkdf2_sha256$390000$duB98xye6nvNOLOaAdkuHR$YFwrB8HhfSZUKPrEtd7MUy1qkHA5TqU1wNrMCm9uW6w=", "last_login": null, "is_superuser": false, "username": "Hello World! https://o91gmr.com?hs=18f36b9818a7fd58af12cc07964038da&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:02.605Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 315, "fields": {"password": "pbkdf2_sha256$390000$F1pPOcSo13Cte32YrQHTlP$fpgZKNmv805cvphKmn62om5jdQPrjm8yKbCpTH6yVKo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://l3kb9d.com?hs=98f32b4491aa7cc52db0e972c95a5cc9&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:09.392Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 316, "fields": {"password": "pbkdf2_sha256$390000$id1v4v3YSnpOJuiXqd2QTS$N7w5JN7ibhdsvPLejGT6DuIP4c85ir+aXjRv0rFzbdg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qigh5f.com?hs=5f0beb319c3be51dad72b0cdeda2ac97&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:15.546Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 317, "fields": {"password": "pbkdf2_sha256$390000$YqnRJFSrIYppE6DBKQeYXv$UuCDHYSksN6Yay9jgRykog/YzRdmM9ttcZIklE3aBjI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://zfa1ui.com?hs=5a1f490a4603b2a7288b0d96b0b56b46&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:21.539Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 318, "fields": {"password": "pbkdf2_sha256$390000$KwHLL0gmpFh03sb3yAUSa7$vmBmj410PMqzbxbTHQO+HRk2ARebx4PxACSV9Hegz8E=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1xtsbd.com?hs=3a2decf192ae80fe462b937b354a804c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:28.021Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 319, "fields": {"password": "pbkdf2_sha256$390000$fSW8uMNSuBZPO2S2zlly7E$EBkzZsM9XjVH9A3bKZl/EhkCFT0hwFuMQVsmLpf1Ryg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://h8h0oj.com?hs=c917867d28d665304b29fb597af351af&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:35.120Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 320, "fields": {"password": "pbkdf2_sha256$390000$w7Nx8ETHtqhxHHo1d6zucF$vVA7wkfbwPTUozMK0nHjt6WqNT/H7veLJAO+hYiPDmM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ytdq2y.com?hs=02b134d05cc247f38457434000f42964&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:45.100Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 321, "fields": {"password": "pbkdf2_sha256$390000$frc06kDKoxB9mNsGi2sAJO$LRLMmsjYNnhoz9yDYlU0L/S87KOPo8XThlsKhktYVP8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://8d5v7q.com?hs=66b29b2e4874b8ed25654ab08885f3db&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:52.768Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 322, "fields": {"password": "pbkdf2_sha256$390000$eNi1VYxKreSnHncC4hDxbf$8aMtpMJKTuKEX4647mrLTMeaLmvBznhFhnRA12Ppg/o=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0gycu5.com?hs=d07fedf505cc4a84d77e7fd732c4a6d1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:08:58.055Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 323, "fields": {"password": "pbkdf2_sha256$390000$BA8f0VLj5HFC0XDBGffL5A$R/OeQ+x2MyJEf/56M7eNZ7fm/XDiP4afV19z1ySK9Jw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://dgbqwd.com?hs=0b582dbe0cd164a303d147559c25d545&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:02.316Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 324, "fields": {"password": "pbkdf2_sha256$390000$CPLxFOHIprdA57Ebk6EG2J$isLpr169PStFBIxLOwQnTT5Tyi297Lf4xki+mmqtJX8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://li4s3p.com?hs=d2f4b910be1aafc9e3eb98d11aeedfe1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:06.935Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 325, "fields": {"password": "pbkdf2_sha256$390000$hqMgKI7iZ2OviWX2gBz4TE$HFY2MNj6QLbVleos7PhDon2lFYky0ftShYcEJxhABZs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://x1q74e.com?hs=0a7f2aabc4823794b8ab6403314f3b2e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:21.890Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 326, "fields": {"password": "pbkdf2_sha256$390000$79nq56zgNt0ZHsA5Gb1Exn$pTkFR8c6tf9V1LcO5ulaYvJqS4PtPEIpfR3AydEzcfg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ix05no.com?hs=194b1cc218288ab9e11d725950975ec7&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:26.820Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 327, "fields": {"password": "pbkdf2_sha256$390000$r5zxKM4OiBQ7a8g3KZ0mDz$PlCiy5PTS2bT/OFQEqxRfknY02PopZ/R+6eRxOZC8Ks=", "last_login": null, "is_superuser": false, "username": "Hello World! https://zzc55a.com?hs=62361a102179da2bf469a320b6c8276a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:35.075Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 328, "fields": {"password": "pbkdf2_sha256$390000$fbL7yS7TOO6G81lezDzK4i$X1CvCvDxkzfQLT/yjt503HGMSJ+XrhXDo/Ii22bVIuw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://oeqsnj.com?hs=742aff669b7c1cbb72d27883c924e527&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:43.486Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 329, "fields": {"password": "pbkdf2_sha256$390000$ZI4kwqVMQwtYF33itwI23f$GHXxeWVSs+FpEh69XliBGtLhyoyaFi1ZIjEDpG2u/vg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://s4la7x.com?hs=b2ddf97f6983836694ae7a0d97234d35&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:48.508Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 330, "fields": {"password": "pbkdf2_sha256$390000$wNFdDUzcSkgIuP31TYGBF5$DnMQ4xnj3FW+cFBil6d9rAimV+4pfaaZ/bdLJ4kBjSg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://agr6nm.com?hs=899116b16d5284177a21b0943991baa8&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:51.963Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 331, "fields": {"password": "pbkdf2_sha256$390000$0Aj4TBGLJensl4cb4Ma9av$MWWoIP8WLGKmqEjn0Bdjp25iy0Avppu7GCmDgpi9LKs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://f3fjjp.com?hs=7571cd73b81b14e793c8d3b18ed86b87&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:55.066Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 332, "fields": {"password": "pbkdf2_sha256$390000$2mQfbK3yuoYgR35xZvTi8h$NTDGyYXbkl/LbO+UfJWzqvTntU6H5c6F9duG5qzDZqU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://735kpf.com?hs=3d408ebdf37e665e1dfe53e20302e615&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:57.405Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 333, "fields": {"password": "pbkdf2_sha256$390000$Eo6XmGH33qm9333PI9mtjK$9rgq1nbPPo1GNg/ufZuXT/vnWBDEsFErZH3UQIvwYWo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://txtxab.com?hs=05a4efb71c7fc719bef390ac616415ff&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:09:59.817Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 334, "fields": {"password": "pbkdf2_sha256$390000$9Nda7XAg4gk0wox8iHLzKF$Cp2Bo6dm/HiyulNURvNhDPdCPRynrGm/znUDbp6eYEg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1im5tr.com?hs=be08a47aad775dcf0ad7267280213472&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:10:02.367Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 335, "fields": {"password": "pbkdf2_sha256$390000$qo0FNeIlHtv1rQsCBxU9CF$TLPODn8ssqPrMREdzVhEMthWU86Xtby9BcEgoergmh0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://cfua5x.com?hs=45c5cd5b1ace31a6d53f9678d5251769&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:10:50.674Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 336, "fields": {"password": "pbkdf2_sha256$390000$f7BQP7H7BgYVxQfP4VazEW$wlb8u/iVpsh7k3QtXTpQgiM1LZlSYNv/pldJNZ5ka3A=", "last_login": null, "is_superuser": false, "username": "Hello World! https://xhtrx6.com?hs=d7bec74d7fb8a12b6023cc9a61004165&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:10:58.262Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 337, "fields": {"password": "pbkdf2_sha256$390000$1j31vfS9j6irWjh3w2PeaT$73bVGKz3T1vuuq9EI69rWsdQcRNMQ9g9cOOrQL+PwLM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://413zzu.com?hs=f6e691d545817d0d7f70b0bb3a2af5f0&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:11:05.640Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 338, "fields": {"password": "pbkdf2_sha256$390000$RJ2M0u6HfTBVwJffv9aWoT$dAUJdX3eF1C89EYY4BS2Fx+hkpnsQY8hxnHPTNQ9d7A=", "last_login": null, "is_superuser": false, "username": "Hello World! https://robr3g.com?hs=dd9e6a73c34741373bc7dffa0c7cda8a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:11:12.417Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 339, "fields": {"password": "pbkdf2_sha256$390000$iIoSHiHPdZh1YtErLU9Atc$Ot/rhHMvMGZ/SQf/jb1D9UzIaCtW8+2/ugdToM7ZPxc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://t6zybd.com?hs=f7f2a787abf041ce69300ce3780199bc&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:11:21.440Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 340, "fields": {"password": "pbkdf2_sha256$390000$uYZuhxFlU0RdU2Fx4fq6CD$nC+M890ZhgYvJFGJwGEHEBZZKaE4j/F89mb15AJU9Zc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://xqa8v1.com?hs=2b0cce152233411ecaa5cb19dad421fb&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:11:38.873Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 341, "fields": {"password": "pbkdf2_sha256$390000$fyTbUfHAUIbSAe42ZR4iSh$mP3ZoXfdDetAyQgno3rwi9dqO426hrK4E4L6fQgwZY8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://tzohki.com?hs=72c97d31340d946c8f862f1c1455467e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:11:53.690Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 342, "fields": {"password": "pbkdf2_sha256$390000$4ZMcoG7d0XT6gHzwiaVVGy$+i/i0ryvb57zJQLazE9PMgVmEm5I82neNyOKxyZ6LvI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://japp0g.com?hs=f8bd5646159faf47363d020f338f19e5&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:08.125Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 343, "fields": {"password": "pbkdf2_sha256$390000$moLAmceyYmdgINi9x5UN6N$NYZsB+wsggQF97v62nf0n1fkNEefGPDDjrYeIR7J2+4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://cw1h0d.com?hs=23559bdbc07ed945b98841fa0453dfab&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:11.724Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 344, "fields": {"password": "pbkdf2_sha256$390000$p4Wa4J0NBavjWjBiK69pyI$oAk/t6Xr9wFxpZGeBEWdt0PDAIn0CzHfmn5Js2yZy4c=", "last_login": null, "is_superuser": false, "username": "Hello World! https://3irevq.com?hs=e066afab1184395f14ab2a8cf1e5e9c3&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:14.901Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 345, "fields": {"password": "pbkdf2_sha256$390000$UEL2SSrvmyHPaua3kADaOa$c3F5fEnjhCHGL1Op8SrleSTYdfLKNoSRLRnGNS6nz8g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qp6yjd.com?hs=2bd3e86760f14b4674b8b93c9af5c686&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:18.414Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 346, "fields": {"password": "pbkdf2_sha256$390000$pobiWsWe1tfw5o4eOk8Pbv$PycmD9XGh9YlRmzOAWmunU4/dNeGpG2FzkOTikC0UEA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://hx3gth.com?hs=9eefd1efdebc3ed841c91782768638b3&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:23.499Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 347, "fields": {"password": "pbkdf2_sha256$390000$MHdoGrWSznc7V4SFLkuwph$kFe/RiKtYAnmmM7Q6c8pYAe2d5GMtHcrCgz9AFeCYQ8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://9y5ypv.com?hs=4856a3e83932fc926d7bbe92284c25b0&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:27.628Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 348, "fields": {"password": "pbkdf2_sha256$390000$VA99tScE13MsBwfRBUeGpS$e6K6UQ7LRRlGFOFg+vP3YxwBDdn0ezh881Kxpq6Jmis=", "last_login": null, "is_superuser": false, "username": "Hello World! https://cel3zx.com?hs=3c7184c424342098b87758fa226ad1ae&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:33.269Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 349, "fields": {"password": "pbkdf2_sha256$390000$0mh2Em3ubGjXNTHTMvCImA$LaLRnB4Hocsya9rju/PfV2UwkNVoK08QU4PzsDOv+78=", "last_login": null, "is_superuser": false, "username": "Hello World! https://3ilzwo.com?hs=da29874c0b443a2c9eede0cb3143700e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:38.726Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 350, "fields": {"password": "pbkdf2_sha256$390000$IPU5T79e4mLG4Gr1hFGIUx$xA2jt9vCwY2pISGxg+GOfLesAiCj5mkhjr+/PYZqQFU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://272fle.com?hs=818404087a6544a7aa72810aaf86e20b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:47.770Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 351, "fields": {"password": "pbkdf2_sha256$390000$SKZe1Ls6G47BNmuT52O120$IjeupNH40JRahnuEaUN4LuvuMdVhZnrR6BVumjdE00o=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qr5ybd.com?hs=ef4c4884ffe5a450149ff914d7fa8bab&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:53.489Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 352, "fields": {"password": "pbkdf2_sha256$390000$SibNl3TKaZohOLErWoj6li$PFQLxU4kAGp08TmMA4bEGEElRw0q3a7q/Hf+SFrMUAA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://7m9w30.com?hs=d263f373b1a3aad14382902137fcd7f9&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:12:57.490Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 353, "fields": {"password": "pbkdf2_sha256$390000$etA6X1rnr3Q8vdZWel09pE$G7uGlmBYju6HZEGoBabUiWUYDQQ8BwBJrN7GpVhP+1g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://zb4sxq.com?hs=a17757857407cfa3d4b285556463e12f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:20.996Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 354, "fields": {"password": "pbkdf2_sha256$390000$MvPTMQx1AyclKAT2pOd8mK$g1G2405eeL1CPhsHDyCuyAjC2yEi7L5gq8GNcVvAxi4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://rz2u7h.com?hs=2f3639c45aadc242bf35a8621bbea08a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:26.717Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 355, "fields": {"password": "pbkdf2_sha256$390000$Bu2FYJVpLcO94EZpfw6UlE$/PlquDyY/sFITRhSoLtTdxW4PQ3wRlWZvEmYnmsLX00=", "last_login": null, "is_superuser": false, "username": "Hello World! https://wqhhwi.com?hs=87f5b74a2c1ed6aad6069868c7011f19&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:30.289Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 356, "fields": {"password": "pbkdf2_sha256$390000$PpQqpYmtCYM1IvVVT53grJ$FFq7Y88vZtx2gQBE5cSqiitYBtpjYME46MadJ3R/hfU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://cvg5ix.com?hs=1a3a360c6bba12c6f55d411522aceb01&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:32.758Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 357, "fields": {"password": "pbkdf2_sha256$390000$QQDBNb1PIReb7YwYRIFyUE$noeMKDdUrbJSeP42r33W096mXexVmtImD8hS6I1MZYA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://h2x3i6.com?hs=790143abd79d59f028fa239f5daf8d38&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:36.017Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 358, "fields": {"password": "pbkdf2_sha256$390000$9ldjnkHrhfE7Y6NOOABEQK$fInT1MI6++tjsyrQlUM9O9bZYbNbjqlS7FRgi5SP8T8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://7znufv.com?hs=a08b6d61c42045eb17089ea47478c4db&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:38.621Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 359, "fields": {"password": "pbkdf2_sha256$390000$Eud47hPENBty5R6UjeIBhW$Y5M9WVRvWICKSwZagWibtpfc6mYKFks3miRumH20ohA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://w8c9xi.com?hs=7aee2f164641ca2e8dd36c078dc2bd0f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:41.440Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 360, "fields": {"password": "pbkdf2_sha256$390000$F9dxH0Qm7ajEPy3sE79Y9B$FTli/4/DRZ/2CkvO4HH43t29rZyBguZRg0oqK0KxtSE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ejgbdh.com?hs=b8fc570a3987f86e69dc5477b25085b5&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:44.063Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 361, "fields": {"password": "pbkdf2_sha256$390000$foJ52gS3BvZ0pHygwKLwbH$QfMzlHLZMjhbC2OWWOriRcSLbjIvma+GwrJqB5voOlI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://y754td.com?hs=f7a29faefe94b04f90701a1ce74c3850&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:46.957Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 362, "fields": {"password": "pbkdf2_sha256$390000$d7qhnhM2uEMbMXO04Amucg$To/FjTh97mlR79HLXhILdwpa6hbsIvjqqm7mthWw1wA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://q0c8v3.com?hs=82540ab31865ab0435b37387df6ef168&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:49.566Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 363, "fields": {"password": "pbkdf2_sha256$390000$4MeHr3uoDYL7YQmor3n3qO$QYk7Suh7INi5Zvs33kf/4J4e/RJDwrdk3qBp3+2YHt4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://cgs8gk.com?hs=95c1ac751d6116c85f18f9f8d724b6ad&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:52.573Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 364, "fields": {"password": "pbkdf2_sha256$390000$6hScSFaBp64pbwC46rtx9t$snKEY01sfV0g7wQEms/moqH7uLfG6CEEikPrNsFHfCs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://m8dcer.com?hs=f01b7accf038747e5deac0679c069236&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:56.470Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 365, "fields": {"password": "pbkdf2_sha256$390000$m1Rea1P2iGY66suscbjOBP$TS0pT69En3bxsyjUyx5l5qj6gmp5ExLE0hhy3n2xA20=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1qw1zg.com?hs=592456f2ebff4f1fa89cafb86edb9003&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:13:59.381Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 366, "fields": {"password": "pbkdf2_sha256$390000$3k5kSHpWzgec4VS6Pq3Vv4$MKVDxFSgSUIaza54LLF2YtN61bMmpF4L4EJ9FU95qZY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://w93wz5.com?hs=8cabd436c10927f5795baaa96a4e0c2e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:02.394Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 367, "fields": {"password": "pbkdf2_sha256$390000$wkhwV99jRFPWUlv1JU9wJN$vWOZCrOBGYfY1s4tq/bW3SYrbOtHwrq+vCi7pFuul6k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://7vy01t.com?hs=4f086318d773e128f8bf0ac4f0b547e8&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:05.774Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 368, "fields": {"password": "pbkdf2_sha256$390000$y065ci32nMn1PoYvrS3Mk2$RtXl56XWbUU6WiYn/X6IQG5pLrnvR0v6Ca61jc1E/go=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qs1vqd.com?hs=e9fc1eeda19946ec17a49ca14d65cb31&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:10.701Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 369, "fields": {"password": "pbkdf2_sha256$390000$YvEQlLdwLnkx1NKoxF5mUh$ZvmTivRue4Jkci+1f/GLWTal0AwahkVDd8dlOpGHv7Q=", "last_login": null, "is_superuser": false, "username": "Hello World! https://b2c4d4.com?hs=f289ae33c2ef70d6a6f7924bccc2d574&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:17.911Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 370, "fields": {"password": "pbkdf2_sha256$390000$L8VmqEHkPKASrZe1pooDd8$86xcR4U9mvNArWTrZjvnND/URMhtVg2jJ6B7RJ58bbw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://e2uk6n.com?hs=611fde93f7d2ee860fbdc01f93a0546e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:22.414Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 371, "fields": {"password": "pbkdf2_sha256$390000$m5u4tieHWrXZCu5nVj1E2L$o4shidhIIzFD0BuAuTfq6lVeJBgDDaeYdANbcu6kSew=", "last_login": null, "is_superuser": false, "username": "Hello World! https://yyplt0.com?hs=d69ffe9315516ed4591d8e90bc08f7bf&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:25.726Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 372, "fields": {"password": "pbkdf2_sha256$390000$Ut95SU0kIYiNvjuHVRjgkS$gCTccTDJAGDUPh6cN8MHimcBW/mZQIEKlc1BTpz7HvQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nfxcym.com?hs=e4a746d33b5fd7847c338a876cc0f51c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:28.561Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 373, "fields": {"password": "pbkdf2_sha256$390000$fNY8IFx2uTCueGtvUWVABi$YBl8YQEpu9AHd40PkiXy2AV2NlpAz95rdH0ogLDd/bk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://hrux1l.com?hs=f0bfb9a25383f1a194efdebc847a709c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:34.330Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 374, "fields": {"password": "pbkdf2_sha256$390000$6NCRtBMA6nLG6Xu8J30YmO$L6Vhz/7xZ5Esy+zsyPD6V2tlVgyUDEPc4m56fnF3mHs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://slnfei.com?hs=06f4b73213b0bee47ac6235a30c3007b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:14:51.818Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 375, "fields": {"password": "pbkdf2_sha256$390000$or98cprQwXnbnlo1VI5aQV$f3TWiXnpVKfzJ98/64t0ckXw5IAloRx4CC8Cm3R6meI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://b9p0ry.com?hs=6667eb7b152334f528c01b55d74fd826&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:15:09.899Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 376, "fields": {"password": "pbkdf2_sha256$390000$7UB5Pm2EW2awuaNpRKBhUD$VYGmlQXoZCTNWzV8V1WfUmWwxnkeq3S8L83noGFwIqE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ejhl99.com?hs=f450eb65b6e4661a77e2c7c74fa6db55&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:15:15.353Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 377, "fields": {"password": "pbkdf2_sha256$390000$bhppBZAnEDxCG21UhWfhSz$2h3iKcvD78JRe5roKXHJTdX36hB1sEZfOiCFCMSjOSo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://llsjw0.com?hs=6faf1325809c35e58e73b9ff3b5a3cb4&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:15:23.836Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 378, "fields": {"password": "pbkdf2_sha256$390000$pBzDtDEYyo0Ch1vdl7QZaB$xXkVopoD/qyucUhbtA3Qyqa0EF5IhKjBk8ysvv7z5gQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://wz8dnx.com?hs=9e30b4fd36567c558855df655871beed&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:15:29.341Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 379, "fields": {"password": "pbkdf2_sha256$390000$49htPjWfkTZHlLapc2GDE5$aUqSj67QEpAJ+V7TF3rZFe+DE5GUxFGOY4Zxa0Sb1Vw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ns2z1p.com?hs=14eb5c701eafd03c2569ee3944bcd649&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:15:34.907Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 380, "fields": {"password": "pbkdf2_sha256$390000$bCamJlTmIZVGbsX8X0FuPa$XmB1fg5JZsnnPioe6RMX1xUaNL8V6Tc/q6wu9KSOgAk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://d2vn7g.com?hs=605ce261408f6ec1af1cff49a1c0b59d&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:15:43.908Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 381, "fields": {"password": "pbkdf2_sha256$390000$EaVO64M1GUVuSLf0MPHfow$/3dYwb15LP8g4w/W8G499/dNEH+B5/EAfDJbQQRd3tw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://vgog91.com?hs=fb8496e1fe083e2a8b2f92be114ef7e9&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:15:59.652Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 382, "fields": {"password": "pbkdf2_sha256$390000$mdaKhZBrJDyusPm0Fhi1Ng$O3twWM8Uvx+mxerfOaaxREpoAEWupjBTpmCss4c2NQc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://lug70g.com?hs=027f07a18560198746baee6f35ab97ab&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:05.180Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 383, "fields": {"password": "pbkdf2_sha256$390000$SjLYigyAA7qnTfeeBvTZNo$nBY/94wLejt0IaGUerUbSrJOBdi6fVxxjMGlCQlYLFc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://mkiemc.com?hs=bc951c2c4b531955e1ea308a70e89828&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:09.272Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 384, "fields": {"password": "pbkdf2_sha256$390000$6aMB5aWAeEHgZgux1UQIUu$8fQzGDEI/eoBv2fDB37Tkkq+SWQJDkw00VFc1IwxG2I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://116ftd.com?hs=68d2576bb460795c65e8b2831c207491&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:12.182Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 385, "fields": {"password": "pbkdf2_sha256$390000$9cxkivSCIPLlG7R79I9GEb$bdN9kDIMnZpOWr1byDRcn8hocpVDqLGQ/QtXqgahe00=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bkflzb.com?hs=6c50efce701e3a2cfb8834450f5d600a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:15.831Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 386, "fields": {"password": "pbkdf2_sha256$390000$Cstcjjv57f5qTStiRDmR9v$t/HBgl3JlrCB+0JtBxe6extmJRg9yEZl84ixQpbpGK0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://x6zvlq.com?hs=9ce7bbc45419117bfa800d9a051154b7&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:21.007Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 387, "fields": {"password": "pbkdf2_sha256$390000$sJd9mBCwilhmyKt00nbtyL$Vq7Kzfsxt50Eu7GA6Fdtj0JQP4IyHtwZmdZ4xZqr2OU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://i490vy.com?hs=3fd59a381573f4be3d0fee5f2c28faf6&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:26.833Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 388, "fields": {"password": "pbkdf2_sha256$390000$w62IghiLbdhk7UJjc5rtDW$kJ42/DuUtwYb2eg0PLi8jQzjJYyyhWTYlx7/x0iamVo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://gmnde0.com?hs=595a6b68d47d4f789295da5c1c1118da&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:30.423Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 389, "fields": {"password": "pbkdf2_sha256$390000$gLcEXDIULv909LnbIA3TRV$yIZmNXQe8oQPav5ZzVeLGHrezuu6JK5fKbmAaPp0ons=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bt3uw4.com?hs=d37914895b4d9137e8ad47cf376bd734&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:33.875Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 390, "fields": {"password": "pbkdf2_sha256$390000$6p6K27cXM1f4nf805IuMk2$suf1rWrVW9C8+3sQnWywJoW/HFWWkO1QXctNCjKMXy0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ghf2m2.com?hs=26d3d27a1698acff6c2840b720c83952&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:37.630Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 391, "fields": {"password": "pbkdf2_sha256$390000$rqRtU9WmW6FATSMophVXoU$haqeKmMi5U7qv8VvCWVBTbvU+QLLnSAdpP0q8hAc75E=", "last_login": null, "is_superuser": false, "username": "Hello World! https://yd6wuu.com?hs=98473446a2b8ecca7ae2f043ca8f52c6&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:45.434Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 392, "fields": {"password": "pbkdf2_sha256$390000$KsD8DVrV5VyKiBJ9qZmahZ$XpQAWXBq6A8XhLQtpwtuh4cR1pGDJfKgm/kGGSTusmM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://i90b2d.com?hs=2af0a50c63b7a0f0d3fb98a72b85d573&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:48.838Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 393, "fields": {"password": "pbkdf2_sha256$390000$Z0c7ZuMi6oH9pxX3RGcoVi$wsUfk5PJ2YPJBNumC0xQNkqu+1YIXWxx50dW4wX97zM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0pv5cw.com?hs=9ea8be4c47ade92babe171eea48a2cca&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:52.097Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 394, "fields": {"password": "pbkdf2_sha256$390000$tHatI8YEyiVzuhGuhG7qrS$HE9iazEKpW0eg5TDBVkr6KwIp3Rhu+HwCWOh5ipCqLk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://p604hu.com?hs=68eeb04f15d0ce7c5eeb60cfeb9e84dd&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:16:58.376Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 395, "fields": {"password": "pbkdf2_sha256$390000$zoua5gZpTYg3lLVYmJXe4F$P+nT69wzuXK0PaFzQ57RZvsG/BzU09WkfSgh/W7mBy0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://xnda3s.com?hs=24161f7eb79581703422783fece7c54a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:17:03.311Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 396, "fields": {"password": "pbkdf2_sha256$390000$yZk1xoanBR1zY83IRrgo0N$E87ubXR8wWJJJXGEMONQLU2+RbMBV1noS4UAlRyUTTU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://s1ydls.com?hs=9839ef532ecae517551479b7201308b3&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:17:13.662Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 397, "fields": {"password": "pbkdf2_sha256$390000$itT7cl6LAjGYgMXjNCgtYz$/vvPwUDoRT241t5zDJmGDD3cjzPZSbttHYu8K9OCdf8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://50krm9.com?hs=5608158b956504e02ac9d2ffd7e32c97&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:17:39.299Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 398, "fields": {"password": "pbkdf2_sha256$390000$ZOA6LiCfZn1xXcM4V1HqFe$rVLYSzJmU5SN6xYONF+teA90LiPIlhKVWFNS86UpDQk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6nj4es.com?hs=3ab195e9416fb8a85166c3f48ba6a969&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:17:48.075Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 399, "fields": {"password": "pbkdf2_sha256$390000$L9J18fXSZXsU4uT4R7z6OQ$ELWoyR4CeMyBy9Ezx7M0CfDo9tgDZ/suFUlPxN/O/rY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://mrlpfd.com?hs=00fb2dce61d35122754af58a60a1d7a9&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:02.114Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 400, "fields": {"password": "pbkdf2_sha256$390000$WXwx8yabwhBpL8ewqkt78R$vxtmqXLD05bd2ia+RhRriV+kdj2oewxUgOS0KbRrnfM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://gwm7u9.com?hs=89b7ca412eb88266c6cc183c31dd361e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:10.247Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 401, "fields": {"password": "pbkdf2_sha256$390000$65NIvWZvSV6IN6I5Rk2LNu$vDY6bQ3Ra4sow6h1MCGaM5cAI7aESaw//JVmHjRQZEw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://fcx5rr.com?hs=b97bb642072aa96996e98985b4a91672&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:14.989Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 402, "fields": {"password": "pbkdf2_sha256$390000$DArHq04JRbz81JRuWpEN3G$LleD3rLytbYf7aav+1ITfhQJIGAZJhlvug8ncqQzb9c=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1z4txj.com?hs=4a9de0d8b09c41e2cba53a2f7d066c5b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:20.296Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 403, "fields": {"password": "pbkdf2_sha256$390000$XOGJ0t90bYKVHHtHrlG9SA$RenQMUI05lgWPoY+3V399Rk5WVoRYevZtDrKcuKomiQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0g2bi9.com?hs=975ce3d9d0ce9a846110ee0a52c7d5e1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:29.541Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 404, "fields": {"password": "pbkdf2_sha256$390000$cGirpDnb28hyF5keSpWp5N$6kTmmiDCyEol4ff38Wttkj4zXGNycoxjGOAPn4i3CYo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://mehdq0.com?hs=e11c976491cae534c7c22cf8c23d7180&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:33.993Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 405, "fields": {"password": "pbkdf2_sha256$390000$tj6LBE3pIthrQcp67xSayv$xc0Q3qPcFere7OecjODSF48njLe5CAVzoJZoZAbscYM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ii6385.com?hs=3e0c6de47f1c33d2a0726f878b1fe982&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:38.246Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 406, "fields": {"password": "pbkdf2_sha256$390000$EisDvho9srqN8bijvIJb1p$3yHDCs9y1vPtGD+4/8QzOBvCqV5dXGj5muQtRrY9xE0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://b4qc0d.com?hs=454b56439fe263c9147ee1fefdf54707&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:42.905Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 407, "fields": {"password": "pbkdf2_sha256$390000$WMuDm1StKJp9thSrQf4Fpm$EISUcagzauS/QiWFIc0Shw+YFxBoKBFM8CUb7ch01EQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://kpeql7.com?hs=8a24482e1ae3e027d3beca00c16065a1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:51.046Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 408, "fields": {"password": "pbkdf2_sha256$390000$JCGmb3avAdoByoGSHhVL2c$VULPSLSCC4+gZ58akdHFBbaK53oaRHPp3O0f05PTL6E=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6ke2o5.com?hs=ca416e8ae02c2ee31e0f12b75c61d407&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:18:56.346Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 409, "fields": {"password": "pbkdf2_sha256$390000$OszKrDckIw3HZkVlh10MoB$A34XikEJYcrEoY90t+RQ4V3W1E/tMZjDeQTAnsqoyL4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nsdhw1.com?hs=ce0c322d4b6bbdd2b372530fe9c8e3cf&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:01.782Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 410, "fields": {"password": "pbkdf2_sha256$390000$O9PvUV4b1Qbgo31T049Jkf$lKLIqJpanLM/FU7gt4W0YaUgyxkWltxHNxmCv1nB3RY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://rdt2rc.com?hs=19f44ac89c570d460d54e2bd7f8094a4&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:04.533Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 411, "fields": {"password": "pbkdf2_sha256$390000$cQObgIK5sFWrS40fFppCEz$emO5yZUBDB0A08Zq7EyDa8H8kv8BQN7ycedoNp1CydM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://i78qox.com?hs=58f94bbaf0347dc85c69c1f251bd4393&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:06.948Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 412, "fields": {"password": "pbkdf2_sha256$390000$ngTm9OHnCMkTi4rFNkdOcm$tA5QN+Zd4VYKk9ZzijrBrDUfM55MGPNdBAsnxegc+rw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://9hr08o.com?hs=a80e47d37e9f52bdc2f8ae2fdb1c0830&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:09.418Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 413, "fields": {"password": "pbkdf2_sha256$390000$hHHS4fiMzrv2V9zsBazQr7$wz02bAuSb4FKw3MUIBoWBh9c6H8GDXlpJZidioClm74=", "last_login": null, "is_superuser": false, "username": "Hello World! https://vuxhdi.com?hs=658974460fe2c782320ce4940e395a3e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:12.117Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 414, "fields": {"password": "pbkdf2_sha256$390000$gXegH4FampExB93Gve1SUD$yAIInz0GF+jBG42K7BykxemdLJzHbwOtA39ze1bNZy4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://62dy32.com?hs=2fc61b89187a4c61510a2b55c3c46c8c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:23.703Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 415, "fields": {"password": "pbkdf2_sha256$390000$Ihwv98DkqJy7n8B9CvDc1l$BESug717n0TojrF1FuY+wytojC3TnyXs8nzKa5kJ3k8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://rc9b4y.com?hs=b2b1b9805e4fce98e9283f65726c0d1a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:39.185Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 416, "fields": {"password": "pbkdf2_sha256$390000$tTGani6pJJPHM0Cv5QtrhO$5+w3qx5uCfTyEzASfSbi7YfocXVDtXzSkszF+9NgGog=", "last_login": null, "is_superuser": false, "username": "Hello World! https://r749w2.com?hs=bb63755062a93d11b579922a5d4557f6&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:42.676Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 417, "fields": {"password": "pbkdf2_sha256$390000$9IgEnD6t4cN5ZEowge0LRq$Vg6/DIkeito1OKqIvJozvlnE/h9b3Kk4wC9rpJGasVw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://esv266.com?hs=e11a6851c5d65ce0cdc034161dec84bb&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:46.134Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 418, "fields": {"password": "pbkdf2_sha256$390000$f7SypmbPoJy1iELF5ryWRb$uKdm7wmWkgwUAce6mE+bXrgiqGfKtJM/4P1yKQAjHkI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://4rrsuw.com?hs=be715aef3cf17f08cb401a1100d6fa07&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:49.466Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 419, "fields": {"password": "pbkdf2_sha256$390000$uKVTkY0KbNEPXcrN6XASVU$O2m7RZcWAKp51JgnminQ85eudrYk5BzYFp28Qmf1X80=", "last_login": null, "is_superuser": false, "username": "Hello World! https://b02guo.com?hs=dfc8aa5189db8d46f18f0b9be162c243&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:19:56.558Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 420, "fields": {"password": "pbkdf2_sha256$390000$6QdavcceCplUYFRIcl4ubV$dtedEuzdKnu4RPhSWbNGPm3P9iYQ2hiWIeVMOTRkqzc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0er7ss.com?hs=7ae3ebce7bd046bcf9c75cced168a443&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:01.595Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 421, "fields": {"password": "pbkdf2_sha256$390000$iUw1YWIkQhYMj5V3wHOwXj$W36iF20yWviylaI8Dyq497OsM3F4RU7aF5D//RVmZUA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://7hmlpb.com?hs=61879749583a4529e95679e7452a86d2&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:04.779Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 422, "fields": {"password": "pbkdf2_sha256$390000$wOP8H51i5OLCfO19BXeoej$np0b+hcPkp2SpTzzR4nCWyWepezl2C5ffJJvTZLY9b8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://w87l5o.com?hs=d459c50f4443a347bccf6450647029dd&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:07.485Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 423, "fields": {"password": "pbkdf2_sha256$390000$7mdGu5xE21JU4zuBT0LFpm$3okpDS1/9oQZ1CuavgJQCOhw+42y4CrCw1otA6eYiKU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://tsmr3x.com?hs=0d79b94724af9cd75689262ee92da184&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:10.411Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 424, "fields": {"password": "pbkdf2_sha256$390000$6E6uulWtESDMCaQ9M9FZJR$0eU5ViOV7x6w/b0hPWu+H4nkedfw5iKnFj5TV4F0ZhM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://mhw9vl.com?hs=b396d31f9cbc1cfed6da9c8a22950fd9&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:13.212Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 425, "fields": {"password": "pbkdf2_sha256$390000$rBKsn0AjThHbbSfQtCbzVK$MroZ1uIej5Pr7pMliIXqIm7vw+QzUaxaKh0njmPl92Y=", "last_login": null, "is_superuser": false, "username": "Hello World! https://4wbvzr.com?hs=96464e2ebbaef795712dfd01252fcbb0&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:19.595Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 426, "fields": {"password": "pbkdf2_sha256$390000$IuUTZ5htIWOQ6n1EXIh47b$0XQDrZWoVqAFN4VtymB1eR8H3VBaH369Uk1Afp7Dea4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://d8bcbk.com?hs=9c35867fe4b7c771540233491507e9bf&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:26.331Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 427, "fields": {"password": "pbkdf2_sha256$390000$Werd6tbrcbz2uTxz0gO7LM$ojZ9KJL5SN3J5/OizxJxc6cPr41kcbiY4LncVQ1G9KY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://vdu1ln.com?hs=0029e9b4f9a39b49c06ef12e63d9e90b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:31.499Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 428, "fields": {"password": "pbkdf2_sha256$390000$MD4yGpjja1rjNnHUhBaP99$TM9+QVHMdkDe/39giCKGaNXSyJhISrnOMaipo+Tzy2A=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qnp2eq.com?hs=42eaa9e5b19520c051b7ef45d0385596&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:38.594Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 429, "fields": {"password": "pbkdf2_sha256$390000$pB2fIgnpKtE1NMByvZWY70$3CPeSGWQfBipUl4l7z1FP4KBkjrEMIPkKTSU2ynJA6M=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6xrhyf.com?hs=6f703e5e1e6bcd5c9c28b063daa66e8e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:50.185Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 430, "fields": {"password": "pbkdf2_sha256$390000$okhsiHkTuYwEQHkSSjcRbD$pwi6R45Ux8bx7M7y7wmSY1RMov9G+uYyk37g3fKgieA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://j4n6da.com?hs=e580c837dcda63e3279636bdfbf7bf2c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:52.920Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 431, "fields": {"password": "pbkdf2_sha256$390000$n2Dg3qOAQ1VQXICfOd1CUN$2fuSJU16OSgnp+UCdEdnGPiaGodHTscypqjDMaR5j08=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6bbbtd.com?hs=5da071cc0da941066bb2b0f40f6cba15&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:20:57.301Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 432, "fields": {"password": "pbkdf2_sha256$390000$KBF97pznLNN3mO94mRh4O7$x6URw1awtkmBAA8fOj8G0LbofgYdvPAA49+oFo61Ht8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://08wugu.com?hs=7f61eae7b90494a4861b7b1c26897aaa&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:05.293Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 433, "fields": {"password": "pbkdf2_sha256$390000$zU22xVBzBpOlrPA1k9sQ93$zHfh+el1d8mv5JmqnuizKX3T4aqQr3tBH3UUK0W5V2g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6w14df.com?hs=0a549d3e9a3f6abc2a8d27d9c018978c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:14.051Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 434, "fields": {"password": "pbkdf2_sha256$390000$E3fysihicbQ4iqJCPz9Yzl$/Vg3q/NEVRKJ6mE29MMc1EZ6LHFtl/wtcVNbI53wtVA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://rk6ifm.com?hs=6627caf7cd9074c0adffad44a1269077&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:28.982Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 435, "fields": {"password": "pbkdf2_sha256$390000$3iOR8ZH1RvZ4dfkTv1Nh8F$V73tWHPwdZ0WqvzZXJnX1r63UwsPKh3x/rITEEwRyuc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://256rec.com?hs=e1c9602e6df9ecd4cc91288f84793ad2&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:42.379Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 436, "fields": {"password": "pbkdf2_sha256$390000$5ySZPXIXbm7AutmrUhChW6$uSw+Aj8WcawXcd6w1D9lZgtEm+hoZOHYiG59VWv0/Ck=", "last_login": null, "is_superuser": false, "username": "Hello World! https://dhj7dv.com?hs=503b2b0f8ab75f2731d8d82965918c6b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:45.845Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 437, "fields": {"password": "pbkdf2_sha256$390000$n4mIKCCo8kPCAk3rr22deH$ESnpR4Lt85AVEMRuzHPlBSsBNSTUc+1a6UanZ8lFVFA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://eg1j16.com?hs=71865a26532ee9994af18df5e16a744c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:48.767Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 438, "fields": {"password": "pbkdf2_sha256$390000$OucSyJ4hercpqTagSUi0Mb$edREJ1WHvUtsHM0oiFunRhQM8cBgTaJCqdUUqHriojw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://k7wzl3.com?hs=d4f5adce54c2bea293c5723c025a3f1f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:53.319Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 439, "fields": {"password": "pbkdf2_sha256$390000$RxBlfgvpb4DnFpllJvl3IH$Z5VKFhB/9txIyfcK65wiHpqCIcciPZ3wQCiwuQzgFa4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://rp5969.com?hs=0053e856dc4d947be1bd84bd43f72b63&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:21:58.533Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 440, "fields": {"password": "pbkdf2_sha256$390000$m4FJBoggmcmtZY4hYcgDK9$L0If4l3vzwzcp4PmhgCGn+9M03vq4pWZmd55p9S7LU0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nxkepo.com?hs=a798b8efd7a7d1e7ceaca067a9290c31&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:05.636Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 441, "fields": {"password": "pbkdf2_sha256$390000$qtDk4uHQ98JXKqHbBVI59W$mOzpn+YYt/ZfbfG68foCsmP8H7m8k6Vrbt+lkVRcjmg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://tg2lf4.com?hs=239343b3181176f79ec1d7d0814f2e8d&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:13.976Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 442, "fields": {"password": "pbkdf2_sha256$390000$asUsJLxkT3WhjGcXorvTrM$c+0l/O57/2cjyUInfhQ/A1fM+MkkSEna9fK58Erjni0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://8aduxu.com?hs=4a31d542c0f7ec5fe575daf4050c0ed4&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:37.789Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 443, "fields": {"password": "pbkdf2_sha256$390000$2GaPffd4P6MRzPcrMrJPMB$YcQehlyYj5AcFgN4zFbLTVzY+A3HV0iuJ4dbqfC3WX4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://y7pj5i.com?hs=95719128ce5a42c55fa3b41660a614cd&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:42.459Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 444, "fields": {"password": "pbkdf2_sha256$390000$UIr1vVkrOyb1P45MIZF7WH$ZwtVnigMjRRoL/ym+AlSxsZdbsYKzICOyKBgWZovKN0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://zf6cfl.com?hs=2635ed5772cbfb3ba25e4752ecbfafb3&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:46.785Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 445, "fields": {"password": "pbkdf2_sha256$390000$xDkCumhguhABw6nB4QOQ3z$Fky1DNfmj3WcY6+izVFWY3c+TrKj/fB+GRRlefNSVg0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6j7z7j.com?hs=bc967b38c3f28b90d9d2b3a467e204e4&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:50.014Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 446, "fields": {"password": "pbkdf2_sha256$390000$9fCUnMb77B6oSnxWGYBYVU$sKcGSr87OudU3bUbwGbnNS0E5gCDv0DQ+SDdp721f5o=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0rfez3.com?hs=103bebec8000ca5cee7e0de3cadf3c6f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:52.476Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 447, "fields": {"password": "pbkdf2_sha256$390000$7jc24Rjw1DGV4z21zFXBzE$4aj2baYlwtHnpiDc5nrCuS2WTeDGhDRtXQKgQwuuyxQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nslmd2.com?hs=6fedddf957cc5c12dd2cd23cc413488e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:54.933Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 448, "fields": {"password": "pbkdf2_sha256$390000$S2aOABi5wklYrehpkWB3aT$UyHsjVJlfCBmFQznh3ofjq/T9o5OuQFaFXbcIoO/zsE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://dczph1.com?hs=81858e862dde6832a03b5fec97edcb86&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:22:57.617Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 449, "fields": {"password": "pbkdf2_sha256$390000$3F0wLvkjHVy6UPY2XJvC5N$cqDjybsYIcdQXnsg9BhZqqQu9kidcI6I3S0azJPdo7g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://iqr6y1.com?hs=79ce87a0e409cfc8590c28672bc55f48&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:01.385Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 450, "fields": {"password": "pbkdf2_sha256$390000$5JQDM3KOkyGh7tWTFg7ZCW$YcECJvmvYIFWewKts1R3Va4nlANl1u3cm+6YOXk1JYU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://s9ll4f.com?hs=f43a753b878fdfef16a956ce7a07e3af&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:05.680Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 451, "fields": {"password": "pbkdf2_sha256$390000$TlB8UPtSOmWoCZfsvSIgmX$xEYD2Wd3kvAco0nsiiy4HdqVqxTz63FwmhJXQh8iLvY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://s0xyqc.com?hs=5c44d464f772724260b74774e1d30446&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:10.165Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 452, "fields": {"password": "pbkdf2_sha256$390000$iPurzc9Itjjq8c19IORXKa$tSDuPJxjevdxTnomSXE9fBXtXeZ9Im3YV1V9FrJZhc8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ko3f3x.com?hs=9d5a4187a4d049b651f28d54454527ad&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:12.574Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 453, "fields": {"password": "pbkdf2_sha256$390000$dnybA6J9BWZvsaffrfBwXa$7yFOOcXKv+QpFybeV19PUiyULJa+X2g66JpXynMnnsM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://mounku.com?hs=a3b6d5ec8547f1e48519678f8572304b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:14.775Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 454, "fields": {"password": "pbkdf2_sha256$390000$73zX3ItM1whJ5FhGgLipAu$OuY57RNVbRuFRqhuf4j+NPJqKAg8MzMgy+I/RBX55Dc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://okn372.com?hs=88f19d3c878a74bd5753fda8b62aff83&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:18.382Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 455, "fields": {"password": "pbkdf2_sha256$390000$WigYP2X0kb0fMN2Mqx8eUs$flbMog9ioTg+utO/O7qqdqZ53KR5xEGUBPcQ39aAGh0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://suyv7k.com?hs=60ccee72223dbeaa6f9a18be8322dbac&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:22.744Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 456, "fields": {"password": "pbkdf2_sha256$390000$rrfyqnF3DZDIk4Q2nHUa0l$EYFFMPOGkn+4tbbtSUz1eawp/x4ZSxh3xnLpdKwJ6ps=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qtyfqd.com?hs=fe367b6e11f597ffb8ef2fcbe87651b4&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:27.052Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 457, "fields": {"password": "pbkdf2_sha256$390000$MVhCK2KEYwfzafjFuoGtW1$I9jCnpCVEKUmYCxgvvZDYT1tkZSqbkno8laWDWYyX+Q=", "last_login": null, "is_superuser": false, "username": "Hello World! https://7dc8qx.com?hs=58e1c0c5581800ad11a1822e182b297c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:30.852Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 458, "fields": {"password": "pbkdf2_sha256$390000$I9wJFcXeYinCdJdDyfpPEo$IYa7I5K8KF6lcKjdLWV2B8n8VtqoDvPm5iU1T3qVcsg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://579fxp.com?hs=c92dbba9a0414d3f86540c35d329ac29&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:34.118Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 459, "fields": {"password": "pbkdf2_sha256$390000$lbq4nD3NUeIeR2iChKVF33$TAC4Bn4ArN9Vpr95daZNeBfZCdjQ5LlulI/B25dEfGw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://lvzano.com?hs=558a5acebd4d6503e21b7e38dccf21a8&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:36.955Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 460, "fields": {"password": "pbkdf2_sha256$390000$ZrT4tvDh8C1HL24Y7IcOq3$ezqN1J7YQ2C3oxoS9U9P1yjp6mG3r5AN5HieejodQSY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ob3nuy.com?hs=b8748cbcf0a06f8ec35f20e93f53eca2&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:40.048Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 461, "fields": {"password": "pbkdf2_sha256$390000$hZtwKjdM6pp8LiD0aPJVgA$ws3ioku5uTdJfCcnvbVC9UOmUthTGcd0k/JnIRD5x30=", "last_login": null, "is_superuser": false, "username": "Hello World! https://oe5dbd.com?hs=d6806093b2aed794b92722aa335cfc39&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:43.455Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 462, "fields": {"password": "pbkdf2_sha256$390000$oJUSn4d0vU8GlvL5kH6KbW$o1UCu6kuIJppkw5l+xBedLwi5mckUjtJKuipdCGYX1o=", "last_login": null, "is_superuser": false, "username": "Hello World! https://s9ese3.com?hs=3339a414db8868f6feeb20d44bdd3362&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:46.500Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 463, "fields": {"password": "pbkdf2_sha256$390000$2ZaZyIR87eX0beqDMAMz72$15TOduqSUx3cayK4Nv3yXULsE0EFY50OIUorvYEgJEs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://i9zclb.com?hs=bd21603625508c6bb379e52f81aefabc&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:49.658Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 464, "fields": {"password": "pbkdf2_sha256$390000$dJkPVNg7OK4wvv6cVzuLte$XxCscMjldJKz6M5BXOEoQ/+obnvtM9HAzwP/vnFIFoA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0f595w.com?hs=4aacca900ec34acd9c13d6d8e0d1f7d7&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:23:54.767Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 465, "fields": {"password": "pbkdf2_sha256$390000$rRNGnKu6fFui8642nmdt6q$EOqG4J1coxfqe/h/IG23X6S5+rbrQhrLU1NMWZzw+14=", "last_login": null, "is_superuser": false, "username": "Hello World! https://8vjs3o.com?hs=634f00b25d2c64852f3d5f93a76beb14&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:04.577Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 466, "fields": {"password": "pbkdf2_sha256$390000$Okq3EAgWyPq4oHylQco1m0$mq7TZKdMqOLGqg9S/cjmKwWNHEqMf399Z7ulDXflyr4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6ot5u0.com?hs=f370685ddd5c212c6aa1ec19212113ba&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:09.430Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 467, "fields": {"password": "pbkdf2_sha256$390000$YUBuFLnmq69cJKFSRgN9ji$t5dUkMLJHvgUx4KaqY3QxQeOEBalhcHy4jGBwr+JBQE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://zhui8l.com?hs=3af21cf16c7022d3c8d2fc3ff23a4160&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:14.536Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 468, "fields": {"password": "pbkdf2_sha256$390000$r0VgRqUttpkKmAZLBi8pRC$Rl3Lhafol6kUR5ELcagwAsoYlPbTPOLFzzC65tq97xc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://zqmwjf.com?hs=7c43b8017a70d745db45b15fde9fc124&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:21.205Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 469, "fields": {"password": "pbkdf2_sha256$390000$tdbbyhr1lkVbFMZcAkr8Bi$hs2SsGS+M2Yz6BR8qYnuaisERUlwHwsbei+5CNug1kI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://txkdst.com?hs=7fa6c70adfec284091ad153328577693&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:29.303Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 470, "fields": {"password": "pbkdf2_sha256$390000$IDWnxY8PKsdkJsN9LlX9hc$UX31F39sJmvk97h9FjUMCQbZ56K9e6HZKC09nS97Gck=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nbop1s.com?hs=4e53ebf80e95e0716127ee6d8d50dc5b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:36.281Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 471, "fields": {"password": "pbkdf2_sha256$390000$x1OkrhpSA6pw4qFkl6C1ez$wD7YtBtoyEW8SZAtIOyNKPGt/wrurr8q9F5vGGMsjyM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://n5a2jj.com?hs=f20fd3e4a8497ac278946e0abe18504e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:41.630Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 472, "fields": {"password": "pbkdf2_sha256$390000$F8IPhxHps8cmu0Juczilxx$igzAINpfAxnMHVPUKyodMe+ZvuzH3ebpSI9ed5arZKo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://yjvt7x.com?hs=d5a000e1032d317c13e63a3ffc947a5d&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:44.484Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 473, "fields": {"password": "pbkdf2_sha256$390000$AGSYXISakQ4as2Hes2Qu1a$ZKU/cu4fgYcS5pUME/2T9zlJAZuuZoirpRmqS6EHwJ4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://k5y64k.com?hs=994843069fab348c518d1e1ace7f55c0&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:47.540Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 474, "fields": {"password": "pbkdf2_sha256$390000$yvZy2lIB0CMFWgGOqsnZBG$5lp7RaY9UXXKbfjMISvcGolLp5gesYNMAWr4+gin4Iw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://pxssis.com?hs=4e38521ac2c15912f1566a7c9c942011&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:50.365Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 475, "fields": {"password": "pbkdf2_sha256$390000$Qvg0zd6u2iFrGEEl0nGMYA$yNnLv6ahQ/Qglp9PrpgAppvfx7w5ffshX998fa/RrwY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://q66h1f.com?hs=20f85c77286606dc5f38636a5564dd3b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:54.442Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 476, "fields": {"password": "pbkdf2_sha256$390000$uohY5gyHT8NaCqDdQn55HT$64M6VNaalvnGQWHp/EVkbz/lrjgeaKXoeHpYQEXM0/A=", "last_login": null, "is_superuser": false, "username": "Hello World! https://30awo0.com?hs=2b0b0f9fab46c29c34954fc6470d78df&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:24:58.654Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 477, "fields": {"password": "pbkdf2_sha256$390000$QtEzyHK3wYMNK28b2CUGt1$KglmxUZPAusEIXztPe+nTo9FaXZR08qHIJ01peYgd3I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://dg0aif.com?hs=60d1d2cbbe5ab516cf29c52b8c68a59a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:25:02.908Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 478, "fields": {"password": "pbkdf2_sha256$390000$9V7fZJANa7BV8gmroiJbyf$ikztquc435MIyY0KpmvICd2tTRuK+UzUm0E8yD+looM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://3v3nif.com?hs=f44fe46e83fa0dd78b008eddf667555e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:25:08.607Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 479, "fields": {"password": "pbkdf2_sha256$390000$wXhkP6oZ9mbotzYiMipE9j$ljzSyZn76S0wfIErhdOIL69T219VX27L91zK00gi8o8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1ce3vn.com?hs=90ccd827d47f3279d6a82a02d977199c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:25:26.950Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 480, "fields": {"password": "pbkdf2_sha256$390000$fADqWGSXmFMK9re1RrBVmS$42C0S3hsh/7zv0WXi0uduP+k463qjgp7Dv1yEkoUuVI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://o3nm2g.com?hs=a2314368709d65bcc9ecbb0cec30f98c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:25:30.049Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 481, "fields": {"password": "pbkdf2_sha256$390000$2CoJi5dVwc90x4ufrvR7bI$nQzsxcMK9qHcHK1DkV9hFpixK+cuWzd09N4ZzfVzCa0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://dhxyxl.com?hs=5566e6239a4cc22d6e6d5f8f0bd238f6&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:25:32.985Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 482, "fields": {"password": "pbkdf2_sha256$390000$vWK1YsVa81VlddUq4rWHls$5BDASh8Nb3jc6n5naYJrr7MMtPSwITYAa9pvG9dc11s=", "last_login": null, "is_superuser": false, "username": "Hello World! https://w5v4nu.com?hs=5cbb9c1800737c3efb28c7b7fefe7d7a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:25:37.726Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 483, "fields": {"password": "pbkdf2_sha256$390000$xnkQ6TXM4jSwDScRNDkOTj$piKSC/cvdQWUGeo0UD6iUKvZGW9cCOFAmXCl+wvB5OE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bewaxn.com?hs=8d51f1e82fe127dcc442307c037f11e4&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:25:53.436Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 484, "fields": {"password": "pbkdf2_sha256$390000$cbck7OLeSmrWrZV0j3WC2F$EkA2B/NWD/3J+puq8JI9vt0ir/mImYRn8vsBnih6ZeU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ef0zmi.com?hs=3691ff20c5366377dd39865faf25b0a1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:26:02.055Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 485, "fields": {"password": "pbkdf2_sha256$390000$FSL4sSYIM6uAjlS2EnatAX$WHkOWA91beHybbAp15fZicCr7zQBgUPvwoTBXKUje9s=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nvv63e.com?hs=f002619f627b8825666e1157fcc68584&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:26:20.747Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 486, "fields": {"password": "pbkdf2_sha256$390000$92VLa71VQ0jsfjwpxLKJrQ$l/ryOGmUA/8z/HoTrVQNyo72jCtmwyn7Vnhb8jOyVcI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://wd0vjj.com?hs=9b201c89c53dea84e4ea307656bbfbba&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:26:28.624Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 487, "fields": {"password": "pbkdf2_sha256$390000$YMRvvgKieSOQoS1XEDyRnH$+QDMPwFVE5sBQWFAXbWoGavS+jrfiAfFDGpQChOG0do=", "last_login": null, "is_superuser": false, "username": "Hello World! https://enoucq.com?hs=b4c7e9d6dbb15788e04cfc720862446a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:26:32.951Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 488, "fields": {"password": "pbkdf2_sha256$390000$MNRMGiLqmrX3TAOJvNY2Qy$Y8KeLmdVUkqIvl1D5hjbTRvjDN6KcaNj6MqeHZlLFSQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://n4ri6s.com?hs=20889f908f07db5dd860bfb7dfebe832&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:26:36.745Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 489, "fields": {"password": "pbkdf2_sha256$390000$o5JRXj2FHFEiWXYuSHyGjy$7STW6HSl40U2VCXdbq0ir6YIz9ANVBBMxcgGher2LdY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ok57n9.com?hs=5204779044e518795de1dbb569533452&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:27:11.989Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 490, "fields": {"password": "pbkdf2_sha256$390000$E2s9pshp2eEADMHXVp1nPT$AJBcfG3P/02mO0FYT4YuRunDHGcD4K74zq3coMNgtDs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://x1uppb.com?hs=bb4aa6149ab208c02de9116e99371d9c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:27:14.984Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 491, "fields": {"password": "pbkdf2_sha256$390000$ddRTGdN2dE2oOoFTmjXuyZ$Mj4c6pztlLExEZ/gshpjgPe+BRok0oyf+pe+HjSjS1M=", "last_login": null, "is_superuser": false, "username": "Hello World! https://muvmo2.com?hs=84a14f642b3ca3011ceed7026c413618&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:27:18.460Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 492, "fields": {"password": "pbkdf2_sha256$390000$1jcor7HPqDcOoC7armogch$e8K+V/r2yrD6REC25jBZu78mhwiEBg3878qIAjlffGo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://9cdjrn.com?hs=3a758dc3e7c203c2a4a53060854e4eae&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:27:22.072Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 493, "fields": {"password": "pbkdf2_sha256$390000$7orROhtpHOJO3GzAM0y8Ej$ZiKwIa6wgSdqvzDfikPF6sLTgKc3HHXNJTmYkF0VZfo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://938isc.com?hs=e95339c95291f1aab067ae4faac65420&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:27:28.149Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 494, "fields": {"password": "pbkdf2_sha256$390000$uLoNoXBCb4jH2lD0Oj3Wz7$x3w+TNee1FV38fcPJqoZwoW4HpvXPKY6C6bl0Ihz1OI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://8j5c87.com?hs=8dbaf2d7879e87017acd2b33631e295b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:27:28.527Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 495, "fields": {"password": "pbkdf2_sha256$390000$BKxIRe3vtuwsYgVOgEr2fS$RNXakvUy5M4Q1HWsyhWoBg5yA5MmR8rf9i2wHrf/rgA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://v96zew.com?hs=ac9e5736f20bb2a2a04db7b10beb4a13&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:28:00.037Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 496, "fields": {"password": "pbkdf2_sha256$390000$y4PiyD02LDKuQqKGYQZRZa$oF8mnbtTV1WYAVAm+Pe/YiAqFbw2KTW0ZU2mDBIe8tA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://q4g3ot.com?hs=de0cc9d00f8292e9741078a6c8ce0d80&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:28:26.825Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 497, "fields": {"password": "pbkdf2_sha256$390000$jEarxy9wRgaksrXAtpgb80$PQG1sy/07UUBkIN2IRE33/7LtDZ4R0o99bYXv/MF/vs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://786svv.com?hs=d857acedf13d06534dbcf2be76c7083e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:28:54.499Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 498, "fields": {"password": "pbkdf2_sha256$390000$Hiv6ITmqYtpfDKJPsBc8VP$J7MKNosIWQE21Qg/ZCRrOyB+WfjekMolU9GvQ8xfDvI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://601tyz.com?hs=ae317fff7f4fcce2645af9f97e30ceb1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:29:11.581Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 499, "fields": {"password": "pbkdf2_sha256$390000$EzWfeGDY5UGX7uZUmrbw9I$YyGMLCjxj1dGec2TZ+YfQ8kw8+J288p54bo7MXNezFc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bcjcoh.com?hs=a71409af6c767adec23e78773a415f79&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:29:22.616Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 500, "fields": {"password": "pbkdf2_sha256$390000$pFYKPE3JCXCDHhCNkyXBJ3$iWsD0juCzrHPuSVeN/+rTU6HUfVJtlTtyHBOgZ/Cyj4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ppzsbn.com?hs=b27d716a2f8f729c9a09de50c0ccf012&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:29:33.908Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 501, "fields": {"password": "pbkdf2_sha256$390000$7S2xVoNAsF6dtzQYUjLRCt$Pg88j2pz0SGTLUn4Z9+YCjdAUsTTd+54QVIS62dtxjI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://wljhi7.com?hs=ab45066ef3f0c1305cb4b30abcb64673&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:29:44.313Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 502, "fields": {"password": "pbkdf2_sha256$390000$fCB5m2xcIlhvCwC5GXlXZ3$W+iUaJxmK0DXatj8nG7LrDS61AM9/JxRJcFatxD4rTs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ve1w9v.com?hs=9ce598a41fc4b2219d7343ed47d27448&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:29:47.528Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 503, "fields": {"password": "pbkdf2_sha256$390000$WuBZTN6OEpEvYY7m82XQIf$ZxCOC/lDKPqsJZglyP+K/YcmrQHK+GlDv1hv/k3+uVY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://2lud7o.com?hs=e58f53755c570707a8e1fc2b27e3e1e9&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:29:51.694Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 504, "fields": {"password": "pbkdf2_sha256$390000$xqkcepmDtN5E4ngeKqtRXH$IArlDtRFZEBeLf4T00Haa5sJfeyATavPemlgyp5RKJY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://f2a1w3.com?hs=5d26e456146fa155fcb0edc754c32559&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:29:56.385Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 505, "fields": {"password": "pbkdf2_sha256$390000$DoKdOp6u5IKSVJ8c6j5sFo$VNj7vy+hBj7G3MEhvUoHt25HWcTyH4GasPGczkQK39Y=", "last_login": null, "is_superuser": false, "username": "Hello World! https://hunfp7.com?hs=336af440aab187b3bb4166d39f564c2f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:00.697Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 506, "fields": {"password": "pbkdf2_sha256$390000$HbnQryGiitUXjK3B01Q5r9$NUjb+z0DZvNUpmFmS4mHqI2W8j0DoFrIQFfEdFKT9Lc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://2ulfxq.com?hs=cb63d00872727d428a5ce4e08b9cf178&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:05.940Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 507, "fields": {"password": "pbkdf2_sha256$390000$dI0fv3zkGlM2J1IGA8EqIZ$CQZLuoBx1mtkrrHXmf9XaOGoo8d5Exor3j59++sL+hg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://dq8vea.com?hs=2d34bfafdb03d2224751b25595d3aabf&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:19.184Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 508, "fields": {"password": "pbkdf2_sha256$390000$aTW03cXsYuyuBzkeyd5aZq$E5rjImDy2zriHrSeOCmF6wokpzphY+899zcPhJwfmJo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://59ytel.com?hs=729dc9d7a4ce40fd3a2c03a73ffbb70a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:23.976Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 509, "fields": {"password": "pbkdf2_sha256$390000$H6PVF4ZuvOeWx2Bf0KiL1Q$BS8Np4ilSWgtwBWo0Jzkt4SK5Yq7I/oZyaFMkZiuhxU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://asc4u7.com?hs=31b508b4427301d350b61ced2607716e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:29.661Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 510, "fields": {"password": "pbkdf2_sha256$390000$70a3EQFUUvfvPmirZeZCWV$Hr6f1d9kQ8nKzqr3iriBY+bMUbW5NyFpMMYgXG/9lc8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://w95v82.com?hs=e723e79f4f51ce60f1bc95615e41abb1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:33.624Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 511, "fields": {"password": "pbkdf2_sha256$390000$pD1QG82pNxloTuhpKlML2q$MKx9TbUxb2ah3L+uYdK33fqoqO3Qy7cn4SW1b4Eh5HY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://96fedk.com?hs=0c9ba986973d966ab3092d162f2ed197&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:38.565Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 512, "fields": {"password": "pbkdf2_sha256$390000$Fs5c6cSF5Tzagr6a8iTZps$FIXtWc6l3rtqGYuNiHw8D/cXhwj07IaKV7INLRKUl40=", "last_login": null, "is_superuser": false, "username": "Hello World! https://qjfg3r.com?hs=6597a08fe7e5eb57ec394f06ef330db2&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:42.772Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 513, "fields": {"password": "pbkdf2_sha256$390000$DZv531Qy3OnSv4JlhYP12P$pLlSdf7Vuo3h599l22kHjn8i9OWSyyP8Tf1L2QskG0g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://d2hm5u.com?hs=6e111bd72f7440d6efa9e784271458de&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:48.178Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 514, "fields": {"password": "pbkdf2_sha256$390000$Ac3lkJX2ZRe2MGqcCqfwfc$oDYug8kogPvUSJkYgOdMrPZ0oqi7h0kBrTgMMF7IGWE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bkstjo.com?hs=2042d47caa3dfe89ceae62eb05bff401&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:52.784Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 515, "fields": {"password": "pbkdf2_sha256$390000$jXJDczLNpGLzq03512DlHa$bJY48fEt3CuKbYDUx37Q4IunDBi56a75wranfspRiy8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://euc3n5.com?hs=7dd03c58c43c53ec396931814300150f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:30:57.510Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 516, "fields": {"password": "pbkdf2_sha256$390000$8JyYK7fqBam04vVXJF6zT1$K3Lu2VRF6gIg3J1rHtEMhSdvfW+b4MV3vG3YEeGXN5I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://59s31x.com?hs=6dda55d46b69a0219dac442987963f7f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:01.177Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 517, "fields": {"password": "pbkdf2_sha256$390000$OOdY4ECaG30kJrRFax9fwr$sFRB3pTU6JoZveaPXBY2hV+PsDIDIfAzv1QI42+KrNY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://2tvc31.com?hs=9e86c9844689ac47aa1ad2b20f77a4c0&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:04.455Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 518, "fields": {"password": "pbkdf2_sha256$390000$T7cqKBA23uYjMyoWz4aO5m$U6N8eQN/YgcnBuqmVib+HdpSc0V1fbEKnxIUzCPRVww=", "last_login": null, "is_superuser": false, "username": "Hello World! https://83htcn.com?hs=396578bb89c60cdf467f08e3bb61e27e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:08.359Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 519, "fields": {"password": "pbkdf2_sha256$390000$MTDgn9lRFg4t8jzWVZAS1Q$yVdqdW/9XkwER6dJQKf4q7jwlTSOMba444MBlzTrHy8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://gbp31k.com?hs=8b0356ea22b4997f1d5f4a356b1fab6a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:11.713Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 520, "fields": {"password": "pbkdf2_sha256$390000$LjDcl2WClFw7h1cAJ1CNnJ$XvhFDXWmEf6vv1x6juEGyG9FcxAU5gDsx3FqVLy927g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://0q0glq.com?hs=6d59105b693d541fcaeeb1e9514356b3&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:14.725Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 521, "fields": {"password": "pbkdf2_sha256$390000$RxOgveRFv9e0GnCnIKYlA4$/nOpBY8sq6Ae5NBhdADt3sr4kN5Jv/vyq3SHvLcuoSI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://uumj81.com?hs=cb3bec393b964e09d2cbb56a260ee49b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:21.452Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 522, "fields": {"password": "pbkdf2_sha256$390000$yDm9pulKitUek2cOOEpmWq$v4E8ciMDyVx3DOwJ0mk9QDMb1y6xMbNnYlHH3MExGNs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ep4qkx.com?hs=36b2b995623767a1addad98e1fc4734f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:24.365Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 523, "fields": {"password": "pbkdf2_sha256$390000$E9m25E3AoUdmbs8GZXyxJ5$jtUrUzc8o8hoXCxDuOeFQfhc4S1Ym3YoQ19U68bIGT4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://fqmw5a.com?hs=c789c9ef2b2134c941044293a802ffb2&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:27.490Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 524, "fields": {"password": "pbkdf2_sha256$390000$z18siB9XsF8jawVzCsdS4D$ecmb31LkKw2CWcYMZz+ENMtil1NhvJlc/Vkj8IeclKc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nd5djr.com?hs=7dcd9faf7d97aab885f6cb5f88202356&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:30.410Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 525, "fields": {"password": "pbkdf2_sha256$390000$bEDMksLaVm0ajiEZOAqToq$k02ZudiLgjbgJpVNFeMvMedOQ+4CBq47WWflv7s4dwY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://22acot.com?hs=b72ea40b008502fd8a97d7f3b0cf18de&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:33.321Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 526, "fields": {"password": "pbkdf2_sha256$390000$1RFC0hBAdo14loyGTP5ZIl$l0owDtjQJ8s2Z7Pv0BcJUMgb5UWdc6NlbTLwcr2fT3A=", "last_login": null, "is_superuser": false, "username": "Hello World! https://008s9h.com?hs=3ed7f2c98f4b26f6f2e02c32d80c2c44&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:40.008Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 527, "fields": {"password": "pbkdf2_sha256$390000$i7WWyHMPPI3BNaxm3AvO2v$bOpzGKE8XtpBXsOchM68blB/fKgaumNxdy2R5izk3mg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ssozqc.com?hs=ca6c95dc57389075653be94c872ce472&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:47.034Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 528, "fields": {"password": "pbkdf2_sha256$390000$EBmucfFLnrQfJ3TXnKyiRO$lGolrggdISy132jGDWUXbFTilpePVHNiQGKywWHf2nE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1q8rfi.com?hs=900761ba94102777535f745d78e739f7&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:53.660Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 529, "fields": {"password": "pbkdf2_sha256$390000$mFsm7SCR6a6R1GUXFebS0d$K3IR8d8QYawboS5KJt6mTECop7pyjab9ZYR3mIIaXAY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bc0mwe.com?hs=cd8c21ff1bbec440600d99b0fdb764f9&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:31:59.237Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 530, "fields": {"password": "pbkdf2_sha256$390000$olSLpuJF9XYrfYPOOEbh6D$A45qtWnXGmr2zu05AF/RiPdoOGVrA3o/zvGavK5GJXk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://3ltaa0.com?hs=29b3778ccd2d40143f8b1613187ac00c&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:04.074Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 531, "fields": {"password": "pbkdf2_sha256$390000$lkjwzZSVLPeuv3gz5C2OcP$5eDy7HKrAiLkhqCMJYWR7MB6JTrWWlk8GAc6YQ8K0Xo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://7i0txm.com?hs=45276051297085fb75ad68b194cdac69&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:07.901Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 532, "fields": {"password": "pbkdf2_sha256$390000$8o2gVTgJxqrilXug7gEuYa$xAAQ7NgN8LhX1dMkFujng+vjc5U1L6uyXNhm+49Y5I0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nr9xi0.com?hs=b517d3e64b0b9c4ff2248699c722e915&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:11.341Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 533, "fields": {"password": "pbkdf2_sha256$390000$eFBn9vGjCf7Zmxuu6bNItj$cu3jh7QOi2HBsMKoL83x7xhRPghSAZAWTcYDAmRy9KM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://044lqs.com?hs=1743dc1925d05001f9be715370b2fa2b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:15.104Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 534, "fields": {"password": "pbkdf2_sha256$390000$q8kECUlYKCWUChAIzUVDJe$8P1PdAH2zB5PDZ3mXMpdtrzgv9RTuXbUPlCtOsbD8bA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://6qyhdb.com?hs=807a94699799c965af48f34a84b6c371&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:26.735Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 535, "fields": {"password": "pbkdf2_sha256$390000$5H88QY2Ey4lpcwDCD3lOtI$8Dt6JxCxQhDiWBSBxr08NoPg93HNzRYVjX7AwHrsCV4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://t5t3ys.com?hs=994c88ff665da20b14be6acfdc5c4693&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:32.184Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 536, "fields": {"password": "pbkdf2_sha256$390000$uOatv1PbGv55WLmY8sjn1y$MonuWPrxcStK9GEEJlE+E96LRrZhiiTGDzFN04H3IqM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://g4cpxp.com?hs=a8523477288f146eba52a952999224ac&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:35.854Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 537, "fields": {"password": "pbkdf2_sha256$390000$duITY9wSMXtXcdY49MMHdW$U91jk6RfSODvTZBKMPtgwjXFGftfG+J8JUug+R/OPaE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://2o2c8p.com?hs=09b1dc8e53ea0c984e46a64f61ec7cfa&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:39.821Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 538, "fields": {"password": "pbkdf2_sha256$390000$rm2RaOE7fy6HfzXRbp33F7$ykwetwSShnW3N2CupANn8DN3Gn1Jr3qkNKGIe7pnA/g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://4qh2v2.com?hs=8bbbe28c9a19094707232352b5bfe6a0&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:44.205Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 539, "fields": {"password": "pbkdf2_sha256$390000$pl70QdLHePlTsVcykBbrSR$cO8yzlRT9O9ph+qS5xPTcJmR+K9/tMoABTbX/mG6ldk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bmboqt.com?hs=ba45f75fe59601dded063a479ae27354&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:49.125Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 540, "fields": {"password": "pbkdf2_sha256$390000$uuhC4yEvzmWBxdDtyxVpzE$F8fXyKi8oMLvUr7GldqQxvX15Isp89CGFMrokt/cVAo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://e57rac.com?hs=2f11b58fa6474409a1f0f23bec60af87&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:32:56.405Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 541, "fields": {"password": "pbkdf2_sha256$390000$pAzWSJM6lLjRwH8Myr47I1$FZN9gu/Qm4ZGCu4qOW0i62wgj9iYiCg41Lu+flm1gV0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://hh3bt7.com?hs=fb577d28df343efc6162797c09a19efc&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:02.982Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 542, "fields": {"password": "pbkdf2_sha256$390000$kCKADfTT4uy7Sjyi9AhXaA$W3OqhDykNYf2/0k1kQx1Ygo8Ea4Im1iW105BxSFR5mY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://re55lv.com?hs=96874a78a6a508bb369156f6dae3c624&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:05.564Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 543, "fields": {"password": "pbkdf2_sha256$390000$i2QBors1gTnZkjvsM3jwhh$GkMQQ/Bgzwu+i3sfURpIqYx6K1zvQpE2JZQNkLdeAo4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ukc16t.com?hs=d1ecb5bc423e273fd70a02d0512a7409&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:08.749Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 544, "fields": {"password": "pbkdf2_sha256$390000$frIsqKXdpkTxUM3iieVDGY$mr4jFqeVnNbCBvZ0o/+4KVteAByNMwh9xRraQwHhHb0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://y01wjt.com?hs=64af0abc444c25fe021acbedf36be4a3&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:19.643Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 545, "fields": {"password": "pbkdf2_sha256$390000$ms9ZF8fxBhw9AqnZEXhs5I$/949c5gYgsPYCkhhs7x+ennKr7LpaMl5MqjPWO4TpzY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nhnc0k.com?hs=e5548d81e1c5d51a4c0e0e86c4120cde&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:35.440Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 546, "fields": {"password": "pbkdf2_sha256$390000$bbd5dbKNAEbMbCTY7m7Zc1$46DahGGaGO7H9lc5Z+3Tqcoa8Eh5qqjcs51lQzoBKbE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://fny5v3.com?hs=08c07ef6f327380fdbe328c8f688444a&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:39.043Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 547, "fields": {"password": "pbkdf2_sha256$390000$jcBKKrNA0U6QIe0UKmwGD8$kHGfuxsGuIij0SBQhWg0YLGd2m3xhA+EV41IANBXYHw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://2cfaa3.com?hs=324310e84a1eb4f5c2877ba328f4d82e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:42.368Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 548, "fields": {"password": "pbkdf2_sha256$390000$SsOhEx6Nx9OBQFZun6Bb4m$2aJur6kfUPCe89YTBHffMHU3nV+/cXrlhSAU+a+Tkqk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1qjjlr.com?hs=b40362ec7189d41e3ed4ff7528863df6&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:45.762Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 549, "fields": {"password": "pbkdf2_sha256$390000$ZLefLxJwgss9saiDJ5nYiX$xNicmRYebNCTfQcMWadLC3GRu4yhtIPj/i/Q+3702Uc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://wvl9ar.com?hs=fa1f13ef8a919c1fd9be4eb7efba3b57&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:51.853Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 550, "fields": {"password": "pbkdf2_sha256$390000$b6fTXax0TaGHKtgp5DCss1$5yZSTErwsOkNjNFbwGwAFCD77pDLzh6qnxv1sAcWVnM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://a6ar4s.com?hs=f9513b21935f0b6eb1d6e75eb9a6930d&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:33:55.882Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 551, "fields": {"password": "pbkdf2_sha256$390000$YAofgDQHx9stz7d9xpfQhX$san+HyuQjV30Ps0hC1g0XZPjBXPaikJqoLXtYsV5B8g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://xdhct0.com?hs=ad04a702a04d4a262dc89216f90f270b&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:01.502Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 552, "fields": {"password": "pbkdf2_sha256$390000$orcfgjwbYLdkHY1zhd3ZCP$1IsDhQ9+hI70jPyCg0KgDfWvycapuOjrQ228+rG3Cjo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://mcaj5y.com?hs=b409420142e1b60017b6b196eee952b8&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:05.821Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 553, "fields": {"password": "pbkdf2_sha256$390000$btgQOvV0OZ24nCMBAR8W1I$S6TZzTxENr5t5C25mEbHsj+0I63M7v0hzwsV4wvH0vs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://cmdiie.com?hs=08c460ae055b88d63fcb0dd1777e4656&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:08.660Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 554, "fields": {"password": "pbkdf2_sha256$390000$hjd3WBZJ4rXh4VityCrpMa$9TxGT4hDNXBVhbWgie9QFn79MiwuekA8NdRta5mtRNY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://lby4zu.com?hs=b8b282ed0ac1e67be32e937bb936299f&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:11.946Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 555, "fields": {"password": "pbkdf2_sha256$390000$DLIFjA5WI4UCrPAfiIe5s7$qAJLJnUwJR4K29c9X7ysIwGpNzmF7g65uSpPZ2SMmko=", "last_login": null, "is_superuser": false, "username": "Hello World! https://bjasp8.com?hs=cba69931a975bd0b0df6dcf5b2f68426&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:15.151Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 556, "fields": {"password": "pbkdf2_sha256$390000$1rcwjoFkfqDcWrjQ2oc1wr$KklNuozuD+4BVsclnAobunn5sUtdyE2Y/CcTNvBmC5k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://1zixhd.com?hs=b29b8f0f9fff3a38c6eb7cc5b683b5bf&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:30.630Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 557, "fields": {"password": "pbkdf2_sha256$390000$qDJtPLfsrSkE1kJErLqB3i$w+yVP/JyIU3nup72gnrtKSEAObDoI0VSa5n7UGzK5N4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://7ngnmm.com?hs=d06a0e6d568cb5fb3ee6865707cd56bd&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:52.080Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 558, "fields": {"password": "pbkdf2_sha256$390000$2oq6qhJx9k2FmCxqdcO4ig$NOqICc3gRPRCwqHFf40gtJeWpGsQA/3d+LWukCCP8nk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://wbyh5n.com?hs=d478f8d020d4dea2faf624b20cb61416&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:34:56.810Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 559, "fields": {"password": "pbkdf2_sha256$390000$q8NA6NN3ofg5rXxJryLTre$A2TNQNeXh2VhuZxtnqIciV3Cwx6CvqdOMIxHk8mE6sc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://kumjkp.com?hs=580261cac1543b863288ce97ebbf880d&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:35:08.788Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 560, "fields": {"password": "pbkdf2_sha256$390000$EG70dYNzNY96IA5NTg0Hns$sH+TDoFTus10zBIytKphXKCODCW7SQXG+0NclqV1rsk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://nbrbfu.com?hs=42e3583e2c567494994ec4f5f12e19f1&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:35:17.233Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 561, "fields": {"password": "pbkdf2_sha256$390000$FZackEnmUPFPaqrVwdwrGz$P0bpqS+KMuThB0dT6lCBBPmTsYIhRtvRXCvu4nqr000=", "last_login": null, "is_superuser": false, "username": "Hello World! https://52u6z1.com?hs=dbb0aaac42568474e39bee62148a194d&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:35:25.063Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 562, "fields": {"password": "pbkdf2_sha256$390000$aqVJ1R6iQOe6O2QF1jsku7$IlxGxKzH3pRAZJQt5V4P4KJeCG7bgtuHNB7bzVF8w34=", "last_login": null, "is_superuser": false, "username": "Hello World! https://ha14jv.com?hs=bbe57d57100b781d7f7f23d0924576d4&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:35:30.481Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 563, "fields": {"password": "pbkdf2_sha256$390000$vuylRa2Ft7CbL1zLga5C0q$zk0fb+dQHEISGsRr3nAkRzgur3+CLQ7yhmhzwPi2CB8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://rkehd7.com?hs=4b5873d89ac1622819b3bbb0230a033e&", "first_name": "", "last_name": "", "email": "l49v1x@mailto.plus", "is_staff": false, "is_active": true, "date_joined": "2023-01-20T04:35:37.299Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 564, "fields": {"password": "pbkdf2_sha256$390000$nr2cLgyytuPNF4IbO12Uge$YBN0t0pwxSZXj1Cg5SLmPBAVEeDtGumrRfuSkWDtv6g=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b892a3b9ae40f93c42e6663dc8a58250&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:09.236Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 565, "fields": {"password": "pbkdf2_sha256$390000$JxmX97z5AgrfvioTbNMIxM$EW774QpzlNYsspYxF0fGkWa4diw96wgKqZrNh59qfp0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=4c63f3eb4cc1ebe37b834f4b6293f25a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:12.459Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 566, "fields": {"password": "pbkdf2_sha256$390000$JFXMVoOHXUJqQ3OPVIzNJf$bX0SqrEqcH7Aj2FYF8uqLHpWoXsMu85YAtydU50/nTM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f92a213e7fa1789a5fd3ec99f3cbb614&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:15.072Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 567, "fields": {"password": "pbkdf2_sha256$390000$vTux02PJFpfF64sHGzDVgf$DpNVBaFZNp+mA5Tz6ATiJ09fzZdSYRer2NfyQUPmDlY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=115a08143eb6bee35e3bd249e4d09bb3&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:17.807Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 568, "fields": {"password": "pbkdf2_sha256$390000$MHTzG3M0qIF0JrHsrxVheM$28FkzFGY0N728HCrVy6q3qx1Oo0IW0AMHy1X7A8juBU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9a752eb8c7f84727798e9bfa1608e61e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:22.436Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 569, "fields": {"password": "pbkdf2_sha256$390000$bvPU4YQKDmTur7wbvDYZkn$vX85BktNz/H3NSfjqqX9jFYmiOFfrto6ydWpqaDwb78=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2bbbd0016edea299349a0743cfc4abf8&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:27.153Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 570, "fields": {"password": "pbkdf2_sha256$390000$C0HK71J7XZKWDkdCbp7wbi$PRqTsGVloTHqT0dvYsMIfus9nIrskyHs49aMAmfj/bk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8d0b18711f473d5534daa49699f7ace5&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:31.521Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 571, "fields": {"password": "pbkdf2_sha256$390000$0IVunrUZ5rupFaBf2TJTYD$wHmuVlPchScIs7y1uwFl5xb8tR6aMq147orMNWzwhUI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9d91f14255246dde34abfac9f7df6a50&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:36.524Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 572, "fields": {"password": "pbkdf2_sha256$390000$7h7jXpqvAza3zGk0vEqwgw$gBND+RQa53aBdX6bAhFuqwssbN1vwrpipyStAtQdL8I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8f42dae1d2397e33bc69081caba1976a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:41.939Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 573, "fields": {"password": "pbkdf2_sha256$390000$QfiABaXTeSieGPfbmC9RRQ$2hw1dd3lUAPBoGxFuAm9cK8Ejqk+3D1jjqmH0jCIKXA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=aeb26a186e845ab1786a0e1cf7b4e8c2&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:45.904Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 574, "fields": {"password": "pbkdf2_sha256$390000$h6SpgJc65PwE89SOSPKTTZ$EwKE1MfR7ghCnAJcBSzBO9hEYor654BjrXN2SUfs7Ck=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2d8e786928857817d69bd563934e2dfc&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:49.309Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 575, "fields": {"password": "pbkdf2_sha256$390000$2BkVngbduwqCAESF6CL813$e5lC+vuipGyNVgqM+tAM57kXSeXU/e86BxkxTlv6hRg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=62b8c0b5388b3af4796225748cb6771d&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:52.909Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 576, "fields": {"password": "pbkdf2_sha256$390000$d2skEufjEH6lt1sJHASR7Y$XYVI4dV+RzUMG/xZrzChMNTj9AYginict6KuhIgTVtk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9ae8e691846c132a696f43121a44a572&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:55.868Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 577, "fields": {"password": "pbkdf2_sha256$390000$cZvttpvgKdtbi66mHXgj6O$IF94UeKlkv0nJBUdzGqT77qbwG2N/SuciV/ivKKIUBY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=c700ebbd1f9a6dec2bb06ccf13772a71&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:00:58.533Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 578, "fields": {"password": "pbkdf2_sha256$390000$hASNWroItcX0rCCRHCSyJu$P4HyLq3g+YWHTu1gtpTkwM+tCtvjCpxcfGLueHz3NjI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6008dee8859604f8422e12df3cc7d34c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:01.216Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 579, "fields": {"password": "pbkdf2_sha256$390000$2Mrt2HP4LD7BFeWqmaqqJd$LfjBpc7U8qtPRk0RBqNY54/UkZKTa9HYP5njczwCPgc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f34d2a2e898d1ce9f479647546631b66&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:04.700Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 580, "fields": {"password": "pbkdf2_sha256$390000$AFPmYzZ0zrBReom3s3LTLt$NL/vvRMChyxeaGXpnw/a1mgKZBk0Tgj6M7l4K9ujrQw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=4f19fbaab722641d7db2b4d202b951bf&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:10.583Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 581, "fields": {"password": "pbkdf2_sha256$390000$HeuNX1BTHl0Ct3uAWo5UOA$Abr2Br+JRztl22HJ8ORn9dvXYWTnEf7l+J0YSkAsxb4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=18f36b9818a7fd58af12cc07964038da&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:16.512Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 582, "fields": {"password": "pbkdf2_sha256$390000$RoH36WQr6If7AF3zyB2hTz$M+3YM2jL+EoJZ1z+hDIc3iyAIcAjOHOF3VT59chx2Hs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=98f32b4491aa7cc52db0e972c95a5cc9&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:25.778Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 583, "fields": {"password": "pbkdf2_sha256$390000$ywE4yVl6rLfhjoB32m3Jkz$G187AAydW/w/9CGK0ROMfSm1DFLwy33TQSDhvkApDjI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5f0beb319c3be51dad72b0cdeda2ac97&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:31.740Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 584, "fields": {"password": "pbkdf2_sha256$390000$4D37NS8PlGtkZrasE4VZ9Z$O+HifWJucPeW7mPH+5rPgHOFCxcZ9RPAUotBNPxznQ4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5a1f490a4603b2a7288b0d96b0b56b46&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:36.454Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 585, "fields": {"password": "pbkdf2_sha256$390000$vriQmXZ9InokgiLFf1Bo4R$zlX+GS799r7vKgMKqWjnpXhDMaN5yh2+c2anBKqDtJY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3a2decf192ae80fe462b937b354a804c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:41.726Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 586, "fields": {"password": "pbkdf2_sha256$390000$iD6HQlAgdZidW0BxhNX8kP$0gn8YbEW/kBoiid1hU7liV5VafOBSovpijdXVFRF9h4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=c917867d28d665304b29fb597af351af&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:47.929Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 587, "fields": {"password": "pbkdf2_sha256$390000$ViVboJV0jrGO6DtejtF65c$/Rdn3cUb2+9wcKgZFFYr/IC09yx4bBx4kyPIJS7wyoU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=02b134d05cc247f38457434000f42964&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:51.743Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 588, "fields": {"password": "pbkdf2_sha256$390000$GUPKKGl2B50Hjvufw6t5Wh$IlJm9RpqkmMB4R2qNGuKOEPPaq4O9Ex6cXumP7DtFPs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=66b29b2e4874b8ed25654ab08885f3db&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:54.903Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 589, "fields": {"password": "pbkdf2_sha256$390000$YvOgYM1kh2HCZOCZI5VyV5$6sf41HN/oP0+wS6OrUtwv3jkCg67jxomCOxNyjQekLQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d07fedf505cc4a84d77e7fd732c4a6d1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:01:58.280Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 590, "fields": {"password": "pbkdf2_sha256$390000$96vRyf6x6qIYoICdiNxMoq$O2chcZjuzpsrPVbDRo2td5yhNFvO5i+zADy6czteJRI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=0b582dbe0cd164a303d147559c25d545&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:04.249Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 591, "fields": {"password": "pbkdf2_sha256$390000$TLOKrJh3JWYdPY9hM1y88P$ZVZBdcjtmam2pGmSNz1EMF+JBFQ0hAz+kd45eDJ1T58=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d2f4b910be1aafc9e3eb98d11aeedfe1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:13.308Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 592, "fields": {"password": "pbkdf2_sha256$390000$QLkWX3Nqw7srk7wGyCCEF8$W07aTNdgLJZDgpfqBzBVltHtcEe/of/KQU6Ee5YbW8E=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=194b1cc218288ab9e11d725950975ec7&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:21.022Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 593, "fields": {"password": "pbkdf2_sha256$390000$I0a6vHaGGmFyfptmECTX9C$K2WerGDMK/FSbChKj/yVtcrH9Yn0byPBN7PF8AsdL0s=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=62361a102179da2bf469a320b6c8276a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:27.582Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 594, "fields": {"password": "pbkdf2_sha256$390000$R8QzlwHOtL5kyhbuZ9y6Ol$yq803DB9baCqeEz/FcCV06buUKjGf+NBWmw0IhGpuxA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=742aff669b7c1cbb72d27883c924e527&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:37.971Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 595, "fields": {"password": "pbkdf2_sha256$390000$w2iNKADx8SNlfxeVsVsec7$J0Cfx1QjUVPHa0SvplHJZqW0xxmmkb6/7Nh9VLJMHuo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b2ddf97f6983836694ae7a0d97234d35&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:43.037Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 596, "fields": {"password": "pbkdf2_sha256$390000$09G91x89IDUvaaJDdHMYrK$K8olfs0fYhiFye5ap9tMzHpsHk2gCHeNizh5kc3GFnE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=899116b16d5284177a21b0943991baa8&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:47.528Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 597, "fields": {"password": "pbkdf2_sha256$390000$TwTYbEUXdS1drRNQQvlI0q$2AyP/ByzGZ0nioeANS1fhlpadtF0Do9z+9U7n3sZXuM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=7571cd73b81b14e793c8d3b18ed86b87&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:52.051Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 598, "fields": {"password": "pbkdf2_sha256$390000$E10VL4z59ZANC3uQVnFd3k$qIAzTcz3PkH1HjYp37TAfHTXM44ziXCKNreMymgsUJI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3d408ebdf37e665e1dfe53e20302e615&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:02:57.277Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 599, "fields": {"password": "pbkdf2_sha256$390000$NxE5BBvIsm96uQDQGUOkYt$Vh9yPaJjdYF1KEVBAGKSoZRSNXIImp3un86EGCVImhk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=05a4efb71c7fc719bef390ac616415ff&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:06.542Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 600, "fields": {"password": "pbkdf2_sha256$390000$XmZIZAzRnVc2MJCavl4nY3$GmArP+6lcRexa5/aKoZ1mF8/Ded1LabBhCqA5wg4PT0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=be08a47aad775dcf0ad7267280213472&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:09.549Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 601, "fields": {"password": "pbkdf2_sha256$390000$lMqToEdyisxhg2sGIkgTGw$JfnxOzT0AlKZ8aEhz9/sjQQVxtlGDOB+rGmqHnODpMg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=02fd6929747869a1248e96960ab0e85f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:12.719Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 602, "fields": {"password": "pbkdf2_sha256$390000$gaxU9MM6r4Kl2uJwIWQZYy$LkWLHhkM3vkCgV9RD1o9xgVNkpBHYC+mMW9tS+bndCk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=45c5cd5b1ace31a6d53f9678d5251769&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:16.065Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 603, "fields": {"password": "pbkdf2_sha256$390000$ajKOriyb5psq0XLkLUiml0$8RAoiX740MNQOKbo3zYmf6xxAyobSrfsNkel8iqQxZU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d7bec74d7fb8a12b6023cc9a61004165&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:18.993Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 604, "fields": {"password": "pbkdf2_sha256$390000$PnWRqRv7qWmOTQ0UC2XeX9$BpKn6iRgIpsswdL7Wf2dBYwK/VFLvjfbWIsyDgISYZo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f6e691d545817d0d7f70b0bb3a2af5f0&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:21.693Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 605, "fields": {"password": "pbkdf2_sha256$390000$EvmDwai2co8X6dJyNBkEyj$/AjDfvRG1fco88wREtyyJWoa34JAkZTvnas3q/IswD4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=dd9e6a73c34741373bc7dffa0c7cda8a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:26.109Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 606, "fields": {"password": "pbkdf2_sha256$390000$35K9Oc6CKa8xVqm8I3Qg9p$zCD+aE7nYOYQvVkaC/dS4pcFCy9CpmS/WLfg4RuMN8I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f7f2a787abf041ce69300ce3780199bc&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:31.058Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 607, "fields": {"password": "pbkdf2_sha256$390000$GYYE0oy4RpnHuuQqeBUUqe$55jlFDaFQxGgQO6AtnNbRceYN7yDBBr+aEN5gCAzUUY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2b0cce152233411ecaa5cb19dad421fb&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:33.961Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 608, "fields": {"password": "pbkdf2_sha256$390000$EIJ7ROHHIDpyUk1pbZeRnI$Mh3yyJIoxX9PMa/rYJz/4THQEgNoVfL8MpA+bw2fIjc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=72c97d31340d946c8f862f1c1455467e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:36.876Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 609, "fields": {"password": "pbkdf2_sha256$390000$qeCp9ddFwN4NNpVT7noW6I$8CtCVGbzvEwLptyUuSmGMNSKY7kCsRXdDcIRXBAZtzk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f8bd5646159faf47363d020f338f19e5&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:39.445Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 610, "fields": {"password": "pbkdf2_sha256$390000$WplHiwF5AEIm5mme9use9z$4mHvELZg8SotW6pOgZLe2kEKtiB7v34OaGNwOgPisoU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=23559bdbc07ed945b98841fa0453dfab&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:03:43.612Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 611, "fields": {"password": "pbkdf2_sha256$390000$D8QWjcUjVNZ1UgifkOCfit$pLml/LmeGEn1FgAC+i9uj/Kjtth2gjGVy6Oy0+M186o=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=1a3a360c6bba12c6f55d411522aceb01&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:19.329Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 612, "fields": {"password": "pbkdf2_sha256$390000$XlbUgyAzYp3UzxtjWh25xR$w9Riee+9UMlnHtuNYszoiG4WV2GFeMKlxMZXtntgfgQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=790143abd79d59f028fa239f5daf8d38&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:25.218Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 613, "fields": {"password": "pbkdf2_sha256$390000$UHb4QUWniyyhvhVPKXJShG$WmljFpm3V0oLUnmxQz7KxYwMgkhWCzmHVWuEHXK1PUA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a08b6d61c42045eb17089ea47478c4db&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:30.764Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 614, "fields": {"password": "pbkdf2_sha256$390000$AM5UlL6hsqf117T5PAGpz8$SIrNAkkZFWNwEGTXX194L4TucrKjkF5+B1o/0bsNUQg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=7aee2f164641ca2e8dd36c078dc2bd0f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:38.984Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 615, "fields": {"password": "pbkdf2_sha256$390000$1sMB5Yi9Xnc55blWvn7VoU$EuqwsgbPHHc2lvtGbb1NcL8rK2FfaU0dXLfc7PjJCw0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b8fc570a3987f86e69dc5477b25085b5&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:43.781Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 616, "fields": {"password": "pbkdf2_sha256$390000$sW918owDFIuYTowwUJMtZl$n81sm4eZkN3qwaWFsGg9tb5brlUm/m9xYxuA7zDOrho=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f7a29faefe94b04f90701a1ce74c3850&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:47.165Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 617, "fields": {"password": "pbkdf2_sha256$390000$EYDDuEf1Drzwh7Nbifnsq6$UsvzW1rMkDQwpDvsUfue80XQ94WYhHba64OA7gAWhI4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=82540ab31865ab0435b37387df6ef168&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:50.231Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 618, "fields": {"password": "pbkdf2_sha256$390000$z52f6d4AFlmZ4LG51YHYu4$ZK364SVAluE5kJ8HnU1QtYfGTr8Y831G2+msLgBptpI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=95c1ac751d6116c85f18f9f8d724b6ad&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:04:53.485Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 619, "fields": {"password": "pbkdf2_sha256$390000$2iLMxDkuRh8TLUC0m7Qm4u$ln9PJ9//whWtHLVBSYRQq3S/poza2qWX3KpjRokzhlM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f01b7accf038747e5deac0679c069236&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:03.262Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 620, "fields": {"password": "pbkdf2_sha256$390000$HyifJnLuGN1J2B0lWsX7Jh$BEKH5vHKekxEUlqn2StIta4QlJeP/4jNinf99bEqDSU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=592456f2ebff4f1fa89cafb86edb9003&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:17.925Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 621, "fields": {"password": "pbkdf2_sha256$390000$htaqRmMtLFQcWRulizlXvE$M9m6Vzxud0YtlUVs2hXALXuOKsbSwBeQ5HUKIKeGYeQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8cabd436c10927f5795baaa96a4e0c2e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:29.202Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 622, "fields": {"password": "pbkdf2_sha256$390000$lmCj9IcNrz2JSleqWHZOig$2u8640Jzfr3NleP376gnUU3gI/CK5HScK7roV4ABX7w=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=4f086318d773e128f8bf0ac4f0b547e8&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:34.135Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 623, "fields": {"password": "pbkdf2_sha256$390000$GTEWS8wcFiV2nuYZGjo4IP$T5ht/wAN/AsjoBvRKcb9BgtZvP0oFgxH/7NgMgpm/9o=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e9fc1eeda19946ec17a49ca14d65cb31&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:37.836Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 624, "fields": {"password": "pbkdf2_sha256$390000$GhRNr9oD2ieABb7jsLiC3B$u2acx7z2bmGwMiGtaVPKYr0mYMeBhziJck0hPLqbGPE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f289ae33c2ef70d6a6f7924bccc2d574&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:40.932Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 625, "fields": {"password": "pbkdf2_sha256$390000$4oxhgZcLYnFPRzZtAHAdDU$0CEczUiHctoSSPlx+165p2lGxW4eeD72X+6/sWIJCCE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=611fde93f7d2ee860fbdc01f93a0546e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:44.633Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 626, "fields": {"password": "pbkdf2_sha256$390000$Z5wMv3WGUkMLyuT19ipouf$R9VMkOmy4uCAIB28oXbH6mkVF0TOfqwMArp9Pbk+7k8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d69ffe9315516ed4591d8e90bc08f7bf&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:47.575Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 627, "fields": {"password": "pbkdf2_sha256$390000$9E4eEaxV1ihxhl24dAoGuy$phtQf2dBlGSw74Qpbtp/X74yz6sVQy90e5u+frhX6/Y=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e4a746d33b5fd7847c338a876cc0f51c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:50.739Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 628, "fields": {"password": "pbkdf2_sha256$390000$lKfBvkNpaQfSbxvLxhFtyd$bhsspxCFQcpfys+8bH+D1/ys3osFcygGAYhjd/0JXX4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f0bfb9a25383f1a194efdebc847a709c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:53.813Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 629, "fields": {"password": "pbkdf2_sha256$390000$FNaY9XOa0X8gxBQJREWNRV$zpO0VtwZK6JrMddCZiieOcQ/sNU3+/m3/j8Pags/bio=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=06f4b73213b0bee47ac6235a30c3007b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:05:56.983Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 630, "fields": {"password": "pbkdf2_sha256$390000$VJeJSxFS3BobiT6sh2eCm1$7hGLXF+jp3XHHSoDeHMHsjUtr1ptVa9HHKPOckQlqRM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6667eb7b152334f528c01b55d74fd826&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:00.574Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 631, "fields": {"password": "pbkdf2_sha256$390000$am4NR3OSvkbcsznJzsWUUj$bJECi9yOKbRAKCm0MacpaOUAzE+Rydkjg3ngq6LSEAg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f450eb65b6e4661a77e2c7c74fa6db55&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:04.536Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 632, "fields": {"password": "pbkdf2_sha256$390000$ApUiSQ0Dzx2vvIS2RO9HMy$3/niyjWcTElF0Fu/uHIOEnkLRBhMgXOpHWCvP5hhZzg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6faf1325809c35e58e73b9ff3b5a3cb4&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:08.943Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 633, "fields": {"password": "pbkdf2_sha256$390000$ldDCMUWtgQ7jH880JFzKmx$s2Q1hIxHqj7WeY564mKL8zknP9lda/ToSrspvUXG5QY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9e30b4fd36567c558855df655871beed&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:13.256Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 634, "fields": {"password": "pbkdf2_sha256$390000$b5mZ7ZU2DO4dqT6MkDbhCS$21TKBgYSbixyKMRCHj4m6d45/z0AOnp6S3YDvXJu6zs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=14eb5c701eafd03c2569ee3944bcd649&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:16.616Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 635, "fields": {"password": "pbkdf2_sha256$390000$q7TF7otN2UqyPkhUFj6ELv$7n4C9LQM7HPDeDCAnfyIBJV+ZejT+BjfSEp/UGXSsjY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=605ce261408f6ec1af1cff49a1c0b59d&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:21.383Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 636, "fields": {"password": "pbkdf2_sha256$390000$lOltzaJUq8d6RMGsf6rCgs$4Ou/Vq9xb5pj5Uup3hpN9BlNyOPzrffLixCebluVfZU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f16dc95b7117f2a1374d8e37b917e72b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:26.654Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 637, "fields": {"password": "pbkdf2_sha256$390000$EBv3hvsna2Rvg7SH6paSq0$PA5NBRscJEQ8xGJdQpeWd/aCuh0jV8DrYKwAEywdJ4k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a4fed679d4c72b26986f518f8e322b5c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:31.212Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 638, "fields": {"password": "pbkdf2_sha256$390000$BJnmZAwiM34EKEdDJBWv03$gY1qBu3yc4wPTdobgwFcILY9DlctpQYeSUz2EVmVEkM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=4b624ead185113f9d6e0970cb944c6f0&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:36.966Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 639, "fields": {"password": "pbkdf2_sha256$390000$nLJcwCCgXK5xPxWUogsciP$j32l/AkK1Dpi+GBndzVa6WVJYoIBv5YbC91cFwMBo0w=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8f91e2b6756e8b5c59e0fc0c190fb03e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:45.307Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 640, "fields": {"password": "pbkdf2_sha256$390000$hQbZqjB1egSGt1SFZSldlq$3VncszsG8liey4l5P8y2D8GEO+Nq8G+k3jFCeMKMApU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d8bde8d7db0b208965aa2289d0cf4eb3&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:48.903Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 641, "fields": {"password": "pbkdf2_sha256$390000$DSLChfAs32nk0E2FI9526g$QT4l4pGV8IgcbffSorR3iaymaTCjqcB7R9zL3J8BivE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=7b6168eb21ab37646e74ab16646c2e0e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:51.666Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 642, "fields": {"password": "pbkdf2_sha256$390000$V45u4rIigh7cMMMGw2vHsl$i/mAurkjLTsPL5oMDzEebTiIm9MX8hXXqPGQvOJjHcA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=fb8496e1fe083e2a8b2f92be114ef7e9&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:54.301Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 643, "fields": {"password": "pbkdf2_sha256$390000$fKeX2cny1wD9oyXgPsnd9j$JTW2R0CMrXf0ZgQWekkpS6gVaxcF0BEO7JGQCpiGNT4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=027f07a18560198746baee6f35ab97ab&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:06:56.884Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 644, "fields": {"password": "pbkdf2_sha256$390000$toSE1AhLrQFQo5SdPtBCKc$CgWDl8/YkG7CArF8a/eth4PW+dWEJ8KUZ8wbrMba06Q=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=bc951c2c4b531955e1ea308a70e89828&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:00.207Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 645, "fields": {"password": "pbkdf2_sha256$390000$3GinNbcZQS3KaquCmAPBIp$YS3gcXHhsRNSo7ppB+ecVBeZktOlQi3p7Hvq9AGddQQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=68d2576bb460795c65e8b2831c207491&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:02.926Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 646, "fields": {"password": "pbkdf2_sha256$390000$ZRWmdmlkGKJIXzrIcqI9um$PhKIVfMCADEaGZ2fEkShbVuFzG2XQvhOZB0rdU5+Kq8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6c50efce701e3a2cfb8834450f5d600a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:06.113Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 647, "fields": {"password": "pbkdf2_sha256$390000$5rBLwdyb6XmS7AfAruQrNZ$Yb5MGbye99dbckT0+jzhoGXTYhjJSlhRPQ5NNpJx+4k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9ce7bbc45419117bfa800d9a051154b7&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:08.886Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 648, "fields": {"password": "pbkdf2_sha256$390000$LyIyMqYRxDLaiABl85dZMe$RH4kZbhkdLrdr+P+KQ4fuRkMif0G3YW/l626qTf0e0c=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3fd59a381573f4be3d0fee5f2c28faf6&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:12.409Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 649, "fields": {"password": "pbkdf2_sha256$390000$IPVQZuPkVXJBkniKApP3e8$jfhrEuTr1PoVY5Zmr/hXneLDI184bqntwdwelFC7lS8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=595a6b68d47d4f789295da5c1c1118da&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:15.890Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 650, "fields": {"password": "pbkdf2_sha256$390000$APeAqZk1L5u2tT02QCO4GF$WhLG+Abx+gOeNQNIB6zdqeWn3CRimuMldRzz1EoYJ64=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d37914895b4d9137e8ad47cf376bd734&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:18.916Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 651, "fields": {"password": "pbkdf2_sha256$390000$KxcIwZcxDtyHFp22ZLlm5a$doSnFyFkd03Wk6AYaaDQmukHXBfSRoUOKnUiU2fsa0Q=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=26d3d27a1698acff6c2840b720c83952&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:21.890Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 652, "fields": {"password": "pbkdf2_sha256$390000$bzEYIKRWEU4AhKUgXgROh1$MfRc5hxHnYZIkFTOHnjdREunHzZXPZpbv6l6umz7ty0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=98473446a2b8ecca7ae2f043ca8f52c6&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:28.642Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 653, "fields": {"password": "pbkdf2_sha256$390000$9KODCWeuIBsb0SCICU4WYM$u79z/VvlYFsRBmHzq5eYuh9MHCuyLD3YYrnjZ3VteLs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2af0a50c63b7a0f0d3fb98a72b85d573&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:35.654Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 654, "fields": {"password": "pbkdf2_sha256$390000$eaQTTWJdzTtGU5qsrp4LSb$o0V0gznAiolQ3QG1apohWqKHUSVYFFelU+0wVof/kdI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9ea8be4c47ade92babe171eea48a2cca&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:44.264Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 655, "fields": {"password": "pbkdf2_sha256$390000$OqpE5yRTRz4YswWVpIATj3$63rXrdLoRL2gB+EPple0CoEtk2JtSEHq5C7X7lrDanc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=68eeb04f15d0ce7c5eeb60cfeb9e84dd&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:07:54.377Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 656, "fields": {"password": "pbkdf2_sha256$390000$XljeEauxTWDrh9dZqhrSQv$tuZcqGdiKWUtkal8qk+a1yIFdrCzWLQz1TmPmqRygLU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=24161f7eb79581703422783fece7c54a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:00.721Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 657, "fields": {"password": "pbkdf2_sha256$390000$PYiRfAFf0ek73zULMuAPwb$rZoIfrD0HL45nuh05qMMqN7Bp3p1OzD32H3Jnd/omUU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9839ef532ecae517551479b7201308b3&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:15.912Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 658, "fields": {"password": "pbkdf2_sha256$390000$Wc9ZxPD3SuOr6m0bhxFNkb$n2doWgIQQ8i8zaQJ2a79j47gGGq+z3zz9CWAn7Q8aZ8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5608158b956504e02ac9d2ffd7e32c97&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:25.437Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 659, "fields": {"password": "pbkdf2_sha256$390000$YMz0Y9KI1L1AW7SC3zzLRI$YxC0g0tDYtMgkqALuekhPiP6ceZK2FhPTLW/IZINLRQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3ab195e9416fb8a85166c3f48ba6a969&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:28.542Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 660, "fields": {"password": "pbkdf2_sha256$390000$X5Q3XashAWeTdd3Q3fUTMT$t3HgOi13Rgt+msp7xdYgcIvnYcBSEynAQ9/V835ykgk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=00fb2dce61d35122754af58a60a1d7a9&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:32.424Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 661, "fields": {"password": "pbkdf2_sha256$390000$PfmOUCzWaGUIUb8u0Oyts2$zoeJ69RRSfPUuMDkhoyBGxQGVyzBo8SXtSD4dZaDQww=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=89b7ca412eb88266c6cc183c31dd361e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:38.313Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 662, "fields": {"password": "pbkdf2_sha256$390000$OroFbZFzZ4twud24ATszWw$sJfgqkTXmj1PZZSbg9oyuF0DT9acaOvP7t3f0dGOtxk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b97bb642072aa96996e98985b4a91672&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:44.540Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 663, "fields": {"password": "pbkdf2_sha256$390000$pdauNZORUiTVPrQh6v5iwz$sG/kHP5o3oCnekmv2eBxvOSLntwQFc9vjJNxjBFPsUU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=4a9de0d8b09c41e2cba53a2f7d066c5b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:08:53.460Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 664, "fields": {"password": "pbkdf2_sha256$390000$KzNhazPczVfPAX58Yka6nw$1Ia/pUMGXLJk5F7/yXZlTlvx42AKK6huKfmjSAwJbjM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=975ce3d9d0ce9a846110ee0a52c7d5e1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:05.159Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 665, "fields": {"password": "pbkdf2_sha256$390000$ENAEm9wZ3EJPWKRMgsdAzh$BX4wH1SxbIGMpF8FX7jx/dV0UZtSeoe1INiVrmD4SE0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e11c976491cae534c7c22cf8c23d7180&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:11.590Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 666, "fields": {"password": "pbkdf2_sha256$390000$BkfvEVZMMRNf1mjizPdMNJ$YHu52xjSkNBDnF2x9WbV9NCsBDbNdfN9ptWocFrqdxs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3e0c6de47f1c33d2a0726f878b1fe982&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:17.636Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 667, "fields": {"password": "pbkdf2_sha256$390000$aDmjyRXIj4ZTkgVU7t3G7f$V3BCOPa8rvvdc5ychLpF0Bf7FFHibN2eZgjhOwIZ9SU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=454b56439fe263c9147ee1fefdf54707&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:22.157Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 668, "fields": {"password": "pbkdf2_sha256$390000$ifsn9Wmj3gKKTyV147UW5o$uMla1Uj3PWlII3qkRy4qYoDE+t9AoPF1u/R/j7v7dNM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8a24482e1ae3e027d3beca00c16065a1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:26.197Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 669, "fields": {"password": "pbkdf2_sha256$390000$mokmBnncQPeV2P1YKt3ryI$3ci9h1Woz2mbAJzaBGGTEbkC3+HJx8rab67p0ITUkQo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ca416e8ae02c2ee31e0f12b75c61d407&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:29.321Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 670, "fields": {"password": "pbkdf2_sha256$390000$rPR4ROxcGzGqWs33VbdiMW$hjtWVGFxHOwUC4BXltrtypjPlujFmgWwNGHIRFf9jNA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ce0c322d4b6bbdd2b372530fe9c8e3cf&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:32.446Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 671, "fields": {"password": "pbkdf2_sha256$390000$1HZNoUj0NUtWfzmwoZAZ37$gcdHsVzybyt3QTJHmydUMojmH6IbneKMOELD6HjyaJs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=19f44ac89c570d460d54e2bd7f8094a4&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:35.473Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 672, "fields": {"password": "pbkdf2_sha256$390000$l4QJkumtZRRGsN6iLHHMwl$pPvtDz3ov/DZtmRgZxiOLIywdYfUgAyKE8mgs05Uq3E=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=58f94bbaf0347dc85c69c1f251bd4393&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:38.646Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 673, "fields": {"password": "pbkdf2_sha256$390000$21N8jJeqIZytwL6AqWg5hM$bdoOZxXrRIqhOzJ2vpgKOIgDsnRbR4q+7DR8tCOKIBI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a80e47d37e9f52bdc2f8ae2fdb1c0830&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:41.346Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 674, "fields": {"password": "pbkdf2_sha256$390000$U3tx9VVg5qh40PwuN5X2Kc$pwY5M1dHkbt40abPqzb3GjvgN0g/juDxrnUXpwJVkvY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=658974460fe2c782320ce4940e395a3e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:45.972Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 675, "fields": {"password": "pbkdf2_sha256$390000$TD27nFLE60kvWLrAm9YjqO$uvtXSLGJljoIvsTfHjFwqfoE/7O6XSpk5xYOL2K7B4k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2fc61b89187a4c61510a2b55c3c46c8c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:49.231Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 676, "fields": {"password": "pbkdf2_sha256$390000$v7PJM1W8i6XvvzF6RlO7lw$0gcYBsl+qrMf9681YOA+BzPjrHKu7SQ92BtR40xOQoQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b2b1b9805e4fce98e9283f65726c0d1a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:54.080Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 677, "fields": {"password": "pbkdf2_sha256$390000$JMachyD01Rqr4eR2MLGec0$YPtWaXFG02owNwcVDrHyrheQ5rHuNw3AmTzcAxAgiI4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=bb63755062a93d11b579922a5d4557f6&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:09:58.852Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 678, "fields": {"password": "pbkdf2_sha256$390000$fnKN2cRbfPGYVRoo5Vujql$QG7oWZRwVYKpmYbumUniYRdFC34XFRMmYlL77NHxt4E=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e11a6851c5d65ce0cdc034161dec84bb&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:05.206Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 679, "fields": {"password": "pbkdf2_sha256$390000$JWV93DH74cLdRIA7Urhk7M$GnsUZ2zQXIzHV00W8sLz8c6xnxdfnfz0rGt/N84kDB8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=be715aef3cf17f08cb401a1100d6fa07&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:12.842Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 680, "fields": {"password": "pbkdf2_sha256$390000$7w1L4V3ocWBNKeVyskze5r$AQEAAvIBpoexz/oJ45qYcdzWHmp717L7nicA1OMDhaE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=dfc8aa5189db8d46f18f0b9be162c243&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:17.281Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 681, "fields": {"password": "pbkdf2_sha256$390000$NE2dKdQvw8mx7RK7YJ23Gu$dvTfimwD/2UgDL9PaEQGRfI/rVo5UpELhEhhgHhnjiQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=7ae3ebce7bd046bcf9c75cced168a443&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:20.606Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 682, "fields": {"password": "pbkdf2_sha256$390000$E6SDOPqgHK1WoWwvsOTIwH$7NCBZVtU77E6GPXSTIpEKgSOyCL8Rr3RBpfZVpMP0O4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=61879749583a4529e95679e7452a86d2&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:23.708Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 683, "fields": {"password": "pbkdf2_sha256$390000$W9nYz5XqWrfrRr8oWv46Uc$nAhNlSs6OVi68gtzi+Mf2QCg17XdmG3d4Y7nJwqY6qM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d459c50f4443a347bccf6450647029dd&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:26.423Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 684, "fields": {"password": "pbkdf2_sha256$390000$uLhqF7NGXQsXJZYaEbhmif$VsnZAEE4RPuDyq9Bigqj/J3wRZ9o+JenuZG5d0nhuGc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=0d79b94724af9cd75689262ee92da184&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:29.931Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 685, "fields": {"password": "pbkdf2_sha256$390000$cRujGEbf9tIC7ksdbgg056$p/kfl4rhtm9ihyp4oM2TaWP7oARMCR3I/uzmPMy/SWE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b396d31f9cbc1cfed6da9c8a22950fd9&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:34.244Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 686, "fields": {"password": "pbkdf2_sha256$390000$L2lCWbky3xjFOQw2UePYeK$5CVxIThPMQ/fpAyvq318uLmBYKVgPd/PHOp3QYnF2LU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=96464e2ebbaef795712dfd01252fcbb0&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:38.035Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 687, "fields": {"password": "pbkdf2_sha256$390000$NKdwLanfZXYj4L2g6CWoZ2$DVyhd8RURcYA6VBWD2UBV25a1Xw9iXffIFUZA9T/f00=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9c35867fe4b7c771540233491507e9bf&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:47.150Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 688, "fields": {"password": "pbkdf2_sha256$390000$iulRnawcYIsTDEqRkyJhdD$GjiJBplulvU+QHbHkV2/1dC1Vh1lPX+8qymO1YkozF8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=0029e9b4f9a39b49c06ef12e63d9e90b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:10:54.934Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 689, "fields": {"password": "pbkdf2_sha256$390000$A9rP1NFN9wUn7RxYxQoNNT$/+EcvBAkAO1yBmud4GBGLEr46bN2ctEwSmygd5z+vSU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=42eaa9e5b19520c051b7ef45d0385596&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:00.293Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 690, "fields": {"password": "pbkdf2_sha256$390000$X68kWUOj5wBmrGiyJRjKcc$GXWsoS+PF8Tp2ICRr5jD9BaX3oiM0LssJDBY1v+qtb0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6f703e5e1e6bcd5c9c28b063daa66e8e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:03.057Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 691, "fields": {"password": "pbkdf2_sha256$390000$6hvehOymAEiRAVGrrmjoqE$dNLq1y9dGLO6WwbxSyklXhnxLIXevtzuWZ70TlNfNxI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e580c837dcda63e3279636bdfbf7bf2c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:06.405Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 692, "fields": {"password": "pbkdf2_sha256$390000$RKe4A9fc3ghf9f4iPZNPfB$6/YHa6SEtZ87Is5gjit75vfjULJU4Q38ALTiW90vXqw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5da071cc0da941066bb2b0f40f6cba15&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:09.649Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 693, "fields": {"password": "pbkdf2_sha256$390000$iQ9pyVJtMZm0cvgvOGjbE0$NXsg44Cu18QkjI/24K5E1ouIM+jS7bVTBsDWm0WkaMs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=7f61eae7b90494a4861b7b1c26897aaa&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:13.102Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 694, "fields": {"password": "pbkdf2_sha256$390000$38OQMFKMRluzHdS48OnBvL$fHpHH3i2BxmQxotYHE3fKtIZ1gjBRlRkDqpfFcnaXdE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=0a549d3e9a3f6abc2a8d27d9c018978c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:16.673Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 695, "fields": {"password": "pbkdf2_sha256$390000$D105RKDAnylNCXwIE98a8O$bDlmGXtypLU2n9r80KAgQ1nqu295smGwbXPbU/vByxQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6627caf7cd9074c0adffad44a1269077&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:20.565Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 696, "fields": {"password": "pbkdf2_sha256$390000$mgh4a1LUluIjNcdVAkEsuu$ntKlT1+gp9hoN27QCjWKeYS1jFLeUg/RoZgodOD/lVY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e1c9602e6df9ecd4cc91288f84793ad2&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:30.723Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 697, "fields": {"password": "pbkdf2_sha256$390000$HmERZZ0S3cHe9cLpSLLAzC$StVpt7Id4NYI2afTSrrgH81bKXmduUtNp6yMU2RNVxY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=503b2b0f8ab75f2731d8d82965918c6b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:37.370Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 698, "fields": {"password": "pbkdf2_sha256$390000$fL8gbIGaPTK051DN5eyzCU$NYQmOKsYbcnXSsuRPK2DEY0t83Fo4HlCKM/uKdwgSXw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=71865a26532ee9994af18df5e16a744c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:42.507Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 699, "fields": {"password": "pbkdf2_sha256$390000$gpXCcRWQgow00OqCpsleAD$4PnugEXXlarOsqiugENZnsRAJ+PtuQFXZ7a8GEigr4U=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d4f5adce54c2bea293c5723c025a3f1f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:49.664Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 700, "fields": {"password": "pbkdf2_sha256$390000$naXmip6bGXiUYGFnWg0QzV$U0Fwm+aD2Lt4FDaBUX5pUbA3BXU7NbseDKeql0hLhLg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=0053e856dc4d947be1bd84bd43f72b63&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:11:54.743Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 701, "fields": {"password": "pbkdf2_sha256$390000$WJg51mn6nV3CrOva4ow6yJ$ho4dkXRBCZ4mJi9s7wH1zPcYvlc+50U4TOpKqxj8Llo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a798b8efd7a7d1e7ceaca067a9290c31&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:01.001Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 702, "fields": {"password": "pbkdf2_sha256$390000$Be95lOmgL0RQ2p8OpBHsi6$ym2xalbXhl78kcFxaK38ikD9tffCPK9jf1ehSgrfjzg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=239343b3181176f79ec1d7d0814f2e8d&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:05.422Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 703, "fields": {"password": "pbkdf2_sha256$390000$1BbMhL2Vwz3Ta6kYz9Wifc$Kb2gPNFqZCY87JWMNt7GYQLcJtE28ypl9MrBEkFn/Hk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=4a31d542c0f7ec5fe575daf4050c0ed4&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:08.442Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 704, "fields": {"password": "pbkdf2_sha256$390000$L6V9ZIMtPMjnjL77ps2TlX$VrMW9nRJupqWJVNdibLtlNSdgfwLSfgUvpOTkZTAz18=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=95719128ce5a42c55fa3b41660a614cd&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:11.575Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 705, "fields": {"password": "pbkdf2_sha256$390000$riZtOUzJOZmgIAUNfKiN9n$KWFihlnSXN7z7ro+O+SeLTujF4xBNszSFRPpZhfUvHc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2635ed5772cbfb3ba25e4752ecbfafb3&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:16.135Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 706, "fields": {"password": "pbkdf2_sha256$390000$JS444ZrhXxX7jJPBfNpIpw$qTwJ6jyTghtX7Tlh3qQtFM48BuMNNDZhT0ZIlVQI+Js=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=bc967b38c3f28b90d9d2b3a467e204e4&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:24.798Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 707, "fields": {"password": "pbkdf2_sha256$390000$qBVDpplaC1fOKhcnXkjkMe$GCXqe7gqqPD/z3Lwbr+dxl1XOTO/6GYsgA/BYmH/YEg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=103bebec8000ca5cee7e0de3cadf3c6f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:29.091Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 708, "fields": {"password": "pbkdf2_sha256$390000$53oPiPUyNSWXWkrpsq1bK8$dVbbhdJs6Ot31Xasflf1xOz+aCaXNSe9NpZfmKpstWY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6fedddf957cc5c12dd2cd23cc413488e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:34.092Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 709, "fields": {"password": "pbkdf2_sha256$390000$GgqY6D8bP1w5aB9OC487CB$H0MFXmRjMl9uKwQXBgOGwaJvLJstOYVFA3UIrbNSGEw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=81858e862dde6832a03b5fec97edcb86&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:41.176Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 710, "fields": {"password": "pbkdf2_sha256$390000$nzCn8WcyKt8Ipo0hJEiych$WULkmxbPNCuwvEQo8KyVAKasESXyRRr0IInIZcnoZOE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=79ce87a0e409cfc8590c28672bc55f48&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:47.454Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 711, "fields": {"password": "pbkdf2_sha256$390000$kHGQ1ari5a1tmPyppgzgsq$UD3SolTFgqDxyzYBtQ34Zyxflk0L7lJZswDgCoXSzNo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f43a753b878fdfef16a956ce7a07e3af&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:51.512Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 712, "fields": {"password": "pbkdf2_sha256$390000$KWH8a3L1y6ZwRkyRwNMuV3$r8x4PNWmShQHn/R84alxU7NA6HB1HhNwV7jmMLFGMAc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5c44d464f772724260b74774e1d30446&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:12:56.003Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 713, "fields": {"password": "pbkdf2_sha256$390000$fFhb6TsbV232wKKmOJ1OXh$brfnyjyvVdh7nNsnHS5/M5AGwD6rCyOZVMECuUGdf4Q=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9d5a4187a4d049b651f28d54454527ad&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:00.166Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 714, "fields": {"password": "pbkdf2_sha256$390000$j1h22xLykOEfCdeaJczZhD$SlVTz+c6pxKhaiXea/dTyhJHxCODrMZiQMoHnkLr1No=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a3b6d5ec8547f1e48519678f8572304b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:04.690Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 715, "fields": {"password": "pbkdf2_sha256$390000$pQ5UZjtVGPI0pZjJ3HuOoN$4SoTJyD7dNgSEGcjnwbuNPWjrR7b5fHahUe/mlerITc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=88f19d3c878a74bd5753fda8b62aff83&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:11.187Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 716, "fields": {"password": "pbkdf2_sha256$390000$e0vTUV2XIxuWmLo07ovJXQ$BIN0tuGf2ibbHFS2PAQuaFH6Jgj+oqr0JXzaXNnPEYQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=60ccee72223dbeaa6f9a18be8322dbac&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:18.741Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 717, "fields": {"password": "pbkdf2_sha256$390000$AO7oTExzofwuK6IBudMQuu$gHxUMZKu+GkBdWYrrJexckEzQQubgNQyxtNWBkv3LdY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=fe367b6e11f597ffb8ef2fcbe87651b4&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:31.917Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 718, "fields": {"password": "pbkdf2_sha256$390000$9KFpLZCOcAV2mTd9s3Fblr$2pEIV4hBREvNDLw/naqFFrrjZKs5ZQCUcNwWWWBR63I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=58e1c0c5581800ad11a1822e182b297c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:35.844Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 719, "fields": {"password": "pbkdf2_sha256$390000$KMsIYtef9JcIxIAzfJmb0k$niYoedj/rGxyHcYCMuTG2Fk1d4kZUw/Iq2Y2JbILI6k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=c92dbba9a0414d3f86540c35d329ac29&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:43.456Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 720, "fields": {"password": "pbkdf2_sha256$390000$2ZEZ8KShkcidEz6KwOs2IL$A/WhgWcXh8mn8VbChmGvhzMB3uj4msK6QAV5TE+S7eI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=558a5acebd4d6503e21b7e38dccf21a8&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:13:55.343Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 721, "fields": {"password": "pbkdf2_sha256$390000$an8QTy37IlHLSehA4XjJoo$QVjD+8SFOTbvkzX3vl+uNnrnvYWdKZ3d2UE8FwroPig=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b8748cbcf0a06f8ec35f20e93f53eca2&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:14:00.155Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 722, "fields": {"password": "pbkdf2_sha256$390000$DEPi87KNcKlJp27mRVwMD2$Mc22JdcbZbV+V1y8H97QqQrpeZsJi45aRVG28TWx6to=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d6806093b2aed794b92722aa335cfc39&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:14:06.533Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 723, "fields": {"password": "pbkdf2_sha256$390000$lzqU9LJwZaoHB0SAhyt9CP$M490nW6ZHbcnoEcZAvQlaPO/CeEcxM8pTxx6pk55+Y4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=20f85c77286606dc5f38636a5564dd3b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:14:36.747Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 724, "fields": {"password": "pbkdf2_sha256$390000$O1zV9zOc9Z21XkVTshqOBR$fWAGD74hHro7OcJ3HOJWVogICyyx8xsftQJCqY7os4s=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2b0b0f9fab46c29c34954fc6470d78df&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:14:41.735Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 725, "fields": {"password": "pbkdf2_sha256$390000$jbUUJImebLaS9CnFI68r5U$aiXSngnbuNFTsm/VU6XMsrSDWcP+s5FSkE58AOST2a8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=60d1d2cbbe5ab516cf29c52b8c68a59a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:14:45.031Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 726, "fields": {"password": "pbkdf2_sha256$390000$xjdPT6ZJT4S6XXZ4ySnc88$IpoOt6+M5jgoclFeu8gMXZx5zOvGtuTeRIMohb25DoM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f44fe46e83fa0dd78b008eddf667555e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:14:50.147Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 727, "fields": {"password": "pbkdf2_sha256$390000$qAQMKQH6eGN8Wz5qw07JFL$WXI2QpRLPLM6hne+asB9O5RP19zxSKlG+1iowDh/ee0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=90ccd827d47f3279d6a82a02d977199c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:14:57.404Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 728, "fields": {"password": "pbkdf2_sha256$390000$VjFKCy8urMm5RPGZmp7aiT$82ykvIiWAEj+hhHs48Vp5oyxUZxK8yc2JDnECzsMdvQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a2314368709d65bcc9ecbb0cec30f98c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:02.168Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 729, "fields": {"password": "pbkdf2_sha256$390000$pQVuBNjS6namTn6b4gpp9a$j6tjYYBvUWmRcbbmuFSCprvwDJUtP/+YgZbYrZdNM/s=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5566e6239a4cc22d6e6d5f8f0bd238f6&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:06.638Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 730, "fields": {"password": "pbkdf2_sha256$390000$IpBr1iWqoGZGeVfWMf4Kud$yBfpC5waJmYyM/qeNriUeTkpSIoH6iP5E/6CICSzG2A=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5cbb9c1800737c3efb28c7b7fefe7d7a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:10.357Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 731, "fields": {"password": "pbkdf2_sha256$390000$1kD5dEKpfaVyVr4Y1peUQ6$FJ9O2YW76g96ixZLVwNakGI+Dw4wIhKpPJnSXCXVYLE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8d51f1e82fe127dcc442307c037f11e4&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:13.181Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 732, "fields": {"password": "pbkdf2_sha256$390000$CqsIcDL6InHJzMGiGbGn0m$3ZTncH97Nnh+LF3E5WU2Bb15AI5Y/8KIE45SbdRRNkA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3691ff20c5366377dd39865faf25b0a1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:15.693Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 733, "fields": {"password": "pbkdf2_sha256$390000$g5S1Moito59vlWWuq5Ne6A$PkVszihlk3k1alp8suQnGE4Ux0mWaXE4fLrfoAO/RZM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9c264faabba077a6480ece52b0c6c898&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:18.438Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 734, "fields": {"password": "pbkdf2_sha256$390000$75cSfmLBduqLRvCLmOj6QZ$taC4sQwuZMb72flAFg50GMOaBlif7Bc3RZm915IYfZM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=39b60c71e4b169bae47a8136675adacb&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:25.121Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 735, "fields": {"password": "pbkdf2_sha256$390000$UdAS7hyUK3IXfAUNv9eWyD$hAHb9AQNuvP1wqajZdiL3sHzZ9akRIUfh5MOasEe+tU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=62ce4422af8761defb5ddc92cd712e49&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:29.736Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 736, "fields": {"password": "pbkdf2_sha256$390000$Sol0WBxGe2IDhM2n9CVhTo$Jn/yJb3qLPUswQDUhWwHNS0hJJhACeyasC5Ioq6+jd0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=312a7c7ce0f1d2792456b25bb1e515e2&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:33.326Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 737, "fields": {"password": "pbkdf2_sha256$390000$ECA7qbXw7lhnwEw0kNI5dp$zcAQ3WBSJasHxiGa+c26kT++qUBsgbOFc9ZzPq3LQmY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=431a5cb3290236f058f302c4c7dd5ee5&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:35.920Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 738, "fields": {"password": "pbkdf2_sha256$390000$edNlU2VNkxMYGVdsul6prE$lXxmO6YIGhi6vNFeIfzY3F1Bf4jR6RoAO5TFZXjLa8c=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e2b7ab5feac69e5548a7f21791d9cb34&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:38.683Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 739, "fields": {"password": "pbkdf2_sha256$390000$HZK59kZWwKnQYViM6gUIYn$Oh/WBC/1QkXJUkldj3KTkXNdRYhUs/l1ugKK3bi1wFM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f002619f627b8825666e1157fcc68584&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:41.430Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 740, "fields": {"password": "pbkdf2_sha256$390000$XpssX9mwP4BLDl2hedcPa6$Gn7tQkPfVeR0tqhqABELOPRR5oVcTgmW7pY6M+35ddc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9b201c89c53dea84e4ea307656bbfbba&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:44.968Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 741, "fields": {"password": "pbkdf2_sha256$390000$nm5fRKAPE2y76rCcvXUim4$iJFYCLCxyc1bA7oj9y09VyFdcNu8uBxlVkbdy7TaFGA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b4c7e9d6dbb15788e04cfc720862446a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:50.854Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 742, "fields": {"password": "pbkdf2_sha256$390000$e7zj7Y2dWlu2CNVlo7AHav$2bA7VHKLRrx20vlMFSet4KB/1l9FEgs9hSyhUvakoN0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=20889f908f07db5dd860bfb7dfebe832&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:15:58.664Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 743, "fields": {"password": "pbkdf2_sha256$390000$r7s2DNH16sjxFhgF8qcZrm$1m7MW+cNKchuGP2oTK4ZmoaNmcIZ//R+rjLRxTMz5Bo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8dbaf2d7879e87017acd2b33631e295b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:08.173Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 744, "fields": {"password": "pbkdf2_sha256$390000$f2dJ8mQ7muK4QlU8NGZKmz$Fp498VAkm9pq47ePVvB7108m+iU32Efqab5/MNVIeEk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5204779044e518795de1dbb569533452&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:13.613Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 745, "fields": {"password": "pbkdf2_sha256$390000$cNWhnDm8Z2wPTcF92fDf2b$UpElyBNdRkOUThG9dnt6/zgZWgbrvB6eA+lrllj8H4I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=bb4aa6149ab208c02de9116e99371d9c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:20.511Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 746, "fields": {"password": "pbkdf2_sha256$390000$2c8UyJB9KDCXs7xW11FE3R$jcvTBN7OjOFOFRsGDVD8iN1vR3WN/5WGwtsrw5tacbg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=84a14f642b3ca3011ceed7026c413618&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:25.274Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 747, "fields": {"password": "pbkdf2_sha256$390000$K7VZcWTowtG5CjO9I7Xvot$Ra8vv7IYdbRYWRdnGSvmHQJX8brFe5dArbS6fu7/HbE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3a758dc3e7c203c2a4a53060854e4eae&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:28.843Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 748, "fields": {"password": "pbkdf2_sha256$390000$lJQrfkasIpF4wWVr9057Tc$De10wxgxYrazOxdhkNzO8KA24jH0k7Wm1A215BDy1sA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e95339c95291f1aab067ae4faac65420&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:33.717Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 749, "fields": {"password": "pbkdf2_sha256$390000$JD1v9ii2yxReGICqe6qgAN$wWZ8iA8nwQWydhfGVGsr0zk1pRelUespdqgbRddBfKA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ac9e5736f20bb2a2a04db7b10beb4a13&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:38.417Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 750, "fields": {"password": "pbkdf2_sha256$390000$LJCH02plhlbbhsiPVA73ec$Vk3C5+rcInN5izCTGUDZt1i+xFqDiU1w2w3rlJEG9v4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=de0cc9d00f8292e9741078a6c8ce0d80&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:43.542Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 751, "fields": {"password": "pbkdf2_sha256$390000$oyEkFU5sc5SPnCSirGG04w$Wsve6eY89cgpoDjfRWPMu2QfxNH/GSswOSNnFxNrzyQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d857acedf13d06534dbcf2be76c7083e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:46.630Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 752, "fields": {"password": "pbkdf2_sha256$390000$i4hpJ03TP1Fnb6MfPz8q6u$T2incW5CPrQ8mX9j2EXqbsvbeslLPILIZZOLVjdLUb8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ae317fff7f4fcce2645af9f97e30ceb1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:49.941Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 753, "fields": {"password": "pbkdf2_sha256$390000$GcpSXQEFZnEW4QzaHShgtb$AGuNehwfl7n5tkD22I4Ok4WTfp25KBIVhiU264xerKw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a71409af6c767adec23e78773a415f79&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:53.381Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 754, "fields": {"password": "pbkdf2_sha256$390000$YMU5SeYqaHKY7lxptN1NIo$yZ1O83oOzdTAzgwetnCxdbJ0WMDYZynDvPbrL7/Inec=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b27d716a2f8f729c9a09de50c0ccf012&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:16:57.513Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 755, "fields": {"password": "pbkdf2_sha256$390000$9DiL6Sl8VqyAf7c9RnbymI$/MhYOoG9X1mgMV8c9GIsxK6a8+SnjCr5v+fqDc0Opao=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ab45066ef3f0c1305cb4b30abcb64673&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:01.274Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 756, "fields": {"password": "pbkdf2_sha256$390000$RUpRiyuwF0zIn77linPeuC$BIJa+pSEem0klmu7Ip3keaVjsAUxSKfthP4MB/aqcI0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9ce598a41fc4b2219d7343ed47d27448&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:04.945Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 757, "fields": {"password": "pbkdf2_sha256$390000$yzCsb4FPnn9WLF2Z1k471a$K1OTS1U8+dfxToqBLNgo6gji7pjoZkBszandxs6QP1Q=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e58f53755c570707a8e1fc2b27e3e1e9&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:07.849Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 758, "fields": {"password": "pbkdf2_sha256$390000$Dp31cWCAtiPUaV87of86mh$HyBbvxJk/l81dxo75w0KbtI9HbJTcyIaKtoGeAzS9pk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=5d26e456146fa155fcb0edc754c32559&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:11.735Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 759, "fields": {"password": "pbkdf2_sha256$390000$4RnElFbEhgvjjk4zEWHoZi$ySYLIQi4760Bf8AKISWYKcRNELr1TLPSZans8s8ges8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=336af440aab187b3bb4166d39f564c2f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:15.436Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 760, "fields": {"password": "pbkdf2_sha256$390000$Y2enKOFTxSnGwJeaPpBFcb$A8PhEWANYYig7Z5b4hsv+ZoLxuuIVtYO1dgt+9dtMRU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=cb63d00872727d428a5ce4e08b9cf178&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:20.889Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 761, "fields": {"password": "pbkdf2_sha256$390000$4jq33GFKZSmcbMkY1o1Gw8$+PflqhZoCqJBC0TEEbOOT7A0LEIjW4XphdTcNhyqWOk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2d34bfafdb03d2224751b25595d3aabf&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:26.968Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 762, "fields": {"password": "pbkdf2_sha256$390000$6ogcn4aAI727qjwVbMooXU$7MFwjKonGJlX0XDJuwBY/j1cLEXczmmGOaDl3wO2pXA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=729dc9d7a4ce40fd3a2c03a73ffbb70a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:17:31.838Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 763, "fields": {"password": "pbkdf2_sha256$390000$xMKaGaePAde6L6AWVytCyz$2IPz9NZqLIoJA4zrV/5kUgqsHClXNKwWwdmSqizSglo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=31b508b4427301d350b61ced2607716e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:18:25.234Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 764, "fields": {"password": "pbkdf2_sha256$390000$a2gxij13xYWg5DSJMn5m5o$Rt8vizqH+shG+HqqUTi+CBy3EYnUmKAte1HLuBtR+90=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e723e79f4f51ce60f1bc95615e41abb1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:18:31.736Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 765, "fields": {"password": "pbkdf2_sha256$390000$uZoepA5ODmcEmj9pHfjjKl$6lSXueGwAogfP4tD0+5DozL7bs3aiXBGgRz4+V3wzCA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=0c9ba986973d966ab3092d162f2ed197&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:18:40.744Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 766, "fields": {"password": "pbkdf2_sha256$390000$MfpuC1bKUGIBF5Recvx8kS$cXThvgUKs5oSi2+cmEBlvp5vyeDRiHCMCV/7DBH2BZM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6597a08fe7e5eb57ec394f06ef330db2&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:03.952Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 767, "fields": {"password": "pbkdf2_sha256$390000$iCinCFG0etJKHWGiCrfBE1$DFmEG8eIwsWufRZrWzi1Vbe41D8WfTJJkK7KieaqJdM=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6e111bd72f7440d6efa9e784271458de&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:10.414Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 768, "fields": {"password": "pbkdf2_sha256$390000$O4b5Lx4QNdCYYxsg9yCViy$wAyfPNyDDkulVm3uz/ZUA/obxS9uW46u6Jcv5qqYKPI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2042d47caa3dfe89ceae62eb05bff401&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:15.897Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 769, "fields": {"password": "pbkdf2_sha256$390000$xOJDdCYua83powslTHUdCJ$aT6DXLC8pf5S4PSfBGZB3xi7C2IHCJSR2DK31Zm+m6w=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=7dd03c58c43c53ec396931814300150f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:19.310Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 770, "fields": {"password": "pbkdf2_sha256$390000$rCtSDOWOqDqDEWHbvbz8uj$X4/HYnmQ/qiGTX6hFfkIExq3I6GH5fDTRDpnJMjAZ30=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6dda55d46b69a0219dac442987963f7f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:23.690Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 771, "fields": {"password": "pbkdf2_sha256$390000$WIa6bjyCynwteq3YnekwvM$01oScdBLbJfkoBmsa3iZVAUEEgItehpxnPhg0+cIB+8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=9e86c9844689ac47aa1ad2b20f77a4c0&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:29.429Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 772, "fields": {"password": "pbkdf2_sha256$390000$XYODR4E7QF5nTv3X0wNACw$B5LI8i6fqIEKSNyYSmEtJ2lNWC2EJgB4bww0I6VDuqQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=396578bb89c60cdf467f08e3bb61e27e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:34.799Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 773, "fields": {"password": "pbkdf2_sha256$390000$ErtURLNZGZsM5ebJc3VRWf$RX5PBpMtqRFGSbZJFtaTGMn3EQ9Lt7tPOcbEsmhjqUw=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8b0356ea22b4997f1d5f4a356b1fab6a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:39.545Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 774, "fields": {"password": "pbkdf2_sha256$390000$qwwOSag7mTVctOBiu1j0XM$FHsjraI6cylQhsZD2z4PSb4esG2yZn/ux83MqI9ksYY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=6d59105b693d541fcaeeb1e9514356b3&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:45.852Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 775, "fields": {"password": "pbkdf2_sha256$390000$JqvBQSmNGAyHj5260Rxsnu$S7glOJPKSIt8solExEb/OqViw0cNCLkI470PCQWctMA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=cb3bec393b964e09d2cbb56a260ee49b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:53.824Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 776, "fields": {"password": "pbkdf2_sha256$390000$TQGJD7Dj47Or2mFyPxsf7u$X9V6sF8OVfDfIvVHS3ugQBlpJW8MxiDVQnvEqeLq7jY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=36b2b995623767a1addad98e1fc4734f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:19:59.525Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 777, "fields": {"password": "pbkdf2_sha256$390000$qRWOzTJI79srWdfzwUCItz$ylKy+kSj5JpsBdX+42sqD9bL4cS18ws8EOGh6CYXt3s=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=c789c9ef2b2134c941044293a802ffb2&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:07.052Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 778, "fields": {"password": "pbkdf2_sha256$390000$s4TiC5hnmi4V1RBFzECFof$f0k/JaHfXNWMDim4e6LYzlzGSUjUD3RylEioqI4JBy4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=7dcd9faf7d97aab885f6cb5f88202356&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:12.983Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 779, "fields": {"password": "pbkdf2_sha256$390000$OXFoMLd7azxYL5ayKbSR6W$NozePKS0XmuqAc7ZRfxV37ueZZ51sAUkfz81/UIykjs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b72ea40b008502fd8a97d7f3b0cf18de&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:17.448Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 780, "fields": {"password": "pbkdf2_sha256$390000$fxAnQVDMCAfQJvBIRHzevp$59rZdDNeytrdvrfjF+yWKP62C8qOQo4bKGb6UogJauE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=3ed7f2c98f4b26f6f2e02c32d80c2c44&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:20.346Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 781, "fields": {"password": "pbkdf2_sha256$390000$Wunrpuj2gwpziU6BTqwVad$H+2zP20EaVXrS4nPzKGKjAwe2i+GrZbwqxvpWnvFt4s=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ca6c95dc57389075653be94c872ce472&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:24.105Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 782, "fields": {"password": "pbkdf2_sha256$390000$oAL4T8bdQn8XlWqWg2hErK$vaZakX52466/K5XaWus+UKo3jJLXmWasImEWuugWwpA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=900761ba94102777535f745d78e739f7&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:26.828Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 783, "fields": {"password": "pbkdf2_sha256$390000$tHAu4brns7eJBjgvpXG58t$b4XNPMTcE/KV7vZKVzUV/5ABeFUhptbYiLqxStAx9BQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=cd8c21ff1bbec440600d99b0fdb764f9&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:30.197Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 784, "fields": {"password": "pbkdf2_sha256$390000$vm9O6pdmUfJ0slUkb6LerR$7/yuDn1GpVhAhIzQQkS7Deva7hwlESM5sEzrHyQ/SjE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=29b3778ccd2d40143f8b1613187ac00c&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:33.606Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 785, "fields": {"password": "pbkdf2_sha256$390000$5FdWnvX8v4bC3uAwkcKieZ$gHpdatK05+HQH1jfDt+hh5+/lj6wk5S7loNjW/2maMI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=45276051297085fb75ad68b194cdac69&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:36.669Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 786, "fields": {"password": "pbkdf2_sha256$390000$8qvCXRVCtNcOCx7dYLBovs$+5AscF5T5p7Bqlo1w9M6QS9PVqU4e4mX7Wg1Z3XpZFE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b517d3e64b0b9c4ff2248699c722e915&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:39.842Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 787, "fields": {"password": "pbkdf2_sha256$390000$nOsHLiWACaD3pHSPUPaqfO$YEmxasfRtPh2sFuGtSP459pY4gzW03A3apj3VjZhYf4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=1743dc1925d05001f9be715370b2fa2b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:43.024Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 788, "fields": {"password": "pbkdf2_sha256$390000$oKQ2VZ301p8KOaPfncEOos$vK4qmP4FO4+bKFsJ0vYXaH30eA7qIE5pKnmoYs7xvxc=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=807a94699799c965af48f34a84b6c371&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:45.665Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 789, "fields": {"password": "pbkdf2_sha256$390000$ylNFcAHLjTlpcEXYrHVMS7$/hvWoRkmggE0crom6UoKmz/xOQJAzQFYafWC10enbKs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=994c88ff665da20b14be6acfdc5c4693&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:50.242Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 790, "fields": {"password": "pbkdf2_sha256$390000$J6WRI9cgvjxsyqbLpLFReO$j8HQEn373w83RsQUcxL8PNfyGkZMZNpejkiyT/ISYlQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=a8523477288f146eba52a952999224ac&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:20:54.995Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 791, "fields": {"password": "pbkdf2_sha256$390000$E6XEO1ISTKIk5UGI2jO2zi$wBAMDACKf8KgMk/FXLSqruR9as4mN3o9KgXqJkbpP28=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=09b1dc8e53ea0c984e46a64f61ec7cfa&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:00.072Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 792, "fields": {"password": "pbkdf2_sha256$390000$u5PGyOtTAXnpvAjwJDr7sE$pTLpWi/FaLGUjF+IXm5aCoenOZICSEPiHWTL9EqoMxY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=8bbbe28c9a19094707232352b5bfe6a0&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:08.446Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 793, "fields": {"password": "pbkdf2_sha256$390000$qr10TBMoM1bfDULyXcZ9CQ$HeQWswThmyX/btV52lp2TGYdo3/Swr/TlT2dsrld6XU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ba45f75fe59601dded063a479ae27354&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:14.233Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 794, "fields": {"password": "pbkdf2_sha256$390000$AkgPo6T9wyrNTeIWnk3WcM$PmILK+E9RCgYK6FmhERAvLP2XYDHmTZKtcfICkIA3H4=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=2f11b58fa6474409a1f0f23bec60af87&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:21.420Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 795, "fields": {"password": "pbkdf2_sha256$390000$kPWz4z7RyyxlpeLpJIbt2V$qq5/XzTFCyoxjrT7q0amMKqkpyL48u+dF9Qj+MOJqNU=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=fb577d28df343efc6162797c09a19efc&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:27.437Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 796, "fields": {"password": "pbkdf2_sha256$390000$mFPhLMRGgc9Y1sF1ERGJ3a$/DUW6JA+Cit1g7x4f5yx3zPRnkuffGAtdG92Z60liEI=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=96874a78a6a508bb369156f6dae3c624&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:32.121Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 797, "fields": {"password": "pbkdf2_sha256$390000$z58bp52RnDSzm0VuiqYZeh$Fp9cB1a+zP3SEdz0Oq5iE84YUWh5dodQ1K6GNeMvIwY=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d1ecb5bc423e273fd70a02d0512a7409&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:35.790Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 798, "fields": {"password": "pbkdf2_sha256$390000$zGHfUPh8Yr5GdypUKSAGhE$hh0kEWMveLKwZVIjO8skUJopKFu5ZrLt5fYQ1tF9+q0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=64af0abc444c25fe021acbedf36be4a3&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:40.973Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 799, "fields": {"password": "pbkdf2_sha256$390000$lK2YugXNM467BbLFEADQnx$jG43a42lNuQUH0Kp33wm2Li5v2QD4w/ojIcwTQCaPsA=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=e5548d81e1c5d51a4c0e0e86c4120cde&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:45.515Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 800, "fields": {"password": "pbkdf2_sha256$390000$py7B5qZHZ9TyZbempb9c3p$bD6zIpyN1GSz9601lzXcAe+a8inO8g/WuUatQVhS8Gg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=08c07ef6f327380fdbe328c8f688444a&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:48.384Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 801, "fields": {"password": "pbkdf2_sha256$390000$6nd6NDjcfSGheYKvpDGYtU$ev0aoF6r9jMZR1PcKzap+uowcq166uZFApAp0POTpG0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=324310e84a1eb4f5c2877ba328f4d82e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:51.024Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 802, "fields": {"password": "pbkdf2_sha256$390000$Dkh2BBDVS35vzcMzXm3Pqe$eMQf/iNYBYmlGo4hP13KD3bdh6JnmhS7ldg5bqpHwTs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b40362ec7189d41e3ed4ff7528863df6&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:53.913Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 803, "fields": {"password": "pbkdf2_sha256$390000$YWtAFolPm7E1w9gLlLZROa$UFW5UMjHWcpT89VqEOo1AYgmZPxxugyy87dOFGFp8Xg=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=fa1f13ef8a919c1fd9be4eb7efba3b57&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:21:56.748Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 804, "fields": {"password": "pbkdf2_sha256$390000$9L8LEPv7nKT5zZpYUuSUO2$Dbua1k4HZK08jrVS9hqqSAfUzIgcOZKYXHNWeP8923M=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=f9513b21935f0b6eb1d6e75eb9a6930d&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:02.485Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 805, "fields": {"password": "pbkdf2_sha256$390000$P9X4aKv4xhqHVZVImQfAa6$12Q+ZJ/RHIa02kmNfrVgIuFWWazLcK5hQy0MdCB8fW8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=ad04a702a04d4a262dc89216f90f270b&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:09.476Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 806, "fields": {"password": "pbkdf2_sha256$390000$thgN2RtuCJCPktM8ByAj3p$lChKzyoFXLxvS6xobqSQKZwXBo11zqE066Uj3ZzK95w=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b409420142e1b60017b6b196eee952b8&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:16.652Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 807, "fields": {"password": "pbkdf2_sha256$390000$HgJ9iZafDIgLTGJQoWrSNY$FMk98h9SSqF9oLHFwtbkFHPkllhG3DMXi+rkNGNxqQ0=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=08c460ae055b88d63fcb0dd1777e4656&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:22.945Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 808, "fields": {"password": "pbkdf2_sha256$390000$cMvr9BJZH4OjLRAQXKK2b0$DPZcbjDaQX7lyCHvREg3zm17VCE0c6VyMZ1DgwA9X2k=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b8b282ed0ac1e67be32e937bb936299f&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:30.546Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 809, "fields": {"password": "pbkdf2_sha256$390000$Ds4v9CmVP3BSGCrd18pXHE$pheH15HbLMTqt4GNTsDRYm+IAdA/CHGcgzhADqdGf5I=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=cba69931a975bd0b0df6dcf5b2f68426&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:38.413Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 810, "fields": {"password": "pbkdf2_sha256$390000$PZq2XHUYS83zE90ikErNq0$UKF4iwUdhccLI0emRvUnhY9kJoMtd4HW7PQFlTCgbd8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=b29b8f0f9fff3a38c6eb7cc5b683b5bf&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:42.980Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 811, "fields": {"password": "pbkdf2_sha256$390000$YJLx2F9UAJzGc3wMTan3Yf$dg2fYThSfNJGU1FirZouBXTU3/ykXsQveoBDo9uIijs=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d06a0e6d568cb5fb3ee6865707cd56bd&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:48.499Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 812, "fields": {"password": "pbkdf2_sha256$390000$4LpEX7kXUPLzAqgRyQmlrG$y3bxhq1JaLxofoaeRm7hpVjzIB4MVZl9n7bPMjauCNk=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=d478f8d020d4dea2faf624b20cb61416&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:22:54.242Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 813, "fields": {"password": "pbkdf2_sha256$390000$UdRHtI90M8ePtTkJmJIqrw$elsYHa4g/tZH4tp16kJx635qtHb15Kv5qRcr7HWqObo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=580261cac1543b863288ce97ebbf880d&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:23:04.317Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 814, "fields": {"password": "pbkdf2_sha256$390000$KrjGazIOG2o9ghdNkw8rFU$m6VZXvHTWOGmWkjL4/wsqpHoDcExem8y1Gh1BZcXWLQ=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=42e3583e2c567494994ec4f5f12e19f1&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:23:10.981Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 815, "fields": {"password": "pbkdf2_sha256$390000$9wO1gTqhJ6A0T8fLCyhHaA$wvz/kNRvuUrLtS4AS+9uX/4dSAJEBrx9M1OzRqhWoOo=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=dbb0aaac42568474e39bee62148a194d&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:23:19.330Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 816, "fields": {"password": "pbkdf2_sha256$390000$8DtWes0QRZyuNgtM6uBSqr$xuWftlIxzQb7DS88NZRVYYR+9y4htIC/ZwwYShU9VDE=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=bbe57d57100b781d7f7f23d0924576d4&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:23:24.017Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 817, "fields": {"password": "pbkdf2_sha256$390000$WaD3DcTtBr6uv6IRoTa9vv$YxhNtzs8BQpxH5Hrmbnym/WlANKnhfQyPXlVFDy/FS8=", "last_login": null, "is_superuser": false, "username": "Hello World! https://racetrack.top/go/hezwgobsmq5dinbw?hs=4b5873d89ac1622819b3bbb0230a033e&", "first_name": "", "last_name": "", "email": "yhfee@chitthi.in", "is_staff": false, "is_active": true, "date_joined": "2023-05-23T01:23:28.202Z", "groups": [], "user_permissions": []}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "main", "model": "post"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "main", "model": "profile"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "main", "model": "follow"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "main", "model": "subscription"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "main", "model": "comment"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "taggit", "model": "tag"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "taggit", "model": "taggeditem"}}, {"model": "sessions.session", "pk": "lqgjhkrdepnftogg2vlm1zh6tqwgbei0", "fields": {"session_data": ".eJxVjDsOwyAQRO9CHSGx5rcp0-cMaFkgdhKBZOzKyt1jSy6Scua9mU0EWpcxrD3PYUriKkBcfrtI_Mr1AOlJ9dEkt7rMU5SHIk_a5b2l_L6d7t_BSH3c1wMDFITBDFRcZL3nggoTxOItAvpMZKyxXBxbC6RtAuOBtUHljELx-QLbGDcu:1ozLu4:Q7dDBvrIqY3rvl4mDqtVGNPEExX9u5ZbWyKAgKfTJY8", "expire_date": "2022-12-11T17:57:20.853Z"}}, {"model": "main.profile", "pk": 1, "fields": {"user": 1, "avatar": "user_profile/avatar/avatar_super_yogesh.png", "avatar_url": "https://robohash.org/super_yogesh/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 2, "fields": {"user": 2, "avatar": "user_profile/avatar/avatar_grodier.png", "avatar_url": "https://robohash.org/grodier/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 3, "fields": {"user": 3, "avatar": "user_profile/avatar/avatar_tungnxu.png", "avatar_url": "https://robohash.org/tungnxu/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 4, "fields": {"user": 4, "avatar": "user_profile/avatar/avatar_askjkrishna.png", "avatar_url": "https://robohash.org/askjkrishna/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "JavaScript and stuff"}}, {"model": "main.profile", "pk": 5, "fields": {"user": 5, "avatar": "user_profile/avatar/avatar_humrochagf.png", "avatar_url": "https://robohash.org/humrochagf/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Developer and open source advocate with a taste for typography."}}, {"model": "main.profile", "pk": 6, "fields": {"user": 6, "avatar": "user_profile/avatar/avatar_luturol.png", "avatar_url": "https://robohash.org/luturol/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A passionate C# developer trying to make some games and have fun while coding"}}, {"model": "main.profile", "pk": 7, "fields": {"user": 7, "avatar": "user_profile/avatar/avatar_mstamstrom.png", "avatar_url": "https://robohash.org/mstamstrom/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Passionate JavaScript developer "}}, {"model": "main.profile", "pk": 8, "fields": {"user": 8, "avatar": "user_profile/avatar/avatar_tobiassn.png", "avatar_url": "https://robohash.org/tobiassn/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "You lack the required permissions to view this bio."}}, {"model": "main.profile", "pk": 9, "fields": {"user": 9, "avatar": "user_profile/avatar/avatar_oxyyyyy.png", "avatar_url": "https://robohash.org/oxyyyyy/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Jun/Mid Front"}}, {"model": "main.profile", "pk": 10, "fields": {"user": 10, "avatar": "user_profile/avatar/avatar_josemunoz.png", "avatar_url": "https://robohash.org/josemunoz/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer, love coffee and coding, interested in engaging UX and elegant problem-solving."}}, {"model": "main.profile", "pk": 11, "fields": {"user": 11, "avatar": "user_profile/avatar/avatar_stegriff.png", "avatar_url": "https://robohash.org/stegriff/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Aspiring Jesus follower; successful nerd. Pro full-stack developer 10+ years, rapid prototypes for fun."}}, {"model": "main.profile", "pk": 12, "fields": {"user": 12, "avatar": "user_profile/avatar/avatar_zeitschlag.png", "avatar_url": "https://robohash.org/zeitschlag/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "By day, I'm an iOS developer. By night, I'm a human being/programmer/blogger/podcaster. ¯\\_(ツ)_/¯, (－‸ლ) (╯°□°）╯︵ ┻━┻"}}, {"model": "main.profile", "pk": 13, "fields": {"user": 13, "avatar": "user_profile/avatar/avatar_vlasales.png", "avatar_url": "https://robohash.org/vlasales/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 14, "fields": {"user": 14, "avatar": "user_profile/avatar/avatar_sloan.png", "avatar_url": "https://robohash.org/sloan/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I help moderate content and welcome new users to this platform. I also ask questions on behalf of members looking for advice from the community."}}, {"model": "main.profile", "pk": 15, "fields": {"user": 15, "avatar": "user_profile/avatar/avatar_bemmio.png", "avatar_url": "https://robohash.org/bemmio/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 16, "fields": {"user": 16, "avatar": "user_profile/avatar/avatar_jaymesdowner.png", "avatar_url": "https://robohash.org/jaymesdowner/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Engineering leader who is passionate about promoting engineers and helping them see and reach their potential."}}, {"model": "main.profile", "pk": 17, "fields": {"user": 17, "avatar": "user_profile/avatar/avatar_rapasoft.png", "avatar_url": "https://robohash.org/rapasoft/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software developer. Mostly Java and JavaScript. Kotlin enthusiast."}}, {"model": "main.profile", "pk": 18, "fields": {"user": 18, "avatar": "user_profile/avatar/avatar_andrewbrown.png", "avatar_url": "https://robohash.org/andrewbrown/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "🚀 CEO of ExamPro\r\n🚀 free AWS Certification courses on freeCodeCamp youtube\r\n🚀 AWS Community Hero\r\n🚀 DEV Moderator for AWS tag\r\n🚀 Star Trek Obsessed "}}, {"model": "main.profile", "pk": 19, "fields": {"user": 19, "avatar": "user_profile/avatar/avatar_sandordargo.png", "avatar_url": "https://robohash.org/sandordargo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Happy father. Principal Engineer. Author. Creator of dailycppinterview.com"}}, {"model": "main.profile", "pk": 20, "fields": {"user": 20, "avatar": "user_profile/avatar/avatar_theodesp.png", "avatar_url": "https://robohash.org/theodesp/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Senior Software Engineer @wpengine, Experienced mentor @codeimentor, Technical Writer @fixate.io, Book author"}}, {"model": "main.profile", "pk": 21, "fields": {"user": 21, "avatar": "user_profile/avatar/avatar_niorad.png", "avatar_url": "https://robohash.org/niorad/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Front-End-Developer, DevLids.com"}}, {"model": "main.profile", "pk": 22, "fields": {"user": 22, "avatar": "user_profile/avatar/avatar_ben.png", "avatar_url": "https://robohash.org/ben/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A Canadian software developer who thinks he’s funny. He/Him."}}, {"model": "main.profile", "pk": 23, "fields": {"user": 23, "avatar": "user_profile/avatar/avatar_bugmagnet.png", "avatar_url": "https://robohash.org/bugmagnet/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Programmed Canon Canola calculators in 1977. Assorted platforms and languages ever since. Assisting with HOPL.info.\r\n\r\nI am NOT looking for work -- I've got more than enough to do."}}, {"model": "main.profile", "pk": 24, "fields": {"user": 24, "avatar": "user_profile/avatar/avatar_aritdeveloper.png", "avatar_url": "https://robohash.org/aritdeveloper/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I empower people to become software developers, especially those with kids/family responsibilities, full-time jobs, or who feel too old to start over. 🥰👩🏽‍💻"}}, {"model": "main.profile", "pk": 25, "fields": {"user": 25, "avatar": "user_profile/avatar/avatar_sergiodxa.png", "avatar_url": "https://robohash.org/sergiodxa/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 26, "fields": {"user": 26, "avatar": "user_profile/avatar/avatar_huijing.png", "avatar_url": "https://robohash.org/huijing/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "🇲🇾👾🏀🚲🖌👟💻🖊🎙🐈‍⬛🧗‍♀️🎹🏳️‍🌈"}}, {"model": "main.profile", "pk": 27, "fields": {"user": 27, "avatar": "user_profile/avatar/avatar_westbrook.png", "avatar_url": "https://robohash.org/westbrook/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 28, "fields": {"user": 28, "avatar": "user_profile/avatar/avatar_sesay.png", "avatar_url": "https://robohash.org/sesay/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "what i say and what i do is entirely my biz,  no bad vibes over here \r\n\r\ni live today to die another day"}}, {"model": "main.profile", "pk": 29, "fields": {"user": 29, "avatar": "user_profile/avatar/avatar_dpaine20.png", "avatar_url": "https://robohash.org/dpaine20/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 30, "fields": {"user": 30, "avatar": "user_profile/avatar/avatar_openspeedtest.png", "avatar_url": "https://robohash.org/openspeedtest/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I learn stuff by doing it :) Learned some Javascript skills by developing openspeedtest.com. "}}, {"model": "main.profile", "pk": 31, "fields": {"user": 31, "avatar": "user_profile/avatar/avatar_deep75.png", "avatar_url": "https://robohash.org/deep75/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Above the clouds, the sky is always blue ..."}}, {"model": "main.profile", "pk": 32, "fields": {"user": 32, "avatar": "user_profile/avatar/avatar_changoman.png", "avatar_url": "https://robohash.org/changoman/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Sleep Deprived Father. Senior FE Engineer @recurforever. Lover of all things Ramen and Kpop."}}, {"model": "main.profile", "pk": 33, "fields": {"user": 33, "avatar": "user_profile/avatar/avatar_codestuff2.png", "avatar_url": "https://robohash.org/codestuff2/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A senior developer at Dealer Inspire. I. like building things with Vue, Node, Wordpress, Raspberry Pi, Arduino, and other bits and bobs laying around."}}, {"model": "main.profile", "pk": 34, "fields": {"user": 34, "avatar": "user_profile/avatar/avatar_alyssaw90.png", "avatar_url": "https://robohash.org/alyssaw90/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A couple of year ago I did a career switch from healthcare. I quit my job and did a coding bootcamp. And I am glad I made the switch. I am currently a Full Stack Web Developer at Microsoft. I love learning and working with new JavaScript libraries. "}}, {"model": "main.profile", "pk": 35, "fields": {"user": 35, "avatar": "user_profile/avatar/avatar_ldralighieri.png", "avatar_url": "https://robohash.org/ldralighieri/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer. Android and iOS developer."}}, {"model": "main.profile", "pk": 36, "fields": {"user": 36, "avatar": "user_profile/avatar/avatar_damcosset.png", "avatar_url": "https://robohash.org/damcosset/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "French web developer mostly interested in Javascript and JAVA"}}, {"model": "main.profile", "pk": 37, "fields": {"user": 37, "avatar": "user_profile/avatar/avatar_florimondmanca.png", "avatar_url": "https://robohash.org/florimondmanca/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 38, "fields": {"user": 38, "avatar": "user_profile/avatar/avatar_pretaporter.png", "avatar_url": "https://robohash.org/pretaporter/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Creator and maintainer of https://github.com/ibitcy/eo-locale | \r\nContributor of https://github.com/renovatebot/renovate | \r\nSon, husband and cat owner."}}, {"model": "main.profile", "pk": 39, "fields": {"user": 39, "avatar": "user_profile/avatar/avatar_stearm.png", "avatar_url": "https://robohash.org/stearm/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Frontend developer, lifelong learner. In love with React and TypeScript. GraphQL worshipper - ReactJS Milano Co-founder"}}, {"model": "main.profile", "pk": 40, "fields": {"user": 40, "avatar": "user_profile/avatar/avatar_kristemmerman.png", "avatar_url": "https://robohash.org/kristemmerman/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 41, "fields": {"user": 41, "avatar": "user_profile/avatar/avatar_wolverineks.png", "avatar_url": "https://robohash.org/wolverineks/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 42, "fields": {"user": 42, "avatar": "user_profile/avatar/avatar_charlex.png", "avatar_url": "https://robohash.org/charlex/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 43, "fields": {"user": 43, "avatar": "user_profile/avatar/avatar_mbrtn.png", "avatar_url": "https://robohash.org/mbrtn/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 44, "fields": {"user": 44, "avatar": "user_profile/avatar/avatar_ericandre615.png", "avatar_url": "https://robohash.org/ericandre615/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 45, "fields": {"user": 45, "avatar": "user_profile/avatar/avatar_nikomontana.png", "avatar_url": "https://robohash.org/nikomontana/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 46, "fields": {"user": 46, "avatar": "user_profile/avatar/avatar_razbakov.png", "avatar_url": "https://robohash.org/razbakov/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 47, "fields": {"user": 47, "avatar": "user_profile/avatar/avatar_yaronwittenstein.png", "avatar_url": "https://robohash.org/yaronwittenstein/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A Passionate Coder"}}, {"model": "main.profile", "pk": 48, "fields": {"user": 48, "avatar": "user_profile/avatar/avatar_edrome.png", "avatar_url": "https://robohash.org/edrome/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm an enthusiastic ML and backend developer."}}, {"model": "main.profile", "pk": 49, "fields": {"user": 49, "avatar": "user_profile/avatar/avatar_ilonacodes.png", "avatar_url": "https://robohash.org/ilonacodes/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "You know how to code -- You can learn how to invest 💰\r\n\r\nInvestment education for software developers 👇"}}, {"model": "main.profile", "pk": 50, "fields": {"user": 50, "avatar": "user_profile/avatar/avatar_tttfifo.png", "avatar_url": "https://robohash.org/tttfifo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Python Engineer, SysAdmin and DevOps. Currently writing Python code for living and for fun."}}, {"model": "main.profile", "pk": 51, "fields": {"user": 51, "avatar": "user_profile/avatar/avatar_pavlosisaris.png", "avatar_url": "https://robohash.org/pavlosisaris/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer @SciFY. \r\nLive to learn something new -and write cleaner and more sustainable code- every day.\r\nPassionate with learning and discovering new technologies, history, and psychology.\r\n"}}, {"model": "main.profile", "pk": 52, "fields": {"user": 52, "avatar": "user_profile/avatar/avatar_lankydandev.png", "avatar_url": "https://robohash.org/lankydandev/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I write tutorials on my blog at www.lankydan.dev . During the day, I am a Platform Engineer at r3 where I work on Corda, an Open Source DLT/Blockchain Platform."}}, {"model": "main.profile", "pk": 53, "fields": {"user": 53, "avatar": "user_profile/avatar/avatar_jenc.png", "avatar_url": "https://robohash.org/jenc/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "New media artist turned Software Developer 👻 | Organizer at Toronto JS"}}, {"model": "main.profile", "pk": 54, "fields": {"user": 54, "avatar": "user_profile/avatar/avatar_guitarino.png", "avatar_url": "https://robohash.org/guitarino/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 55, "fields": {"user": 55, "avatar": "user_profile/avatar/avatar_mjuraj.png", "avatar_url": "https://robohash.org/mjuraj/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Creating Autonomous Support System by day, binge watching Netflix by night"}}, {"model": "main.profile", "pk": 56, "fields": {"user": 56, "avatar": "user_profile/avatar/avatar_5422m4n.png", "avatar_url": "https://robohash.org/5422m4n/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "polyglot software engineer | #rustlang enthusiast | co-organizer at @RustMunich | maintainer of #cargogenerate | creator of @t_rec_rs and stegano-rs"}}, {"model": "main.profile", "pk": 57, "fields": {"user": 57, "avatar": "user_profile/avatar/avatar_hozefaj.png", "avatar_url": "https://robohash.org/hozefaj/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Engineering Manager prev @Meta | @Wealthfront | @PayPal"}}, {"model": "main.profile", "pk": 58, "fields": {"user": 58, "avatar": "user_profile/avatar/avatar_disccomp.png", "avatar_url": "https://robohash.org/disccomp/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 59, "fields": {"user": 59, "avatar": "user_profile/avatar/avatar_theashraf.png", "avatar_url": "https://robohash.org/theashraf/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer | Javascript enthusiast"}}, {"model": "main.profile", "pk": 60, "fields": {"user": 60, "avatar": "user_profile/avatar/avatar_aziziyazit.png", "avatar_url": "https://robohash.org/aziziyazit/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Component library developer (angular and react)"}}, {"model": "main.profile", "pk": 61, "fields": {"user": 61, "avatar": "user_profile/avatar/avatar_ngnam.png", "avatar_url": "https://robohash.org/ngnam/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Một DEV không giỏi ngoại ngữ."}}, {"model": "main.profile", "pk": 62, "fields": {"user": 62, "avatar": "user_profile/avatar/avatar_ak_8085.png", "avatar_url": "https://robohash.org/ak_8085/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Self-taught Software developer, Story-teller, Coffee addict,  Writes for humans (https://medium.com/@kanurag)"}}, {"model": "main.profile", "pk": 63, "fields": {"user": 63, "avatar": "user_profile/avatar/avatar_fredrikbergqvist.png", "avatar_url": "https://robohash.org/fredrikbergqvist/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Web developer with more than 25 years of experience. Gamer, coder, father of two."}}, {"model": "main.profile", "pk": 64, "fields": {"user": 64, "avatar": "user_profile/avatar/avatar_lewatt23.png", "avatar_url": "https://robohash.org/lewatt23/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 65, "fields": {"user": 65, "avatar": "user_profile/avatar/avatar_rfornal.png", "avatar_url": "https://robohash.org/rfornal/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "REAL, FUN, GEEK who is passionate about Front-End!"}}, {"model": "main.profile", "pk": 66, "fields": {"user": 66, "avatar": "user_profile/avatar/avatar_integerman.png", "avatar_url": "https://robohash.org/integerman/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Matt is a software engineering instructor and a data science master's student. Matt runs a data science YouTube channel and blog and actively speaks in his communities on Azure and .NET data science."}}, {"model": "main.profile", "pk": 67, "fields": {"user": 67, "avatar": "user_profile/avatar/avatar_vaderdan.png", "avatar_url": "https://robohash.org/vaderdan/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 68, "fields": {"user": 68, "avatar": "user_profile/avatar/avatar_sergey_telpuk.png", "avatar_url": "https://robohash.org/sergey_telpuk/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Experienced PHP/NodeJS/Golang Developer with a demonstrated history of working in the information technology and services industry."}}, {"model": "main.profile", "pk": 69, "fields": {"user": 69, "avatar": "user_profile/avatar/avatar_knheidorn.png", "avatar_url": "https://robohash.org/knheidorn/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Recent Graduate - Software Developer"}}, {"model": "main.profile", "pk": 70, "fields": {"user": 70, "avatar": "user_profile/avatar/avatar_buphmin.png", "avatar_url": "https://robohash.org/buphmin/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I do things, usually involving buttons. All the while listening to power metal. Oh, and I like cats. "}}, {"model": "main.profile", "pk": 71, "fields": {"user": 71, "avatar": "user_profile/avatar/avatar_phacus.png", "avatar_url": "https://robohash.org/phacus/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A Biologist \"turned into\" a developer since I was 12.\r\n    "}}, {"model": "main.profile", "pk": 72, "fields": {"user": 72, "avatar": "user_profile/avatar/avatar_bce_merde.png", "avatar_url": "https://robohash.org/bce_merde/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "23yo lo-fi cyberpunk digital designer interested in tech for health. P.S. В жопу систему. ;))"}}, {"model": "main.profile", "pk": 73, "fields": {"user": 73, "avatar": "user_profile/avatar/avatar_2ezpz2plzme.png", "avatar_url": "https://robohash.org/2ezpz2plzme/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 74, "fields": {"user": 74, "avatar": "user_profile/avatar/avatar_codercatdev.png", "avatar_url": "https://robohash.org/codercatdev/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Hi I am the Founder of CodingCat.dev, a web development community. I love all things Web! I am also a Developer Advocate at Builder.io"}}, {"model": "main.profile", "pk": 75, "fields": {"user": 75, "avatar": "user_profile/avatar/avatar_brunooliveira.png", "avatar_url": "https://robohash.org/brunooliveira/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 76, "fields": {"user": 76, "avatar": "user_profile/avatar/avatar_hamatti.png", "avatar_url": "https://robohash.org/hamatti/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm a developer community builder and full-stack web developer from Finland. I blog occasionally here and weekly at my own blog at hamatti.org"}}, {"model": "main.profile", "pk": 77, "fields": {"user": 77, "avatar": "user_profile/avatar/avatar_ssbozy.png", "avatar_url": "https://robohash.org/ssbozy/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I write code during the day. In the evening I cook for my beautiful family. By night I build fun stuff using hardware and software. Ping me if you have an idea and I can lend my hand. "}}, {"model": "main.profile", "pk": 78, "fields": {"user": 78, "avatar": "user_profile/avatar/avatar_aquasar.png", "avatar_url": "https://robohash.org/aquasar/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "React | WordPress | Online Ordering | Online Advertising | Ecommerce | SEO"}}, {"model": "main.profile", "pk": 79, "fields": {"user": 79, "avatar": "user_profile/avatar/avatar_msamgan.png", "avatar_url": "https://robohash.org/msamgan/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Love to code with a DRY KISS"}}, {"model": "main.profile", "pk": 80, "fields": {"user": 80, "avatar": "user_profile/avatar/avatar_ux4web.png", "avatar_url": "https://robohash.org/ux4web/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Engineering Delightful User Experiences!"}}, {"model": "main.profile", "pk": 81, "fields": {"user": 81, "avatar": "user_profile/avatar/avatar_therealkevinard.png", "avatar_url": "https://robohash.org/therealkevinard/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I make things that do things. "}}, {"model": "main.profile", "pk": 82, "fields": {"user": 82, "avatar": "user_profile/avatar/avatar_ward.png", "avatar_url": "https://robohash.org/ward/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 83, "fields": {"user": 83, "avatar": "user_profile/avatar/avatar_sarafian.png", "avatar_url": "https://robohash.org/sarafian/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Senior generalist with technology"}}, {"model": "main.profile", "pk": 84, "fields": {"user": 84, "avatar": "user_profile/avatar/avatar_dvddpl.png", "avatar_url": "https://robohash.org/dvddpl/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Trouble maker and Problem solver ⚙️🔧 \nLoves simplicity, hates bullshit 💩.\nProductivity obsessed, avid learner  🖥🚀 \nSport and outdoor freak 🧗⛰\nMetalhead 🎸🤘  Father of 2 👨‍👩‍👦‍👦\nOpinions are my own"}}, {"model": "main.profile", "pk": 85, "fields": {"user": 85, "avatar": "user_profile/avatar/avatar_devtlk.png", "avatar_url": "https://robohash.org/devtlk/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 86, "fields": {"user": 86, "avatar": "user_profile/avatar/avatar_dels07.png", "avatar_url": "https://robohash.org/dels07/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 87, "fields": {"user": 87, "avatar": "user_profile/avatar/avatar_kensixx.png", "avatar_url": "https://robohash.org/kensixx/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Beginner Java x Spring developer"}}, {"model": "main.profile", "pk": 88, "fields": {"user": 88, "avatar": "user_profile/avatar/avatar_shamimahossai13.png", "avatar_url": "https://robohash.org/shamimahossai13/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "writing code to solve problems but end up creating problems "}}, {"model": "main.profile", "pk": 89, "fields": {"user": 89, "avatar": "user_profile/avatar/avatar_scriptmunkee.png", "avatar_url": "https://robohash.org/scriptmunkee/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Developing software solutions for too many years. The majority of my time has been either Managing Software Development efforts or as a Software Quality Engineer."}}, {"model": "main.profile", "pk": 90, "fields": {"user": 90, "avatar": "user_profile/avatar/avatar_waylonwalker.png", "avatar_url": "https://robohash.org/waylonwalker/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Data Engineering with python, kedro super user."}}, {"model": "main.profile", "pk": 91, "fields": {"user": 91, "avatar": "user_profile/avatar/avatar_steveblue.png", "avatar_url": "https://robohash.org/steveblue/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "full stack web engineer, author, artist, teacher, cultural critic and indie music fan. "}}, {"model": "main.profile", "pk": 92, "fields": {"user": 92, "avatar": "user_profile/avatar/avatar_amjadmh73.png", "avatar_url": "https://robohash.org/amjadmh73/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Junior Developer who enjoys coding and building stuff."}}, {"model": "main.profile", "pk": 93, "fields": {"user": 93, "avatar": "user_profile/avatar/avatar_mzaini30.png", "avatar_url": "https://robohash.org/mzaini30/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Mahasiswa Psikologi"}}, {"model": "main.profile", "pk": 94, "fields": {"user": 94, "avatar": "user_profile/avatar/avatar_davidallyoung.png", "avatar_url": "https://robohash.org/davidallyoung/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm a lucky Husband and new Dad. I work in Enterprise SaaS, c# / azure"}}, {"model": "main.profile", "pk": 95, "fields": {"user": 95, "avatar": "user_profile/avatar/avatar_bugsysailor.png", "avatar_url": "https://robohash.org/bugsysailor/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A sailor without a map exploring the seas of the internet."}}, {"model": "main.profile", "pk": 96, "fields": {"user": 96, "avatar": "user_profile/avatar/avatar_190245.png", "avatar_url": "https://robohash.org/190245/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A developer/architect with a foot in the operations team, and an elbow in PMO. A dad/step-dad of an unnerving number of dependents."}}, {"model": "main.profile", "pk": 97, "fields": {"user": 97, "avatar": "user_profile/avatar/avatar_achimoraites.png", "avatar_url": "https://robohash.org/achimoraites/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Specializing in converting coffee and ideas to code :)\r\n\r\n"}}, {"model": "main.profile", "pk": 98, "fields": {"user": 98, "avatar": "user_profile/avatar/avatar_qcha0s.png", "avatar_url": "https://robohash.org/qcha0s/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Just as thoughtless words are waisted... Any man who tries to feed an albino gerbil mustard sauce is very strange and should be left well alone! "}}, {"model": "main.profile", "pk": 99, "fields": {"user": 99, "avatar": "user_profile/avatar/avatar_max_tulian.png", "avatar_url": "https://robohash.org/max_tulian/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Love learning and teaching."}}, {"model": "main.profile", "pk": 100, "fields": {"user": 100, "avatar": "user_profile/avatar/avatar_jerilbills.png", "avatar_url": "https://robohash.org/jerilbills/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Had the goal to learn to code for a few years, finally believe I'm taking meaningful action toward that goal."}}, {"model": "main.profile", "pk": 101, "fields": {"user": 101, "avatar": "user_profile/avatar/avatar_francoscarpa.png", "avatar_url": "https://robohash.org/francoscarpa/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "BD in CS 🎓 Azure Developer at Nebula 🖥 Web Developer 🌐 Blogger ✍🏻 Always Learning \r\n📚 Minimalism and Performance ⚙️ Lover of JAMStack and Eleventy ❤️"}}, {"model": "main.profile", "pk": 102, "fields": {"user": 102, "avatar": "user_profile/avatar/avatar_softchris.png", "avatar_url": "https://robohash.org/softchris/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "https://twitter.com/chris_noring Cloud Developer Advocate at Microsoft, Google Developer Expert"}}, {"model": "main.profile", "pk": 103, "fields": {"user": 103, "avatar": "user_profile/avatar/avatar_ponickkhan.png", "avatar_url": "https://robohash.org/ponickkhan/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 104, "fields": {"user": 104, "avatar": "user_profile/avatar/avatar_stereobooster.png", "avatar_url": "https://robohash.org/stereobooster/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Hello, I'm a full stack web developer. Follow me on Twitter!"}}, {"model": "main.profile", "pk": 105, "fields": {"user": 105, "avatar": "user_profile/avatar/avatar_shethiakamya.png", "avatar_url": "https://robohash.org/shethiakamya/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 106, "fields": {"user": 106, "avatar": "user_profile/avatar/avatar_yaser.png", "avatar_url": "https://robohash.org/yaser/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Architect"}}, {"model": "main.profile", "pk": 107, "fields": {"user": 107, "avatar": "user_profile/avatar/avatar_jeddevs.png", "avatar_url": "https://robohash.org/jeddevs/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Game Developer, Metaverse Creater.\r\n\r\nWith over four years of experience working in the metaverse, Theo's had the opportunity to work on top experiences, spearheading technical and creative design."}}, {"model": "main.profile", "pk": 108, "fields": {"user": 108, "avatar": "user_profile/avatar/avatar_feruzoripov.png", "avatar_url": "https://robohash.org/feruzoripov/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 109, "fields": {"user": 109, "avatar": "user_profile/avatar/avatar_rhymes.png", "avatar_url": "https://robohash.org/rhymes/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Such software as dreams are made on.\r\nI mostly rant about performance, unnecessary complexity, privacy and data collection."}}, {"model": "main.profile", "pk": 110, "fields": {"user": 110, "avatar": "user_profile/avatar/avatar_scrabill.png", "avatar_url": "https://robohash.org/scrabill/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Front-End Software Engineer\r\n"}}, {"model": "main.profile", "pk": 111, "fields": {"user": 111, "avatar": "user_profile/avatar/avatar_spaghettifunk.png", "avatar_url": "https://robohash.org/spaghettifunk/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm an Engineering Manager at Booking.com. I love go and Kubernetes"}}, {"model": "main.profile", "pk": 112, "fields": {"user": 112, "avatar": "user_profile/avatar/avatar_yusufcodes.png", "avatar_url": "https://robohash.org/yusufcodes/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "22 years old, Associate Software Engineer @ Moonpig, based in Manchester, UK. I like to share my thoughts and experiences as a developer online👋 "}}, {"model": "main.profile", "pk": 113, "fields": {"user": 113, "avatar": "user_profile/avatar/avatar_marcelimxo.png", "avatar_url": "https://robohash.org/marcelimxo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 114, "fields": {"user": 114, "avatar": "user_profile/avatar/avatar_maniflames.png", "avatar_url": "https://robohash.org/maniflames/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Exploring graphics ✨💻"}}, {"model": "main.profile", "pk": 115, "fields": {"user": 115, "avatar": "user_profile/avatar/avatar_elenaraujo.png", "avatar_url": "https://robohash.org/elenaraujo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "🦋"}}, {"model": "main.profile", "pk": 116, "fields": {"user": 116, "avatar": "user_profile/avatar/avatar_dance2die.png", "avatar_url": "https://robohash.org/dance2die/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Exploring the world of TypeScript, React & Node"}}, {"model": "main.profile", "pk": 117, "fields": {"user": 117, "avatar": "user_profile/avatar/avatar_yaireo.png", "avatar_url": "https://robohash.org/yaireo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Javascript, CSS & HTML"}}, {"model": "main.profile", "pk": 118, "fields": {"user": 118, "avatar": "user_profile/avatar/avatar_chrisachard.png", "avatar_url": "https://robohash.org/chrisachard/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm trying to teach everything I know at chrisachard.com\r\n\r\nInstructor at egghead.io\r\n\r\nMostly, I use JS, React, Rails, and Node\r\n"}}, {"model": "main.profile", "pk": 119, "fields": {"user": 119, "avatar": "user_profile/avatar/avatar_justingrant.png", "avatar_url": "https://robohash.org/justingrant/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 120, "fields": {"user": 120, "avatar": "user_profile/avatar/avatar_matthew_collison.png", "avatar_url": "https://robohash.org/matthew_collison/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm the CTO of international video agency Wooshii and I run an educational media brand called Skill Pathway. I also occasionally chat to people on my podcast, The Learning Developers Podcast."}}, {"model": "main.profile", "pk": 121, "fields": {"user": 121, "avatar": "user_profile/avatar/avatar_hayrettinm.png", "avatar_url": "https://robohash.org/hayrettinm/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 122, "fields": {"user": 122, "avatar": "user_profile/avatar/avatar_sophiabrandt.png", "avatar_url": "https://robohash.org/sophiabrandt/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "former tax officer turned programmer"}}, {"model": "main.profile", "pk": 123, "fields": {"user": 123, "avatar": "user_profile/avatar/avatar_frozzare.png", "avatar_url": "https://robohash.org/frozzare/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "🇸🇪 Full-stack developer and open-sourcerer focusing on JavaScript and Go."}}, {"model": "main.profile", "pk": 124, "fields": {"user": 124, "avatar": "user_profile/avatar/avatar_jhonsontian.png", "avatar_url": "https://robohash.org/jhonsontian/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 125, "fields": {"user": 125, "avatar": "user_profile/avatar/avatar__justirma.png", "avatar_url": "https://robohash.org/_justirma/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I am a Product Manager. I like to build and research for customers.\r\n\r\nFind me swimming in topics around women in tech, distributed teams, remote work and coding."}}, {"model": "main.profile", "pk": 126, "fields": {"user": 126, "avatar": "user_profile/avatar/avatar_bakerchad79.png", "avatar_url": "https://robohash.org/bakerchad79/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Full stack developer looking for a job "}}, {"model": "main.profile", "pk": 127, "fields": {"user": 127, "avatar": "user_profile/avatar/avatar_masoneg.png", "avatar_url": "https://robohash.org/masoneg/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "JS geek"}}, {"model": "main.profile", "pk": 128, "fields": {"user": 128, "avatar": "user_profile/avatar/avatar_davidburbury.png", "avatar_url": "https://robohash.org/davidburbury/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A frontend developer learning JS with the intention to add React, VUE, Node & WebGL/Three.js to my skills. "}}, {"model": "main.profile", "pk": 129, "fields": {"user": 129, "avatar": "user_profile/avatar/avatar_aortizoj15.png", "avatar_url": "https://robohash.org/aortizoj15/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Dev learning every day :)"}}, {"model": "main.profile", "pk": 130, "fields": {"user": 130, "avatar": "user_profile/avatar/avatar_julianazuniga.png", "avatar_url": "https://robohash.org/julianazuniga/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 131, "fields": {"user": 131, "avatar": "user_profile/avatar/avatar_gr33nlight.png", "avatar_url": "https://robohash.org/gr33nlight/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Full-Stack developer. Aspiring to work independently, I love to create beautiful web apps (inside and out ;) ). "}}, {"model": "main.profile", "pk": 132, "fields": {"user": 132, "avatar": "user_profile/avatar/avatar_sbenemerito.png", "avatar_url": "https://robohash.org/sbenemerito/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Mainly doing backend development with Python. Grinding to git gud."}}, {"model": "main.profile", "pk": 133, "fields": {"user": 133, "avatar": "user_profile/avatar/avatar_flyznex.png", "avatar_url": "https://robohash.org/flyznex/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 134, "fields": {"user": 134, "avatar": "user_profile/avatar/avatar_charcutero.png", "avatar_url": "https://robohash.org/charcutero/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 135, "fields": {"user": 135, "avatar": "user_profile/avatar/avatar_refiloedig.png", "avatar_url": "https://robohash.org/refiloedig/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Open minded learner. I believe in learning as much as possible. "}}, {"model": "main.profile", "pk": 136, "fields": {"user": 136, "avatar": "user_profile/avatar/avatar_ramansrsta.png", "avatar_url": "https://robohash.org/ramansrsta/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 137, "fields": {"user": 137, "avatar": "user_profile/avatar/avatar_wannabehexagon.png", "avatar_url": "https://robohash.org/wannabehexagon/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I will breathe in all your air if you let me"}}, {"model": "main.profile", "pk": 138, "fields": {"user": 138, "avatar": "user_profile/avatar/avatar_sheepswearhats.png", "avatar_url": "https://robohash.org/sheepswearhats/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 139, "fields": {"user": 139, "avatar": "user_profile/avatar/avatar_macmacky.png", "avatar_url": "https://robohash.org/macmacky/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "a Full-Stack developer who likes reading Tom Clancy's books and loves talking with dogs."}}, {"model": "main.profile", "pk": 140, "fields": {"user": 140, "avatar": "user_profile/avatar/avatar_qpzm.png", "avatar_url": "https://robohash.org/qpzm/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A fullstack dabbler"}}, {"model": "main.profile", "pk": 141, "fields": {"user": 141, "avatar": "user_profile/avatar/avatar_chiranjibilawati10.png", "avatar_url": "https://robohash.org/chiranjibilawati10/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 142, "fields": {"user": 142, "avatar": "user_profile/avatar/avatar_ihsaan700.png", "avatar_url": "https://robohash.org/ihsaan700/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Aspiring full stack web developer."}}, {"model": "main.profile", "pk": 143, "fields": {"user": 143, "avatar": "user_profile/avatar/avatar_bbarbour.png", "avatar_url": "https://robohash.org/bbarbour/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Fullstack Developer"}}, {"model": "main.profile", "pk": 144, "fields": {"user": 144, "avatar": "user_profile/avatar/avatar_tyeshi181.png", "avatar_url": "https://robohash.org/tyeshi181/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "i am currently a student at lambda school and i am interested in learning everything programming"}}, {"model": "main.profile", "pk": 145, "fields": {"user": 145, "avatar": "user_profile/avatar/avatar_vncntdzn.png", "avatar_url": "https://robohash.org/vncntdzn/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "An aspiring machine learning engineer "}}, {"model": "main.profile", "pk": 146, "fields": {"user": 146, "avatar": "user_profile/avatar/avatar_luciagirasoles.png", "avatar_url": "https://robohash.org/luciagirasoles/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "from PM to developer"}}, {"model": "main.profile", "pk": 147, "fields": {"user": 147, "avatar": "user_profile/avatar/avatar_djpandab.png", "avatar_url": "https://robohash.org/djpandab/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Developer who wants to continuously learn and pass on knowledge "}}, {"model": "main.profile", "pk": 148, "fields": {"user": 148, "avatar": "user_profile/avatar/avatar_sebastiandg7.png", "avatar_url": "https://robohash.org/sebastiandg7/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "👨‍💻 Focusing on building scalable & maintainable future-proof applications • ❤️ Architecture, Nx, TS, Angular, Nest"}}, {"model": "main.profile", "pk": 149, "fields": {"user": 149, "avatar": "user_profile/avatar/avatar_pacosoul.png", "avatar_url": "https://robohash.org/pacosoul/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Old Web Dev, learning new Web Dev"}}, {"model": "main.profile", "pk": 150, "fields": {"user": 150, "avatar": "user_profile/avatar/avatar_gummerandy.png", "avatar_url": "https://robohash.org/gummerandy/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I am a full stack web developer motivated to help you achieve your business goals. I have over five years of experience with full stack development and at this stage I focus primarily on React.js. "}}, {"model": "main.profile", "pk": 151, "fields": {"user": 151, "avatar": "user_profile/avatar/avatar_naomatheus.png", "avatar_url": "https://robohash.org/naomatheus/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 152, "fields": {"user": 152, "avatar": "user_profile/avatar/avatar_lmauromb.png", "avatar_url": "https://robohash.org/lmauromb/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 153, "fields": {"user": 153, "avatar": "user_profile/avatar/avatar_marcocornejo.png", "avatar_url": "https://robohash.org/marcocornejo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 154, "fields": {"user": 154, "avatar": "user_profile/avatar/avatar_lmolivera.png", "avatar_url": "https://robohash.org/lmolivera/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I work as a Salesforce Developer. I have been programming since I was 9, I like Javascript, Python and Game Development. I write articles in dev.to too!"}}, {"model": "main.profile", "pk": 155, "fields": {"user": 155, "avatar": "user_profile/avatar/avatar_venubattula.png", "avatar_url": "https://robohash.org/venubattula/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 156, "fields": {"user": 156, "avatar": "user_profile/avatar/avatar_kaka.png", "avatar_url": "https://robohash.org/kaka/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm currently in love with Vim"}}, {"model": "main.profile", "pk": 157, "fields": {"user": 157, "avatar": "user_profile/avatar/avatar_taragrg6.png", "avatar_url": "https://robohash.org/taragrg6/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "DEVOPS, SRE on progress"}}, {"model": "main.profile", "pk": 158, "fields": {"user": 158, "avatar": "user_profile/avatar/avatar_rayphaistos1.png", "avatar_url": "https://robohash.org/rayphaistos1/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Running around in circles pretending I know what I am doing"}}, {"model": "main.profile", "pk": 159, "fields": {"user": 159, "avatar": "user_profile/avatar/avatar_phillipgd1992.png", "avatar_url": "https://robohash.org/phillipgd1992/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 160, "fields": {"user": 160, "avatar": "user_profile/avatar/avatar_ndiecodes.png", "avatar_url": "https://robohash.org/ndiecodes/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A Javascript Lover || Laravel Advocate || Continuous Learner || Software Developer "}}, {"model": "main.profile", "pk": 161, "fields": {"user": 161, "avatar": "user_profile/avatar/avatar_wandieinnocents.png", "avatar_url": "https://robohash.org/wandieinnocents/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 162, "fields": {"user": 162, "avatar": "user_profile/avatar/avatar_alih70442.png", "avatar_url": "https://robohash.org/alih70442/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 163, "fields": {"user": 163, "avatar": "user_profile/avatar/avatar_dhavaldignizant.png", "avatar_url": "https://robohash.org/dhavaldignizant/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 164, "fields": {"user": 164, "avatar": "user_profile/avatar/avatar_b6t3m6n.png", "avatar_url": "https://robohash.org/b6t3m6n/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 165, "fields": {"user": 165, "avatar": "user_profile/avatar/avatar_devsakib.png", "avatar_url": "https://robohash.org/devsakib/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 166, "fields": {"user": 166, "avatar": "user_profile/avatar/avatar_tadeubdev.png", "avatar_url": "https://robohash.org/tadeubdev/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Apaixonado por tecnologia e em aprender coisas novas!"}}, {"model": "main.profile", "pk": 167, "fields": {"user": 167, "avatar": "user_profile/avatar/avatar_brojenuel.png", "avatar_url": "https://robohash.org/brojenuel/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm a software/web developer specializing in creating(and sometimes designing) exceptional websites, applications, and everything in between."}}, {"model": "main.profile", "pk": 168, "fields": {"user": 168, "avatar": "user_profile/avatar/avatar_techautobahn.png", "avatar_url": "https://robohash.org/techautobahn/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Technology Enthusiast.. Love to explore and Conquer.."}}, {"model": "main.profile", "pk": 169, "fields": {"user": 169, "avatar": "user_profile/avatar/avatar_jaiminhothi.png", "avatar_url": "https://robohash.org/jaiminhothi/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 170, "fields": {"user": 170, "avatar": "user_profile/avatar/avatar_racedaemon.png", "avatar_url": "https://robohash.org/racedaemon/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 171, "fields": {"user": 171, "avatar": "user_profile/avatar/avatar_be_anjos.png", "avatar_url": "https://robohash.org/be_anjos/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 172, "fields": {"user": 172, "avatar": "user_profile/avatar/avatar_mamedioguilherme1.png", "avatar_url": "https://robohash.org/mamedioguilherme1/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 173, "fields": {"user": 173, "avatar": "user_profile/avatar/avatar_ainurrahms.png", "avatar_url": "https://robohash.org/ainurrahms/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 174, "fields": {"user": 174, "avatar": "user_profile/avatar/avatar_executions12.png", "avatar_url": "https://robohash.org/executions12/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 175, "fields": {"user": 175, "avatar": "user_profile/avatar/avatar_mayank091193.png", "avatar_url": "https://robohash.org/mayank091193/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Open for remote work(mayank091193@gmail.com) | Full-stack developer | Part-time open-source developer | loves free templates development | Quasar Framework, Vue.js, AngularJS, Bootstrap, Python\r\n\r\n"}}, {"model": "main.profile", "pk": 176, "fields": {"user": 176, "avatar": "user_profile/avatar/avatar_isrortega.png", "avatar_url": "https://robohash.org/isrortega/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 177, "fields": {"user": 177, "avatar": "user_profile/avatar/avatar_schallernicolas.png", "avatar_url": "https://robohash.org/schallernicolas/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 178, "fields": {"user": 178, "avatar": "user_profile/avatar/avatar_amanuell2.png", "avatar_url": "https://robohash.org/amanuell2/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "i am passionate on building productive software product"}}, {"model": "main.profile", "pk": 179, "fields": {"user": 179, "avatar": "user_profile/avatar/avatar_guibattoni.png", "avatar_url": "https://robohash.org/guibattoni/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Made in Brazil. Been around since 1992. Web Developer since 2012. Remote Worker. More here: https://bit.ly/2AVklir "}}, {"model": "main.profile", "pk": 180, "fields": {"user": 180, "avatar": "user_profile/avatar/avatar_nwaweru.png", "avatar_url": "https://robohash.org/nwaweru/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Full Stack Web Developer - Vue, Inertia and Laravel"}}, {"model": "main.profile", "pk": 181, "fields": {"user": 181, "avatar": "user_profile/avatar/avatar_cleathley.png", "avatar_url": "https://robohash.org/cleathley/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 182, "fields": {"user": 182, "avatar": "user_profile/avatar/avatar_sayajin101.png", "avatar_url": "https://robohash.org/sayajin101/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 183, "fields": {"user": 183, "avatar": "user_profile/avatar/avatar_kbzone.png", "avatar_url": "https://robohash.org/kbzone/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 184, "fields": {"user": 184, "avatar": "user_profile/avatar/avatar_yunchurlee.png", "avatar_url": "https://robohash.org/yunchurlee/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "java, php developer"}}, {"model": "main.profile", "pk": 185, "fields": {"user": 185, "avatar": "user_profile/avatar/avatar_bosz.png", "avatar_url": "https://robohash.org/bosz/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I love product development, business and startup. I code in Laravel, React & R Native. Check out digitalrenter.com, a fast-growing property marketplace that I currently lead\r\n\r\nHit me up let's have ☕😃"}}, {"model": "main.profile", "pk": 186, "fields": {"user": 186, "avatar": "user_profile/avatar/avatar_wmazed.png", "avatar_url": "https://robohash.org/wmazed/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 187, "fields": {"user": 187, "avatar": "user_profile/avatar/avatar_debabratakarfa.png", "avatar_url": "https://robohash.org/debabratakarfa/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 188, "fields": {"user": 188, "avatar": "user_profile/avatar/avatar_bluerabby.png", "avatar_url": "https://robohash.org/bluerabby/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 189, "fields": {"user": 189, "avatar": "user_profile/avatar/avatar_guimilleo.png", "avatar_url": "https://robohash.org/guimilleo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Living in Brazil and seeking to learn!"}}, {"model": "main.profile", "pk": 190, "fields": {"user": 190, "avatar": "user_profile/avatar/avatar_raicuparta.png", "avatar_url": "https://robohash.org/raicuparta/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Raicuparta"}}, {"model": "main.profile", "pk": 191, "fields": {"user": 191, "avatar": "user_profile/avatar/avatar_mongopark.png", "avatar_url": "https://robohash.org/mongopark/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer. Make stuffs with code. From the land of Promise(). "}}, {"model": "main.profile", "pk": 192, "fields": {"user": 192, "avatar": "user_profile/avatar/avatar_monfernape.png", "avatar_url": "https://robohash.org/monfernape/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Web Developer. Dead"}}, {"model": "main.profile", "pk": 193, "fields": {"user": 193, "avatar": "user_profile/avatar/avatar_jonathanburnhill.png", "avatar_url": "https://robohash.org/jonathanburnhill/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 194, "fields": {"user": 194, "avatar": "user_profile/avatar/avatar_somedood.png", "avatar_url": "https://robohash.org/somedood/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Just some dood trying to make code work without bringing the Universe to its demise."}}, {"model": "main.profile", "pk": 195, "fields": {"user": 195, "avatar": "user_profile/avatar/avatar_vlasterx.png", "avatar_url": "https://robohash.org/vlasterx/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Web designer & developer since early 00's\r\n#javascript, #scss and #webdesign"}}, {"model": "main.profile", "pk": 196, "fields": {"user": 196, "avatar": "user_profile/avatar/avatar_heysam.png", "avatar_url": "https://robohash.org/heysam/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 197, "fields": {"user": 197, "avatar": "user_profile/avatar/avatar_vladimirovici.png", "avatar_url": "https://robohash.org/vladimirovici/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 198, "fields": {"user": 198, "avatar": "user_profile/avatar/avatar_kayzercode.png", "avatar_url": "https://robohash.org/kayzercode/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Always have tasks to do. Contact me."}}, {"model": "main.profile", "pk": 199, "fields": {"user": 199, "avatar": "user_profile/avatar/avatar_joaofranco19.png", "avatar_url": "https://robohash.org/joaofranco19/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm a web developer working in the industry for 2 years now but on low code solutions. Trying to learn a more here. "}}, {"model": "main.profile", "pk": 200, "fields": {"user": 200, "avatar": "user_profile/avatar/avatar_almenon.png", "avatar_url": "https://robohash.org/almenon/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I write from time to time.\r\n\r\nViews expressed are my own and may not represent the opinions of any entity with which I have been, am now, or will be affiliated."}}, {"model": "main.profile", "pk": 201, "fields": {"user": 201, "avatar": "user_profile/avatar/avatar_ninjasoards.png", "avatar_url": "https://robohash.org/ninjasoards/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer w/ background in design & music production"}}, {"model": "main.profile", "pk": 202, "fields": {"user": 202, "avatar": "user_profile/avatar/avatar_hexrcs.png", "avatar_url": "https://robohash.org/hexrcs/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "👨‍💻 Programming polyglot\r\n👨‍🏫 Teaching code\r\n🎸 Lousy musician\r\n👨‍🎨 Bob Ross fan"}}, {"model": "main.profile", "pk": 203, "fields": {"user": 203, "avatar": "user_profile/avatar/avatar_tomayac.png", "avatar_url": "https://robohash.org/tomayac/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Thomas Steiner is a Developer Advocate at Google Hamburg, focused on making the Web a better place through standardization, creating and sharing best practices, and doing research."}}, {"model": "main.profile", "pk": 204, "fields": {"user": 204, "avatar": "user_profile/avatar/avatar_dynamitebud.png", "avatar_url": "https://robohash.org/dynamitebud/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I am interested in Networking Technologies. I am currently working on Web Crawlers and Automation."}}, {"model": "main.profile", "pk": 205, "fields": {"user": 205, "avatar": "user_profile/avatar/avatar_pgrm.png", "avatar_url": "https://robohash.org/pgrm/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 206, "fields": {"user": 206, "avatar": "user_profile/avatar/avatar_varundey.png", "avatar_url": "https://robohash.org/varundey/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer, Grofers. Past SWE Symantec. Passionate about learning how things work. Full stack JS dev. Loves all things web."}}, {"model": "main.profile", "pk": 207, "fields": {"user": 207, "avatar": "user_profile/avatar/avatar_blackmamba.png", "avatar_url": "https://robohash.org/blackmamba/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "👨‍💻Full Stack Developer 📱Android ☕Java 🐍Python 🇰Kotlin 🅰️Angular 🇳Node JS ⚛️React 📦Serverless 🦈Docker 🔥Firebase ⚙️Reverse Engineering"}}, {"model": "main.profile", "pk": 208, "fields": {"user": 208, "avatar": "user_profile/avatar/avatar_bugb.png", "avatar_url": "https://robohash.org/bugb/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Know: Nodejs, Ruby, Python, Perl, C++, Rust, Vim. Love: codegolf. Want: learn and master ML/DS, in my free time I do competitive programming (C++, Rust, JS) and browsing open source projects."}}, {"model": "main.profile", "pk": 209, "fields": {"user": 209, "avatar": "user_profile/avatar/avatar_venkteshv.png", "avatar_url": "https://robohash.org/venkteshv/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 210, "fields": {"user": 210, "avatar": "user_profile/avatar/avatar_paddy3118.png", "avatar_url": "https://robohash.org/paddy3118/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 211, "fields": {"user": 211, "avatar": "user_profile/avatar/avatar_netsi1964.png", "avatar_url": "https://robohash.org/netsi1964/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I am a front-end developer"}}, {"model": "main.profile", "pk": 212, "fields": {"user": 212, "avatar": "user_profile/avatar/avatar_cavezza.png", "avatar_url": "https://robohash.org/cavezza/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Bob Cavezza is an engineering leader and full stack engineer in the Boston Engineering and Boston Startup Community."}}, {"model": "main.profile", "pk": 213, "fields": {"user": 213, "avatar": "user_profile/avatar/avatar_heymarkkop.png", "avatar_url": "https://robohash.org/heymarkkop/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A fullstack developer inspired by learning and sharing. (him/he) "}}, {"model": "main.profile", "pk": 214, "fields": {"user": 214, "avatar": "user_profile/avatar/avatar_sihamza.png", "avatar_url": "https://robohash.org/sihamza/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 215, "fields": {"user": 215, "avatar": "user_profile/avatar/avatar_codelitically_incorrect.png", "avatar_url": "https://robohash.org/codelitically_incorrect/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "The wisdom of architecture"}}, {"model": "main.profile", "pk": 216, "fields": {"user": 216, "avatar": "user_profile/avatar/avatar_abhinav1217.png", "avatar_url": "https://robohash.org/abhinav1217/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 217, "fields": {"user": 217, "avatar": "user_profile/avatar/avatar_ragezbla.png", "avatar_url": "https://robohash.org/ragezbla/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 218, "fields": {"user": 218, "avatar": "user_profile/avatar/avatar_herchila.png", "avatar_url": "https://robohash.org/herchila/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Full-stack Software Developer. Restless and curious person. Space fan. Sport lover."}}, {"model": "main.profile", "pk": 219, "fields": {"user": 219, "avatar": "user_profile/avatar/avatar_renegadecoder94.png", "avatar_url": "https://robohash.org/renegadecoder94/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Engineering Education PhD student interested in challenging cultural issues in the tech community. "}}, {"model": "main.profile", "pk": 220, "fields": {"user": 220, "avatar": "user_profile/avatar/avatar_thorstenhirsch.png", "avatar_url": "https://robohash.org/thorstenhirsch/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 221, "fields": {"user": 221, "avatar": "user_profile/avatar/avatar_orenovadia.png", "avatar_url": "https://robohash.org/orenovadia/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 222, "fields": {"user": 222, "avatar": "user_profile/avatar/avatar_ankushabhishek3.png", "avatar_url": "https://robohash.org/ankushabhishek3/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I found about this website on news feed...& It was the great suggestion about web development."}}, {"model": "main.profile", "pk": 223, "fields": {"user": 223, "avatar": "user_profile/avatar/avatar_harshrathod50.png", "avatar_url": "https://robohash.org/harshrathod50/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Aspiring indie gamedev."}}, {"model": "main.profile", "pk": 224, "fields": {"user": 224, "avatar": "user_profile/avatar/avatar_brettclawson75.png", "avatar_url": "https://robohash.org/brettclawson75/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 225, "fields": {"user": 225, "avatar": "user_profile/avatar/avatar_mblayman.png", "avatar_url": "https://robohash.org/mblayman/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Matt Layman is a software engineer from Frederick, MD. He is an open source software maintainer and advocate for Python."}}, {"model": "main.profile", "pk": 226, "fields": {"user": 226, "avatar": "user_profile/avatar/avatar_vicradon.png", "avatar_url": "https://robohash.org/vicradon/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Learning server-side development. Creating courses on educative.io"}}, {"model": "main.profile", "pk": 227, "fields": {"user": 227, "avatar": "user_profile/avatar/avatar_angelarae63.png", "avatar_url": "https://robohash.org/angelarae63/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Former Computer Operator at SAS Institute. Budding web developer looking for small projects to gain experience."}}, {"model": "main.profile", "pk": 228, "fields": {"user": 228, "avatar": "user_profile/avatar/avatar_ebenoladutemu.png", "avatar_url": "https://robohash.org/ebenoladutemu/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Front-end Dev who wants to go to space.\r\n\r\n\r\nThe more you know, the more you know you don't know. Stay Humble!"}}, {"model": "main.profile", "pk": 229, "fields": {"user": 229, "avatar": "user_profile/avatar/avatar_ajinspiro.png", "avatar_url": "https://robohash.org/ajinspiro/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "ASP.NET Core developer, Angular hobbyist, JavaScript enthusiast and Led Zeppelin lover."}}, {"model": "main.profile", "pk": 230, "fields": {"user": 230, "avatar": "user_profile/avatar/avatar_scotthannen.png", "avatar_url": "https://robohash.org/scotthannen/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I’ve been developing software full time since 2003, beginning with languages I’m still embarrassed to mention. "}}, {"model": "main.profile", "pk": 231, "fields": {"user": 231, "avatar": "user_profile/avatar/avatar_dejvid98.png", "avatar_url": "https://robohash.org/dejvid98/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 232, "fields": {"user": 232, "avatar": "user_profile/avatar/avatar_jameslau.png", "avatar_url": "https://robohash.org/jameslau/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Boston based front-end developer with a background in graphic design"}}, {"model": "main.profile", "pk": 233, "fields": {"user": 233, "avatar": "user_profile/avatar/avatar_erikwhiting88.png", "avatar_url": "https://robohash.org/erikwhiting88/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Professional software engineer slinging Ruby on Rails. Computer science researcher learning about scientific computing. OSS contributor to bioinformatics."}}, {"model": "main.profile", "pk": 234, "fields": {"user": 234, "avatar": "user_profile/avatar/avatar_jsn1nj4.png", "avatar_url": "https://robohash.org/jsn1nj4/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 235, "fields": {"user": 235, "avatar": "user_profile/avatar/avatar_lennyroyroy.png", "avatar_url": "https://robohash.org/lennyroyroy/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 236, "fields": {"user": 236, "avatar": "user_profile/avatar/avatar_jessekphillips.png", "avatar_url": "https://robohash.org/jessekphillips/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Senior Quality Assurance (SDET) ¶ Avid hobby D programmer ¶ Telling people what to do because I am right. "}}, {"model": "main.profile", "pk": 237, "fields": {"user": 237, "avatar": "user_profile/avatar/avatar_dafuloth.png", "avatar_url": "https://robohash.org/dafuloth/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 238, "fields": {"user": 238, "avatar": "user_profile/avatar/avatar_fannyvieira.png", "avatar_url": "https://robohash.org/fannyvieira/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Master of none &\r\npassionate by computer challenges. "}}, {"model": "main.profile", "pk": 239, "fields": {"user": 239, "avatar": "user_profile/avatar/avatar_joseims.png", "avatar_url": "https://robohash.org/joseims/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 240, "fields": {"user": 240, "avatar": "user_profile/avatar/avatar_davidedup.png", "avatar_url": "https://robohash.org/davidedup/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 241, "fields": {"user": 241, "avatar": "user_profile/avatar/avatar_lukehxh.png", "avatar_url": "https://robohash.org/lukehxh/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Undergraduate student in Computer Science at Federal University of Campina Grande. Full stack developer"}}, {"model": "main.profile", "pk": 242, "fields": {"user": 242, "avatar": "user_profile/avatar/avatar_nabbisen.png", "avatar_url": "https://robohash.org/nabbisen/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Founder of Scqr Inc. (scqr.net) An ICT designer/developer and a security monk. Trying \"a cool brain and a warm heart\". Interested: Social relationships and issues. OpenBSD/Rust etc."}}, {"model": "main.profile", "pk": 243, "fields": {"user": 243, "avatar": "user_profile/avatar/avatar_andresmontoyain.png", "avatar_url": "https://robohash.org/andresmontoyain/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I just make content :) (soon :o)"}}, {"model": "main.profile", "pk": 244, "fields": {"user": 244, "avatar": "user_profile/avatar/avatar_oliverjumpertz.png", "avatar_url": "https://robohash.org/oliverjumpertz/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Just a Software Engineer"}}, {"model": "main.profile", "pk": 245, "fields": {"user": 245, "avatar": "user_profile/avatar/avatar_mrcsharp.png", "avatar_url": "https://robohash.org/mrcsharp/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software developer working with the Microsoft .Net Ecosystem building for the Web, Desktop, and mobile platforms."}}, {"model": "main.profile", "pk": 246, "fields": {"user": 246, "avatar": "user_profile/avatar/avatar_tallerguy.png", "avatar_url": "https://robohash.org/tallerguy/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Passionate about making things. Rails is preferred tool"}}, {"model": "main.profile", "pk": 247, "fields": {"user": 247, "avatar": "user_profile/avatar/avatar_ashleemboyer.png", "avatar_url": "https://robohash.org/ashleemboyer/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Disabled Software Engineer and Web Accessibility Specialist helping people learn about accessibility"}}, {"model": "main.profile", "pk": 248, "fields": {"user": 248, "avatar": "user_profile/avatar/avatar_leewarrickjr.png", "avatar_url": "https://robohash.org/leewarrickjr/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Front-end Developer at Realtruck.com, Organizer of Orlando’s Project Code Experience Meetup, Co-Host of the Tech Jr Podcast, and all-around Junior Developer Advocate."}}, {"model": "main.profile", "pk": 249, "fields": {"user": 249, "avatar": "user_profile/avatar/avatar_ahmadbassamemran.png", "avatar_url": "https://robohash.org/ahmadbassamemran/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I have several years of commercial experience in HTML5, CSS3, Sass, javaScript, jQuery, Greensock.js, ADF UI, Photoshop & Illustrator. I'm renowned for fast HTML and CSS coding."}}, {"model": "main.profile", "pk": 250, "fields": {"user": 250, "avatar": "user_profile/avatar/avatar_wangmao0324.png", "avatar_url": "https://robohash.org/wangmao0324/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 251, "fields": {"user": 251, "avatar": "user_profile/avatar/avatar_nataliedeweerd.png", "avatar_url": "https://robohash.org/nataliedeweerd/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Full-stack web developer and proud geek. Married to a flying Dutchman. Lover of cats."}}, {"model": "main.profile", "pk": 252, "fields": {"user": 252, "avatar": "user_profile/avatar/avatar_chris_bertrand.png", "avatar_url": "https://robohash.org/chris_bertrand/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Full Stack .Net | Angular | Salesforce Developer in Reading, UK"}}, {"model": "main.profile", "pk": 253, "fields": {"user": 253, "avatar": "user_profile/avatar/avatar_wouterxd.png", "avatar_url": "https://robohash.org/wouterxd/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I am a 15-year-old programmer that is super interested in everything programming related and loves to learn new things! "}}, {"model": "main.profile", "pk": 254, "fields": {"user": 254, "avatar": "user_profile/avatar/avatar_dhanushkadev.png", "avatar_url": "https://robohash.org/dhanushkadev/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Passionated geek in computer engineering"}}, {"model": "main.profile", "pk": 255, "fields": {"user": 255, "avatar": "user_profile/avatar/avatar_brguirra.png", "avatar_url": "https://robohash.org/brguirra/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Learning IOS development"}}, {"model": "main.profile", "pk": 256, "fields": {"user": 256, "avatar": "user_profile/avatar/avatar_pavelloz.png", "avatar_url": "https://robohash.org/pavelloz/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Performance, JavaScript, Serverless, and Testing enthusiast."}}, {"model": "main.profile", "pk": 257, "fields": {"user": 257, "avatar": "user_profile/avatar/avatar_z2lai.png", "avatar_url": "https://robohash.org/z2lai/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm aspiring to make programming my bread and butter"}}, {"model": "main.profile", "pk": 258, "fields": {"user": 258, "avatar": "user_profile/avatar/avatar_craigdev937.png", "avatar_url": "https://robohash.org/craigdev937/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 259, "fields": {"user": 259, "avatar": "user_profile/avatar/avatar_tisaconundrum2.png", "avatar_url": "https://robohash.org/tisaconundrum2/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I would like to be a non-newtonianware engineer. Something that's hard and soft at the same time. "}}, {"model": "main.profile", "pk": 260, "fields": {"user": 260, "avatar": "user_profile/avatar/avatar_dewofyouryouth_43.png", "avatar_url": "https://robohash.org/dewofyouryouth_43/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Jacob Shore is a software engineer, full stack web developer, and banjo enthusiast."}}, {"model": "main.profile", "pk": 261, "fields": {"user": 261, "avatar": "user_profile/avatar/avatar_elbugz.png", "avatar_url": "https://robohash.org/elbugz/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I've been a developer for a long, long time. Professionally it's been more than two decades. Yet, I have also had a number of other jobs and stories. My latest journey was co-owning a bakery."}}, {"model": "main.profile", "pk": 262, "fields": {"user": 262, "avatar": "user_profile/avatar/avatar_tyrw.png", "avatar_url": "https://robohash.org/tyrw/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Love technology and interested in good.  Mostly JS right now."}}, {"model": "main.profile", "pk": 263, "fields": {"user": 263, "avatar": "user_profile/avatar/avatar_kris.png", "avatar_url": "https://robohash.org/kris/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "React native developer and Technical writer Americano addicted"}}, {"model": "main.profile", "pk": 264, "fields": {"user": 264, "avatar": "user_profile/avatar/avatar_the_power_coder.png", "avatar_url": "https://robohash.org/the_power_coder/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I straddle the line between Dev and QA to increase confidence in software. "}}, {"model": "main.profile", "pk": 265, "fields": {"user": 265, "avatar": "user_profile/avatar/avatar_afsarzan.png", "avatar_url": "https://robohash.org/afsarzan/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 266, "fields": {"user": 266, "avatar": "user_profile/avatar/avatar_danieldfc.png", "avatar_url": "https://robohash.org/danieldfc/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I am developer Full Stack heavy_check_mark @Rocketseat - Student - GoStack"}}, {"model": "main.profile", "pk": 267, "fields": {"user": 267, "avatar": "user_profile/avatar/avatar_hellixum.png", "avatar_url": "https://robohash.org/hellixum/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 268, "fields": {"user": 268, "avatar": "user_profile/avatar/avatar_logunlaja26.png", "avatar_url": "https://robohash.org/logunlaja26/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I’m a new software developer aspiring to add value to the dev community while developing profitable side projects."}}, {"model": "main.profile", "pk": 269, "fields": {"user": 269, "avatar": "user_profile/avatar/avatar_djoleb.png", "avatar_url": "https://robohash.org/djoleb/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Java backend engineer @Nortal"}}, {"model": "main.profile", "pk": 270, "fields": {"user": 270, "avatar": "user_profile/avatar/avatar_isalevine.png", "avatar_url": "https://robohash.org/isalevine/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Isa (ee-suh). She/her pronouns. Full stack developer working with Java, React, Jenkins, and Kubernetes. Drinks too much bubbly water."}}, {"model": "main.profile", "pk": 271, "fields": {"user": 271, "avatar": "user_profile/avatar/avatar_shahzaibkhalid.png", "avatar_url": "https://robohash.org/shahzaibkhalid/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Developer at mobileLIVE | Based in Toronto 🇨🇦"}}, {"model": "main.profile", "pk": 272, "fields": {"user": 272, "avatar": "user_profile/avatar/avatar_anduser96.png", "avatar_url": "https://robohash.org/anduser96/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 273, "fields": {"user": 273, "avatar": "user_profile/avatar/avatar_amcsi.png", "avatar_url": "https://robohash.org/amcsi/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Hi, I like to do PHP (Laravel, ZF) and JS (React, Vue)"}}, {"model": "main.profile", "pk": 274, "fields": {"user": 274, "avatar": "user_profile/avatar/avatar_dean.png", "avatar_url": "https://robohash.org/dean/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Computer science major at Michigan Technological University, class of 2020 👀"}}, {"model": "main.profile", "pk": 275, "fields": {"user": 275, "avatar": "user_profile/avatar/avatar_karthikaruna.png", "avatar_url": "https://robohash.org/karthikaruna/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer passionate about frontend technologies"}}, {"model": "main.profile", "pk": 276, "fields": {"user": 276, "avatar": "user_profile/avatar/avatar_thangchung.png", "avatar_url": "https://robohash.org/thangchung/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I'm developer and I love coding"}}, {"model": "main.profile", "pk": 277, "fields": {"user": 277, "avatar": "user_profile/avatar/avatar_zmaniace.png", "avatar_url": "https://robohash.org/zmaniace/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Salaam to all...\nImran here...New to coding...InshaAllah will become a Full Stack Developer"}}, {"model": "main.profile", "pk": 278, "fields": {"user": 278, "avatar": "user_profile/avatar/avatar_dpkahuja.png", "avatar_url": "https://robohash.org/dpkahuja/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Lifelong learner, Software Engineer.\r\nNot in Forbes 30 under 30."}}, {"model": "main.profile", "pk": 279, "fields": {"user": 279, "avatar": "user_profile/avatar/avatar_patarapolw.png", "avatar_url": "https://robohash.org/patarapolw/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Currently interested in TypeScript, Vue, Kotlin and Python. Looking forward to learning DevOps, though."}}, {"model": "main.profile", "pk": 280, "fields": {"user": 280, "avatar": "user_profile/avatar/avatar_raymag.png", "avatar_url": "https://robohash.org/raymag/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Introvert, Web Developer, Hobbyst Illustrator and CS Student;"}}, {"model": "main.profile", "pk": 281, "fields": {"user": 281, "avatar": "user_profile/avatar/avatar_rishidadheech.png", "avatar_url": "https://robohash.org/rishidadheech/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 282, "fields": {"user": 282, "avatar": "user_profile/avatar/avatar_alostboy.png", "avatar_url": "https://robohash.org/alostboy/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "A boy lost in the middle of this thing called programming."}}, {"model": "main.profile", "pk": 283, "fields": {"user": 283, "avatar": "user_profile/avatar/avatar_ayaanraj.png", "avatar_url": "https://robohash.org/ayaanraj/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 284, "fields": {"user": 284, "avatar": "user_profile/avatar/avatar_godcrampy.png", "avatar_url": "https://robohash.org/godcrampy/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "That's JavaScript, I'm gonna run that!"}}, {"model": "main.profile", "pk": 285, "fields": {"user": 285, "avatar": "user_profile/avatar/avatar_edisonpappi.png", "avatar_url": "https://robohash.org/edisonpappi/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer, Traveler, & story teller💻💡"}}, {"model": "main.profile", "pk": 286, "fields": {"user": 286, "avatar": "user_profile/avatar/avatar_techdebtor.png", "avatar_url": "https://robohash.org/techdebtor/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "software engineer in SF (they/them)"}}, {"model": "main.profile", "pk": 287, "fields": {"user": 287, "avatar": "user_profile/avatar/avatar_chattes.png", "avatar_url": "https://robohash.org/chattes/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Fullstack Engineer, writing Javascript  for Backend, Web and Mobile.\r\nLikes automating thing things with NodeJS."}}, {"model": "main.profile", "pk": 288, "fields": {"user": 288, "avatar": "user_profile/avatar/avatar_takakd.png", "avatar_url": "https://robohash.org/takakd/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Software Engineer 👨🏻‍💻 🇯🇵 "}}, {"model": "main.profile", "pk": 289, "fields": {"user": 289, "avatar": "user_profile/avatar/avatar_srisrinu.png", "avatar_url": "https://robohash.org/srisrinu/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Python enthusiast interested in doing projects"}}, {"model": "main.profile", "pk": 290, "fields": {"user": 290, "avatar": "user_profile/avatar/avatar_farzanrashid.png", "avatar_url": "https://robohash.org/farzanrashid/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 291, "fields": {"user": 291, "avatar": "user_profile/avatar/avatar_goyo.png", "avatar_url": "https://robohash.org/goyo/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Code, games, cats. Opinions are my own."}}, {"model": "main.profile", "pk": 292, "fields": {"user": 292, "avatar": "user_profile/avatar/avatar_aadibajpai.png", "avatar_url": "https://robohash.org/aadibajpai/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "I really like automating things. Involved in a bunch of Google programs.\r\nhttp://clashkahznlvpwfg.onion\r\n"}}, {"model": "main.profile", "pk": 293, "fields": {"user": 293, "avatar": "user_profile/avatar/avatar_zakwillis.png", "avatar_url": "https://robohash.org/zakwillis/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Hi, I normally contract in MSBI, Oracle, .Net/.Net Core, focusing on a property platform at the moment. Have also been working hard on upgrading my limited company website too."}}, {"model": "main.profile", "pk": 294, "fields": {"user": 294, "avatar": "user_profile/avatar/avatar_wajahatkarim.png", "avatar_url": "https://robohash.org/wajahatkarim/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "🔥 Google Developer Expert (GDE) in Android . 📱 Android Dev . 💻FOSS Contributor . 📝Writer . 🎤 Speaker . 👶 Developer Dad - 🌐Subscribe at https://wajahatkarim.com"}}, {"model": "main.profile", "pk": 295, "fields": {"user": 295, "avatar": "user_profile/avatar/avatar_jmfayard.png", "avatar_url": "https://robohash.org/jmfayard/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Laziness, Impatience and Hubris"}}, {"model": "main.profile", "pk": 296, "fields": {"user": 296, "avatar": "user_profile/avatar/avatar_brcprasanna.png", "avatar_url": "https://robohash.org/brcprasanna/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": "Android developer, passionate about new languages and technologies, sports addict, proud dad\r\n\r\n"}}, {"model": "main.profile", "pk": 297, "fields": {"user": 297, "avatar": "user_profile/avatar/avatar_benjaminstrmer.png", "avatar_url": "https://robohash.org/benjaminstrmer/set_set1/bgset_bg1/size=360x360.png?ignoreext=false", "bio": ""}}, {"model": "main.profile", "pk": 298, "fields": {"user": 298, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 299, "fields": {"user": 299, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 300, "fields": {"user": 300, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 301, "fields": {"user": 301, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 302, "fields": {"user": 302, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 303, "fields": {"user": 303, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 304, "fields": {"user": 304, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 305, "fields": {"user": 305, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 306, "fields": {"user": 306, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 307, "fields": {"user": 307, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 308, "fields": {"user": 308, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 309, "fields": {"user": 309, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 310, "fields": {"user": 310, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 311, "fields": {"user": 311, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 312, "fields": {"user": 312, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 313, "fields": {"user": 313, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 314, "fields": {"user": 314, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 315, "fields": {"user": 315, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 316, "fields": {"user": 316, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 317, "fields": {"user": 317, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 318, "fields": {"user": 318, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 319, "fields": {"user": 319, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 320, "fields": {"user": 320, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 321, "fields": {"user": 321, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 322, "fields": {"user": 322, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 323, "fields": {"user": 323, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 324, "fields": {"user": 324, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 325, "fields": {"user": 325, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 326, "fields": {"user": 326, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 327, "fields": {"user": 327, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 328, "fields": {"user": 328, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 329, "fields": {"user": 329, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 330, "fields": {"user": 330, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 331, "fields": {"user": 331, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 332, "fields": {"user": 332, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 333, "fields": {"user": 333, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 334, "fields": {"user": 334, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 335, "fields": {"user": 335, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 336, "fields": {"user": 336, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 337, "fields": {"user": 337, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 338, "fields": {"user": 338, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 339, "fields": {"user": 339, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 340, "fields": {"user": 340, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 341, "fields": {"user": 341, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 342, "fields": {"user": 342, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 343, "fields": {"user": 343, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 344, "fields": {"user": 344, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 345, "fields": {"user": 345, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 346, "fields": {"user": 346, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 347, "fields": {"user": 347, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 348, "fields": {"user": 348, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 349, "fields": {"user": 349, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 350, "fields": {"user": 350, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 351, "fields": {"user": 351, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 352, "fields": {"user": 352, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 353, "fields": {"user": 353, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 354, "fields": {"user": 354, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 355, "fields": {"user": 355, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 356, "fields": {"user": 356, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 357, "fields": {"user": 357, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 358, "fields": {"user": 358, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 359, "fields": {"user": 359, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 360, "fields": {"user": 360, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 361, "fields": {"user": 361, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 362, "fields": {"user": 362, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 363, "fields": {"user": 363, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 364, "fields": {"user": 364, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 365, "fields": {"user": 365, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 366, "fields": {"user": 366, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 367, "fields": {"user": 367, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 368, "fields": {"user": 368, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 369, "fields": {"user": 369, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 370, "fields": {"user": 370, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 371, "fields": {"user": 371, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 372, "fields": {"user": 372, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 373, "fields": {"user": 373, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 374, "fields": {"user": 374, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 375, "fields": {"user": 375, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 376, "fields": {"user": 376, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 377, "fields": {"user": 377, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 378, "fields": {"user": 378, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 379, "fields": {"user": 379, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 380, "fields": {"user": 380, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 381, "fields": {"user": 381, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 382, "fields": {"user": 382, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 383, "fields": {"user": 383, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 384, "fields": {"user": 384, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 385, "fields": {"user": 385, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 386, "fields": {"user": 386, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 387, "fields": {"user": 387, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 388, "fields": {"user": 388, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 389, "fields": {"user": 389, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 390, "fields": {"user": 390, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 391, "fields": {"user": 391, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 392, "fields": {"user": 392, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 393, "fields": {"user": 393, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 394, "fields": {"user": 394, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 395, "fields": {"user": 395, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 396, "fields": {"user": 396, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 397, "fields": {"user": 397, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 398, "fields": {"user": 398, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 399, "fields": {"user": 399, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 400, "fields": {"user": 400, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 401, "fields": {"user": 401, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 402, "fields": {"user": 402, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 403, "fields": {"user": 403, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 404, "fields": {"user": 404, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 405, "fields": {"user": 405, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 406, "fields": {"user": 406, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 407, "fields": {"user": 407, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 408, "fields": {"user": 408, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 409, "fields": {"user": 409, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 410, "fields": {"user": 410, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 411, "fields": {"user": 411, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 412, "fields": {"user": 412, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 413, "fields": {"user": 413, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 414, "fields": {"user": 414, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 415, "fields": {"user": 415, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 416, "fields": {"user": 416, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 417, "fields": {"user": 417, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 418, "fields": {"user": 418, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 419, "fields": {"user": 419, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 420, "fields": {"user": 420, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 421, "fields": {"user": 421, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 422, "fields": {"user": 422, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 423, "fields": {"user": 423, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 424, "fields": {"user": 424, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 425, "fields": {"user": 425, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 426, "fields": {"user": 426, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 427, "fields": {"user": 427, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 428, "fields": {"user": 428, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 429, "fields": {"user": 429, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 430, "fields": {"user": 430, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 431, "fields": {"user": 431, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 432, "fields": {"user": 432, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 433, "fields": {"user": 433, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 434, "fields": {"user": 434, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 435, "fields": {"user": 435, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 436, "fields": {"user": 436, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 437, "fields": {"user": 437, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 438, "fields": {"user": 438, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 439, "fields": {"user": 439, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 440, "fields": {"user": 440, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 441, "fields": {"user": 441, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 442, "fields": {"user": 442, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 443, "fields": {"user": 443, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 444, "fields": {"user": 444, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 445, "fields": {"user": 445, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 446, "fields": {"user": 446, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 447, "fields": {"user": 447, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 448, "fields": {"user": 448, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 449, "fields": {"user": 449, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 450, "fields": {"user": 450, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 451, "fields": {"user": 451, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 452, "fields": {"user": 452, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 453, "fields": {"user": 453, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 454, "fields": {"user": 454, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 455, "fields": {"user": 455, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 456, "fields": {"user": 456, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 457, "fields": {"user": 457, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 458, "fields": {"user": 458, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 459, "fields": {"user": 459, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 460, "fields": {"user": 460, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 461, "fields": {"user": 461, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 462, "fields": {"user": 462, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 463, "fields": {"user": 463, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 464, "fields": {"user": 464, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 465, "fields": {"user": 465, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 466, "fields": {"user": 466, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 467, "fields": {"user": 467, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 468, "fields": {"user": 468, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 469, "fields": {"user": 469, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 470, "fields": {"user": 470, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 471, "fields": {"user": 471, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 472, "fields": {"user": 472, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 473, "fields": {"user": 473, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 474, "fields": {"user": 474, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 475, "fields": {"user": 475, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 476, "fields": {"user": 476, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 477, "fields": {"user": 477, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 478, "fields": {"user": 478, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 479, "fields": {"user": 479, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 480, "fields": {"user": 480, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 481, "fields": {"user": 481, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 482, "fields": {"user": 482, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 483, "fields": {"user": 483, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 484, "fields": {"user": 484, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 485, "fields": {"user": 485, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 486, "fields": {"user": 486, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 487, "fields": {"user": 487, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 488, "fields": {"user": 488, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 489, "fields": {"user": 489, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 490, "fields": {"user": 490, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 491, "fields": {"user": 491, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 492, "fields": {"user": 492, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 493, "fields": {"user": 493, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 494, "fields": {"user": 494, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 495, "fields": {"user": 495, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 496, "fields": {"user": 496, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 497, "fields": {"user": 497, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 498, "fields": {"user": 498, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 499, "fields": {"user": 499, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 500, "fields": {"user": 500, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 501, "fields": {"user": 501, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 502, "fields": {"user": 502, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 503, "fields": {"user": 503, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 504, "fields": {"user": 504, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 505, "fields": {"user": 505, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 506, "fields": {"user": 506, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 507, "fields": {"user": 507, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 508, "fields": {"user": 508, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 509, "fields": {"user": 509, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 510, "fields": {"user": 510, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 511, "fields": {"user": 511, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 512, "fields": {"user": 512, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 513, "fields": {"user": 513, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 514, "fields": {"user": 514, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 515, "fields": {"user": 515, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 516, "fields": {"user": 516, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 517, "fields": {"user": 517, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 518, "fields": {"user": 518, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 519, "fields": {"user": 519, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 520, "fields": {"user": 520, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 521, "fields": {"user": 521, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 522, "fields": {"user": 522, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 523, "fields": {"user": 523, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 524, "fields": {"user": 524, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 525, "fields": {"user": 525, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 526, "fields": {"user": 526, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 527, "fields": {"user": 527, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 528, "fields": {"user": 528, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 529, "fields": {"user": 529, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 530, "fields": {"user": 530, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 531, "fields": {"user": 531, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 532, "fields": {"user": 532, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 533, "fields": {"user": 533, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 534, "fields": {"user": 534, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 535, "fields": {"user": 535, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 536, "fields": {"user": 536, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 537, "fields": {"user": 537, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 538, "fields": {"user": 538, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 539, "fields": {"user": 539, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 540, "fields": {"user": 540, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 541, "fields": {"user": 541, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 542, "fields": {"user": 542, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 543, "fields": {"user": 543, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 544, "fields": {"user": 544, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 545, "fields": {"user": 545, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 546, "fields": {"user": 546, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 547, "fields": {"user": 547, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 548, "fields": {"user": 548, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 549, "fields": {"user": 549, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 550, "fields": {"user": 550, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 551, "fields": {"user": 551, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 552, "fields": {"user": 552, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 553, "fields": {"user": 553, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 554, "fields": {"user": 554, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 555, "fields": {"user": 555, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 556, "fields": {"user": 556, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 557, "fields": {"user": 557, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 558, "fields": {"user": 558, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 559, "fields": {"user": 559, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 560, "fields": {"user": 560, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 561, "fields": {"user": 561, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 562, "fields": {"user": 562, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 563, "fields": {"user": 563, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 564, "fields": {"user": 564, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 565, "fields": {"user": 565, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 566, "fields": {"user": 566, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 567, "fields": {"user": 567, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 568, "fields": {"user": 568, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 569, "fields": {"user": 569, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 570, "fields": {"user": 570, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 571, "fields": {"user": 571, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 572, "fields": {"user": 572, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 573, "fields": {"user": 573, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 574, "fields": {"user": 574, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 575, "fields": {"user": 575, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 576, "fields": {"user": 576, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 577, "fields": {"user": 577, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 578, "fields": {"user": 578, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 579, "fields": {"user": 579, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 580, "fields": {"user": 580, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 581, "fields": {"user": 581, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 582, "fields": {"user": 582, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 583, "fields": {"user": 583, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 584, "fields": {"user": 584, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 585, "fields": {"user": 585, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 586, "fields": {"user": 586, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 587, "fields": {"user": 587, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 588, "fields": {"user": 588, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 589, "fields": {"user": 589, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 590, "fields": {"user": 590, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 591, "fields": {"user": 591, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 592, "fields": {"user": 592, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 593, "fields": {"user": 593, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 594, "fields": {"user": 594, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 595, "fields": {"user": 595, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 596, "fields": {"user": 596, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 597, "fields": {"user": 597, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 598, "fields": {"user": 598, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 599, "fields": {"user": 599, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 600, "fields": {"user": 600, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 601, "fields": {"user": 601, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 602, "fields": {"user": 602, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 603, "fields": {"user": 603, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 604, "fields": {"user": 604, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 605, "fields": {"user": 605, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 606, "fields": {"user": 606, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 607, "fields": {"user": 607, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 608, "fields": {"user": 608, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 609, "fields": {"user": 609, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 610, "fields": {"user": 610, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 611, "fields": {"user": 611, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 612, "fields": {"user": 612, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 613, "fields": {"user": 613, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 614, "fields": {"user": 614, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 615, "fields": {"user": 615, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 616, "fields": {"user": 616, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 617, "fields": {"user": 617, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 618, "fields": {"user": 618, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 619, "fields": {"user": 619, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 620, "fields": {"user": 620, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 621, "fields": {"user": 621, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 622, "fields": {"user": 622, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 623, "fields": {"user": 623, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 624, "fields": {"user": 624, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 625, "fields": {"user": 625, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 626, "fields": {"user": 626, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 627, "fields": {"user": 627, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 628, "fields": {"user": 628, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 629, "fields": {"user": 629, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 630, "fields": {"user": 630, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 631, "fields": {"user": 631, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 632, "fields": {"user": 632, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 633, "fields": {"user": 633, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 634, "fields": {"user": 634, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 635, "fields": {"user": 635, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 636, "fields": {"user": 636, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 637, "fields": {"user": 637, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 638, "fields": {"user": 638, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 639, "fields": {"user": 639, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 640, "fields": {"user": 640, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 641, "fields": {"user": 641, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 642, "fields": {"user": 642, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 643, "fields": {"user": 643, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 644, "fields": {"user": 644, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 645, "fields": {"user": 645, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 646, "fields": {"user": 646, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 647, "fields": {"user": 647, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 648, "fields": {"user": 648, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 649, "fields": {"user": 649, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 650, "fields": {"user": 650, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 651, "fields": {"user": 651, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 652, "fields": {"user": 652, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 653, "fields": {"user": 653, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 654, "fields": {"user": 654, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 655, "fields": {"user": 655, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 656, "fields": {"user": 656, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 657, "fields": {"user": 657, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 658, "fields": {"user": 658, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 659, "fields": {"user": 659, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 660, "fields": {"user": 660, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 661, "fields": {"user": 661, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 662, "fields": {"user": 662, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 663, "fields": {"user": 663, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 664, "fields": {"user": 664, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 665, "fields": {"user": 665, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 666, "fields": {"user": 666, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 667, "fields": {"user": 667, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 668, "fields": {"user": 668, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 669, "fields": {"user": 669, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 670, "fields": {"user": 670, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 671, "fields": {"user": 671, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 672, "fields": {"user": 672, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 673, "fields": {"user": 673, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 674, "fields": {"user": 674, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 675, "fields": {"user": 675, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 676, "fields": {"user": 676, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 677, "fields": {"user": 677, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 678, "fields": {"user": 678, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 679, "fields": {"user": 679, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 680, "fields": {"user": 680, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 681, "fields": {"user": 681, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 682, "fields": {"user": 682, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 683, "fields": {"user": 683, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 684, "fields": {"user": 684, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 685, "fields": {"user": 685, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 686, "fields": {"user": 686, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 687, "fields": {"user": 687, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 688, "fields": {"user": 688, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 689, "fields": {"user": 689, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 690, "fields": {"user": 690, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 691, "fields": {"user": 691, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 692, "fields": {"user": 692, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 693, "fields": {"user": 693, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 694, "fields": {"user": 694, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 695, "fields": {"user": 695, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 696, "fields": {"user": 696, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 697, "fields": {"user": 697, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 698, "fields": {"user": 698, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 699, "fields": {"user": 699, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 700, "fields": {"user": 700, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 701, "fields": {"user": 701, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 702, "fields": {"user": 702, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 703, "fields": {"user": 703, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 704, "fields": {"user": 704, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 705, "fields": {"user": 705, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 706, "fields": {"user": 706, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 707, "fields": {"user": 707, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 708, "fields": {"user": 708, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 709, "fields": {"user": 709, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 710, "fields": {"user": 710, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 711, "fields": {"user": 711, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 712, "fields": {"user": 712, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 713, "fields": {"user": 713, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 714, "fields": {"user": 714, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 715, "fields": {"user": 715, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 716, "fields": {"user": 716, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 717, "fields": {"user": 717, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 718, "fields": {"user": 718, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 719, "fields": {"user": 719, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 720, "fields": {"user": 720, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 721, "fields": {"user": 721, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 722, "fields": {"user": 722, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 723, "fields": {"user": 723, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 724, "fields": {"user": 724, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 725, "fields": {"user": 725, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 726, "fields": {"user": 726, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 727, "fields": {"user": 727, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 728, "fields": {"user": 728, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 729, "fields": {"user": 729, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 730, "fields": {"user": 730, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 731, "fields": {"user": 731, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 732, "fields": {"user": 732, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 733, "fields": {"user": 733, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 734, "fields": {"user": 734, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 735, "fields": {"user": 735, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 736, "fields": {"user": 736, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 737, "fields": {"user": 737, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 738, "fields": {"user": 738, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 739, "fields": {"user": 739, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 740, "fields": {"user": 740, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 741, "fields": {"user": 741, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 742, "fields": {"user": 742, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 743, "fields": {"user": 743, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 744, "fields": {"user": 744, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 745, "fields": {"user": 745, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 746, "fields": {"user": 746, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 747, "fields": {"user": 747, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 748, "fields": {"user": 748, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 749, "fields": {"user": 749, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 750, "fields": {"user": 750, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 751, "fields": {"user": 751, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 752, "fields": {"user": 752, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 753, "fields": {"user": 753, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 754, "fields": {"user": 754, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 755, "fields": {"user": 755, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 756, "fields": {"user": 756, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 757, "fields": {"user": 757, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 758, "fields": {"user": 758, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 759, "fields": {"user": 759, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 760, "fields": {"user": 760, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 761, "fields": {"user": 761, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 762, "fields": {"user": 762, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 763, "fields": {"user": 763, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 764, "fields": {"user": 764, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 765, "fields": {"user": 765, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 766, "fields": {"user": 766, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 767, "fields": {"user": 767, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 768, "fields": {"user": 768, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 769, "fields": {"user": 769, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 770, "fields": {"user": 770, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 771, "fields": {"user": 771, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 772, "fields": {"user": 772, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 773, "fields": {"user": 773, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 774, "fields": {"user": 774, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 775, "fields": {"user": 775, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 776, "fields": {"user": 776, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 777, "fields": {"user": 777, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 778, "fields": {"user": 778, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 779, "fields": {"user": 779, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 780, "fields": {"user": 780, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 781, "fields": {"user": 781, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 782, "fields": {"user": 782, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 783, "fields": {"user": 783, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 784, "fields": {"user": 784, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 785, "fields": {"user": 785, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 786, "fields": {"user": 786, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 787, "fields": {"user": 787, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 788, "fields": {"user": 788, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 789, "fields": {"user": 789, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 790, "fields": {"user": 790, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 791, "fields": {"user": 791, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 792, "fields": {"user": 792, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 793, "fields": {"user": 793, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 794, "fields": {"user": 794, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 795, "fields": {"user": 795, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 796, "fields": {"user": 796, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 797, "fields": {"user": 797, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 798, "fields": {"user": 798, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 799, "fields": {"user": 799, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 800, "fields": {"user": 800, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 801, "fields": {"user": 801, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 802, "fields": {"user": 802, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 803, "fields": {"user": 803, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 804, "fields": {"user": 804, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 805, "fields": {"user": 805, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 806, "fields": {"user": 806, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 807, "fields": {"user": 807, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 808, "fields": {"user": 808, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 809, "fields": {"user": 809, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 810, "fields": {"user": 810, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 811, "fields": {"user": 811, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 812, "fields": {"user": 812, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 813, "fields": {"user": 813, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 814, "fields": {"user": 814, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 815, "fields": {"user": 815, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 816, "fields": {"user": 816, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.profile", "pk": 817, "fields": {"user": 817, "avatar": "", "avatar_url": null, "bio": ""}}, {"model": "main.follow", "pk": 1, "fields": {"following": 2, "follower": 3, "following_since": "2022-11-27T10:54:04.703Z"}}, {"model": "main.follow", "pk": 2, "fields": {"following": 5, "follower": 6, "following_since": "2022-11-27T10:58:05.991Z"}}, {"model": "main.follow", "pk": 3, "fields": {"following": 5, "follower": 5, "following_since": "2022-11-27T10:58:06.001Z"}}, {"model": "main.follow", "pk": 4, "fields": {"following": 7, "follower": 8, "following_since": "2022-11-27T10:58:10.931Z"}}, {"model": "main.follow", "pk": 5, "fields": {"following": 7, "follower": 7, "following_since": "2022-11-27T10:58:10.941Z"}}, {"model": "main.follow", "pk": 6, "fields": {"following": 7, "follower": 9, "following_since": "2022-11-27T10:58:13.423Z"}}, {"model": "main.follow", "pk": 7, "fields": {"following": 7, "follower": 10, "following_since": "2022-11-27T10:58:14.995Z"}}, {"model": "main.follow", "pk": 8, "fields": {"following": 7, "follower": 11, "following_since": "2022-11-27T10:58:16.976Z"}}, {"model": "main.follow", "pk": 9, "fields": {"following": 12, "follower": 13, "following_since": "2022-11-27T10:58:23.527Z"}}, {"model": "main.follow", "pk": 10, "fields": {"following": 14, "follower": 15, "following_since": "2022-11-27T10:58:29.297Z"}}, {"model": "main.follow", "pk": 11, "fields": {"following": 14, "follower": 16, "following_since": "2022-11-27T10:58:30.698Z"}}, {"model": "main.follow", "pk": 12, "fields": {"following": 14, "follower": 14, "following_since": "2022-11-27T10:58:30.711Z"}}, {"model": "main.follow", "pk": 13, "fields": {"following": 14, "follower": 17, "following_since": "2022-11-27T10:58:31.966Z"}}, {"model": "main.follow", "pk": 14, "fields": {"following": 14, "follower": 18, "following_since": "2022-11-27T10:58:33.407Z"}}, {"model": "main.follow", "pk": 15, "fields": {"following": 14, "follower": 19, "following_since": "2022-11-27T10:58:34.592Z"}}, {"model": "main.follow", "pk": 16, "fields": {"following": 14, "follower": 20, "following_since": "2022-11-27T10:58:36.085Z"}}, {"model": "main.follow", "pk": 17, "fields": {"following": 14, "follower": 21, "following_since": "2022-11-27T10:58:37.183Z"}}, {"model": "main.follow", "pk": 18, "fields": {"following": 14, "follower": 22, "following_since": "2022-11-27T10:58:38.685Z"}}, {"model": "main.follow", "pk": 19, "fields": {"following": 14, "follower": 23, "following_since": "2022-11-27T10:58:40.517Z"}}, {"model": "main.follow", "pk": 20, "fields": {"following": 14, "follower": 24, "following_since": "2022-11-27T10:58:41.726Z"}}, {"model": "main.follow", "pk": 21, "fields": {"following": 14, "follower": 25, "following_since": "2022-11-27T10:58:43.415Z"}}, {"model": "main.follow", "pk": 22, "fields": {"following": 28, "follower": 29, "following_since": "2022-11-27T10:58:57.870Z"}}, {"model": "main.follow", "pk": 23, "fields": {"following": 32, "follower": 33, "following_since": "2022-11-27T10:59:33.290Z"}}, {"model": "main.follow", "pk": 24, "fields": {"following": 36, "follower": 37, "following_since": "2022-11-27T10:59:48.059Z"}}, {"model": "main.follow", "pk": 25, "fields": {"following": 38, "follower": 39, "following_since": "2022-11-27T10:59:54.281Z"}}, {"model": "main.follow", "pk": 26, "fields": {"following": 38, "follower": 38, "following_since": "2022-11-27T10:59:54.290Z"}}, {"model": "main.follow", "pk": 27, "fields": {"following": 38, "follower": 40, "following_since": "2022-11-27T10:59:56.415Z"}}, {"model": "main.follow", "pk": 28, "fields": {"following": 38, "follower": 41, "following_since": "2022-11-27T10:59:58.124Z"}}, {"model": "main.follow", "pk": 29, "fields": {"following": 38, "follower": 42, "following_since": "2022-11-27T11:00:00.468Z"}}, {"model": "main.follow", "pk": 30, "fields": {"following": 38, "follower": 43, "following_since": "2022-11-27T11:00:02.479Z"}}, {"model": "main.follow", "pk": 31, "fields": {"following": 38, "follower": 44, "following_since": "2022-11-27T11:00:04.343Z"}}, {"model": "main.follow", "pk": 32, "fields": {"following": 45, "follower": 46, "following_since": "2022-11-27T11:00:09.018Z"}}, {"model": "main.follow", "pk": 33, "fields": {"following": 49, "follower": 50, "following_since": "2022-11-27T11:00:25.143Z"}}, {"model": "main.follow", "pk": 34, "fields": {"following": 49, "follower": 51, "following_since": "2022-11-27T11:00:26.577Z"}}, {"model": "main.follow", "pk": 35, "fields": {"following": 49, "follower": 52, "following_since": "2022-11-27T11:00:28.442Z"}}, {"model": "main.follow", "pk": 36, "fields": {"following": 49, "follower": 53, "following_since": "2022-11-27T11:00:30.618Z"}}, {"model": "main.follow", "pk": 37, "fields": {"following": 49, "follower": 54, "following_since": "2022-11-27T11:00:32.045Z"}}, {"model": "main.follow", "pk": 38, "fields": {"following": 49, "follower": 55, "following_since": "2022-11-27T11:00:33.400Z"}}, {"model": "main.follow", "pk": 39, "fields": {"following": 57, "follower": 58, "following_since": "2022-11-27T11:00:40.424Z"}}, {"model": "main.follow", "pk": 40, "fields": {"following": 57, "follower": 57, "following_since": "2022-11-27T11:00:40.435Z"}}, {"model": "main.follow", "pk": 41, "fields": {"following": 60, "follower": 61, "following_since": "2022-11-27T11:00:49.633Z"}}, {"model": "main.follow", "pk": 42, "fields": {"following": 63, "follower": 64, "following_since": "2022-11-27T11:00:58.909Z"}}, {"model": "main.follow", "pk": 43, "fields": {"following": 63, "follower": 63, "following_since": "2022-11-27T11:00:58.920Z"}}, {"model": "main.follow", "pk": 44, "fields": {"following": 65, "follower": 66, "following_since": "2022-11-27T11:01:06.340Z"}}, {"model": "main.follow", "pk": 45, "fields": {"following": 65, "follower": 65, "following_since": "2022-11-27T11:01:06.351Z"}}, {"model": "main.follow", "pk": 46, "fields": {"following": 69, "follower": 70, "following_since": "2022-11-27T11:01:26.195Z"}}, {"model": "main.follow", "pk": 47, "fields": {"following": 69, "follower": 54, "following_since": "2022-11-27T11:01:26.205Z"}}, {"model": "main.follow", "pk": 48, "fields": {"following": 69, "follower": 71, "following_since": "2022-11-27T11:01:28.703Z"}}, {"model": "main.follow", "pk": 49, "fields": {"following": 69, "follower": 72, "following_since": "2022-11-27T11:01:30.281Z"}}, {"model": "main.follow", "pk": 50, "fields": {"following": 69, "follower": 73, "following_since": "2022-11-27T11:01:32.096Z"}}, {"model": "main.follow", "pk": 51, "fields": {"following": 69, "follower": 74, "following_since": "2022-11-27T11:01:34.272Z"}}, {"model": "main.follow", "pk": 52, "fields": {"following": 69, "follower": 75, "following_since": "2022-11-27T11:01:36.031Z"}}, {"model": "main.follow", "pk": 53, "fields": {"following": 69, "follower": 76, "following_since": "2022-11-27T11:01:37.475Z"}}, {"model": "main.follow", "pk": 54, "fields": {"following": 69, "follower": 77, "following_since": "2022-11-27T11:01:39.908Z"}}, {"model": "main.follow", "pk": 55, "fields": {"following": 69, "follower": 78, "following_since": "2022-11-27T11:01:42.016Z"}}, {"model": "main.follow", "pk": 56, "fields": {"following": 69, "follower": 79, "following_since": "2022-11-27T11:01:43.815Z"}}, {"model": "main.follow", "pk": 57, "fields": {"following": 69, "follower": 80, "following_since": "2022-11-27T11:01:46.341Z"}}, {"model": "main.follow", "pk": 58, "fields": {"following": 69, "follower": 81, "following_since": "2022-11-27T11:01:47.649Z"}}, {"model": "main.follow", "pk": 59, "fields": {"following": 69, "follower": 82, "following_since": "2022-11-27T11:01:49.512Z"}}, {"model": "main.follow", "pk": 60, "fields": {"following": 69, "follower": 83, "following_since": "2022-11-27T11:01:51.157Z"}}, {"model": "main.follow", "pk": 61, "fields": {"following": 69, "follower": 84, "following_since": "2022-11-27T11:01:52.818Z"}}, {"model": "main.follow", "pk": 62, "fields": {"following": 69, "follower": 85, "following_since": "2022-11-27T11:01:54.894Z"}}, {"model": "main.follow", "pk": 63, "fields": {"following": 69, "follower": 86, "following_since": "2022-11-27T11:01:56.561Z"}}, {"model": "main.follow", "pk": 64, "fields": {"following": 69, "follower": 87, "following_since": "2022-11-27T11:01:58.536Z"}}, {"model": "main.follow", "pk": 65, "fields": {"following": 69, "follower": 88, "following_since": "2022-11-27T11:02:00.356Z"}}, {"model": "main.follow", "pk": 66, "fields": {"following": 69, "follower": 89, "following_since": "2022-11-27T11:02:03.256Z"}}, {"model": "main.follow", "pk": 67, "fields": {"following": 69, "follower": 90, "following_since": "2022-11-27T11:02:05.369Z"}}, {"model": "main.follow", "pk": 68, "fields": {"following": 69, "follower": 91, "following_since": "2022-11-27T11:02:07.781Z"}}, {"model": "main.follow", "pk": 69, "fields": {"following": 69, "follower": 92, "following_since": "2022-11-27T11:02:11.014Z"}}, {"model": "main.follow", "pk": 70, "fields": {"following": 69, "follower": 93, "following_since": "2022-11-27T11:02:13.366Z"}}, {"model": "main.follow", "pk": 71, "fields": {"following": 69, "follower": 94, "following_since": "2022-11-27T11:02:15.827Z"}}, {"model": "main.follow", "pk": 72, "fields": {"following": 69, "follower": 95, "following_since": "2022-11-27T11:02:17.543Z"}}, {"model": "main.follow", "pk": 73, "fields": {"following": 69, "follower": 96, "following_since": "2022-11-27T11:02:19.378Z"}}, {"model": "main.follow", "pk": 74, "fields": {"following": 69, "follower": 97, "following_since": "2022-11-27T11:02:21.701Z"}}, {"model": "main.follow", "pk": 75, "fields": {"following": 69, "follower": 22, "following_since": "2022-11-27T11:02:21.710Z"}}, {"model": "main.follow", "pk": 76, "fields": {"following": 69, "follower": 98, "following_since": "2022-11-27T11:02:23.040Z"}}, {"model": "main.follow", "pk": 77, "fields": {"following": 69, "follower": 99, "following_since": "2022-11-27T11:02:24.980Z"}}, {"model": "main.follow", "pk": 78, "fields": {"following": 69, "follower": 100, "following_since": "2022-11-27T11:02:27.444Z"}}, {"model": "main.follow", "pk": 79, "fields": {"following": 101, "follower": 71, "following_since": "2022-11-27T11:02:31.437Z"}}, {"model": "main.follow", "pk": 80, "fields": {"following": 101, "follower": 101, "following_since": "2022-11-27T11:02:31.450Z"}}, {"model": "main.follow", "pk": 81, "fields": {"following": 102, "follower": 103, "following_since": "2022-11-27T11:02:35.917Z"}}, {"model": "main.follow", "pk": 82, "fields": {"following": 22, "follower": 106, "following_since": "2022-11-27T11:02:48.741Z"}}, {"model": "main.follow", "pk": 83, "fields": {"following": 22, "follower": 107, "following_since": "2022-11-27T11:02:50.947Z"}}, {"model": "main.follow", "pk": 84, "fields": {"following": 22, "follower": 108, "following_since": "2022-11-27T11:02:53.272Z"}}, {"model": "main.follow", "pk": 85, "fields": {"following": 22, "follower": 109, "following_since": "2022-11-27T11:02:55.658Z"}}, {"model": "main.follow", "pk": 86, "fields": {"following": 22, "follower": 110, "following_since": "2022-11-27T11:02:57.984Z"}}, {"model": "main.follow", "pk": 87, "fields": {"following": 112, "follower": 22, "following_since": "2022-11-27T11:03:06.800Z"}}, {"model": "main.follow", "pk": 88, "fields": {"following": 112, "follower": 112, "following_since": "2022-11-27T11:03:06.808Z"}}, {"model": "main.follow", "pk": 89, "fields": {"following": 112, "follower": 113, "following_since": "2022-11-27T11:03:08.939Z"}}, {"model": "main.follow", "pk": 90, "fields": {"following": 112, "follower": 114, "following_since": "2022-11-27T11:03:11.100Z"}}, {"model": "main.follow", "pk": 91, "fields": {"following": 112, "follower": 115, "following_since": "2022-11-27T11:03:13.025Z"}}, {"model": "main.follow", "pk": 92, "fields": {"following": 116, "follower": 117, "following_since": "2022-11-27T11:03:20.868Z"}}, {"model": "main.follow", "pk": 93, "fields": {"following": 116, "follower": 116, "following_since": "2022-11-27T11:03:20.880Z"}}, {"model": "main.follow", "pk": 94, "fields": {"following": 116, "follower": 118, "following_since": "2022-11-27T11:03:22.142Z"}}, {"model": "main.follow", "pk": 95, "fields": {"following": 116, "follower": 119, "following_since": "2022-11-27T11:03:24.801Z"}}, {"model": "main.follow", "pk": 96, "fields": {"following": 120, "follower": 121, "following_since": "2022-11-27T11:03:30.544Z"}}, {"model": "main.follow", "pk": 97, "fields": {"following": 120, "follower": 120, "following_since": "2022-11-27T11:03:30.554Z"}}, {"model": "main.follow", "pk": 98, "fields": {"following": 120, "follower": 122, "following_since": "2022-11-27T11:03:32.338Z"}}, {"model": "main.follow", "pk": 99, "fields": {"following": 120, "follower": 104, "following_since": "2022-11-27T11:03:32.348Z"}}, {"model": "main.follow", "pk": 100, "fields": {"following": 120, "follower": 123, "following_since": "2022-11-27T11:03:34.698Z"}}, {"model": "main.follow", "pk": 101, "fields": {"following": 120, "follower": 124, "following_since": "2022-11-27T11:03:36.328Z"}}, {"model": "main.follow", "pk": 102, "fields": {"following": 120, "follower": 125, "following_since": "2022-11-27T11:03:37.828Z"}}, {"model": "main.follow", "pk": 103, "fields": {"following": 120, "follower": 126, "following_since": "2022-11-27T11:03:40.282Z"}}, {"model": "main.follow", "pk": 104, "fields": {"following": 120, "follower": 127, "following_since": "2022-11-27T11:03:41.874Z"}}, {"model": "main.follow", "pk": 105, "fields": {"following": 120, "follower": 128, "following_since": "2022-11-27T11:03:44.241Z"}}, {"model": "main.follow", "pk": 106, "fields": {"following": 120, "follower": 129, "following_since": "2022-11-27T11:03:47.076Z"}}, {"model": "main.follow", "pk": 107, "fields": {"following": 120, "follower": 87, "following_since": "2022-11-27T11:03:47.095Z"}}, {"model": "main.follow", "pk": 108, "fields": {"following": 120, "follower": 130, "following_since": "2022-11-27T11:03:48.587Z"}}, {"model": "main.follow", "pk": 109, "fields": {"following": 120, "follower": 131, "following_since": "2022-11-27T11:03:50.355Z"}}, {"model": "main.follow", "pk": 110, "fields": {"following": 120, "follower": 132, "following_since": "2022-11-27T11:03:54.998Z"}}, {"model": "main.follow", "pk": 111, "fields": {"following": 120, "follower": 133, "following_since": "2022-11-27T11:03:57.153Z"}}, {"model": "main.follow", "pk": 112, "fields": {"following": 120, "follower": 134, "following_since": "2022-11-27T11:03:59.582Z"}}, {"model": "main.follow", "pk": 113, "fields": {"following": 120, "follower": 135, "following_since": "2022-11-27T11:04:01.192Z"}}, {"model": "main.follow", "pk": 114, "fields": {"following": 120, "follower": 136, "following_since": "2022-11-27T11:04:02.663Z"}}, {"model": "main.follow", "pk": 115, "fields": {"following": 120, "follower": 137, "following_since": "2022-11-27T11:04:04.955Z"}}, {"model": "main.follow", "pk": 116, "fields": {"following": 120, "follower": 138, "following_since": "2022-11-27T11:04:06.357Z"}}, {"model": "main.follow", "pk": 117, "fields": {"following": 120, "follower": 139, "following_since": "2022-11-27T11:04:09.911Z"}}, {"model": "main.follow", "pk": 118, "fields": {"following": 120, "follower": 140, "following_since": "2022-11-27T11:04:11.715Z"}}, {"model": "main.follow", "pk": 119, "fields": {"following": 120, "follower": 141, "following_since": "2022-11-27T11:04:13.612Z"}}, {"model": "main.follow", "pk": 120, "fields": {"following": 120, "follower": 142, "following_since": "2022-11-27T11:04:15.224Z"}}, {"model": "main.follow", "pk": 121, "fields": {"following": 120, "follower": 143, "following_since": "2022-11-27T11:04:16.947Z"}}, {"model": "main.follow", "pk": 122, "fields": {"following": 120, "follower": 144, "following_since": "2022-11-27T11:04:19.579Z"}}, {"model": "main.follow", "pk": 123, "fields": {"following": 120, "follower": 103, "following_since": "2022-11-27T11:04:19.598Z"}}, {"model": "main.follow", "pk": 124, "fields": {"following": 120, "follower": 145, "following_since": "2022-11-27T11:04:21.788Z"}}, {"model": "main.follow", "pk": 125, "fields": {"following": 120, "follower": 146, "following_since": "2022-11-27T11:04:23.155Z"}}, {"model": "main.follow", "pk": 126, "fields": {"following": 120, "follower": 147, "following_since": "2022-11-27T11:04:25.459Z"}}, {"model": "main.follow", "pk": 127, "fields": {"following": 120, "follower": 148, "following_since": "2022-11-27T11:04:27.293Z"}}, {"model": "main.follow", "pk": 128, "fields": {"following": 120, "follower": 149, "following_since": "2022-11-27T11:04:29.106Z"}}, {"model": "main.follow", "pk": 129, "fields": {"following": 120, "follower": 150, "following_since": "2022-11-27T11:04:31.077Z"}}, {"model": "main.follow", "pk": 130, "fields": {"following": 120, "follower": 151, "following_since": "2022-11-27T11:04:32.433Z"}}, {"model": "main.follow", "pk": 131, "fields": {"following": 120, "follower": 152, "following_since": "2022-11-27T11:04:34.128Z"}}, {"model": "main.follow", "pk": 132, "fields": {"following": 120, "follower": 153, "following_since": "2022-11-27T11:04:35.704Z"}}, {"model": "main.follow", "pk": 133, "fields": {"following": 120, "follower": 154, "following_since": "2022-11-27T11:04:38.982Z"}}, {"model": "main.follow", "pk": 134, "fields": {"following": 120, "follower": 155, "following_since": "2022-11-27T11:04:41.310Z"}}, {"model": "main.follow", "pk": 135, "fields": {"following": 120, "follower": 156, "following_since": "2022-11-27T11:04:43.188Z"}}, {"model": "main.follow", "pk": 136, "fields": {"following": 120, "follower": 157, "following_since": "2022-11-27T11:04:45.808Z"}}, {"model": "main.follow", "pk": 137, "fields": {"following": 160, "follower": 161, "following_since": "2022-11-27T11:04:58.956Z"}}, {"model": "main.follow", "pk": 138, "fields": {"following": 160, "follower": 162, "following_since": "2022-11-27T11:05:00.757Z"}}, {"model": "main.follow", "pk": 139, "fields": {"following": 160, "follower": 163, "following_since": "2022-11-27T11:05:03.404Z"}}, {"model": "main.follow", "pk": 140, "fields": {"following": 160, "follower": 164, "following_since": "2022-11-27T11:05:06.886Z"}}, {"model": "main.follow", "pk": 141, "fields": {"following": 160, "follower": 160, "following_since": "2022-11-27T11:05:06.902Z"}}, {"model": "main.follow", "pk": 142, "fields": {"following": 160, "follower": 165, "following_since": "2022-11-27T11:05:09.299Z"}}, {"model": "main.follow", "pk": 143, "fields": {"following": 160, "follower": 166, "following_since": "2022-11-27T11:05:11.410Z"}}, {"model": "main.follow", "pk": 144, "fields": {"following": 160, "follower": 167, "following_since": "2022-11-27T11:05:14.178Z"}}, {"model": "main.follow", "pk": 145, "fields": {"following": 160, "follower": 168, "following_since": "2022-11-27T11:05:16.210Z"}}, {"model": "main.follow", "pk": 146, "fields": {"following": 160, "follower": 169, "following_since": "2022-11-27T11:05:18.558Z"}}, {"model": "main.follow", "pk": 147, "fields": {"following": 160, "follower": 170, "following_since": "2022-11-27T11:05:19.944Z"}}, {"model": "main.follow", "pk": 148, "fields": {"following": 160, "follower": 171, "following_since": "2022-11-27T11:05:21.448Z"}}, {"model": "main.follow", "pk": 149, "fields": {"following": 160, "follower": 172, "following_since": "2022-11-27T11:05:23.003Z"}}, {"model": "main.follow", "pk": 150, "fields": {"following": 160, "follower": 173, "following_since": "2022-11-27T11:05:24.402Z"}}, {"model": "main.follow", "pk": 151, "fields": {"following": 160, "follower": 174, "following_since": "2022-11-27T11:05:25.766Z"}}, {"model": "main.follow", "pk": 152, "fields": {"following": 160, "follower": 175, "following_since": "2022-11-27T11:05:27.793Z"}}, {"model": "main.follow", "pk": 153, "fields": {"following": 160, "follower": 176, "following_since": "2022-11-27T11:05:30.127Z"}}, {"model": "main.follow", "pk": 154, "fields": {"following": 160, "follower": 177, "following_since": "2022-11-27T11:05:32.020Z"}}, {"model": "main.follow", "pk": 155, "fields": {"following": 160, "follower": 178, "following_since": "2022-11-27T11:05:33.953Z"}}, {"model": "main.follow", "pk": 156, "fields": {"following": 160, "follower": 179, "following_since": "2022-11-27T11:05:36.607Z"}}, {"model": "main.follow", "pk": 157, "fields": {"following": 160, "follower": 180, "following_since": "2022-11-27T11:05:38.261Z"}}, {"model": "main.follow", "pk": 158, "fields": {"following": 160, "follower": 181, "following_since": "2022-11-27T11:05:40.477Z"}}, {"model": "main.follow", "pk": 159, "fields": {"following": 160, "follower": 182, "following_since": "2022-11-27T11:05:42.530Z"}}, {"model": "main.follow", "pk": 160, "fields": {"following": 160, "follower": 183, "following_since": "2022-11-27T11:05:45.922Z"}}, {"model": "main.follow", "pk": 161, "fields": {"following": 160, "follower": 184, "following_since": "2022-11-27T11:05:49.447Z"}}, {"model": "main.follow", "pk": 162, "fields": {"following": 160, "follower": 185, "following_since": "2022-11-27T11:05:50.959Z"}}, {"model": "main.follow", "pk": 163, "fields": {"following": 160, "follower": 186, "following_since": "2022-11-27T11:05:53.258Z"}}, {"model": "main.follow", "pk": 164, "fields": {"following": 160, "follower": 187, "following_since": "2022-11-27T11:05:54.913Z"}}, {"model": "main.follow", "pk": 165, "fields": {"following": 160, "follower": 188, "following_since": "2022-11-27T11:05:56.860Z"}}, {"model": "main.follow", "pk": 166, "fields": {"following": 160, "follower": 189, "following_since": "2022-11-27T11:05:59.338Z"}}, {"model": "main.follow", "pk": 167, "fields": {"following": 190, "follower": 191, "following_since": "2022-11-27T11:06:11.125Z"}}, {"model": "main.follow", "pk": 168, "fields": {"following": 190, "follower": 192, "following_since": "2022-11-27T11:06:12.323Z"}}, {"model": "main.follow", "pk": 169, "fields": {"following": 190, "follower": 193, "following_since": "2022-11-27T11:06:14.135Z"}}, {"model": "main.follow", "pk": 170, "fields": {"following": 190, "follower": 194, "following_since": "2022-11-27T11:06:16.058Z"}}, {"model": "main.follow", "pk": 171, "fields": {"following": 190, "follower": 195, "following_since": "2022-11-27T11:06:17.488Z"}}, {"model": "main.follow", "pk": 172, "fields": {"following": 190, "follower": 196, "following_since": "2022-11-27T11:06:19.768Z"}}, {"model": "main.follow", "pk": 173, "fields": {"following": 190, "follower": 197, "following_since": "2022-11-27T11:06:22.275Z"}}, {"model": "main.follow", "pk": 174, "fields": {"following": 190, "follower": 190, "following_since": "2022-11-27T11:06:22.286Z"}}, {"model": "main.follow", "pk": 175, "fields": {"following": 190, "follower": 20, "following_since": "2022-11-27T11:06:22.297Z"}}, {"model": "main.follow", "pk": 176, "fields": {"following": 198, "follower": 198, "following_since": "2022-11-27T11:06:26.431Z"}}, {"model": "main.follow", "pk": 177, "fields": {"following": 199, "follower": 71, "following_since": "2022-11-27T11:12:31.356Z"}}, {"model": "main.follow", "pk": 178, "fields": {"following": 199, "follower": 199, "following_since": "2022-11-27T11:12:31.369Z"}}, {"model": "main.follow", "pk": 179, "fields": {"following": 201, "follower": 202, "following_since": "2022-11-27T11:12:41.779Z"}}, {"model": "main.follow", "pk": 180, "fields": {"following": 201, "follower": 201, "following_since": "2022-11-27T11:12:41.791Z"}}, {"model": "main.follow", "pk": 181, "fields": {"following": 201, "follower": 203, "following_since": "2022-11-27T11:12:43.715Z"}}, {"model": "main.follow", "pk": 182, "fields": {"following": 201, "follower": 204, "following_since": "2022-11-27T11:12:45.996Z"}}, {"model": "main.follow", "pk": 183, "fields": {"following": 200, "follower": 200, "following_since": "2022-11-27T11:13:05.119Z"}}, {"model": "main.follow", "pk": 184, "fields": {"following": 206, "follower": 207, "following_since": "2022-11-27T11:13:11.959Z"}}, {"model": "main.follow", "pk": 185, "fields": {"following": 206, "follower": 208, "following_since": "2022-11-27T11:13:13.897Z"}}, {"model": "main.follow", "pk": 186, "fields": {"following": 206, "follower": 209, "following_since": "2022-11-27T11:13:16.121Z"}}, {"model": "main.follow", "pk": 187, "fields": {"following": 206, "follower": 206, "following_since": "2022-11-27T11:13:16.140Z"}}, {"model": "main.follow", "pk": 188, "fields": {"following": 206, "follower": 210, "following_since": "2022-11-27T11:13:18.341Z"}}, {"model": "main.follow", "pk": 189, "fields": {"following": 212, "follower": 212, "following_since": "2022-11-27T11:13:30.909Z"}}, {"model": "main.follow", "pk": 190, "fields": {"following": 214, "follower": 215, "following_since": "2022-11-27T11:13:45.684Z"}}, {"model": "main.follow", "pk": 191, "fields": {"following": 214, "follower": 25, "following_since": "2022-11-27T11:13:45.695Z"}}, {"model": "main.follow", "pk": 192, "fields": {"following": 214, "follower": 216, "following_since": "2022-11-27T11:13:47.196Z"}}, {"model": "main.follow", "pk": 193, "fields": {"following": 219, "follower": 220, "following_since": "2022-11-27T11:13:59.033Z"}}, {"model": "main.follow", "pk": 194, "fields": {"following": 219, "follower": 221, "following_since": "2022-11-27T11:14:00.900Z"}}, {"model": "main.follow", "pk": 195, "fields": {"following": 219, "follower": 219, "following_since": "2022-11-27T11:14:00.911Z"}}, {"model": "main.follow", "pk": 196, "fields": {"following": 219, "follower": 222, "following_since": "2022-11-27T11:14:02.156Z"}}, {"model": "main.follow", "pk": 197, "fields": {"following": 219, "follower": 223, "following_since": "2022-11-27T11:14:03.920Z"}}, {"model": "main.follow", "pk": 198, "fields": {"following": 226, "follower": 227, "following_since": "2022-11-27T11:14:19.609Z"}}, {"model": "main.follow", "pk": 199, "fields": {"following": 226, "follower": 226, "following_since": "2022-11-27T11:14:19.620Z"}}, {"model": "main.follow", "pk": 200, "fields": {"following": 226, "follower": 228, "following_since": "2022-11-27T11:14:20.794Z"}}, {"model": "main.follow", "pk": 201, "fields": {"following": 226, "follower": 229, "following_since": "2022-11-27T11:14:22.180Z"}}, {"model": "main.follow", "pk": 202, "fields": {"following": 226, "follower": 230, "following_since": "2022-11-27T11:14:23.920Z"}}, {"model": "main.follow", "pk": 203, "fields": {"following": 226, "follower": 231, "following_since": "2022-11-27T11:14:25.991Z"}}, {"model": "main.follow", "pk": 204, "fields": {"following": 226, "follower": 232, "following_since": "2022-11-27T11:14:28.625Z"}}, {"model": "main.follow", "pk": 205, "fields": {"following": 226, "follower": 233, "following_since": "2022-11-27T11:14:30.899Z"}}, {"model": "main.follow", "pk": 206, "fields": {"following": 226, "follower": 234, "following_since": "2022-11-27T11:14:32.528Z"}}, {"model": "main.follow", "pk": 207, "fields": {"following": 238, "follower": 239, "following_since": "2022-11-27T11:14:54.818Z"}}, {"model": "main.follow", "pk": 208, "fields": {"following": 238, "follower": 240, "following_since": "2022-11-27T11:14:56.566Z"}}, {"model": "main.follow", "pk": 209, "fields": {"following": 238, "follower": 238, "following_since": "2022-11-27T11:14:56.578Z"}}, {"model": "main.follow", "pk": 210, "fields": {"following": 238, "follower": 241, "following_since": "2022-11-27T11:14:58.234Z"}}, {"model": "main.follow", "pk": 211, "fields": {"following": 243, "follower": 244, "following_since": "2022-11-27T11:15:11.888Z"}}, {"model": "main.follow", "pk": 212, "fields": {"following": 243, "follower": 243, "following_since": "2022-11-27T11:15:11.902Z"}}, {"model": "main.follow", "pk": 213, "fields": {"following": 249, "follower": 250, "following_since": "2022-11-27T11:15:28.619Z"}}, {"model": "main.follow", "pk": 214, "fields": {"following": 249, "follower": 251, "following_since": "2022-11-27T11:15:29.926Z"}}, {"model": "main.follow", "pk": 215, "fields": {"following": 249, "follower": 252, "following_since": "2022-11-27T11:15:31.563Z"}}, {"model": "main.follow", "pk": 216, "fields": {"following": 249, "follower": 249, "following_since": "2022-11-27T11:15:31.573Z"}}, {"model": "main.follow", "pk": 217, "fields": {"following": 249, "follower": 253, "following_since": "2022-11-27T11:15:32.853Z"}}, {"model": "main.follow", "pk": 218, "fields": {"following": 249, "follower": 254, "following_since": "2022-11-27T11:15:34.263Z"}}, {"model": "main.follow", "pk": 219, "fields": {"following": 249, "follower": 114, "following_since": "2022-11-27T11:15:34.280Z"}}, {"model": "main.follow", "pk": 220, "fields": {"following": 249, "follower": 255, "following_since": "2022-11-27T11:15:35.519Z"}}, {"model": "main.follow", "pk": 221, "fields": {"following": 249, "follower": 215, "following_since": "2022-11-27T11:15:35.536Z"}}, {"model": "main.follow", "pk": 222, "fields": {"following": 249, "follower": 256, "following_since": "2022-11-27T11:15:37.826Z"}}, {"model": "main.follow", "pk": 223, "fields": {"following": 249, "follower": 257, "following_since": "2022-11-27T11:15:39.596Z"}}, {"model": "main.follow", "pk": 224, "fields": {"following": 249, "follower": 258, "following_since": "2022-11-27T11:15:41.586Z"}}, {"model": "main.follow", "pk": 225, "fields": {"following": 249, "follower": 259, "following_since": "2022-11-27T11:15:43.173Z"}}, {"model": "main.follow", "pk": 226, "fields": {"following": 249, "follower": 260, "following_since": "2022-11-27T11:15:44.832Z"}}, {"model": "main.follow", "pk": 227, "fields": {"following": 249, "follower": 261, "following_since": "2022-11-27T11:15:46.454Z"}}, {"model": "main.follow", "pk": 228, "fields": {"following": 73, "follower": 265, "following_since": "2022-11-27T11:16:01.427Z"}}, {"model": "main.follow", "pk": 229, "fields": {"following": 73, "follower": 73, "following_since": "2022-11-27T11:16:01.436Z"}}, {"model": "main.follow", "pk": 230, "fields": {"following": 73, "follower": 266, "following_since": "2022-11-27T11:16:03.635Z"}}, {"model": "main.follow", "pk": 231, "fields": {"following": 73, "follower": 267, "following_since": "2022-11-27T11:16:05.023Z"}}, {"model": "main.follow", "pk": 232, "fields": {"following": 271, "follower": 272, "following_since": "2022-11-27T11:16:23.526Z"}}, {"model": "main.follow", "pk": 233, "fields": {"following": 271, "follower": 271, "following_since": "2022-11-27T11:16:23.542Z"}}, {"model": "main.follow", "pk": 234, "fields": {"following": 271, "follower": 273, "following_since": "2022-11-27T11:16:25.391Z"}}, {"model": "main.follow", "pk": 235, "fields": {"following": 271, "follower": 274, "following_since": "2022-11-27T11:16:27.197Z"}}, {"model": "main.follow", "pk": 236, "fields": {"following": 278, "follower": 279, "following_since": "2022-11-27T11:16:45.558Z"}}, {"model": "main.follow", "pk": 237, "fields": {"following": 278, "follower": 280, "following_since": "2022-11-27T11:16:48.466Z"}}, {"model": "main.follow", "pk": 238, "fields": {"following": 278, "follower": 278, "following_since": "2022-11-27T11:16:48.484Z"}}, {"model": "main.follow", "pk": 239, "fields": {"following": 278, "follower": 281, "following_since": "2022-11-27T11:16:50.248Z"}}, {"model": "main.follow", "pk": 240, "fields": {"following": 278, "follower": 282, "following_since": "2022-11-27T11:16:51.592Z"}}, {"model": "main.follow", "pk": 241, "fields": {"following": 278, "follower": 283, "following_since": "2022-11-27T11:16:53.816Z"}}, {"model": "main.follow", "pk": 242, "fields": {"following": 284, "follower": 285, "following_since": "2022-11-27T11:17:00.150Z"}}, {"model": "main.follow", "pk": 243, "fields": {"following": 284, "follower": 284, "following_since": "2022-11-27T11:17:00.161Z"}}, {"model": "main.follow", "pk": 244, "fields": {"following": 284, "follower": 286, "following_since": "2022-11-27T11:17:01.274Z"}}, {"model": "main.follow", "pk": 245, "fields": {"following": 284, "follower": 192, "following_since": "2022-11-27T11:17:01.306Z"}}, {"model": "main.follow", "pk": 246, "fields": {"following": 288, "follower": 221, "following_since": "2022-11-27T11:17:07.631Z"}}, {"model": "main.follow", "pk": 247, "fields": {"following": 288, "follower": 288, "following_since": "2022-11-27T11:17:07.656Z"}}, {"model": "main.follow", "pk": 248, "fields": {"following": 290, "follower": 291, "following_since": "2022-11-27T11:17:15.952Z"}}, {"model": "main.follow", "pk": 249, "fields": {"following": 290, "follower": 292, "following_since": "2022-11-27T11:17:17.982Z"}}, {"model": "main.follow", "pk": 250, "fields": {"following": 294, "follower": 295, "following_since": "2022-11-27T11:17:27.631Z"}}, {"model": "main.follow", "pk": 251, "fields": {"following": 294, "follower": 294, "following_since": "2022-11-27T11:17:27.641Z"}}, {"model": "main.follow", "pk": 252, "fields": {"following": 294, "follower": 296, "following_since": "2022-11-27T11:17:29.199Z"}}, {"model": "main.follow", "pk": 253, "fields": {"following": 294, "follower": 297, "following_since": "2022-11-27T11:17:30.578Z"}}, {"model": "main.follow", "pk": 254, "fields": {"following": 294, "follower": 1, "following_since": "2022-11-27T17:16:13.156Z"}}, {"model": "main.follow", "pk": 255, "fields": {"following": 120, "follower": 31, "following_since": "2022-11-27T17:42:28.663Z"}}, {"model": "main.follow", "pk": 256, "fields": {"following": 69, "follower": 31, "following_since": "2022-11-27T17:42:33.118Z"}}, {"model": "main.follow", "pk": 257, "fields": {"following": 160, "follower": 31, "following_since": "2022-11-27T17:42:37.852Z"}}, {"model": "main.follow", "pk": 258, "fields": {"following": 14, "follower": 31, "following_since": "2022-11-27T17:42:43.199Z"}}, {"model": "main.follow", "pk": 259, "fields": {"following": 212, "follower": 31, "following_since": "2022-11-27T17:42:51.972Z"}}, {"model": "main.follow", "pk": 260, "fields": {"following": 116, "follower": 31, "following_since": "2022-11-27T17:42:57.934Z"}}, {"model": "main.follow", "pk": 261, "fields": {"following": 31, "follower": 2, "following_since": "2022-11-27T17:57:32.829Z"}}, {"model": "main.subscription", "pk": 1, "fields": {"author": 294, "subscriber": 1, "starts_at": "2022-11-27"}}, {"model": "main.post", "pk": 1, "fields": {"author": 2, "title": "Today I Learned: Why To Prefer Top Margins", "slug": "today-i-learned-why-to-prefer-top-margins-1", "description": "A couple good reasons why to prefer using top margins to bottom margins when adding spacing between elements.", "content": "<hr />\n<p>title: 'Today I Learned: Why To Prefer Top Margins'\npublished: true\ndescription: A couple good reasons why to prefer using top margins to bottom margins when adding spacing between elements.\ntags: css, todayilearned</p>\n<hr />\n<p><em>Originally posted on my personal site, <a href=\"https://georgerodier.com/2019-8-24-why-to-prefer-top-margins/\">georgerodier.com</a>.</em></p>\n<p>Recently I've been looking into <a href=\"https://tailwindcss.com\">Tailwind CSS</a> and how to work with the utility class CSS framework. I think it's a great fit for working with React components and hope to write about it soon. In doing research and learning more, I've been watching <a href=\"https://twitter.com/adamwathan\">Adam Wathan's</a> <a href=\"https://tailwindcss.com/screencasts/\">excellent screencasts</a> for designing with Tailwind CSS. In one of the screencasts, as an aside, Adam talked about why he prefers to use top margins to bottom margins when spacing elements with CSS.</p>\n<p>I've never given too much thought in the past when spacing an element. Element A needs to be spaced 10px above Element B, so I'd give Element A a bottom margin of 10px. OR maybe Element C needs to be 20px below Element D, so I'd give Element C a top margin of 20px. This is a haphazard approach that I don't recommend to anyone.</p>\n<p>If you have ever worked on styling a page, you have probably at one point or another run into issues where the page does not look as expected and discovered that <a href=\"https://css-tricks.com/what-you-should-know-about-collapsing-margins/\">collapsing margins</a> were to blame. When a top margin and a bottom margin come into contact with each other, they will end up overlapping producing a single margin. As a result, many developers and frameworks end up applying a margin in one direction (either top or bottom) to avoid the potential of margins collapsing.</p>\n<p>While discussing <a href=\"https://tailwindcss.com/course/making-text-content-feel-designed\">designing a card with Tailwind CSS</a>, Adam suggested that he uses top margins. The reason was intuitive and made sense to me:</p>\n<blockquote>\n<p>When you add a top margin to the element making that element move feels better to me than when you add a bottom margin to an element and that actually pushes away other content. I like the idea that the element I'm adding a class to actually changes. - Adam Wathan</p>\n</blockquote>\n<p>I like the fact that the style feels like it controls the element that it's applied to versus modifying the positions of the other elements on the page. That logic resonates with me and is enough to convince me to follow a similar approach. But since I had never heard about preferring top to bottom before, I was curious if anyone else had any opinions on the matter, and in doing so, I discovered yet another reason to prefer top margins.</p>\n<p>In the blog post <a href=\"https://matthewjamestaylor.com/css-margin-top-vs-bottom\">CSS: margin top vs bottom</a> by <a href=\"https://twitter.com/mattjamestaylor\">Matthew James Taylor</a>, he argued that because CSS cascades only in a forward direction, only the next elements in succession can be considered in context.</p>\n<p>Matthew James Taylor demonstrated this by first showing lists of elements with top and bottom margins applied. Then he attempted to modify each list by inserting an element that required different styling. It's possible to target the next elements top from the inserted element by using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_combinator\">adjacent sibling combinator</a>. You wouldn't be able to target a previous element's bottom because you can't target a proceeding element in CSS without adding additional logic elsewhere.</p>\n<p>I'd read the article for a better explanation, but the conclusion is that modifying a top margin allows us to better override elements to a general purpose CSS principle:</p>\n<blockquote>\n<p>If a style can be applied to one of many elements, always use the last possible element in the HTML source to allow overriding by context. - Matthew James Taylor</p>\n</blockquote>\n<p>As a result of the arguments I've discovered, I think I'm a top margin convert and will be actively looking to use the top margin rather than the bottom margin when possible. I'm sure there are plenty of edge cases where a bottom margin may be needed, but this seems like a good starting point when needing to add vertical spacing.</p>", "published": "2022-11-27T10:54:01.172Z", "lastEdited": "2022-11-27T10:54:01.172Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160810.png", "source": "https://dev.to/grodier/today-i-learned-why-to-prefer-top-margins-12mb", "stars": [3, 1], "saves": [3, 1]}}, {"model": "main.post", "pk": 2, "fields": {"author": 4, "title": "Why we need to contribute to open-source and how we can do it", "slug": "why-we-need-to-contribute-to-open-source-and-how-we-can-do-it-2", "description": "A lot of effort goes into building and maintaining packages. Here is how we can be a part of one.", "content": "<hr />\n<p>title: Why we need to contribute to open-source and how we can do it\npublished: true\ndescription: A lot of effort goes into building and maintaining packages. Here is how we can be a part of one.\ntags: opensource, packages, maintainers\ncover_image: https://images.unsplash.com/photo-1566568500004-fc65c6cbd230?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80</p>\n<hr />\n<p><small>Image is by Unsplash</small></p>\n<h3>Why we need to build or publish one?</h3>\n<p>Javascript eco-system is huge. When we need to solve our problems, we often do a search and find solutions.</p>\n<p>But if there is not any, its good to share with the solution that we come up with. It makes the life of others easy who helped in making ours at first.</p>\n<h3>What motivates me to contribute to open-source</h3>\n<ul>\n<li>The IDE's <a href=\"https://github.com/microsoft/vscode\">VSCode</a>, <a href=\"https://github.com/atom/atom\">Atom</a></li>\n<li>Exising popular libraries or frameworks - <a href=\"https://github.com/babel/babel\">Babel</a>, <a href=\"https://github.com/facebook/react\">React</a>, <a href=\"https://github.com/angular/angular\">Angular</a>, <a href=\"https://github.com/vuejs/vue\">Vue</a>, <a href=\"https://github.com/ionic-team/stencil\">Stencil</a>, <a href=\"https://github.com/preactjs/preact\">Preact</a>, <a href=\"https://github.com/reduxjs/redux/blob/master/LICENSE.md\">Redux</a>, <a href=\"https://github.com/vuejs/vuex\">Vuex</a>, <a href=\"https://github.com/zeit/next.js/\">NextJS</a>, <a href=\"https://github.com/nuxt/nuxt.js/blob/dev/LICENSE\">NuxtJS</a>, <a href=\"https://github.com/sveltejs/svelte/blob/master/LICENSE\">Svelte</a></li>\n<li>Bundlers - <a href=\"https://github.com/webpack/webpack/blob/master/LICENSE\">Webpack</a>, <a href=\"https://github.com/rollup/rollup/blob/master/LICENSE.md\">Rollup</a>, <a href=\"https://github.com/parcel-bundler/parcel/blob/master/LICENSE\">Parcel</a></li>\n<li>Css-in-JS - <a href=\"https://github.com/threepointone/glamor/blob/master/LICENSE\">Glamour</a>, <a href=\"https://github.com/styled-components/styled-components/blob/master/LICENSE\">Styled-Components</a>, <a href=\"https://github.com/emotion-js/emotion/blob/master/LICENSE\">Emotion</a></li>\n<li>Design Systems and Tools - <a href=\"https://github.com/ant-design/ant-design/blob/master/LICENSE\">Antd</a>, <a href=\"https://github.com/storybookjs/storybook/\">Storybook</a>, <a href=\"https://github.com/styled-system/styled-system\">Styled System</a>, <a href=\"https://github.com/styleguidist/react-styleguidist\">Styleguidist</a></li>\n<li>Back-End Frameworks - <a href=\"https://github.com/nestjs/nest/blob/master/LICENSE\">NestJS</a>, <a href=\"https://github.com/serverless/serverless/blob/master/LICENSE.txt\">Serverless</a></li>\n<li>Tools for CI/CD - <a href=\"https://travis-ci.org/\">Travis</a></li>\n<li>Testing tools - <a href=\"https://github.com/facebook/jest\">Jest</a>, <a href=\"https://github.com/testing-library/react-testing-library\">Testing Library</a></li>\n<li>Utility tools - <a href=\"https://github.com/lerna/lerna\">Lerna</a>, <a href=\"https://github.com/verdaccio/verdaccio\">Verdaccio</a></li>\n</ul>\n<p>And there is an endless list of individual projects and tools built by individuals.</p>\n<p>Yes, I agree a few of these are backed up by big companies but aren't we making a living out of them?</p>\n<hr />\n<h3>Questions time !!</h3>\n<p>Is it really easy for many projects to get a huge amount in funds at the beginning?</p>\n<p>How they are managing their finances when they are building and opensourcing everything?</p>\n<hr />\n<h3>Stories or Ideologies that inspire</h3>\n<ul>\n<li>\n<p>There are individuals who quit their day jobs, because of the fear they can't respond back or fix a big ASAP. As many projects around the world rely on them.</p>\n</li>\n<li>\n<p>If you want a fix or a new feature. Along with raising a request(issue), give a try to fix/build it. Maintainers are always happy to encourage and help people who are willing to contribute.</p>\n</li>\n</ul>\n<p><small>If I am right, the first one is from <a href=\"https://twitter.com/left_pad\">Henry Zhu</a> and the second is from <a href=\"https://twitter.com/nikkitaftw\">Sara Vieria</a></small></p>\n<hr />\n<h3>Ways in which we can contribute to the eco-system</h3>\n<p>There are a couple of ways in which we can support the eco-system.</p>\n<ul>\n<li>By building and open-sourcing packages.</li>\n<li>Donating and Backing repositories and maintainers</li>\n<li>Fixing existing issues (at least on the repositories which we use in our daily development).</li>\n<li>Helping in writing documentation and correcting typos.</li>\n<li>Reviewing pull requests and mentoring the newbies to opensource. <a href=\"https://codingcoach.io/\">Coding Coach</a></li>\n<li>Helping in setting up the infrastructure/architecture for the project.</li>\n<li>Moderating the community, more like consolidating the issues and the PRs and other <em>chore</em> related things.</li>\n</ul>\n<hr />\n<blockquote>\n<p><a href=\"https://maintainersanonymous.com/\">Maintainers Anonymus</a> is a podcast hosted by <a href=\"https://twitter.com/left_pad\">Henry Zhu</a> to know more about maintainers.</p>\n</blockquote>\n<hr />\n<h3>How to build one?</h3>\n<p>After experimenting with different types of setup's, I personally prefer going ahead with typescript. As it is easy to configure. We can ideally divide this into two stages.</p>\n<ul>\n<li>Building the library itself.</li>\n<li>Maintaining the repository.</li>\n</ul>\n<p>Let's look into the folder structure for the setup for building</p>\n<p><code>Readme.md\nsrc -\n    | index.ts\ntsconfig.esm.json\ntsconfig.cjs.json\n__tests__\npackage.json</code></p>\n<ul>\n<li><code>package.json</code> is for mentioning our <code>dependencies</code> and <code>devDependencies</code> and <code>entry</code> of the project.</li>\n<li><code>tsconfig.esm.json</code> is for compiling the typescript code target latest environments</li>\n<li><code>tsconfig.cjs.json</code> is for targetting the old environments.</li>\n<li><code>src/index.ts</code> is where our code relies on.</li>\n</ul>\n<h3>package.json</h3>\n<p>This plays a very key role in the package, so let us look a little deeper into attributes.</p>\n<p><code>json\n{\n  \"name\": \"\",\n  \"version\": \"\",\n  \"description\": \"\",\n  \"author\": \"\",\n  \"homepage\": \"\",\n  \"license\": \"\",\n  \"main\": \"\",\n  \"module\": \"\",\n  \"types\": \"\",\n  \"repository\": \"\",\n  \"bugs\": {\n    \"url\": \"\"\n  },\n  \"scripts\": {},\n  \"dependencies\": {},\n  \"devDependencies\": {}\n}</code></p>\n<p>Few things are self-explanatory, but let us look into the other.</p>\n<ul>\n<li><em>version</em>, plays a very important role. The best way to follow versioning is by adapting <a href=\"https://semver.org/\">Semver</a></li>\n<li><em>main</em>, points out to the entry of the package. Usually, it is pointed to the cjs bundle <code>index.js</code> file.</li>\n<li><em>module</em> points to the <code>esm</code> bundle of the file. <a href=\"https://www.pika.dev/\">Pika</a> is a powerful package manager, which takes advantage of this.</li>\n<li><em>types</em> points to the <code>typings</code> file. Types file helps in adding typings when we use the package.</li>\n<li><em>dependencies</em> deals with all the packages that we are using in the building.</li>\n<li><em>devDependicies</em> deals with all the packages that we use at the time of development. These are not bundled into the package. <a href=\"https://bundlephobia.com/\">Bundlephobia</a> helps in understanding the space occupied by an individual package in the end result.</li>\n<li><em>peerDependencies</em>, when we want our repository to depend on another repository to work with. Mostly used in developing in UI related libraries as the frameworks depend on few other to work.</li>\n</ul>\n<hr />\n<h3>Changelog Managment</h3>\n<p>Changelog plays a major role in keeping track of all the changes and releases that are going in the package.\n<a href=\"https://github.com/lerna/lerna-changelog\">Lerna Changelog</a> makes it easy to manage one.</p>\n<hr />\n<h3>Common pitfalls to look out !!</h3>\n<ul>\n<li><em>Versioning</em> plays a very major role, As tilde(~) installs only patches, (^) cap installs latest patches and minor fixes.</li>\n</ul>\n<p>If the user is using <em>tilde</em> and we bundle all fixes and do a version bump and release. The current user will not get the fixes as (~) only pulls patches.</p>\n<ul>\n<li><em>Missing Dependencies</em>, when we are using a package in our development which is not listed in our <code>package.json</code>.</li>\n</ul>\n<p>If the same package is used by <code>devDependencies</code>, the execution does not throw any error as in local. This is because it resolves from the <code>node_modules</code> since its the single source of truth for the dependencies.</p>\n<p>This can be eliminated by using <a href=\"https://www.pika.dev/cdn\">Pika CDN</a> to test the bundles against the PR's and install them independently and verify.</p>\n<p>Here are some of my views on opensource and how to get started to be a part of it.</p>", "published": "2022-11-27T10:54:08.979Z", "lastEdited": "2022-11-27T10:54:08.979Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/askjkrishna/why-we-need-to-contribute-to-opensource-and-how-we-can-do-it-2hb5", "stars": [], "saves": []}}, {"model": "main.post", "pk": 3, "fields": {"author": 5, "title": "Publishing my first Game", "slug": "publishing-my-first-game-3", "description": "Original: https://humberto.io/blog/publishing-my-first-game/  Games always connected me with technolo...", "content": "<p>Original: https://humberto.io/blog/publishing-my-first-game/</p>\n<p>Games always connected me with technology since the beginning.</p>\n<p>My father and I, we built our first computer (a Pentium 286) and the first thing that I remember to do was to play some DOS games like Prince of Persia and Lunar Lander. I learned a bunch of CLI commands just to play my favorite games.</p>\n<p>The passion for playing and making games followed me as a hobby. I have a <a href=\"https://humberto.io/tags/pygame/\">pygame series of posts</a> on my blog, where I go through basic concepts of game development trying to explain them to someone who is starting to learn about it.</p>\n<p>Time has passed, the day to day hush started to take most of my energy and my pygame series hasn't seen a new post for a while, so as my hobby.</p>\n<p>Then, last December during the holidays, I discovered <a href=\"https://github.com/kitao/pyxel\">Pyxel</a>. It is a Python retro game engine that follows the <a href=\"https://en.wikipedia.org/wiki/Pico-8\">pico-8</a> limitations and comes with a sprite, tilemap, and music editor.</p>\n<p>I love pixel art games, so I decided to take the holidays to write my first complete game from the ground up until its publication. The game is a tribute to the old Lunar Lander DOS game that I played at my childhood.</p>\n<p><img alt=\"pyxel lander landing\" src=\"https://thepracticaldev.s3.amazonaws.com/i/kumixuprpvae4pa9ym7s.gif\" /></p>\n<p>The theme choice was meaningful to me, not only because I played when I was little, but also because I've coded it with a friend at one of my <a href=\"https://github.com/ravishi/lunar-lander-ex/commits/master\">projects</a> at my Computer Science course.</p>\n<p>The process of building the game was quite fun, and at the end of the day, I got the lunar module flying on the screen. The day after I dived into the procedural moon surface building, and then when I was about to figure out the collision detection my holiday time was over, the day to day rush came back and my project stale.</p>\n<p>More time passed, during a lunch break, I answered a tweet asking the following question:</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"pt\" dir=\"ltr\">When was the last time you coded something just for fun? 🇨🇦<br><br>Qual foi a última vez que desenvolveu algo só por diversão? 🇧🇷</p>&mdash; Guilherme Varandas 🦄 (@jgvarandas) <a href=\"https://twitter.com/jgvarandas/status/1162932464169472001?ref_src=twsrc%5Etfw\">August 18, 2019</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>I love coding and blogging, and most of the time I have fun on my day to day doing it, but something 100% for fun reminded me that Christmas codding day so I answered:</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">December last year, coded an old lunar lander from Dos clone <a href=\"https://t.co/Bv3xRdvkd2\">https://t.co/Bv3xRdvkd2</a><br>It reminded me to go back to figure out the colision detection 😅</p>&mdash; Humberto Rocha (@humrochagf) <a href=\"https://twitter.com/humrochagf/status/1163084951518175232?ref_src=twsrc%5Etfw\">August 18, 2019</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>I've had uncountable RPG Maker unfinished games when I was young, and many others with different tools. What is so different from my work, or from my Open Source projects that makes me finish then, but not my Game projects?</p>\n<p>I decided to finish the game to understand what was holding me back and... I've got the game finished, and published \\o/. You can check it out and play it at https://humrochagf.itch.io/pyxel-lander</p>\n<p>Also, I released it as Open Source, and anyone interested to see the code can go to https://github.com/humrochagf/pyxel-lander</p>\n<h2>Wrapping Up</h2>\n<p>Going through this whole process made me realize somethings:</p>\n<ul>\n<li>Game development can be like a hydra. While you are solving one thing, your mind is creating new features on the go. So, like any other field of software development, focus on the <a href=\"https://en.wikipedia.org/wiki/Minimum_viable_product\">MVP</a>, and keep new features to the next releases or projects.</li>\n<li>If it's your first game, try to not over complicate things, it's more important to go through the whole experience from the idea to the publishing, instead of making the perfect game.</li>\n<li>Tools with clear and limited scope like Pyxel are great to make your first game. It helps you a lot to keep it simple.</li>\n<li>Call your friends when you need some help. Thanks <a href=\"https://jairojair.com/\">Jairo Jair</a> for the help with the MacOS build.</li>\n<li>The coding just for fun thing is fantastic to learn new things and have fun in the process, let's do more of those.</li>\n</ul>", "published": "2022-11-27T10:58:02.633Z", "lastEdited": "2022-11-27T10:58:02.633Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_3_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--jrMCwhmc--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/cs2divj5v6i0zghivuv3.png", "source": "https://dev.to/humrochagf/publishing-my-first-game-3dm4", "stars": [6, 5], "saves": [6]}}, {"model": "main.post", "pk": 4, "fields": {"author": 7, "title": "SvelteJS: The next big UI framework", "slug": "sveltejs-the-next-big-ui-framework-4", "description": "What is SvelteJS and how do I get started", "content": "<hr />\n<p>title: SvelteJS: The next big UI framework\npublished: true\ndescription: What is SvelteJS and how do I get started\ntags: Javascript, Svelte, SvelteJS, frameworks</p>\n<hr />\n<p><img alt=\"SvelteJS header picture\" src=\"https://thepracticaldev.s3.amazonaws.com/i/hoe8sm40up1ytcqkfqzu.png\" /></p>\n<h1>SvelteJS: The next big UI framework</h1>\n<p>SvelteJS is the new UI framework on the block. Svelte is however very different in many aspects and especially in its mindset around how a UI framework should work and how it should solve the problems regarding writing a user interface. In this post, we will explore how to get started with SvelteJS by building a todo app (as always :smiley: ). We will at the same time learn about what Svelte brings to the table and how it works.</p>\n<h2>TL:DR</h2>\n<p>SvelteJS is a compiler UI framework, some of its features are:</p>\n<ul>\n<li>Truly reactive framework</li>\n<li>Easy to learn</li>\n<li>Accessibility support</li>\n<li>Super fast and small bundle sizes</li>\n<li>Scoped CSS</li>\n<li>Fullfledge framework with a big toolbox to help develop faster.</li>\n</ul>\n<p>Stay around and we will explore all this and more in this article.</p>\n<h2>What is Svelte?</h2>\n<p>Svelte is a framework for building user interfaces, like Vue or React. The key difference is that Svelte is a compiler, unlike React or Vue which runs in the browser. This key difference together with that Svelte is truly a reactive framework (which I would argue that React and Vue are not) opens a lot of opportunities that we will explore in this post.</p>\n<p>In Svelte, we write code in the same declarative way as we do in for example React or VueJS. We do really notice that the UI framework is a compiler, which we also will see in the examples later on. </p>\n<h2>How do we get started?</h2>\n<p>The easiest way to get started is to download a boilerplate template from npx or start a project in codesandbox. To create a boilerplate template:</p>\n<p>```bash\nnpx degit sveltejs/template my-todo-app\ncd my-todo-app/</p>\n<p>npm install\nnpm run dev\n```</p>\n<p>Easy as cake. Now we have a SvelteJS setup ready and can start coding. This project is setup with rollup, which is a bundler, like webpack but more minimalistic.</p>\n<h2>The boilerplate template with SvelteJS</h2>\n<p>At first glance, the project structure looks quite similar to what you would get from React or Vue from scratch.</p>\n<p><img alt=\"Svelte project structure\" src=\"https://thepracticaldev.s3.amazonaws.com/i/re0bu6m160zdkaj4quyg.PNG\" /></p>\n<p>Notice that we have a <code>main.js</code> file, which basically does the same as for other UI frameworks, that is injecting the created js bundle into an HTML element. That's all about the setup, let us check out the code.</p>\n<h2>Svelte components</h2>\n<p>SvelteJS components are similar to HTML files, but with a lot of sugar on top. Javascript is typed in a script tag and CSS is typed in a style tag. The rest is interpreted as HTML. Here is the App.svelte component which comes with the template:</p>\n<p>```html</p>\n<script>\n  export let name;\n</script>\n\n<style>\n  h1 {\n    color: purple;\n  }\n</style>\n\n<h1>Hello {name}!</h1>\n<p>```</p>\n<p>It prints the name variable which is passed in from main.js. So that’s the first thing we can see that is different syntactically. <strong>Props are those properties that are exported in the script tag.</strong></p>\n<h2>Reactivity by assignment</h2>\n<p>But we want to create a todo app so let's start making changes. Let us start by adding an input field and connect that with a variable</p>\n<p><img alt=\"First code example\" src=\"https://thepracticaldev.s3.amazonaws.com/i/lb8yrchfhmsxx39tqxhd.PNG\" /></p>\n<p>Pretty similar to React or Vue, but with a lot less boilerplate. We have a todo variable which gets updated when the value in the input field is changed. </p>\n<p>Notice that we are using the assignment operator. <strong>The assignment operator is a big part of SvelteJS reactivity system</strong>. When assigning a new value to a variable, that assignment will also tell SvelteJS that something has changed in the App and that Svelte needs to update the variable in the DOM in the end of the event loop. Yes, there is an event loop to batch DOM updates, which is good for minimizing repaints.</p>\n<p>We can actually make this a little cleaner with the help of the SvelteJS two-way data binding directive.\n<img alt=\"Second code example\" src=\"https://thepracticaldev.s3.amazonaws.com/i/dvp92jsyez8x5qzgufue.PNG\" /></p>\n<p>And it still works like before. We are using the <code>bind</code> directive to use both read and write operation for HTML elements. This also works for checkboxes and other kinds of inputs.</p>\n<p>Let's continue coding and check how to iterate over arrays.\n<img alt=\"Third code example\" src=\"https://thepracticaldev.s3.amazonaws.com/i/591nft3afuudd7dplmzs.PNG\" /></p>\n<p>Now we have added the possibility to add todos to an array and display those added todos. There are some important observations in the newly added code:</p>\n<ul>\n<li>\n<p>the <code>${each}</code> command in the HTML iterates over an array, with the item as its first parameter and the index as its second parameter. Notice that we have to close the iteration with <code>{/each}</code>. To use the index write <code>{#each todos as (todo, index)}</code></p>\n</li>\n<li>\n<p>on line 5 we reassign the array instead of using push, <strong>in SvelteJS, using operations like push will not trigger an update of that value</strong>. This is a very important observation, as we mentioned previously SvelteJS reactivity system is built around the use of the assignment operator. So we cant use operations that don't return the updated variable. Push returns the length of the array after adding a new item.</p>\n</li>\n<li>\n<p>In React, VueJs and other frameworks we need to have a wrapping element for each component. In SvelteJS <strong>we don't need a wrapping element for each component</strong>, which helps avoid div nesting issues.</p>\n</li>\n<li>\n<p>There is no <code>this</code> in the component. Since SvelteJS is a compiler, it doesn't have to apply all the rules that UI frameworks that run in the browser have to.</p>\n</li>\n</ul>\n<h2>But we are not completely reactive yet</h2>\n<p>Now we have seen some examples of how reactivity works in SvelteJS. It works a bit different since the code is compiled at compile time and only run once in the browser. We have seen how we can have variables in the HTML and if we assign a new value to that variable, the DOM also updates. But what if we have a variable that depends on another variable. Let's consider this example:</p>\n<p><code>js\n  let isDone = false;\n  const infoMessage = isDone ? 'You finished' : 'Keep going!!'</code></p>\n<p>If we would change the isDone variable somewhere in the code, that would not recompute infoMessage. As we just mentioned, that is because the code only run once. Let's take another example with our todo app, which now has the possibility to set todos as done as well as filtering on remaining todos.\n<img alt=\"Fourth code example\" src=\"https://thepracticaldev.s3.amazonaws.com/i/z6nzzue3dvugqzre250h.PNG\" /></p>\n<p>As we can see in this example, it's not reactive. I click the checkbox to hide buy groceries, but it's not disappearing. That's because our code only run once.</p>\n<p>Svelte has come up with a solution for this problem, by \"adding\" a reactive command. We can add a <code>$:</code>, which is valid javascript and is a labeled statement. It doesn't really do anything so Svelte uses this for reactivity. How that work is that the <code>$:</code> is like a subscription and subscribes to the values in the expression. So if we revisit our example and do this change, then it should work.</p>\n<p><img alt=\"Fifth code example\" src=\"https://thepracticaldev.s3.amazonaws.com/i/bifhl8ny8t4xbljnkvgn.PNG\" /></p>\n<p>With this change, our todo app is now reactive and filters out the done todos when selecting the checkbox.</p>\n<p>How that works more exactly is that this code runs in topological order. Which means that <code>filteredTodos</code> depend on <code>onlyShowRemainingTodos</code> and <code>filtreredTodos</code> will run after <code>onlyShowRemainingTodos</code> has changed. This means we can also have reactive values that depend on other reactive values. We could, for example, have a variable that depends on filtered todos:</p>\n<p>```js\nlet todos = [\n  {id: 0, text: 'Buy groceries', isDone: false},\n  {id: 1, text: 'Go to the Gym', isDone: false}];\nlet onlyShowRemainingTodos = false;</p>\n<p>$: filteredTodos = onlyShowRemainingTodos ?\n  todos.filter(x =&gt; !x.isDone) : todos;\n$: numberOfFilteredTodos = filteredTodos.length;\n```</p>\n<h2>Scoped CSS</h2>\n<p>All CSS in the style tag is by default scoped, which is really awesome. This means we don't have to worry about complicated naming schemes like BEM or using pre-processors. You could still use BEM or pre-processors if you want to, but there aren't as many benefits when the global CSS issues are already solved. What scoped CSS gives us, is that the CSS is specific for each component. So we can have the same CSS class in 2 different components without having name collision.\n<img alt=\"Example scoped CSS\" src=\"https://thepracticaldev.s3.amazonaws.com/i/6b8blnb2y1xzmqcyg94v.PNG\" /></p>\n<p>As we can see in this example, svelte hashes our CSS to be specific for the App component, thereby making it scoped. Also notice that I added a CSS class that is not used in the HTML. That CSS class will not be included by Svelte in the CSS bundle, since it's not used anywhere.</p>\n<h2>Other key features</h2>\n<p>So far we have covered some of the features in SvelteJS, there are however a lot more. We will touch on some more features briefly, but we won't go through all of them in this article. For complete code example and to see all the features, I encourage you to visit <a href=\"http://svelte.dev\">svelte.dev</a></p>\n<h3>Performance</h3>\n<p>In the compile process, Svelte compiles our svelte components into high-performance imperative javascript code. This makes our code very fast to run for the browser. As I mentioned, our code only runs once and not every time some state changes, which is a huge performance benefit. When Svelte turns our declarative code into high-performance imperative code, it also disappears from our bundle, since all the logic for updating the DOM is done in the build process and what's left of SvelteJS in our bundle is just some helper functions.</p>\n<p>Okay, so we have small bundles which mean faster loading time and faster time to first interactivity and our app is faster due to the imperative code. What not to like :smiley:</p>\n<h3>No virtual DOM</h3>\n<p>With Svelte, all the computation for working out the most efficient way of reacting to a state change is done beforehand. With this way of thinking, we don't need a virtual DOM. The virtual DOM can now actually be seen as a bottleneck for performance. Svelte does not use a virtual DOM and is much faster because of it.</p>\n<h3>Easy to learn</h3>\n<p>Unlike most other frameworks, Svelte components look like HTML with javascript and CSS put in script and style tags. This makes the code more familiar to those not experienced with any UI frameworks. For those who are already using UI frameworks, its very easy to get started as well.</p>\n<p>There is also very little boilerplate, which makes it very easy to read and understand. This is a big selling point when learning a new framework, it lets you do what you are supposed to do, without typing much framework specific code.</p>\n<h3>Fullfledge framework</h3>\n<p>That SvelteJS is a compiler also gives us an advantage when it comes to which features that Svelte can include in the framework. It gives Svelte the advantage of including a lot of features, but its <strong>only the features that you use in the app that will be included in the bundle</strong>. The rest of the feature will be tree shaken away. That is really great, it gives us a very big toolbox to choose from, making development easier, without having to pay for the features we aren't using.</p>\n<h2>Conclusion</h2>\n<p>I think Svelte is a really great framework. It's easy to learn, fast and has a lot of usable and cool features. It gives a different mindset about how to think about UI frameworks in terms of reactivity and what a UI framework should help to solve. It feels easy to start working with Svelte because of their big toolbox and we don't have to worry as much about performance. I think Svelte will become one of the big UI frameworks in the future and I hope I have inspired you to give it a try, either by following my steps and setting up your own project or go <a href=\"http://svelte.dev\">svelte.dev</a> and try some of the tutorial steps.</p>\n<p><strong>Thanks for reading !!</strong></p>", "published": "2022-11-27T10:58:08.398Z", "lastEdited": "2022-11-27T10:58:08.398Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160813.png", "source": "https://dev.to/mstamstrom/sveltejs-the-next-big-ui-framework-4n0e", "stars": [7, 8, 9, 10, 11], "saves": [8, 7]}}, {"model": "main.post", "pk": 5, "fields": {"author": 12, "title": "Tests in pre-commit hooks and alternatives", "slug": "tests-in-pre-commit-hooks-and-alternatives-5", "description": "A few months ago, I bought myself a fancy MacBook Pro. You know, one of those fancy devices with the...", "content": "<hr />\n<p>title: Tests in pre-commit hooks and alternatives\npublished: true\ntags: swift,git\ncanonical_url: https://zeitschlag.net/tests-in-pre-commit-hooks-and-alternatives/</p>\n<hr />\n<p>A few months ago, I bought myself a fancy MacBook Pro. You know, one of those fancy devices with the fancy TouchBar, a nice Retina screen and a <a href=\"https://support.apple.com/keyboard-service-program-for-mac-notebooks\">broken-by-default keyboard</a>. And to make myself feel better, 'cause you never know what might happen in the next couple of years, I bought an AppleCare Plus-package as well.</p>\n<p>In the beginning, I was pretty happy with this setup — it was amazingly fast: Everything was just there! Wow! Mindblowing! And then the space bar started to trigger twice. A few weeks later, the left CMD-key as well as some other keys behaved the same way. And so I brought the computer to an Apple reseller last week to send it to Apple to have them replace the entire keyboard.</p>\n<p>And in the meantime I've used my old computer. It's a 2014 Macbook Air with a 1.4Ghz CPU and 4GB of RAM. I've kept it as a backup computer and I'm really disappointed, that I have to rely on it after a fews months. Compared to the 2018 Macbook Pro, it's pretty slow but hey, it has a working keyboard, at least. And I relied on that MBA for more than 4 and a half years and it has never let me down.</p>\n<p>In July, Max and me recorded an episode of our german <a href=\"https://codestammtis.ch\">Codestammtisch-podcast</a>. Together with our <a href=\"https://codestammtis.ch/2019/07/15/cst032-wissenstransfer-mit-dom/\">guest Dominik we discussed Knowledge Transfer</a> and during that episode, Dominik mentioned, that it's possible to <a href=\"https://medium.com/@pearsontsp/automate-tests-in-ios-with-git-hooks-8d97b66e0f36\">automate tests in iOS with git-hooks</a>. This week, I actually tried that, as I really like the idea. I set up the tests to run in a pre-commit hook. Before every commit, the project is compiled, all of my unit tests are run and if — and only if — they succeed, the commit is created.</p>\n<p>Unfortunately, this doesn't make a lot of fun on my fallback-MBA as compiling the Swift-code and running the test takes roughly one minute. That means, that creating a new commit takes one minute every single time. That means a lot of time wasted waiting.</p>\n<p>What are my alternatives? I could move this from a pre-commit hook to a pre-push hook as suggested in the <a href=\"https://medium.com/@pearsontsp/automate-tests-in-ios-with-git-hooks-8d97b66e0f36\">aforementioned blog post</a>.</p>\n<p>Or I could use something like <a href=\"https://www.windmill.io\">Windmill</a> or a local <a href=\"https://jenkins.io\">Jenkins</a>, but that wouldn't solve the problem as those tools would still run locally on my oldie-but-a-goldie MBA. Neither would using <a href=\"https://about.gitlab.com/product/continuous-integration/\">Gitlab CI</a>, as its runners still run locally on my machine. I don't have another spare computer flying around to use it as a build server.</p>\n<p>Antother alternative would be the free hobby plan of <a href=\"https://www.bitrise.io\">bitrise</a>. Or I could open-source my project and profit from <a href=\"https://travis-ci.org\">Travis CI</a>. Or I could pay them. Or I could rent a Mac from <a href=\"https://www.macstadium.com\">MacStadium</a> for example, and have it run a Gitlab Runner, or my own Jenkins, or Xcode Bots.</p>\n<p>So many possibilities to choose from! I might choose the most affordable way until my MBP is back. Just hit <code>CMD+U</code> after every <code>CMD+S</code>. Let's see, because:</p>\n<blockquote>\n<p>[Pressing <code>CMD+U</code> is] a hard habit to form, especially for us iOS developers.</p>\n<p>— <a href=\"https://medium.com/@pearsontsp/automate-tests-in-ios-with-git-hooks-8d97b66e0f36\">Source</a></p>\n</blockquote>\n<!--kg-card-end: markdown-->", "published": "2022-11-27T10:58:20.402Z", "lastEdited": "2022-11-27T10:58:20.402Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160815.png", "source": "https://dev.to/zeitschlag/tests-in-pre-commit-hooks-and-alternatives-3b9o", "stars": [13], "saves": []}}, {"model": "main.post", "pk": 6, "fields": {"author": 14, "title": "Dev parents, how do you do it?", "slug": "dev-parents-how-do-you-do-it-6", "description": "How do parents who work in tech balance parenting and their careers?", "content": "<hr />\n<p>title: Dev parents, how do you do it?\ndescription: How do parents who work in tech balance parenting and their careers?\npublished: true\ntags: anonymous, career, discuss</p>\n<hr />\n<p><em>This is an anonymous post sent in by a member who does not want their name disclosed. Please be thoughtful with your responses, as these are usually tough posts to write. Email sloan@dev.to if you'd like to leave an anonymous comment.</em></p>\n<p>I am at what feels like the prime of my career. I am crushing it at work and moving up to take on larger leadership positions at my company. My speaking career has really exploded and I am consistently getting asked to talk at conferences. With all of this going on I have been considering have kids. I never thought I wanted kids but now I am reconsidering. I am 32 years old and I definitely would like to be a younger mom so I see it as now or never. </p>\n<p>However, I am worried if I did it now my career would suffer and I wouldn't have the time to work and speak. I'm also worried as to how I will be perceived. If people will take me less seriously. I love my current life but I wonder if there is more, if I am missing out by not having kids somehow.</p>\n<p>Parents, who work in tech, especially those who work and speak, how do you do it? Is it something you would recommend? What are the pros and cons? Please don't hold back, I want the honest truth so I can make the best-informed decision possible.</p>\n<p>Thank you in advance for taking the time to read this and respond! ❤️️ </p>", "published": "2022-11-27T10:58:26.969Z", "lastEdited": "2022-11-27T10:58:26.969Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160817.png", "source": "https://dev.to/sloan/dev-parents-how-do-you-do-it-2616", "stars": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "saves": [14, 15, 18, 20, 22, 24]}}, {"model": "main.post", "pk": 7, "fields": {"author": 26, "title": "Let's talk about some amazing women in my life", "slug": "lets-talk-about-some-amazing-women-in-my-life-7", "description": "Earlier this week, I had the opportunity to speak on a panel during a Women of ID8 Luncheon, which...", "content": "<hr />\n<p>title: Let's talk about some amazing women in my life\npublished: true\ntags: career, motivation, techtalks\ncanonical_url: https://www.chenhuijing.com/blog/lets-talk-about-some-amazing-women/</p>\n<hr />\n<p>Earlier this week, I had the opportunity to speak on a panel during a Women of ID8 Luncheon, which was part of the larger Facebook iD8 event in Singapore. The panel discussion centred around the topic of “Growing women’s influence in the workplace”.</p>\n<p>The luncheon was organised by my long-time friend, <a href=\"http://elishatan.com/\">Elisha Tan</a>. She is a kick-ass woman in tech doing a myriad of awesome things, including <a href=\"http://www.techladies.co/\">TechLadies</a>, a community-led initiative for women in Asia to connect, learn, and advance as programmers.</p>\n<p>We first met around the time she was launching the inaugural <a href=\"https://www.facebook.com/elishatan/posts/10153786579902597? __xts__ %5B0%5D=68.ARAIGuHneVqdsBBKeSGX9x2nGrXuPtkfUkYKFIxIRRjIFF6NWRz2GdQquxViAAnB8BQ38k0C8jpd3CfvImJnWik1trM3gjDGaJgIab9Srw4Q2rooK1MPt55z4ClyfLrijpqIyyn7Y35bbuty-dgMpes-VY_v0nIg8bsKLQLS4EpNOLUMhf9qfJhAMG9TFFjuN4CPQNgpBve8kmUrQw&amp; __tn__ =-R\">TechLadies Bootcamp</a> and she asked if I wanted to speak on her panel. Are you sensing a trend here? At the time, I hadn’t done much public speaking, probably a grand total of 3 meetup talks to my name. But she put me on there anyway.</p>\n<p><img alt=\"Panel at inaugural TechLadies launch event\" src=\"https://www.chenhuijing.com/assets/images/posts/women-in-tech/techladies@2x.jpg\" /></p>\n<p>I had attended lots of tech meetups previously and it never occurred to me that most of the audience was male, until I sat in front of a room full of women.</p>\n<p>That was what prompted me to blurt out (in my typical full-on Singlish accent) “Wah, so many char bor!”, which brought endless amusement to a lot of my friends.</p>\n<p><img alt=\"My comment captured on social media forever\" src=\"https://www.chenhuijing.com/assets/images/posts/women-in-tech/infamous@2x.jpg\" /></p>\n<p>Fast forward more than 3 years, and here we are today. Me, still my typical nonsensical self (ask the people who’ve seen me since day 1), albeit with slightly more public speaking sprinkled in.</p>\n<p>While Elisha has continued to push forward her various initiatives to advance women in tech and is now the Developer Programs Manager for APAC at Facebook.</p>\n<p>Which brings me back to the luncheon mentioned at the start of this story. I had since gotten the opportunity to speak internationally at a number of tech events, and gotten to know many awesome people in the industry.</p>\n<h2>People gave me a shot</h2>\n<p>But none of this would have been possible if not for women of influence like <a href=\"https://twitter.com/jensimmons\">Jen Simmons</a> who pushed my name forward when nobody knew who I was, and conference organisers like <a href=\"https://twitter.com/serrynaimo\">Thomas Gorissen</a>, <a href=\"https://twitter.com/charis\">Charis Rooda</a> and <a href=\"https://twitter.com/pepelsbey_\">Vadim Makeev</a> who took a chance on me when I had no prior track record whatsoever.</p>\n<p>I can’t do much to repay them directly, because their faith and support was priceless. But I can do this (and you can quote me):</p>\n<blockquote>\n<p>Acknowledge and highlight the achievements of the women around me from this region as publicly as I can.</p>\n</blockquote>\n<p>There are many women in the tech industry who choose not to be public, and that’s perfectly fine. But there are also many who just need an opportunity, a shout-out, someone to shine the spotlight on them for once.</p>\n<p>I’ve always highlighted the fact that I am from the region of Southeast Asia. Growing up, all students were made aware of ASEAN (Association of Southeast Asian Nations), from things like economic growth and politics, to sports (i.e. the Southeast Asian games). I just saw all 11 countries in my region as “us”.</p>\n<p>Which is why I don’t want to be seen as an outlier. I want the world to know that if you think I’m good, you should see the whole pool of talent we have over this side of the planet. That we’ve had for a long time but you never knew about us.</p>\n<h2>My girls being casually awesome</h2>\n<p>So I want to mention just a few of these amazing women in tech whom I have the privilege of calling my friends.</p>\n<p>The team at <a href=\"https://www.pwdo.org/\">PWDO</a>, who had organised Southeast Asia’s longest running web development conference, Form, Function &amp; Class, <a href=\"https://twitter.com/sinongkit\">Kit Valmadrid</a>, <a href=\"https://twitter.com/sofimi\">Sophia Lucero</a> and <a href=\"https://twitter.com/sarahcada\">Sarah Cada</a>.</p>\n<p>{% twitter 1164728301891416064 %}</p>\n<p><a href=\"https://twitter.com/RenettaRenula\">Aysha Anggraini</a>, my beloved mind twin who is the epitome of sass (you should hear her speak, really) and one of the best frontend developers I know. Oh, and she also happens to be a fellow Malaysian.</p>\n<p>{% youtube duXP9J_jaNo %}</p>\n<p>Speaking of Malaysians, there’s also <a href=\"https://twitter.com/piratefsh\">Chong Sher Minn</a>, who gave a brilliant talk at JSConf EU earlier this year. And queen of CSS herself, <a href=\"https://twitter.com/meowlivia_\">Olivia Ng</a>, who is simply the best at designing creative layouts with CSS grid.</p>\n<p>{% youtube nC5q5JxLjnY %}</p>\n<p>Oh, how about <a href=\"https://twitter.com/JecelynYeen\">Jecelyn Yeen</a>, who took on the mammoth task of organising the inaugural <a href=\"https://2019.ng-my.org/\">NG-MY</a>, which was Southeast Asia’s first Angular conference.</p>\n<p>{% twitter 1157585146532384770 %}</p>\n<p>There’s also <a href=\"https://twitter.com/yishusee\">See Yishu</a>, whom I refer to as the pride of Singapore, because her style of delivery is so perfectly Singaporean. Wonderfully humourous, while still getting the point across.</p>\n<p>{% youtube pEVGAn2qNtU %}</p>\n<p>And <a href=\"https://twitter.com/wgao19\">Gao Wei</a>, my favourite person in the world, who does a tonne of amazing things, not for glory or recognition, but out of pure passion and curiosity. She also happens to be a great speaker (though she doesn’t seem to think so herself), and a bad-ass climber.</p>\n<p>{% twitter 1156012102114430981 %}</p>\n<p>{% youtube lfsNtDEcw5E %}</p>\n<p>There are more than 7 billion people in the world. The odds that any of us are in each other’s lives is nothing short of a miracle. Yet, I have managed to cross paths with these amazing human beings.</p>\n<p>Who happen to be women, who happen to be Asian, who happen to be software developers.</p>\n<p>And I hope you get to cross paths with them too.</p>", "published": "2022-11-27T10:58:46.921Z", "lastEdited": "2022-11-27T10:58:46.921Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160818.png", "source": "https://dev.to/huijing/let-s-talk-about-some-amazing-women-in-my-life-3fmm", "stars": [], "saves": []}}, {"model": "main.post", "pk": 8, "fields": {"author": 27, "title": "Not Another To-Do App: Part 4", "slug": "not-another-to-do-app-part-4-8", "description": "Getting your hands dirty and feet wet with Open Web Component Recommendations...sort of....", "content": "<h4>Getting your hands dirty and feet wet with Open Web Component Recommendations...sort of.</h4>\n<blockquote>\n<p><em>This a cross-post of a Feb 26, 2019 article from <a href=\"https://medium.com/@westbrook/not-another-to-do-app-169c14bb7ef9\">Medium</a> that takes advantage of my recent decision to use Grammarly in my writing (so, small edits have been made here and there), thanks for looking again if you saw it there 🙇🏽‍♂️ and if this is your first time reading, welcome!</em></p>\n</blockquote>\n<p><em>Welcome to “Not Another To-Do App”, an overly lengthy review of making one of the smallest applications every developer ends up writing at some point or another. If you’re here to read up on a specific technique to writing apps or have made your way from a previous installation, then likely you are in the right place and should read on! If not, it’s possible you want to <a href=\"https://dev.to/westbrook/not-another-to-do-app-2kj9\">start from the beginning</a> so you too can know <a href=\"https://github.com/Westbrook/to-do-app\">all of our characters’ backstories...</a></em></p>\n<p><em>If you’ve made it this far, why quit now?</em></p>\n<hr/>\n\n<h1>Measure Twice, Lint Once</h1>\n<p><img alt=\"Measure Twice, Lint Once\" src=\"https://thepracticaldev.s3.amazonaws.com/i/2i1f74tq26nescs51siu.jpeg\" /></p>\n<figcaption>Photo by <a href=\"https://unsplash.com/@yer_a_wizard\" target=\"_blank\">Fleur Treurniet</a> on <a href=\"https://unsplash.com/\" target=\"_blank\">Unsplash</a></figcaption>\n\n<p>It may already too late to stop an exasperated comment or two from readers that have made it this far in response to a somewhat questionable block of code shared in a previous section. While accurately delivering the content to our application that is needed to pass the test of “it renders to do elements to the DOM for each of the to-do items in your list”, the following code sample sparks the ire of another feature that the open-wc team has provided our application:</p>\n<p><code>js\nrender() {\n    return html`\n        ${this.todos.map(todo =&gt; html`\n            &lt;to-do&gt;${todo}&lt;/to-do&gt;\n        `)}\n    `;\n}</code></p>\n<h2><em>Linting!</em></h2>\n<p><img alt=\".map is disallowed in templates...\" src=\"https://thepracticaldev.s3.amazonaws.com/i/jtffdb04o4mpvmwxjku1.png\" /></p>\n<figcaption>`.map` is disallowed in templates...</figcaption>\n\n<p>As you can see in the terminal readout above, the inclusion by open-wc’s generator of <a href=\"https://www.npmjs.com/package/eslint-plugin-lit\"><code>eslint-plugin-lit</code></a> gets right into helping your write cleaner, more performant code with a number of rules built for <code>lit-html</code> based templating. Beyond not getting to rely on <code>.map</code> in your templates, you’ll also be told when you’re binding the same attribute multiple times to a single element (i.e. <code>&lt;x-foo bar=${x} bar=${y} baz&gt;&lt;/x-foo&gt;</code>), when you’re redundantly using template literals (i.e. <code>foo ${‘bar'}</code>), when you’re bindings are in invalid positions (i.e. <code>&lt;x-foo&gt;&lt;!--${expr}--&gt;</code>), and much more. Luckily, in the case of my <code>.map</code> the steps to correct the error are few, they make our template much more readable, and they prepare the code for reusability as we’ll get into later.</p>\n<p>```js\nimport { renderTodos } from './to-do-ui';</p>\n<p>// ...</p>\n<p>render() {\n    return html<code>${renderTodos(this.todos)}</code>;\n}\n```</p>\n<p>However, this is not the only part of the lint report that surprised me. The following caught me as well:</p>\n<p><img alt=\"No for(let y in x)?\" src=\"https://thepracticaldev.s3.amazonaws.com/i/yl641c8at9cbo3vrswb1.png\" /></p>\n<figcaption>No `for(let y in x)`?</figcaption>\n\n<p>I actually tripped this alert in two related places (one on the application side, one of the testing side of the same feature) so the logic to correct one mostly applied to the other. In the case of one instance, the code was as follows:</p>\n<p><code>js\nfor (const todoCount in workLevelByTodoCount) {\n    if (todos.length &lt;= todoCount) {\n        return workLevelByTodoCount[todoCount];\n    }\n}\nreturn Object.keys(workLevelByTodoCount).length;</code></p>\n<p>Which when delivered via object/array methods get you the same functionality with a little bit more clarity while you’re at it:</p>\n<p><code>js\nconst workLevelCounts = Object.keys(workLevelByTodoCount);\nconst count = workLevelCounts\n    .find(todoCount =&gt; todos.length &lt;= todoCount);\nreturn typeof count !== 'undefined'\n    ? workLevelByTodoCount[count]\n    : workLevelCounts.length;</code></p>\n<p>Beyond the above results, I was also hit a number of other smaller linting errors and warnings that I’m glad to have out of my code base with the first call to <code>git commit -am 'Code with some linting errors'</code>. It’s nice to know someone’s got your back when it comes to these little nit-picks that can have compounding negative effects on your code over time.</p>\n<h2>What’s More</h2>\n<p>It’s also nice when the tools a project adds to help it’s users be better (like this linting on commit) does the extended work of helping to make the project itself better. Once I had finished working through my list of linting issues, I found that there was an extra one that I couldn’t explain.</p>\n<p><img alt=\"Even the generator needs to be linted, sometimes.\" src=\"https://thepracticaldev.s3.amazonaws.com/i/dcl0x26124cqcnpwt55t.png\" /></p>\n<figcaption>Even the generator needs to be linted, sometimes.</figcaption>\n\n<p>Turns out that some things had slipped by in the development process of the generator. Shortly after catching this and submitting <a href=\"https://github.com/open-wc/open-wc/issues/246\">an issue</a> in the open-wc project, it was tidied right up.</p>\n<hr/>\n\n<h1>The Short Game</h1>\n<p>As voted on by a plurality of people with opinions on such topics that are both forced to see my tweets in their Twitter feed and had a free minute this last week, a 9000+ word article is a no, no.</p>\n<p>{% twitter 1098196160613896192 %}</p>\n<p>So, it is with the deepest reverence to you my dear reader that I’ve broken the upcoming conversations into a measly ten sections. Congratulations, you’re nearing the end of the first! If you’ve enjoyed yourself so far, or are one of those people that give a new sitcom a couple of episodes to hit its stride, here’s a list of the others for you to put on your Netflix queue:</p>\n<ul>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-2kj9\">Not Another To-Do App</a></li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-3jem\">Getting Started</a></li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-2m9a\">Test Early, Test Often</a> (I could use some unit tests on these articles...)</li>\n<li>Measure Twice, Lint Once (you are here)</li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-part-5-5d7o\">Make it a Component</a></li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-part-6-an\">Make it a Reusable Part</a></li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-part-7-3cm7\">Does Your Component Really Need to Know That?</a></li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-part-8-3lic\">Separate Things Early, Often, and Only as Needed</a></li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-part-9-10j3\">Some Abstractions Aren’t (Just) For Your App</a></li>\n<li><a href=\"https://dev.to/westbrook/not-another-to-do-app-part-10-mp6\">Reusable and Scaleable Data Management/And, in the end...</a></li>\n<li><a href=\"https://gifted-lamport-70b774.netlify.com/\">See the app in action</a></li>\n</ul>\n<hr/>\n\n<p>Special thanks to the team at <a href=\"https://open-wc.org/\">Open Web Components</a> for the great set of tools and recommendations that they’ve been putting together to support the ever-growing community of engineers and companies bringing high-quality web components into the industry. <a href=\"https://github.com/open-wc/open-wc\">Visit them on GitHub</a> and create an issue, submit a PR, or fork a repo to get in on the action!</p>", "published": "2022-11-27T10:58:50.730Z", "lastEdited": "2022-11-27T10:58:50.730Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_8_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--bysRMv8F--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/tblshxo57mocroh36soc.png", "source": "https://dev.to/westbrook/not-another-to-do-app-part-4-58cd", "stars": [], "saves": []}}, {"model": "main.post", "pk": 9, "fields": {"author": 28, "title": "Emails getting cut off in Gmail", "slug": "emails-getting-cut-off-in-gmail-9", "description": "Gmail will cut off and display [Message clipped] View entire message at the bottom of your email if the email is larger than 102kb. ", "content": "<hr />\n<p>title: Emails getting cut off in Gmail\npublished: true\ndescription: Gmail will cut off and display [Message clipped] View entire message at the bottom of your email if the email is larger than 102kb. \ntags: #Gmail #HTML_Email #CSS</p>\n<hr />\n<p>Have you ever noticed your email been cut off in Gmail, this is because of the Email file size is larger than 102kb. A quick fix i found for this was to get rid of unwanted spaces in your HTML by using this tool https://htmlcompressor.com/compressor this helps in stripping and optimising the file size to the barest minimum. </p>\n<p><strong>Please note:</strong> the 102kb limit is based on the amount of content in the HTML code, not the size of specific images in your message. While resizing an image will not change the size of the content, deleting an image from the email body will reduce the size of the message.</p>", "published": "2022-11-27T10:58:54.946Z", "lastEdited": "2022-11-27T10:58:54.946Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160822.png", "source": "https://dev.to/sesay/emails-getting-cut-off-in-gmail-5232", "stars": [29], "saves": [29]}}, {"model": "main.post", "pk": 10, "fields": {"author": 30, "title": "1Gbps Internet Speedtest by OpenSpeedtest.com", "slug": "1gbps-internet-speedtest-by-openspeedtestcom-10", "description": "Install Docker and run the following command!  1) docker run --restart=unless-stopped --name=openspee...", "content": "<p>Install Docker and run the following command!</p>\n<p>1) docker run --restart=unless-stopped --name=openspeedtest -d -p 80:8080 openspeedtest/latest</p>\n<p>Now Visit http://localhost/ or http://YOUR-IP/</p>\n<p>This can run offline! So you can use it to test your Local Area Network or put it on a server to test your line speed to that server. Currently optimised to test speeds up to 1~2 Gbps. You can change the values and files inside this docker and can test even faster connection.</p>", "published": "2022-11-27T10:59:06.000Z", "lastEdited": "2022-11-27T10:59:06.000Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/openspeedtest/1gbps-internet-speedtest-by-openspeedtest-com-19hf", "stars": [], "saves": []}}, {"model": "main.post", "pk": 11, "fields": {"author": 31, "title": "Cloudflare Argo Tunnel accessible gratuitement aux développeurs : mise en oeuvre avec k3s …", "slug": "cloudflare-argo-tunnel-accessible-gratuitement-aux-developpeurs-mise-en-oeuvre-avec-k3s-11", "description": "Cloudflare Argo Tunnel accessible gratuitement aux développeurs : mise en oeuvre avec k3s …...", "content": "<hr />\n<p>title: Cloudflare Argo Tunnel accessible gratuitement aux développeurs : mise en oeuvre avec k3s …\npublished: true\ntags: openstack,docker,kubernetes,azure\ncanonical_url: https://medium.com/@abenahmed1/cloudflare-argo-tunnel-accessible-gratuitement-mise-en-oeuvre-avec-k3s-1d0c415a150d</p>\n<hr />\n<h3>Cloudflare Argo Tunnel accessible gratuitement aux développeurs : mise en oeuvre avec k3s …</h3>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*u-t6ughQV6ANuAyVPsW-Rg.png\" /></p>\n<p>Je pars pour cette expérience d’un Scale Set dans Azure avec une instance Ubuntu 18.04 LTS de type Ev3 qui autorise la virtualisation imbriquée :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*U1ZLQhh-meoyqhw2oq-JEg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bOqIiSJ7s7c_28iiuGQlqg.jpeg\" /></p>\n<p>et je vais déployer DevStack via ce fichier de paramètres local.conf :</p>\n<p>{% gist https://gist.github.com/deep75/ff0201f0bcf29906881ebce3f106e173 %}</p>\n<p>et ces étapes :</p>\n<p>```\n$ sudo apt install libvirt-bin bridge-utils\n$ sudo service libvirtd start\n$ sudo update-rc.d libvirtd enable</p>\n<p>$ sudo useradd -s /bin/bash -d /opt/stack -m stack\n$ echo \"stack ALL=(ALL) NOPASSWD: ALL\" | sudo tee /etc/sudoers.d/stack\n$ sudo su - stack\n$ git clone <a href=\"https://git.openstack.org/openstack-dev/devstack\">https://git.openstack.org/openstack-dev/devstack</a> -b stable/stein\n$ cd devstack\n$ wget -c <a href=\"https://gist.githubusercontent.com/deep75/ff0201f0bcf29906881ebce3f106e173/raw/18874bf7291f97687af3990e8c1dc517ac29706a/local.conf\">https://gist.githubusercontent.com/deep75/ff0201f0bcf29906881ebce3f106e173/raw/18874bf7291f97687af3990e8c1dc517ac29706a/local.conf</a></p>\n<p>$ ./stack.sh\n```</p>\n<p>Le cluster OpenStack est accessible depuis cette instance Azure dans ce Scale Set avec l’adresse IP publique :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*XzHj5kXh5t_TSclUvA-t7w.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/724/1*fNZXEpnpQ7_-PhVEPQbysQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/461/0*mwSO17e0F1GCN9KB.jpg\" /></p>\n<p>Après import d’une image Ubuntu dans Glance :</p>\n<p><code>$ . openrc\n$ wget -c [https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img](https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img)\n$ glance --os-image-api-version 2 image-create --name 'Ubuntu 18.04 LTS 64 Bits' --disk-format qcow2 --container-format bare --file ./bionic-server-cloudimg-amd64.img --progress</code></p>\n<p>Je lance 4 instances :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*PjfY-4liPR2R9bv9gUiVEA.jpeg\" /></p>\n<p>à l’aide de ce fichier cloud-init simple :</p>\n<p>```</p>\n<h1>!/bin/sh</h1>\n<p>curl -fsSL <a href=\"https://get.docker.com\">https://get.docker.com</a> -o get-docker.sh\nsh get-docker.sh\nsudo usermod -aG docker ubuntu\n```</p>\n<p>et je peux créer mon petit cluster K8S avec K3S :</p>\n<ul>\n<li><a href=\"https://github.com/rancher/k3s\">rancher/k3s</a></li>\n<li><a href=\"https://k3s.io/\">k3s: Lightweight Kubernetes</a></li>\n</ul>\n<p>avec la particularité d’utiliser Docker en lieu et place de Containerd et sans agent ni Traefik sur le noeud maître :</p>\n<p><code>$ nohup sudo k3s server --disable-agent --no-deploy traefik --docker &amp;</code></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jfLD7_TaMlObBhhUAUGXGg.jpeg\" /></p>\n<p>Je raccorde deux noeuds worker à ce cluster :</p>\n<p><code>$ nohup sudo k3s agent --server [https://11.14.15.146:6443](https://11.14.15.146:6443) --token K10a452672c09f560d734d4565ea32093e75d17ba1c31ab7c05bbe74780b346c2b7::node:7b3a469d8e5b5c3c6b8948302d718281 --docker &amp;</code></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_bDSK16JSMRiumyqpUd5yw.jpeg\" /></p>\n<p>Le cluster est disponible avec ces noeuds :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AYbwI-STGIJy3THH7xspdw.jpeg\" /></p>\n<p>Je lance une instance avec Rancher Server et j’importe ce nouveau cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AMxkfeAD3RRklR1TaBrj6A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*5xRexFIFXnUM6a-ru5IzSg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*c7qtOIkzwzgG7gUWY98eKw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oMk-YYQ2owGuRtEE38kqrg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*XBWdw9JTPmuyMjmRLTChOw.jpeg\" /></p>\n<p>Je lance le désormais célèbre démonstrateur FC avec Rancher avec NodePort :</p>\n<h2>```</h2>\n<p>apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n name: fcdemo-agent-app\n annotations:\n flux.weave.works/automated: 'true'\nspec:\n replicas: 4\n template:\n metadata:\n labels:\n app: fcdemo-agent-app\n spec:\n containers:\n - name: fcdemo-agent-app\n image: mcas/franceconnect-agent-demo:latest\n ports:\n - containerPort: 8000</p>\n<hr />\n<p>apiVersion: v1\nkind: Service\nmetadata:\n name: fcdemo-agent-service\n labels:\n app: fcdemo-agent-service\nspec:\n type: <strong>NodePort</strong>\n ports:\n # the port that this service should serve on Kubernetes\n - port: 80\n targetPort: 8000\n protocol: TCP\n selector:\n app: fcdemo-agent-app\n```</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*78p0rQDA9FveUNg2dElKgw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*nY6Aj3fZ5W1DzKFOpwSnbg.jpeg\" /></p>\n<p>Ceci émet sur port TCP 32302 sur tous les noeuds du Cluster. Je lance alors un Load Balancer avec Octavia :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*4qg_fMZbK_a2eP5l.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*flcAQgxj9yYOadH9sG1oqw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_wgOR4Yo8BrAblE33ksOhA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*P8d7dvSDQyk9MhKdhbIxUg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*5tBzyXfhjxLfvn8kGhc8WQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NJvgqEmsfCumMc5rcj5FCQ.jpeg\" /></p>\n<p>J’ai donc une Floating IP qui pointe vers ce pool de noeuds du cluster K3S sur le port 80. Je vais utiliser Cloudflare Argo Tunnel pour exposer publiquement le démonstrateur FC. En effet, Cloudflare a rendu accessible sa solution de tunneling pour les développeurs :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1020/1*Ztrh9L2Tt9SjbuhPrMwG5w.jpeg\" /></p>\n<ul>\n<li><a href=\"https://blog.cloudflare.com/a-free-argo-tunnel-for-your-next-project/\">A free Argo Tunnel for your next project</a></li>\n<li><a href=\"https://developers.cloudflare.com/argo-tunnel/trycloudflare/\">TryCloudflare - Argo Tunnel</a></li>\n</ul>\n<p>```\n$ wget -c <a href=\"https://bin.equinox.io/c/VdrWdbjqyF/cloudflared-stable-linux-amd64.deb\">https://bin.equinox.io/c/VdrWdbjqyF/cloudflared-stable-linux-amd64.deb</a></p>\n<p>$ sudo dpkg -i cloudflared-stable-linux-amd64.deb\n$ curl <a href=\"http://192.168.122.234\">http://192.168.122.234</a> \n$ nohup sudo cloudflared tunnel --url <a href=\"http://192.168.122.234\">http://192.168.122.234</a> &amp;\n```</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kn5lRc_mm1TdOzryhyeS8Q.jpeg\" /></p>\n<p>J’obtiens un lien URL qui me permet d’accéder publiquement au démonstrateur FC :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AFzGW2FElGBkDRNS8rh0ew.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*lnwiDE0avedFX_MGhFllEA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*z0DG2ooML_-5TvLdtWxRJw.jpeg\" /></p>\n<p>Par le biais du stockage objet avec Swift, je peux avoir accès publiquement à divers fichiers comme une vidéo :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/672/0*uM9vIVOKHTw7jnSb.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Pqz3ymuBUc1loCKwG4rwdQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1010/1*CYaAs3yTAJq0fGumrdbSvw.jpeg\" /></p>\n<p>Pour finir, toujours en test, je peux lancer un petit clone de Youtube open source sans prétention via cette image Docker :</p>\n<ul>\n<li><a href=\"https://github.com/QuantumObject/docker-cumulusclips\">QuantumObject/docker-cumulusclips</a></li>\n<li><a href=\"https://hub.docker.com/r/quantumobject/docker-cumulusclips\">Docker Hub</a></li>\n</ul>\n<p>Toujours via Argo Tunnel, je peux le rendre accessible publiquement :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NrH-LqSPtyXf70A9glt1aw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*CnlrRKPmzd_xDUrClddf0A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*hsuzyEOOYp7z-m6qwtLwrA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ncKECwZxO4eKmAIMxi_ZKA.jpeg\" /></p>\n<p>Il est possible d’utiliser Argo tunnel comme Ingress Controller dans un cluster Kubernetes (mais avec abonnement) :</p>\n<p><a href=\"https://developers.cloudflare.com/argo-tunnel/reference/kubernetes/\">Kubernetes Ingress Controller - Argo Tunnel</a></p>\n<p>```\n$ helm repo add cloudflare https://cloudflare.github.io/helm-charts\n$ helm repo update</p>\n<p>$ helm install --name anydomain --namespace default \\\n --set rbac.create=true \\\n --set controller.ingressClass=argo-tunnel \\\n --set controller.logLevel=6 \\\n cloudflare/argo-tunnel\n```</p>\n<p>et ce type de définition pour le manifest :</p>\n<p><code>apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n annotations:\n kubernetes.io/ingress.class: argo-tunnel\n labels:\n ingress: argo-tunnel\n name: echo\nspec:\n tls:\n - hosts:\n - echo.mydomain.com\n secretName: mydomain.com\n rules:\n - host: echo.mydomain.com\n http:\n paths:\n - backend:\n serviceName: echo\n servicePort: http</code></p>\n<p>Si je ne veux pas dépendre d’Argo Tunnel, je peux opter pour les nombreuses alternatives comme par exemple Serveo qui propose une implémentation on-premise :</p>\n<p><img alt=\"https://cdn-images-1.medium.com/max/1200/1*vmmanTM6K7ftqCiHwVXwxg.png\" src=\"https://cdn-images-1.medium.com/proxy/1*vmmanTM6K7ftqCiHwVXwxg.png\" /></p>\n<p><a href=\"http://serveo.net/\">Serveo: expose local servers to the internet using SSH</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Zt191kMajmqM-FYSuvII6w.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Q6bH6ri0IkwP1aWbYNvV8w.jpeg\" /></p>\n<p>Je pars d’une micro instance dans Outscale avec cette variante :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vKiOZDvyjTQ4r8coH6n7IA.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qRoSbkL_FFW0UEetyYJ-Tg.jpeg\" /></p>\n<p>```\noutscale@ip-10-9-5-245:~$ <strong>wget -c</strong> <a href=\"https://storage.googleapis.com/serveo/download/2018-05-08/serveo-linux-amd64\"><strong>https://storage.googleapis.com/serveo/download/2018-05-08/serveo-linux-amd64</strong></a></p>\n<p>--2019-06-19 14:40:53-- <a href=\"https://storage.googleapis.com/serveo/download/2018-05-08/serveo-linux-amd64\">https://storage.googleapis.com/serveo/download/2018-05-08/serveo-linux-amd64</a>\nResolving storage.googleapis.com (storage.googleapis.com)... 172.217.22.144, 2a00:1450:4007:815::2010\nConnecting to storage.googleapis.com (storage.googleapis.com)|172.217.22.144|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 3145352 (3.0M) [application/octet-stream]\nSaving to: ‘serveo-linux-amd64’</p>\n<p>serveo-linux-amd64 100%[========================================================================&gt;] 3.00M --.-KB/s in 0.04s</p>\n<p>2019-06-19 14:40:53 (76.8 MB/s) - ‘serveo-linux-amd64’ saved [3145352/3145352]</p>\n<p>outscale@ip-10-9-5-245:~$ <strong>chmod +rwx serveo-linux-amd64</strong> \noutscale@ip-10-9-5-245:~$ <strong>sudo mv serveo-linux-amd64 /usr/local/bin/serveo</strong></p>\n<p>outscale@ip-10-9-5-245:~$ <strong>vim key.rsa</strong>\noutscale@ip-10-9-5-245:~$ <strong>chmod 400 key.rsa</strong></p>\n<p>outscale@ip-10-9-5-245:~$ <strong>sudo serveo -private_key_path=key.rsa -port=2222 -http_port=80 -https_port=443 -domain=171-33-99-243.sslip.io</strong></p>\n<p>Listening on :2222...\n```</p>\n<p>J’ai lancé le serveur Serveo sur un domaine Wild Card pour l’exemple …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZLxEwZLGJTb8RYur1mUnNw.jpeg\" /></p>\n<p>Depuis mon instance sur le Scale Set, je peux lancer un tunnel persistant via Autossh vers le serveur Serveo depuis le load Balancer HAProxy généré précédemment avec Octavia :</p>\n<p>```\n$ <strong>eval \"$(ssh-agent -s)\"</strong>\nAgent pid 6770</p>\n<p>$ <strong>ssh-add ./key.rsa</strong> \nIdentity added: ./key.rsa (./key.rsa)</p>\n<p>$ <strong>sudo apt install autossh</strong></p>\n<p>$ <strong>autossh -p 2222 -M 0 -R fc:80:192.168.122.234:80 171-33-99-243.sslip.io</strong>\nWarning: Permanently added '[171-33-99-243.sslip.io]:2222,[171.33.99.243]:2222' (RSA) to the list of known hosts.\nWarning: no TLS certificate available for fc.171-33-99-243.sslip.io. You won't be able to use HTTPS, only HTTP.\nForwarding HTTP traffic from <a href=\"http://fc.171-33-99-243.sslip.io\"><strong>http://fc.171-33-99-243.sslip.io</strong></a>\nPress g to start a GUI session and ctrl-c to quit.\n```</p>\n<p>J’accède alors au démonstrateur via ce Tunnel et ce domaine Wild Card DNS (via sslip.io) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*osowAyL6Ysz0vtoORVwn5w.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3G4DIi3_T5_AXAAE3K-W5A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LfteHwMgBt9pNg1N4h2_QA.jpeg\" /></p>\n<p>Tout ceci peut être très utile pour la réalisation d’environnement de test par exemple …</p>\n<p>A suivre !</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/414/1*JEMqDSLoKwnNH40gyeMmqQ.jpeg\" /></p>", "published": "2022-11-27T10:59:09.105Z", "lastEdited": "2022-11-27T10:59:09.105Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160832.png", "source": "https://dev.to/deep75/cloudflare-argo-tunnel-accessible-gratuitement-aux-developpeurs-mise-en-oeuvre-avec-k3s-43jp", "stars": [], "saves": []}}, {"model": "main.post", "pk": 12, "fields": {"author": 31, "title": "Kontena Pharos 2.4", "slug": "kontena-pharos-24-12", "description": "Kontena Pharos 2.4, Kontena Network Loadbalancer / Universal Loadbalancer, Kontena Lens et K...", "content": "<hr />\n<p>title: Kontena Pharos 2.4\npublished: true\ntags: weave,kontena,docker,kubernetes\ncanonical_url: https://medium.com/@abenahmed1/kontena-pharos-2-4-7c81290d7122</p>\n<hr />\n<h3>Kontena Pharos 2.4, Kontena Network Loadbalancer / Universal Loadbalancer, Kontena Lens et Kontena Storage en action dans des instances Bare Metal de Scaleway …</h3>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*p-qSpMYjvOazPJQhTpwgvg.png\" /></p>\n<p><strong>Kontena Pharos 2.4</strong> a été annoncé avec des nouvelles fonctionnalités et une indépendance de la brique Kontena Lens en plus de la mise en oeuvre de la version 1.14.3 de Kubernetes :</p>\n<p><a href=\"https://blog.kontena.io/kontena-pharos-2-4-released/\">Kontena Pharos 2.4 Released</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*sNUURS5RDg7MU7kiR6QBRw.jpeg\" /></p>\n<p>Comme précédemment, je lance trois instances Bare Metal chez Scaleway de type ici C2L avec Ubuntu 18.04 LTS (dans la région d’Amsterdam) :</p>\n<p><a href=\"https://www.scaleway.com/fr/bare-metal-instances/\">Bare Metal Instances</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/931/1*UseR0S7kmZqrQXBQ9CWFZw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*rsq8UDNXJggfmYzS5KQyCQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/400/0*RLrhGfd7ZMKqRGZE.jpg\" /></p>\n<p>Pour déployer mon cluster Kubernetes, je vais donc utiliser cette nouvelle version de Kontena Pharos. On peut avoir accès au choix à la version communautaire sur github :</p>\n<p><a href=\"https://github.com/kontena/pharos-cluster\">kontena/pharos-cluster</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-qq7lyhbzzSrddIcYut4mg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*w3AvWhxE9tsHvDpjEZU00g.jpeg\" /></p>\n<p>ou Pro :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*p3_i0Z26RS_LWShpuKAQRA.jpeg\" /></p>\n<p><a href=\"https://pharos.sh/docs/editions.html\">Compare Editions · Kontena Pharos</a></p>\n<p><strong>Kontena Pharos OSS</strong> est la version de base et contient toutes les fonctionnalités essentielles pour profiter pleinement de Kubernetes à n’importe quelle échelle, sur n’importe quelle infrastructure. Il est 100% open source sous licence Apache 2. Vous pouvez l’utiliser gratuitement, pour n’importe quel usage.</p>\n<p><strong>Kontena Pharos PRO</strong> est basé sur Kontena Pharos OSS, mais possède plus de fonctionnalités et des fonctionnalités avancées. Il est commercial, mais vous pouvez l’évaluer gratuitement, tant que vous en avez besoin !</p>\n<p>Je commence par préparer mon fichier de configuration <em>cluster.yml</em> qui contient un certain nombre d’add-ons pris en charge par la version PRO de Kontena :</p>\n<p><a href=\"https://pharos.sh/docs/configuration.md\">Introduction · Kontena Pharos</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*DiNKZjAtTXb1dAvPAWX4Gw.png\" /><figcaption>cluster.yml</figcaption></p>\n<p>Au préalable j’ai appliqué ce script pour cloud-init au niveau de ces instances :</p>\n<p>```</p>\n<h1>!/bin/sh</h1>\n<p>apt install sudo iputils-ping -y</p>\n<p>echo \"root ALL=(ALL) NOPASSWD: ALL\" | tee /etc/sudoers.d/root</p>\n<p>yes | mkfs.ext4 /dev/sda</p>\n<p>mkdir -p /var/lib/docker</p>\n<p>fs_uuid=$(blkid -o value -s UUID /dev/sda)</p>\n<p>echo \"UUID=$fs_uuid /var/lib/docker ext4 defaults 0 0\" &gt;&gt; /etc/fstab</p>\n<p>mount -a\ncurl -s <a href=\"https://install.zerotier.com/\">https://install.zerotier.com/</a> | bash\nzerotier-cli join \\&lt;YOUR NETWORK-ID&gt;\n```</p>\n<p>Je dispose en effet d’un second disque de 250 Go sur ces instances (notamment à destination de Kontena Storage) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*CmaO019SXTmtvVo5HzkHOQ.jpeg\" /></p>\n<p>Ces instances sont ajoutées à ZeroTier (P2P VPN) sur un subnet privé où le mode Ethernet Bridging est activé (pour Kontena Network Load Balancer):</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*WD82Mi-26KmuSR1aEWJuvA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*2HMTi3-Kjdh9HBpu5q_5LQ.jpeg\" /></p>\n<p>et je lance le tout :</p>\n<p><code>$ pharos up -c cluster.yml</code></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-cTPOELYjF_q5S3rBmJ6Dw.png\" /></p>\n<p>Le cluster Kubernetes est alors disponible :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*gHAEf2KnTxt9PgiAnpXi6w.png\" /></p>\n<p>Je dispose de l’accès au dashboard de Kontena Lens :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4Ps8ktih0h3p2Gbv4Wuztg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vSrXlR1fQxLvSdMvfEr1QA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*IgrZ5cAkmV_xwBgPRaPaIg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*pdPF8HxZQksbTQJu-zr0Vw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dZ28I6tkbVGyvqFSVew3Xg.jpeg\" /></p>\n<p>J’ai déployé ici Kontena Storage qui reprend Rook (Ceph) dans le cluster ainsi qu’un dashboard associé. Pour rendre accessible ce dernier, je modifie le manifest de son service (pour le mettre en type Load Balancer via Kontena Netwok Balancer qui reprend MetalLB) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/814/1*8rPZEM3zW6I7p_dowg9pdQ.jpeg\" /></p>\n<p>Une adresse du pool du réseau privé de ZeroTier est attribuée de manière automatique par Kontena Network Load Balancer :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cVGVoo4Cv6vx202iK4PPng.jpeg\" /></p>\n<p>Permettant l’accès au dashboard. Le mot de passe associé à admin est récupéré ainsi :</p>\n<p><code>$ kubectl -n kontena-storage get secret rook-ceph-dashboard-password -o jsonpath=\"{['data']['password']}\" | base64 --decode &amp;&amp; echo</code></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*wAr7gTXKkOLE8innI4yJxw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jIliX1VbDvm1y7YkOifgIw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3e38bSLSqPdTmeFIF-Nodg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*hJjyaZM9yO-dK7fspZrodw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*R56Wl-EO42G7YGIjwBYQYA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TBegw0o6aTHB4aOlMcSKcA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qb9rHGmigrRhNTTbcvbPrw.jpeg\" /></p>\n<p>Je peux également utiliser la ligne de commande pour connaître l’état de santé du cluster Ceph :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*p4iB-5x-aQ2jAgK_E4IZjw.png\" /></p>\n<p>Kontena Lens offre la possibilité d’accéder à un catalogue de Charts pour y installer des applications dans le cluster Kubernetes :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*5pUcCvs3DYSoIlmpCuZezw.jpeg\" /></p>\n<p>Je modifie les paramêtres du Chart pour Weave Scope depuis un terminal de Kontena Lens en mettant un service de type Load Balancer encore une fois :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*PiC18fHBuo3OnzBhU0Q08A.jpeg\" /></p>\n<p>et déploiement :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Wntafl1RL5sYTpqFzWheRw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Opwch4stMhZFJ6aVIQdxBA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Drl6YD2Nk_dJL5KdNhXB_Q.jpeg\" /></p>\n<p>J’ai accès au visualiseur via Weave Scope déployé dans le cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6d0c0DEItHJsjbMXGTONfw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*QqLF9xJEj4_xj4_1VwNc1g.jpeg\" /></p>\n<p>Rook offre la possibilité (comme OpenEBS) de déployer par exemple Minio. J’ai déployé ici Minio en mode distribué dans le cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*DTzLI7uI7h-L9kOz_LPpKw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kjpFf9Zoz3hmZwVkeIttZA.jpeg\" /></p>\n<p>Je reprend les sources de mon chatbot FC pour le déployer en statique au sein d’un bucket dans Minio :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*BCQXGAmd6OOPlVDEkR6tIQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-emcm_83gJrzbt2jRJGueA.jpeg\" /></p>\n<p>Je réutilise Cloudflared Argo Tunnel pour rendre accessible publiquement ce Chatbot :</p>\n<p><a href=\"https://developers.cloudflare.com/argo-tunnel/quickstart/\">Getting Started - Argo Tunnel</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/884/1*y9Gf8ond71wM9Xb-aZyJ2A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*sEX876q1gnQf8jpH2a665g.jpeg\" /></p>\n<p><img alt=\"https://cdn-images-1.medium.com/max/1600/1*MFQGurn3NsytA1WKA_P8Zw.jpeg\" src=\"https://cdn-images-1.medium.com/proxy/1*MFQGurn3NsytA1WKA_P8Zw.jpeg\" /></p>\n<p>Le Chatbot est accessible via l’URL retournée par Argo Tunnel :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/776/1*bkR8r2fICEe9_cltGAh-Tg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/783/1*umxa7IViVICPsahi1cGZxw.jpeg\" /></p>\n<p>aux performances correctes :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FXmRFvRjsQwDlW5LKgSaSg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Hhq8MfsAIu-Y85__Q3m0bw.jpeg\" /></p>\n<p>Un autre test de “GitOps” via Flagger et Istio dans ce cluster. Je pars des sources offert via ce dépôt Github :</p>\n<p><a href=\"https://github.com/stefanprodan/gitops-istio\">stefanprodan/gitops-istio</a></p>\n<p>selon cette cinématique :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*cfn8b0-F19BdQAvZ.png\" /></p>\n<p>Isitio, Weave Flux, Flagger, Prometheus et Helm sont chargés dans le cluster :</p>\n<p>```\nkubectl -n kube-system create sa tiller</p>\n<p>kubectl create clusterrolebinding tiller-cluster-rule \\\n--clusterrole=cluster-admin \\\n--serviceaccount=kube-system:tiller</p>\n<p>helm init --service-account tiller --wait</p>\n<p>git clone https://github.com/\\&lt;YOUR-USERNAME&gt;/gitops-istio\ncd gitops-istio</p>\n<p><strong>./scripts/flux-init.sh git@github.com:\\&lt;YOUR-USERNAME&gt;/gitops-istio</strong>\n```</p>\n<p>Au démarrage, Weave Flux génère une clé SSH et enregistre la clé publique. La commande en gras ci-dessus imprimera la clé publique.</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4jTACW1itYh9cmPv-Olafw.jpeg\" /></p>\n<p>Pour synchroniser l’état de votre cluster avec git, il faut copier la clé publique et créer une clé de déploiement avec un accès en écriture sur son dépôt GitHub. Sur GitHub, sélectionner <em>Paramètres&gt; Déployer les clés</em>, cliquer sur <em>Ajouter une clé de déploiement</em>, cocher <em>Autoriser l’accès en écriture</em>, coller la clé publique Flux et cliquer sur <em>Ajouter une clé</em>.</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-SlrLBdfkzn7p5KedTEiXg.jpeg\" /></p>\n<p>Lorsque Weave Flux aura un accès en écriture à votre référentiel, il procédera comme suit:</p>\n<ul>\n<li>Il crée les espaces de noms istio-system et prod</li>\n<li>Il crée les CRD pour Istio</li>\n<li>Il installe Flagger avec Helm</li>\n<li>Il installe Grafana pour Flagger</li>\n<li>Il crée le déploiement du test de charge</li>\n<li>Il crée le déploiement frontal en mode canary</li>\n<li>Il crée le déploiement backend en mode canary</li>\n<li>Il crée la passerelle publique Istio</li>\n</ul>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*PQzsvyYenVc-2rG5.png\" /></p>\n<p>Lorsque Weave Flux synchronise le dépôt Git avec le cluster, il crée le déploiement front-end/backend, HPA et un objet en moide canary. Flagger utilise cette définition pour créer une série d’objets : Déploiements Kubernetes, services ClusterIP et services virtuels Istio :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jnvw_7KgmOkGe8KJa3tpkA.jpeg\" /></p>\n<p>Flagger détecte que la révision de déploiement a changé et lance un nouveau déploiement :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NaX9FJcx0t-oz5qonvmNEw.jpeg\" /></p>\n<p>Tout ceci est monitoré avec Grafana :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/714/1*ITv1JYdGuyvnji7KPP1lFg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/711/1*xQ7-SeqJL1rFEi9D5qGDDA.jpeg\" /></p>\n<p>et visualisable dans Weave Scope :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Fs5wjq5HuLvviIxeF-CtFg.jpeg\" /></p>\n<p>Ou dans Weave Cloud où il est possible d’initier un déploiement automatisé en mode GitOps (exemple ici avec le démonstrateur FC) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7Pkornk0xARTOuqcDu_ACQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*A1-5UrbLow2PblFwm6zdgw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*RKzfDH547kOxkZJWx0FAug.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bf8ZBlTkKiLNxCMD5-Y5vg.jpeg\" /></p>\n<p>J’effectue un changement sur son dépôt github du manifest de déploiement et détection automatique du changement intervenu puis redéploiement :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/963/1*zrE-mBGLen_CvS81i6zPzw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NeXDhl6AcGpqa75i7bMXBA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-k9w8AI6BsoGeHKqx7LGFg.jpeg\" /></p>\n<p>accompagné du monitoring :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*PIQ00q9iHrV6xwqgrO8X2w.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*riEy4FDsXahbWWQUZd1lFw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LoudQC9SHSC4K5ALUhpVow.jpeg\" /></p>\n<p>Le démonstrateur FC reste toujours accessible (via l’adresse IP fournie par Kontena Network Load Balancer) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*T7C3WtiwNzMjJ1I-Q9QTeA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*E639oM9vwq0KvXVW7nWRHA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4C0R0chrxwdjuwNTKYAEBA.jpeg\" /></p>\n<p>Pour terminer, je peux utiliser Kontena Universal Load Balancer qui reprend Akrobateo vu précédemment en modifiant le fichier <em>cluster.yml</em> au niveau des add-ons :</p>\n<p><code>addons:\n kontena-universal-lb:\n enabled: true</code></p>\n<ul>\n<li><a href=\"https://github.com/kontena/akrobateo\">kontena/akrobateo</a></li>\n<li><a href=\"https://medium.com/@abenahmed1/test-rapide-de-kontena-akrobateo-un-simple-op%C3%A9rateur-kubernetes-pour-exposer-les-services-e4080cf42eb4\">Test rapide de Kontena Akrobateo, un simple opérateur Kubernetes pour exposer les services…</a></li>\n<li><a href=\"https://pharos.sh/docs/addons/kontena-universal-lb.html\">Kontena Universal Loadbalancer · Kontena Pharos</a></li>\n</ul>\n<p>Pour cela, je repars d’un cluster d’instances Bare Metal dans Scaleway de type C2M:</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qYq-OR9p-2d24aZJLPD1hw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3vaOteMJdmWL9zkKNesE2w.png\" /></p>\n<p>Le déploiement terminé, Kontena Universal Load Balancer (Akrobateo) est installé (Akrobateo étant un simple opérateur Kubernetes permettant d’exposer les services LoadBalancer du cluster en tant que nœud hostPorts à l’aide de DaemonSets) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/1*zSAemz8hrPeBAf8MAJnhLw.png\" /></p>\n<p>et avec toujours Kontena Lens :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*C-whNjy1DbnKn9iixh3e6A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*pKbdlD982ByM5yUnZiClRQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*N8n3jaESNV5iadlJJYNnUQ.jpeg\" /></p>\n<p>A suivre ! …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/430/0*Zpfjs_HI7x2Rt2d7.jpg\" /></p>", "published": "2022-11-27T10:59:10.735Z", "lastEdited": "2022-11-27T10:59:10.735Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160833.png", "source": "https://dev.to/deep75/kontena-pharos-2-4-m3k", "stars": [], "saves": []}}, {"model": "main.post", "pk": 13, "fields": {"author": 31, "title": "Un rapide aperçu de l’intégration d’Istio dans Rancher Server 2.3 en mode Preview …", "slug": "un-rapide-apercu-de-lintegration-distio-dans-rancher-server-23-en-mode-preview-13", "description": "Un rapide aperçu de l’intégration d’Istio dans Rancher Server 2.3 en mode Preview …     Ranc...", "content": "<hr />\n<p>title: Un rapide aperçu de l’intégration d’Istio dans Rancher Server 2.3 en mode Preview …\npublished: true\ntags: rancher,istio,kubernetes,hetzner\ncanonical_url: https://medium.com/@abenahmed1/un-rapide-aper%C3%A7u-de-lint%C3%A9gration-d-istio-dans-rancher-server-2-3-en-mode-preview-301c8d9ab597</p>\n<hr />\n<h3>Un rapide aperçu de l’intégration d’Istio dans Rancher Server 2.3 en mode Preview …</h3>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LGh6cCFIAh5XPEux2t0wBQ.png\" /></p>\n<p>Rancher a donc annoncé dans on blog le support d’Istio avec Rancher 2.3 Preview 2. Istio et le maillage des services en général se sont développés dans l’écosystème de Kubernetes promettant d’ajouter la tolérance aux pannes, les déploiements en canary testing, l’A/B testing , la surveillance des métriques, le traçage, l’observabilité ou l’authentification. Ceci permettant d’éliminer le besoin pour les développeurs d’instrumenter ou d’écrire du code spécifique pour activer ces fonctionnalités. Ils peuvent donc se concentrer sur leur logique métier et laisser le reste à Kubernetes et Istio :</p>\n<ul>\n<li><a href=\"https://rancher.com/blog/2019/announcing-istio-preview\">Announcing Preview Support for Istio</a></li>\n<li><a href=\"https://rancher.com/docs/rancher/v2.x/en/project-admin/istio/\">How to Use Istio in Your Project</a></li>\n</ul>\n<p>Je pars ici avec trois instances dans Hetzner Cloud avec Ubuntu 18.04 LTS et un fichier simple <em>cloud-init</em> qui permet la préinstallation de Docker et la connexion à ZeroTier :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YNhEmASoXGk_ClSSahbO5Q.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*GIMz4j5tCCjjM8q8C6rRGQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*15KeSNZBYTWlXqYhZflNLA.jpeg\" /></p>\n<p><a href=\"https://www.hetzner.com/cloud\">Truly thrifty cloud hosting - Hetzner Online GmbH</a></p>\n<p>J’utilise Rancher RKE version 0.3.0-rc3 pour provisionner un cluster Kubernetes avec ces trois instances :</p>\n<p><a href=\"https://github.com/rancher/rke\">rancher/rke</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3UDNSweGOPpH_GnmeYlQXw.jpeg\" /></p>\n<p>via ce fichier de configuration :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/908/1*TFZ_5DhXLybNJ-N3mP4HFA.png\" /><figcaption>rancher-cluster.yml</figcaption></p>\n<p>Je lance l’installation (ici j’ai théoriquement un cluster HA avec les trois rôles appliqués sur chaque noeud du cluster) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/400/0*yOH0Vg7up5MTSwyg.jpg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ml7xkZOWzmL6REQhY8upww.png\" /></p>\n<p>Le cluster est opérationnel :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ILey1N2TBMMYP_1lnBesYQ.png\" /></p>\n<p>Je peux procéder à l’installation d’Helm :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*idQ4Td3RDBi-8poGaZvaqA.png\" /></p>\n<p>et de MetalLB pour le load balancing :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ygl8NNMBgShP3tswDbszkg.png\" /></p>\n<p>accompagnée de cette configuration pour les adresses attribuées via ZeroTier :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/611/1*QJyuFDvSHIg2_oWIj2QXYg.jpeg\" /><figcaption>config.yaml</figcaption></p>\n<p>Parallèlement, je lance une instance Ubuntu 18.04 LTS dans Outscale qui servira au lancement du serveur Rancher 2.3 Alpha 5 :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*w5XDixjmadbpCc5zFPTYoQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kP-mTMxXZXWagN6NF5gtJw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4pfm3-yCZ0ocTzagaf3zdg.jpeg\" /></p>\n<p>Je procède à l’import du cluster précédemment déployé avec les instances d’Hetzner Cloud dans le serveur Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*icvW7g6HP7G3cIwzvDcBcw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*84pFfEMC469Zm042tSC6XQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VpYuh-bnAEFu1j_sVXwyhg.png\" /></p>\n<p>Le cluster est bien importé et visible avec ses métriques :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Mkdn2WYXH8WwGwH3siViYA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4ppvWxv2dmpSp0CyAJsE3w.jpeg\" /></p>\n<p>Je peux activer Istio depuis le dashboard du serveur Rancher en quelques clics :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ut5JzUFyb2bhmcxovYjjjA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*zWsPk9-E4Cw2oa-_Ip5xVg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ki3Mip6C3eLVUuLwtwcYow.jpeg\" /></p>\n<p>On observe qu’en plus d’Istio on a la présence de Kiali, Jaeger, Grafana et Prometheus …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8J8TNhFgP02O3tnGVXt-pg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UfH8XmOQhz_tfu9_FeNpwg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uAfQ6vqPJhf15c-LDV7k_Q.jpeg\" /></p>\n<p>Rapide test avec le déploiement de l’exemple d’une application proposé par le site d’Istio composé de quatre microservices distincts afin de démontrer les différentes fonctionnalités d’Istio. L’application affiche des informations sur un livre, comme une simple entrée de catalogue d’une librairie en ligne. La page affiche une description du livre, les détails du livre (ISBN, nombre de pages, etc.) et quelques critiques de livres :</p>\n<p><a href=\"https://github.com/istio/istio/tree/master/samples/bookinfo\">istio/istio</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*hCyTxdDIILNrrO0aJIEiQg.png\" /></p>\n<p>Le détail du déploiement apparaît dans le dashboard du serveur Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*hLQy9q16cFQyQlzZSxmTAg.jpeg\" /></p>\n<p>avec le tracing dynamique proposé dans Kiali (accompagné en exemple du déploiement de Knative Serving dans le cluster) :</p>\n<p><a href=\"https://knative.dev/docs/install/knative-with-gloo/\">Knative Install using Gloo on a Kubernetes Cluster</a></p>\n<iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FZBE0zpQwIjqNVxPPAW%2Ftwitter%2Fiframe&amp;url=https%3A%2F%2Fgiphy.com%2Fgifs%2FZBE0zpQwIjqNVxPPAW&amp;image=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FZBE0zpQwIjqNVxPPAW%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy\" width=\"435\" height=\"250\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/982093fcb837182b199cb65d1c6f5cb2/href\">https://medium.com/media/982093fcb837182b199cb65d1c6f5cb2/href</a></iframe>\n\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*arnw_jYATWQ81n5DywxnrA.jpeg\" /></p>\n<p>ou directement dans le dashboard :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VVqYuG_bWhE-4PCJDaHNMg.jpeg\" /></p>\n<p>A suivre ! …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/482/1*J3uGdQpr75CtJNiTYSzjjQ.jpeg\" /></p>", "published": "2022-11-27T10:59:12.267Z", "lastEdited": "2022-11-27T10:59:12.267Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160834.png", "source": "https://dev.to/deep75/un-rapide-apercu-de-l-integration-d-istio-dans-rancher-server-2-3-en-mode-preview-36e7", "stars": [], "saves": []}}, {"model": "main.post", "pk": 14, "fields": {"author": 31, "title": "Weave Ignite et Weave Footloose dans Scaleway : quand les machines virtuelles se prennent pour des…", "slug": "weave-ignite-et-weave-footloose-dans-scaleway-quand-les-machines-virtuelles-se-prennent-pour-des-14", "description": "Weave Ignite et Weave Footloose dans Scaleway : quand les machines virtuelles se prennent po...", "content": "<hr />\n<p>title: Weave Ignite et Weave Footloose dans Scaleway : quand les machines virtuelles se prennent pour des…\npublished: true\ntags: scaleway,weave,containers,kubernetes\ncanonical_url: https://medium.com/@abenahmed1/weave-ignite-et-weave-footloose-dans-scaleway-quand-les-machines-virtuelles-se-prennent-pour-des-e28f5312a59f</p>\n<hr />\n<h3>Weave Ignite et Weave Footloose dans Scaleway : quand les machines virtuelles se prennent pour des containers et inversement …</h3>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/749/0*naSE2FI_HbGQ-0dK.png\" /></p>\n<p>Weave a mis au point Ignite sur la base de Firecracker qui a la possibilité comme Docker de gérer les containers runC. Ignite construit des images de machines virtuelles à partir d’images OCI et peut gérer efficacement plusieurs machines virtuelles.</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/742/1*54k7ytMLIGcVxls87Y7KoQ.jpeg\" /></p>\n<p>L’idée est qu’Ignite fait ressembler les VM Firecracker à des containers Docker. Les images utilisées sont des images Docker, mais au lieu de les exécuter dans un container, le système de fichiers racine de l’image s’exécute comme une VM réelle avec un noyau dédié et /sbin/init comme PID 1.</p>\n<p><a href=\"https://firecracker-microvm.github.io/\">Firecracker</a></p>\n<p>La mise en réseau s’effectue automatiquement, la VM obtient la même adresse IP que n’importe quel container docker sur l’hôte. La construction et le démarrage des VMs ne prennent au plus que quelques secondes. Avec Ignite, on peut commencer à utiliser Firecracker en un rien de temps …</p>\n<p><a href=\"https://github.com/weaveworks/ignite\">weaveworks/ignite</a></p>\n<p>Pour cette expérience, je profite de l’annonce faite par Scaleway de mettre à disposition ses instances General Purpose à base d’AMD EPYC dans la région d’Amsterdam :</p>\n<p><a href=\"https://blog.scaleway.com/2019/nouvelles-instances-cloud-ams1-nouveautes-a-venir/\">Nouvelles instances cloud à Amsterdam &amp; tour d'horizon des nouveautés à venir</a></p>\n<p><img alt=\"https://cdn-images-1.medium.com/max/1600/1*Rc0Cq4_X3UjSkQXUvO0_wg.jpeg\" src=\"https://cdn-images-1.medium.com/proxy/1*Rc0Cq4_X3UjSkQXUvO0_wg.jpeg\" /></p>\n<p>Ces instances permettent l’usage de la virtualisation imbriquée (même s’il n’y a rien d’officiel sur ce point) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*35Kvu5NZjrCRtzH0r3e1Jg.jpeg\" /></p>\n<p>Cette instance lancée, je récupère le binaire Ignite depuis son dépôt sur Github :</p>\n<p><a href=\"https://github.com/weaveworks/ignite/releases\">weaveworks/ignite</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*94dIzHV7FOdB15v52GIjCw.jpeg\" /></p>\n<p>Au préalable, il faut procéder à l’installation du moteur Docker :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*EdS_3cygbgbXwARVoOivWA.png\" /></p>\n<p>Rapide avec le lancement d’une microVM Ubuntu 18.04 :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/0*wnvmt5SMxTMgOtVw.jpg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xsPwpLlM_bXsgAg_aqIJKg.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FNSE2ZPqCfhN7U69N6IodA.png\" /></p>\n<p>J’y ai lancé un serveur Nginx qui répond en utilisant ici un tunnel Cloudflare Argo :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/952/1*KLcrdTCH629gnSyfpBsobw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Yvl5rWC-2J4x8tbIzDPAHw.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*l_Dh2KFAPM6BdJ4N6TKkmQ.jpeg\" /></p>\n<p>Je peux supprimer ce déploiement via quelques commandes :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4ycOXETd4dm7rREO3NYsrQ.png\" /></p>\n<p>Je passe à un test plus compliqué avec le déploiement d’un cluster Kubernetes en mode HA via Kubeadm :</p>\n<p><a href=\"https://github.com/weaveworks/ignite/tree/master/images/kubeadm\">weaveworks/ignite</a></p>\n<p>Je lance un script de préparation avant le lancement des VMs :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*IuGlX2FfU8GHJA_MnY0vQg.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cDko8tB30iBkf4TmA5wDtA.png\" /></p>\n<p>Lancement du premier noeud maître du cluster via une image contenant Kubeadm :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*RtqTHHos-qajyc8utp5cMg.png\" /></p>\n<p>et initialisation de ce noeud avec Kubeadm :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*M4m_IU59910vZkhKOHB9Cw.png\" /></p>\n<p>Récupération du client kubectl et le premier noeud maître du cluster est opérationnel :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6be7xQeuSCtDtwH6swhZbQ.png\" /></p>\n<p>Lancement des deux autres noeuds maîtres :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jialYlc0BWGaP5G3d4VNlg.png\" /></p>\n<p>et raccordement de ces derniers au premier noeud maître du cluster pour initier ce mode HA :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7rzsZLx3s57Du2keBWLcqQ.png\" /></p>\n<p>Le cluster est prêt à recevoir ses noeuds Worker :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LB3XE_QSE9sRC3HgQYWlIQ.jpeg\" /></p>\n<p>Pour cela création de trois noeuds Worker :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dt0SNEyMMvtallezil57tg.png\" /></p>\n<p>et raccordement de ces derniers au cluster via Kubeadm :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FzGT9dGVpT3xBmAHj4mU0g.png\" /></p>\n<p>Le cluster Kubernetes sur la base de ces microVMs Ignite est fonctionnel :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Joz8KSE--WGK9s0QTyWOTA.jpeg\" /></p>\n<p>Via Cockpit je peux visualiser ces MicroVMs comme de simples containers :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xZd-bUJ3nhatZxH2kq1ZaA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-b7TPzEpjzqfYUD5rVlRmg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ykd3dafZZVzZGf93h0pfrg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Fzt5aRQDv0E689sbAIOGBA.jpeg\" /></p>\n<p>Je peux importer ce cluster dans un serveur Rancher préalablement déployé pour la circonstance :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3qnH-Mc-1YKtYOu4ebDWGA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qQYIxfbiKo8e_QpmsFexQA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*GESFrcjoK2r8n0EUM2d56Q.jpeg\" /></p>\n<p>Le cluster est alors importé et visualisable dans le dashboard du serveur Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*A4E19aizDmttK9D-IT7zzQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Iey_wAIJ4dOHxqmzn7Vy6A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*pNsRLwQ5hlT8Q1tyqXDnmA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ORaTjNHX2NkIFKavi07q2A.jpeg\" /></p>\n<p>avec Grafana pour le monitoring :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4eSnk01bhk6gzJu_Ic-QHg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ug7W7-EW-WuwuKl_ULAu0A.jpeg\" /></p>\n<p>Dans une logique ChatOps, installation de BotKube :</p>\n<ul>\n<li><a href=\"https://www.botkube.io/usage/\">Usage :: BotKube</a></li>\n<li><a href=\"https://github.com/infracloudio/botkube\">infracloudio/botkube</a></li>\n</ul>\n<p>Un bot lié à Slack va permettre l’exécution de commandes ou la réception d’infos de monitoring selon ce principe :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/901/0*AKzEbGzry2uRAd-7.jpg\" /></p>\n<p>Activation de l’application dans Slack :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6dKWH8osV3I3IJH2-qONjQ.jpeg\" /></p>\n<p>puis déploiement dans le cluster Kubernetes installé précédemment :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*INfhqkUd1igyII01WpFMLQ.png\" /></p>\n<p>Le bot répond et peut interagir ici dans un canal de Slack :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*R67QHDuxo61IJfJZfntrOA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*tLxm6A_UoRnrrs1TsGFA9Q.jpeg\" /></p>\n<p>Déploiement encore une fois dans le cluster du démonstrateur FC :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*wpkPMoQLCyqJ_-6Qw1y0tg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dnYyN4qb-iD4Vlz0UGfNTg.jpeg\" /></p>\n<p>vu par le Bot :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jCzI4PQxZGfwwlrYoLLvuw.jpeg\" /></p>\n<p>Et lancement d’un container Docker avec HAProxy via ce fichier de configuration (le serveur pointe sur les noeuds Ignite et le NodePort du service associé au démonstrateur FC au sein du cluster) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*WfCkN4Ea6lSTwHobTpsd3Q.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dJ1ajNbOCnoQKXnO-IFM4g.jpeg\" /></p>\n<p>Cloudflare Argo et son tunnel permet d’exposer publiquement le démonstrateur :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bpsNaYB3U8Lv-Z4T541WwQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*2e715UHlQ37HeHfZZBqc1Q.jpeg\" /></p>\n<p>Il est possible également d’utiliser le service de Load Balancer offert par Scaleway :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vzXM-jeE_tgBJSctHdxBRg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*1Rlvm-Jj_aKPn5umbj4KNw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*iBagNuiiDo9P6nKaDk_GhA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LBLJEQZ63sHUpTuE9g-jxg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*84x5ZrV9_nQf3CEXJkP68g.jpeg\" /></p>\n<p>On a vu les VMs qui se prennent pour des containers avec Weave Ignite et bien passons aux Containers qui se prennent pour des VMs avec l’utilisation cette fois-çi de Weave Footloose :</p>\n<p><a href=\"https://github.com/weaveworks/footloose\">weaveworks/footloose</a></p>\n<p>Weave Footloose crée des containers qui ressemblent à des machines virtuelles. Ces containers s’exécutent en tant que PID 1 et un démon ssh peut être utilisé pour se connecter à ces derniers. Ils se comportent quasiment comme une VM, il est même possible d’y faire tourner un moteur Docker. Pour cela utilisation d’une autre instance AMD EPYC de Scaleway avec ubuntu 18.04 LTS dans la région d’Amsterdam :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bEyw_CA7Ib5SYYv0cSTAmw.jpeg\" /></p>\n<p>Récupération du binaire Footloose depuis son dépôt sur Github :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*unTqd-F4CTVOK6jg-ZofCw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*KK1Oyx8pagC24jaUW07oUw.jpeg\" /></p>\n<p>Tout commence par la création d’un fichier de configuration YAML nommé <em>footloose.yaml</em> . Footloose lit une description du cluster de Machines à créer à partir de ce fichier. Un autre nom peut lui être spécifié en ligne de commande avec l’option — <em>config</em> ou via la variable d’environnement <em>FOOTLOOSE_CONFIG .</em> Lancement ici d’une instance CentOS 7 avec Footloose autorisant l’exécution d’un moteur Docker en mode privilégié :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*LBUF-B78BTEHx1jhfefv6w.png\" /></p>\n<p>Je lance cette instance Footloose (qui est en réalité un container Docker) mais qui se gère donc ici comme une machine virtuelle.</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*j1xjDFj5GYq7DcBkVroVBQ.jpeg\" /></p>\n<p>Même test que précemment avec l’installation d’un serveur Nginx via son image Docker (j’ai donc un container qui tourne dans un container) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/744/0*LcazMmxrB9rRAGWh.jpg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*0CTgFoqlfVQrJr-OUUAP5g.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*M24sXQVrgkkGFB7It8hhRg.jpeg\" /></p>\n<p>Je peux exposer ce serveur Nginx encore une fois via Cloudflare Argo :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*C9fjPP6SaCe3bqG3e-Jr_A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1013/1*NOUoKlmuR01YIeucaBsZfg.jpeg\" /></p>\n<p>Test cette fois avec l’initialisation d’un cluster Kubernetes via Rancher k3s dans trois instances Footloose :</p>\n<ul>\n<li><a href=\"https://github.com/rancher/k3s\">rancher/k3s</a></li>\n<li><a href=\"https://k3s.io/\">k3s: Lightweight Kubernetes</a></li>\n</ul>\n<p>via ce fichier YAML :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/530/1*PR6BMjREJ_n7cX4T-HoJXw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cl4ky_hLw2GvWdRQnYj-Yw.jpeg\" /></p>\n<p>dans la première instance, lancement du noeud maîre du cluster avec l’installation au préalable d’un moteur Docker :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*pZRkJb9TbQQN8IKUPoGJsw.jpeg\" /></p>\n<p>puis lancement de k3s :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*eDqvWpCysnUFxlIeKS6_6Q.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bSsnJyhJWVNp5sX984scDw.jpeg\" /></p>\n<p>Je raccorde les deux autres instances comme noeuds Worker du cluster encore une fois via k3s et l’installation au préalable d’un moteur Docker :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*gazjEfBXxLgjFrB8y2a2Cw.jpeg\" /></p>\n<p>Le cluster est alors opérationnel :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*fJ8XM-0PG6Hhp8oPE-_dcw.jpeg\" /></p>\n<p>et donc importable dans le serveur Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3QoQEP8gScKYBBL7gg-phw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NIyHaSWE7PBNXMjbMGBNmA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VXf43q5wmmNL6kIdcnSl1g.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Hl2uCTNVLmzepdNbTtVgWw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*pI6o9GiEY9eznJVuRbLYQQ.jpeg\" /></p>\n<p>Je relance le déploiement du démonstrateur FC dans ce cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Xz_U_b8ieE8F5NiwgHXGLg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Qt8irtSXygUGxKOaytGvsw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3XBEna4vJ858ogzED5xFxQ.jpeg\" /></p>\n<p>Il est accessible sur le port TCP 11111 sur chaque noeud du cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AcdyYZz66DBlWOHcgjRcqg.jpeg\" /></p>\n<p>lancement comme précédemment d’un container Docker HAProxy en load balancer pointant sur ce port spécifique sur les trois noeuds :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/908/1*eQ2ifDeuUp08GuQiie-IMw.png\" /><figcaption>haproxy.cfg</figcaption></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8QBefHmU80W6WNq2_gMNeA.jpeg\" /></p>\n<p>Il répond sur le port TCP 80 de l’instance dans Scaleway :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*IqqY-TjW3cHS5aP5CIRLYw.jpeg\" /></p>\n<p>Je peux l’ajouter en nouveau back-end dans le load balancer précédent dans Scaleway pour arriver à ce résultat :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*tjHAwGAvc_YYIhbhPJfxPA.jpeg\" /></p>\n<p>Je complète donc la configuration du load balancer créé dans Scaleway :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UvZ5J6Lbny3ewF3nR9eWzA.jpeg\" /></p>\n<p>Je n’ai plus qu’un seul endpoint qui pointe sur les deux démonstrateurs (l’un dans un cluster k8s avec Weave Ignite, l’autre avec le cluster k8s s’appuyant sur Weave Footloose) …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FsqfL223XGHYQRvN8VMuqQ.jpeg\" /></p>\n<p>A suivre !</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/730/0*of3IR8S29mngq7Vd.jpg\" /></p>", "published": "2022-11-27T10:59:14.285Z", "lastEdited": "2022-11-27T10:59:14.285Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160835.png", "source": "https://dev.to/deep75/weave-ignite-et-weave-footloose-dans-scaleway-quand-les-machines-virtuelles-se-prennent-pour-des-217l", "stars": [], "saves": []}}, {"model": "main.post", "pk": 15, "fields": {"author": 31, "title": "Apprentissage machine évolutif en Python avec Dask et Kubernetes …", "slug": "apprentissage-machine-evolutif-en-python-avec-dask-et-kubernetes-15", "description": "Apprentissage machine évolutif en Python avec Dask et Kubernetes …     Dask est une biblioth...", "content": "<hr />\n<p>title: Apprentissage machine évolutif en Python avec Dask et Kubernetes …\npublished: true\ntags: docker, datascience, machinelearning, scaleway\ncanonical_url: https://medium.com/@abenahmed1/apprentissage-machine-%C3%A9volutif-en-python-avec-dask-et-kubernetes-201614e84e95</p>\n<hr />\n<h3>Apprentissage machine évolutif en Python avec Dask et Kubernetes …</h3>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*KBecEMQfFuZrti8yoWww5w.jpeg\" /></p>\n<p>Dask est une bibliothèque flexible pour le calcul parallèle en Python. Dask fournit une interface de planification des tâches, permet le calcul distribué en Python avec accès à la pile PyData. Dask fonctionne avec une faible surcharge, une faible latence et une sérialisation minimale nécessaire pour des algorithmes numériques rapides et s’exécute de manière résiliente sur des clusters avec des milliers de cœurs. Dask peut s’installer et utiliser un ordinateur portable en un seul processus. Conçu pour l’informatique interactive, Dask fournit une rétroaction et des diagnostics rapides :</p>\n<p><a href=\"https://docs.dask.org/en/latest/\">Dask - Dask 2.1.0 documentation</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/487/0*o-Tia-fCzYMiVuve.png\" /></p>\n<p>Il est possible de lancer un scheduler Dask, des Workers et un serveur de Notebook Jupyter sur un cluster Kubernetes facilement en utilisant Helm.</p>\n<p><a href=\"https://docs.dask.org/en/latest/setup/kubernetes.html\">Kubernetes - Dask 2.1.0 documentation</a></p>\n<p>Dask déploie des workers Dask sur un cluster Kubernetes en utilisant les API Kubernetes natives. Ceci afin de lancer dynamiquement des déploiements de workers de courte durée pendant la durée de vie d’un processus Python.</p>\n<p><a href=\"https://kubernetes.dask.org/en/latest/\">Dask Kubernetes - Dask Kubernetes 0.9.0 documentation</a></p>\n<blockquote>\n<p>Actuellement, Dask est conçu pour être exécuté à partir d’un pod sur un cluster Kubernetes qui a les permissions de lancer d’autres pods. Cependant, Dask peut également fonctionner avec un cluster Kubernetes distant (configuré via un fichier kubeconfig) à condition qu’il soit possible d’ouvrir des connexions réseau avec tous les nœuds du cluster distants :</p>\n</blockquote>\n<p><a href=\"https://ramhiser.com/post/2018-05-28-adding-dask-and-jupyter-to-kubernetes-cluster/\">Adding Dask and Jupyter to a Kubernetes Cluster</a></p>\n<p>Pour cette expérience, je pars d’instance AMD EPYC chez Scaleway :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*7hujJVsSBp2pQaPr.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*qyrKU4eRST7DVefX.png\" /></p>\n<p>Deploiement de quatre noeuds pour la constitution rapide d’un cluster Kubernetes via Rancher encore une fois :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vjKYTf1kaDK6XziOCkY4IQ.jpeg\" /></p>\n<p>accompagné de ce script au démarrage :</p>\n<p>```</p>\n<h1>!/bin/bash</h1>\n<p>curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\nusermod -aG docker ubuntu\ncurl -s https://install.zerotier.com | bash\nzerotier-cli join <NETWORK ID>\n```</p>\n<p>Déploiement du serveur Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*RZJcnDjcr-7KRzZGEHxm5Q.jpeg\" /></p>\n<p>qui une fois actif me permet de définir un cluster Kubernetes en mode HA :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*I7HM4aGUoMbtQ_BSP0yJ9Q.jpeg\" /></p>\n<p>Déploiement des noeuds du cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*EzjVAnL7Ls-GdbH7dAxOrA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YubG8K6vY3MM6pSg_76KGQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ac_CfHEsxdixNK890ifgOA.jpeg\" /></p>\n<p>Le cluster Kubernetes est alors prêt :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ixQQDBVBx4lPsqFwvIhQpA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3QkRtHiEdnMx5OQMOqDoMw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7D4R-Tk8A61DBvGIUxKjsg.jpeg\" /></p>\n<p>Pour profiter d’un service de Load Balancing dans ce cluster, comme précédemment je déploie MetalLB :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*z2qNn5xhmsoGNjbRNxHlbw.jpeg\" /></p>\n<p>avec cette configuration :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_DV6DJxV1jJ-uOQgfkOdew.jpeg\" /></p>\n<p>qui résulte du plan d’adressage fournie par ZeroTier qui est déjà lié aux noeuds existants du cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qwqb4qUqPz_8bRfw7M88Nw.jpeg\" /></p>\n<p>Pour déployer Dask dans ce cluster, j’installe au préalable Helm :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ho9Izx2YgfIVRgrBRf5KUQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*nLdjra7R729Iuf1epPXbFA.jpeg\" /></p>\n<p>que l’on récupère dans son dépôt sur Github :</p>\n<p><a href=\"https://github.com/helm/helm/releases\">helm/helm</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/917/1*VsPwOtNGW609J9x3IzfPXw.jpeg\" /></p>\n<p>Je peux procéder à l’installation de Dask dans ce cluster Kubernetes avec son Scheduler, ses Workers et son serveur de Notebook Jupyter Lab :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/546/1*2vZApgJ9qDSGAuaP9mxo8Q.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Cn5PBnWkOLmcwAeapkDZ8g.png\" /></p>\n<p>On peut alors voir les éléments déployés par Dask :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*BHhwm1RK9j8jYLZGH4pFjw.png\" /></p>\n<p>dans cette structure :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*5RoH2a3QW1380koEPNLW8Q.jpeg\" /></p>\n<p>Via les adresses IP fournies par MetalLB dans le cluster, je peux accéder au serveur Jupyter Lab :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*PVwm1O6mYYSi4Tdet5O5qQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xsxleBtY85LXvVFSaaR_uQ.jpeg\" /></p>\n<p>mais également à l’interface web du Scheduler :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jp095-ln51Wd6tkAMFU0Jg.jpeg\" /></p>\n<p>Les graphes dans l’interface web du Scheduler sont fournis via Bokeh, une bibliothèque de visualisation interactive :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*GzGHUTTCVTHvJ2ho3XsFBg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8n6tOcxOTTsg4-3gEkT2lA.jpeg\" /></p>\n<p>Des éléments d’information que l’on retrouve également sur le serveur Jupyter Lab :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TmGvdAcsTF8AH0rMAHTppQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UACgkxj4_GENfdzqjvoy1g.jpeg\" /></p>\n<p>Test rapide de Dask avec ce notebook qui crée un tableau et calcule sa moyenne :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*zteh0gkZ7DEgKIacD3v6kw.jpeg\" /></p>\n<p>avec visualisation des tâches qui en résultent :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Udbt6OpyZaIGSydoaZyA6Q.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*EBv_x3hb8zj40u7tnNy96w.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ob_4hcDIBudQcty-G32ZdQ.jpeg\" /></p>\n<p>Je peux modifier le nombre de workers Dask dans le cluster Kubernetes toujours via Helm via un fichier de configuration :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8SJdf7FunohO21rnFAbjiQ.png\" /><figcaption>config.yaml</figcaption></p>\n<p>Je mets ici à jour mon cluster Kubernetes avec quinze workers pour Dask :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7MpSAx6Ld20h1tzjDq4kiQ.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*naKhfMMljMuzsnv_jyU_zQ.jpeg\" /></p>\n<blockquote>\n<p>Pour tester les capacités de calcul parallèle offerte par Dask, je vais reprendre ce Notebook sur la stratégie marketing des banques portugaises et qui utilise pour cela TPOT, un outil d’apprentissage machine automatisé en Python qui optimise les pipelines d’apprentissage machine en utilisant la programmation génétique :</p>\n</blockquote>\n<p><a href=\"https://epistasislab.github.io/tpot/\">Home - TPOT</a></p>\n<iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FL2lmcp4SsZUMYEc75x%2Ftwitter%2Fiframe&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FL2lmcp4SsZUMYEc75x%2Fgiphy.gif&amp;image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FL2lmcp4SsZUMYEc75x%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy\" width=\"435\" height=\"255\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/6c65491e3e820a42bd51a0711d81b05e/href\">https://medium.com/media/6c65491e3e820a42bd51a0711d81b05e/href</a></iframe>\n\n<p>Les données exploitées dans ce Notebook sont liées aux campagnes de marketing direct d’une institution bancaire portugaise. Les campagnes de marketing étaient basées sur des appels téléphoniques. Souvent, plus d’un contact avec le même client était nécessaire pour savoir si le produit (dépôt bancaire à terme) serait souscrit (‘oui’) ou non (‘non’) :</p>\n<p><a href=\"https://github.com/EpistasisLab/tpot/tree/master/tutorials/Portuguese%20Bank%20Marketing\">EpistasisLab/tpot</a></p>\n<p>J’installe au préalable Scikit-learn, une bibliothèque libre Python destinée à l’apprentissage automatique et conçue pour s’harmoniser avec d’autres bibliothèques libres Python, notamment NumPy et SciPy. Ainsi que Dask-ML qui fournit un apprentissage machine évolutif en Python à l’aide de Dask et de bibliothèques d’apprentissage machine populaires comme Scikit-Learn :</p>\n<p><a href=\"https://ml.dask.org/\">Dask-ML - dask-ml 1.0.1 documentation</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*eO8sMnEJjsitvMpsl1S9nA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-pBTdwWgOqpjfCAnbsGT0g.png\" /></p>\n<p>Je peux exécuter mon Notebook :</p>\n<p><a href=\"https://hub.gke.mybinder.org/user/deep75-c46d056c-f9777745e6f9b5c-btjwzajc/notebooks/portuguese-bank-tpot.ipynb#\">Jupyter Notebook</a></p>\n<iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/2cfbba4798f4409a0a2bf262fc835faa/href\">https://medium.com/media/2cfbba4798f4409a0a2bf262fc835faa/href</a></iframe>\n<iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FXck5Q2p5tdrSr2o9LZ%2Ftwitter%2Fiframe&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FXck5Q2p5tdrSr2o9LZ%2Fgiphy.gif&amp;image=https%3A%2F%2Fi.giphy.com%2Fmedia%2FXck5Q2p5tdrSr2o9LZ%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy\" width=\"435\" height=\"250\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/b5cb221c8657f83fe2bd87832397491d/href\">https://medium.com/media/b5cb221c8657f83fe2bd87832397491d/href</a></iframe>\n\n<p>Dernier exemple avec ParallelPostFit et Scikit-learn pour paralléliser et distribuer les étapes de notation ou de prédiction via ce Notebook :</p>\n<p><a href=\"https://hub.gke.mybinder.org/user/deep75-acb5803a-3b8608291763acd-d30z3nz0/notebooks/parallel-scikit-learn.ipynb\">Jupyter Notebook</a></p>\n<iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/790a120de5df256f34a0da40fab4a2b8/href\">https://medium.com/media/790a120de5df256f34a0da40fab4a2b8/href</a></iframe>\n\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*EyLApMgT8bLU51QpaPjfkw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*lnTlPSTsX2nyz9qJTkvbrg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*tt0iwS6PWadhEGkWXSCV8Q.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*DEg6CVE1_C6g6CQR7KNW6A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*s4cvoUP4gNFjHvfGXFr9Gw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*i3xekz6XhYSQe6KIkwXfpQ.jpeg\" /></p>\n<p>Il est possible de mettre à l’échelle le nombre de workers Dask directement depuis le serveur de Notebook Jupyter Lab :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1004/1*sEz96zHul9FeiFt369NMGA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*RGu3WtBsBj4REOGqiinM3g.jpeg\" /></p>\n<p>L’utilisation du serveur Rancher permet de bénéficier du monitoring du cluster (et donc de ces workers Dash) via Grafana et Prometheus :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*sQ1upwOwoobWaCgfmFIZeQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*h120M8K0cqpmXr_HjVoZ1A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*1s0yBY0wQGh9Sdxb2mc-qQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*siCsJDVscPgTVIKpGzkZWg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UGPBy-ptds9arGfTuXRS1A.jpeg\" /></p>\n<p>O n peut utiliser tout aussi facilement Dask pour constituer son cluster de Workers via Docker-compose localement sur une instance (chaque image Docker comprend Dask (y compris l’ordonnanceur distribué), Numpy et Pandas en plus d’une installation Miniconda, le tout sur la base d’une image Debian) :</p>\n<ul>\n<li><a href=\"https://github.com/dask/dask-docker/blob/master/docker-compose.yml\">dask/dask-docker</a></li>\n<li><a href=\"https://docs.dask.org/en/latest/setup/docker.html\">Docker Images - Dask 2.1.0 documentation</a></li>\n</ul>\n<p>A suivre ! …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/378/1*TscAd70ffOqdWQgR4_83_g.jpeg\" /></p>", "published": "2022-11-27T10:59:15.587Z", "lastEdited": "2022-11-27T10:59:15.587Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160837.png", "source": "https://dev.to/deep75/apprentissage-machine-evolutif-en-python-avec-dask-et-kubernetes-1k63", "stars": [], "saves": []}}, {"model": "main.post", "pk": 16, "fields": {"author": 31, "title": "Serverless : Knative avec Tekton et Apache OpenWhisk à l’aide de Kontena Pharos et miniONE …", "slug": "serverless-knative-avec-tekton-et-apache-openwhisk-a-laide-de-kontena-pharos-et-minione-16", "description": "Serverless : Knative avec Tekton et Apache OpenWhisk à l’aide de Kontena Pharos et miniONE …...", "content": "<hr />\n<p>title: Serverless : Knative avec Tekton et Apache OpenWhisk à l’aide de Kontena Pharos et miniONE …\npublished: true\ntags: docker,continuous-delivery,serverless,scaleway\ncanonical_url: https://medium.com/@abenahmed1/serverless-knative-avec-tekton-et-apache-openwhisk-%C3%A0-laide-de-kontena-pharos-et-minione-71ebad72eda3</p>\n<hr />\n<h3>Serverless : Knative avec Tekton et Apache OpenWhisk à l’aide de Kontena Pharos et miniONE …</h3>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Y6-mmco-QK6uC-kvK3ggcQ.jpeg\" /></p>\n<p>Le projet Knative a décidé de transformer Knative Build en un projet séparé, appelé <a href=\"https://translate.googleusercontent.com/translate_c?depth=1&amp;rurl=translate.google.com&amp;sl=auto&amp;sp=nmt4&amp;tl=fr&amp;u=https://github.com/tektoncd/pipeline&amp;xid=17259,15700019,15700186,15700191,15700256,15700259,15700262,15700265&amp;usg=ALkJrhj32SqBpWZMLFjDO-mlvya4m_0wiA\">Tekton,</a> qui vise à fournir des fonctionnalités génériques de CI/CD basées sur <a href=\"https://translate.googleusercontent.com/translate_c?depth=1&amp;rurl=translate.google.com&amp;sl=auto&amp;sp=nmt4&amp;tl=fr&amp;u=https://www.ibm.com/cloud/learn/kubernetes&amp;xid=17259,15700019,15700186,15700191,15700256,15700259,15700262,15700265&amp;usg=ALkJrhiFigt_oH7ySeL7rgZ9Z1oA7agaYg\">Kubernetes</a>.</p>\n<p><a href=\"https://tekton.dev/\">Tekton Pipelines</a></p>\n<p>Cela permet par exemple d’exécuter des actions <a href=\"https://translate.googleusercontent.com/translate_c?depth=1&amp;rurl=translate.google.com&amp;sl=auto&amp;sp=nmt4&amp;tl=fr&amp;u=https://openwhisk.apache.org/&amp;xid=17259,15700019,15700186,15700191,15700256,15700259,15700262,15700265&amp;usg=ALkJrhiO7ttFQw1rUoNOHr6beBVGVLQvvw\">OpenWhisk</a> dans Knative. Pour démarrer ce test, je pars d’une instance Bare Metal dans Scaleway :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9t_tb5rjD9o5mHiIrb44Hg.jpeg\" /></p>\n<p>de type C2L :</p>\n<p><a href=\"https://www.scaleway.com/en/bare-metal-instances/\">BareMetal Instances</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/779/1*LHXAD7t67kO5eyHbrPlHDg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/937/1*X3QHa-E9FC_GS_eXjGbXrw.jpeg\" /></p>\n<p>Et je déploie miniONE qui permet d’installer très facilement OpenNebula sur un seul hôte par une seule commande :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/614/0*Y4AXekyKby-1VRg8.png\" /></p>\n<ul>\n<li><a href=\"https://opennebula.org/minione-install-opennebula-with-a-single-command/\">miniONE - Install OpenNebula with a Single command!</a></li>\n<li><a href=\"https://github.com/OpenNebula/minione/blob/master/minione\">OpenNebula/minione</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*wv4Z_NLnT8z-C7iEheWDhA.png\" /></p>\n<p>Au préalable, j’ai monté le second disque de 250 Go sur <em>/var/lib</em> :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dz1HjVPv0B2xMWb1u1E4FA.jpeg\" /></p>\n<p>OpenNebula est alors accessible :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bK_3G88IjuIbDVy41dJATQ.jpeg\" /></p>\n<p>Dans le Marketplace, on peut voir qu’il existe une image dédiée au déploiement d’un cluster Kubernetes :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FnWTfsj7uhB94pleLKmuZw.jpeg\" /></p>\n<p><a href=\"https://opennebula.org/news-from-the-marketplace-kubernetes-appliance/\">News from the Marketplace: Kubernetes Appliance</a></p>\n<p>{% youtube BRstZ8yAUGM %}</p>\n<p>Néanmoins, je récupère une image Ubuntu 18.04 qui va me servir au déploiement de mon cluster Kubernetes via Kontena Pharos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cxUJtWNd67uY8eUZDadM4g.jpeg\" /></p>\n<p>et j’ai lié l’instance Bare Metal à ZeroTier (un réseau mondial peer to peer sécurisé) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*wjTmnsSw2prLCG11Nha87w.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NGSjnYf37mg3kT2K4BjwoA.jpeg\" /></p>\n<p>Cela me permet de créer un nouveau réseau dans OpenNebula pour mes futures machines virtuelles qui pourront être accessibles depuis l’extérieur (en plus du réseau privé créé par défaut au moment de l’installation d’OpenNebula) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Esx-ZZ39IyrpSaPEhreygw.jpeg\" /></p>\n<p>avec la réservation d’un pool d’adresses IP via le plan d’adressage défini dans ZeroTier :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*exjsmHnq43caeruLZxX5zw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*sUj27vjStF6OW8x4TSjc4w.jpeg\" /></p>\n<p>Je crée alors quatres machines virtuelles pour mon cluster Kubernetes :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*EVHPH2i4c4Y63zw3G0IcFA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7PyfLc9vp0fnbdSUW-pmxw.jpeg\" /></p>\n<p>Récupération du binaire Kontena Pharos-Cluster sur Github :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*zSVn0mqG16PhN7P0jk0VZw.jpeg\" /></p>\n<p>puis création du fichier YAML nécéssaire au déploiement du cluster Kubernetes par Kontena Pharos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/666/0*55FOboDY_RPPp9Zk.jpg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*P-AIcvbXMAbOH-fHRVFRew.png\" /><figcaption>cluster.yml</figcaption></p>\n<p>Déploiement du cluster Kubernetes :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*PjbJCVKwBxILwigGTKRxPg.png\" /></p>\n<p>Il est opérationnel :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9Kl9r6OkRc_9LUdBvHesRg.png\" /></p>\n<p>J’installe Knative comme précédemment via Gloo (dont le binaire est à récupérer sur Github):</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*ht4iwuUClbOvZjkK.png\" /></p>\n<p><a href=\"https://knative.dev/docs/install/knative-with-gloo/\">Knative Install using Gloo on a Kubernetes Cluster</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AmbLqjzXhaG_33yB1OQhEQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Tf4ZFFl7nu1ZJHSlmIY3IA.png\" /></p>\n<p>Puis installation de Tekton :</p>\n<p><a href=\"https://github.com/tektoncd/pipeline/blob/master/docs/install.md\">tektoncd/pipeline</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*0miQhIRfrtpSyLtyQQCIcA.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ykQ3JWoaqGqs0neuUm3yPw.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kkc4SAah8PQbW9-Lkd6sBQ.png\" /></p>\n<p>Je vais reprendre l’exemple de cet excellent article d’IBM sur le sujet :</p>\n<p><a href=\"https://www.ibm.com/cloud/blog/build-a-knative-service-with-tekton-and-apache-openwhisk-nodejs-runtime\">Build a Knative Service with Tekton and Apache OpenWhisk Node.js Runtime</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/800/0*OcIuhFIxEOTmbJEm.png\" /></p>\n<p>en commencant par créer un secret Kubernetes pour permettre à une image Docker d’être transférée dans un Docker Registry. Ce peut être Docker Hub ou tout autre Docker Registry. Et ceci via ce fichier YAML :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/972/1*ijQLYGFKAnGcEaROJzjHDQ.png\" /><figcaption>docker-secret.yaml</figcaption></p>\n<p>Il faut également créer un compte de service pour lier le processus de construction à ce secret afin que Tekton puisse envoyer des images Docker au Docker Registry à l’aide des informations d’identification (via ce fichier YAML) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/734/1*1VG8oSoRw4ZLcFoKeT_1Tw.png\" /><figcaption>serviceaccount-tekton.yaml</figcaption></p>\n<p>et on les applique au cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*e9Fi4QUjvxoUYoI3gpWvXw.png\" /></p>\n<p>On peut alors créer une première ressource de pipeline Tekton, c’est-à-dire ici obtenir le code d’exécution Node.js de l’image Docker à partir d’Apache OpenWhisk (un pipeline de type Git définit les paramètres, y compris la révision et l’URL à utiliser) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YbrXJAf06gaXSo5AnUVNww.png\" /></p>\n<p>Le deuxième pipeline contiendra les étapes à suivre pour transmettre une image Docker au Docker Registry. Dans cet exemple on utilise Docker Hub :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*E71Mupw03mzJSJNKvUlprg.png\" /></p>\n<p>Tekton s’attend à ce qu’un type soit spécifié pour <em>PipelineResource</em>. Dans ce cas, l’image doit être créée et poussée dans l’URL du Docker Registry fourni dans les paramètres. Une tâche Tekton définit le travail à exécuter via la définition de la ressource d’entrée en tant que ressource de Pipeline Git, la ressource de sortie en tant que référentiel Docker et les étapes à exécuter de manière séquentielle par la tâche. On définit le modèle de construction tel que l’on aurait pû le faire pour Knative-build. Définition de la tâche et application de cette dernière à Tekton via ces lignes de commande :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*z96JW_IZGCTpBNHcdK07Rg.png\" /></p>\n<p>Une tâche peut être exécutée par une ressource TaskRun dans Tekton. TaskRun lie les entrées et les sorties à PipelineResources (déjà défini), met au point les valeurs en fonction des paramètres utilisés pour la création des modèles et exécute les étapes de la tâche. Application de cette dernière via ces lignes de commande :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*5Y9o0TTP9KvP8EbmEo6M7Q.png\" /></p>\n<p>On peut créer une première action Knative avec Tekton ceci via le client <em>Knctl</em> de Knative dont le binaire est à récupérer sur Github :</p>\n<p><a href=\"https://github.com/cppforlife/knctl\">cppforlife/knctl</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8jdgBoLdmJxI9un_3-bYhQ.jpeg\" /></p>\n<p>Je peux alors déployer un simple service “HelloWorld” (sans fichier de déploiement) et l’invoquer par une requête POST :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-k25ncTJscEfxTK0sb0ONw.png\" /></p>\n<p>Ce test n’aura pas engendré la consommation de beaucoup de ressource (comme en témoignent ces graphes de Netdata sur le serveur Bare Metal) :</p>\n<p><a href=\"https://www.netdata.cloud/\">NetData - Get control of your Linux Servers. Simple. Effective. Awesome.</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FVyYeMtkJWxqwktEbFu1Jw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8CwjhS6Y-4yOsCXmk3LD3g.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*KJbUSVXWXZGo41nk5QusGQ.jpeg\" /></p>\n<p>Le projet Tekton Pipelines permet donc de déclarer des pipelines de type CI/CD. Et ceci sur n’importe quel cluster Kubernetes …</p>\n<p><a href=\"https://github.com/tektoncd/pipeline\">tektoncd/pipeline</a></p>\n<p>A suivre ! …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/630/0*v2BlnfI4mrKbS7hR.jpg\" /></p>", "published": "2022-11-27T10:59:17.871Z", "lastEdited": "2022-11-27T10:59:17.871Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160839.png", "source": "https://dev.to/deep75/serverless-knative-avec-tekton-et-apache-openwhisk-a-l-aide-de-kontena-pharos-et-minione-ojc", "stars": [], "saves": []}}, {"model": "main.post", "pk": 17, "fields": {"author": 31, "title": "Rancher Server avec Apache Mesos, Marathon et Traefik dans Azure …", "slug": "rancher-server-avec-apache-mesos-marathon-et-traefik-dans-azure-17", "description": "Rancher Server avec Apache Mesos, Marathon et Traefik dans Azure …     Rancher Server 1.6 pa...", "content": "<hr />\n<p>title: Rancher Server avec Apache Mesos, Marathon et Traefik dans Azure …\npublished: true\ntags: traefik,mesos,rancher,azure\ncanonical_url: https://medium.com/@abenahmed1/rancher-server-avec-apache-mesos-marathon-et-traefik-dans-azure-d803333e65a0</p>\n<hr />\n<h3>Rancher Server avec Apache Mesos, Marathon et Traefik dans Azure …</h3>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*rY1zX-zrYTG1YoFA0c2wqQ.jpeg\" /></p>\n<p>Rancher Server 1.6 paraît déprécié néanmoins il permet le déploiement rapide d’un orchestrateur de containers Docker avec Apache Mesos :</p>\n<p><a href=\"https://rancher.com/docs/rancher/v1.6/en/mesos/\">Mesos in Rancher</a></p>\n<p>Je pars du déploiement d’un premier Scale Set dans Azure qui va porter le serveur Rancher 1.6 :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*woBs1UI0NbnKzmNZ5zXPEA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*iqHMBX1hRn--XJ2j_t-IDQ.png\" /></p>\n<p>Le serveur Rancher émet via une adresse IP fournie par ZeroTier :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Acgt_18ZaZSd4uBIj3hS9A.jpeg\" /></p>\n<p>On configure préalablement son moyen d’authentification (ici local dans cet exemple) avec le serveur Rancher.</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vTZ2euNz1BFO2GKpcc_Aaw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*KO9CItt-PMIQaStYH67BZA.jpeg\" /></p>\n<p>Puis il faut configurer un nouvel environnement avec Apache Mesos (en lieu et place de l’environnement Rancher Cattle par défaut) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*GmOdMsFPJ8jZj0Zm5Wjv5Q.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4zc1dLNgPpn9sgE20pAzBA.jpeg\" /></p>\n<blockquote>\n<p>J’obtiens le script nécessaire au déploiement des hôtes du cluster Mesos via Rancher Agent. Après la création d’un environnement Mesos, les services d’infrastructure ne seront pas lancés tant que l’on n’aura pas ajouté au moins un hôte à l’environnement. Il faudra en effet l’ajout d’au moins 3 hôtes. Le processus d’ajout d’hôtes est le même pour tous les types d’orchestration de containers Docker. Une fois le premier hôte ajouté, Rancher Server commencera automatiquement le déploiement des services d’infrastructure incluant les services Mesos (Mesos-master, Mesos-slave et Zookeeper). On peut visualiser la progression du déploiement via le tableau de bord fourni par le serveur Rancher :</p>\n</blockquote>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*gUJwoCQKgNpelelUHt5jzA.jpeg\" /></p>\n<p>Je crée donc un nouveau Scale Set dans Azure composé de 3 instances :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*L1FDX8CQfQx3FylRmxS_-A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UenGeE-GPudcGCl0L8M7ug.jpeg\" /></p>\n<p>accompagné de ce fichier <em>cloud-init</em> :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*M2OyKbz3mzLkWfMiHoEnFg.png\" /></p>\n<p>Le second Scale Set est alors opérationnel :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4nrGkChWCA7YVNeULWEyxQ.jpeg\" /></p>\n<p>J’utilise ZeroTier pour m’affranchir de l’utilisation du Load Balancer fourni dans le Scale Set avec ces instances ayant par défaut une adresse IP privée :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Ft1d1nukANDIyJ6XugHnmA.jpeg\" /></p>\n<p>La configuration des hôtes du cluster est réalisé à partir du déploiement de Rancher Agent :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*A7ikZYTB-4xWab_gKNHYew.jpeg\" /></p>\n<p>Les trois hôtes apparaissent dans le tableau de bord de l’environnement Mesos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/951/1*5_nqxZ-mDaxcLu_Br4iOJg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*JONv8_H0fy3GW4cBT9-TQg.jpeg\" /></p>\n<p>ainsi que l’état des stacks d’infrastructure :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*C4HHA79MHXG3_WmTKhVmow.jpeg\" /></p>\n<p>Je peux alors déployer Marathon (pour notamment l’exécution des containers Docker) via le marketplace présent dans le serveur Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*BhfCbJHZ10VF0gwQFwtNpw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VvzHdNwl1EpmlOpOZ6mxWA.jpeg\" /></p>\n<p>Il apparaît alors dans les stacks de l’environnement Mesos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*57tNjRvp9ql1YSODdrpnPQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*SZDmk5xV0J7mp8RORpIQBA.jpeg\" /></p>\n<p>Toujours via ZeroTier, je peux accéder à Marathon. Je lance plusieurs groupes de containers Docker via des paramêtres JSON de ce type :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*3Bie_Vg8-1U14Rb4L5BU7w.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/972/1*4L1gKN94Ym1d4AesOIVnEQ.png\" /></p>\n<p>Les groupes de containers sont actifs dans le cluster Mesos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*JPq5PWZAnWeKlHS1lC5bhw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oS5l6mCCmd4A93MGXUAxCQ.jpeg\" /></p>\n<p>Les containers sont visualisables dans le tableau de bord du serveur Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AAjhdxAXakRrAHFAoi5V4w.jpeg\" /></p>\n<p>Une interface Web est également présente pour gérer son cluster Mesos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kjDO7oC0ECApjqvvhkjLxg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*h-PYanyzvUZEWesALyZ87g.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bsyhoHF0RaRqaZvaCKf6xA.jpeg\" /></p>\n<p>Pour pouvoir accéder aux services proposés par ces containers, j’installe un serveur Traefik,</p>\n<p><a href=\"https://traefik.io/\">The Cloud Native Edge Router</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*JclxmO-Wb1tMqeyT.png\" /></p>\n<p>en ajoutant une instance (avec une adresse IP publique) dans le Scale Set de Rancher :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-38PtB5fkdj7b8Ma5C3CEQ.jpeg\" /></p>\n<p>et j’utilise ce fichier TOML en configuration de ce dernier :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZQtmS9pbJF6FxX6pxIfTVw.png\" /></p>\n<p><code>$ nohup sudo traefik --configFile=traefik.toml &amp;</code></p>\n<p>Le serveur Traefik avec son tableau de bord est accessible (je me contente ici de la version Camembert 1.12) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oq_IUBtSKTkyoikbYR3xnw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kBBgni2VaaSIx8vgjN0oxg.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jOoCgzFbUttnUzf5Tvdx_Q.jpeg\" /></p>\n<p>Les adresses fournies automatiquement dans Traefik à l’aide de domaines Wildcard permettent l’accès public aux différents services déployés précédemment à l’aide des containers Docker :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*CkvzDENUrqIqw5qJp7vHpg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*azj4RIUdkhhEAZ0ommOIxQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*6Ie14gpnogNqLOFYccTGjw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UzVIixTBkknOGhVbxYdo0Q.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Yb0ok_H1mkOU9HyUbHb_kg.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/649/1*ceNddV91LRBsNa8ML-MnAg.jpeg\" /></p>\n<p>On peut également recréer ce cluster dans une seule instance. Je commence pour ce nouveau test à lancer un nouveau subnet pour l’utilisation d’Azure Bastion (en preview depuis le mois dernier) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1011/1*9K7RFUk2TLg_cR8o45T4ew.jpeg\" /></p>\n<p><a href=\"https://azure.microsoft.com/fr-fr/services/azure-bastion/\">Azure Bastion | Microsoft Azure</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*saX1M7eKdFMnr1sU97XcQg.jpeg\" /></p>\n<p>Il se nomme AzureBastionSubnet. Et je vais lier Azure Bastion à une nouvelle instance Ubuntu :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NS9Teazpb5BWJIbERcmheg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*yy9UnFbqwObS_yKhlh9UkA.jpeg\" /></p>\n<p>J’ai configuré auparavant une augmentation de la taille du disque système de cette instance pour supporter la création de ce nouveau cluster Mesos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bKhhZSSbcni6rLyvlIg6Ow.jpeg\" /></p>\n<p>Je peux alors me connecter à cette instance directement depuis le portail Azure :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4BBfqf4qBoyRzq_ICc7JWA.jpeg\" /></p>\n<p>avec l’apparition d’une nouvelle page web avec un accès au Shell :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*H8VmyyUZ6BHd_mq14jnOGQ.jpeg\" /></p>\n<p>Installation de la dernière version de Multipass :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cZV-Xpu6Dteh6pGJANe_AA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vEOoIevhKMk4SS8PHyYqZw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*G0B3Hc0LiuX3OdQZ-Synmg.jpeg\" /></p>\n<p>et création de quatres machines virtuelles qui composeront l’ossature de ce nouveau cluster Mesos (dont le serveur Rancher). Elles sont connectées comme précedemment à ZeroTier :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*0Ypzafpz0ucFruHW_j34QA.jpeg\" /></p>\n<p>Après le déploiement du serveur Rancher, je peux lancer le déploiement de Rancher Agent sur les machines virtuelles et constituer mon nouveau pool d’hôtes du cluster Mesos :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*u0zcLRjfa5FwqyTerJ1Fcg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*lRGNO24OGQk0yoHwdC4-qg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TgbQf_2TJ4gtjuZFI2fRKA.jpeg\" /></p>\n<p>Les trois hôtes sont opérationnels :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xEbelfX6QuVp1M96UADiDA.jpeg\" /></p>\n<p>J’ai installé le service Marathon dans le cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kzaTAfuvFl7P8U4muX7l6A.jpeg\" /></p>\n<p>Dans Marathon, je relance mes groupes de containers Docker :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*35_Vqmyf2ZsjZArvJxEQhQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*roCY8ONbp9Zo6eY_XdwwCQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9WvQfQxamrUMck143n3KEg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*12cWlbZ6_0qUOSpumFJRsg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mZK0d6lRXJKHjQAlJRqaHw.jpeg\" /></p>\n<p>et je redéploie Traefik au sein de l’instance Multipass via ce fichier TOML (identique au précédent et en ayant modifié des adresses IP) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*zS4iQ_nLZR5imRB1kLcptw.png\" /></p>\n<p>Traefik me restitue automatiquement des adresses via des domaines Wildcard :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*id-64NikrEvDKl0fewMvYQ.png\" /></p>\n<p>qui me permettent d’accéder aux mêmes services précédents :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mt0vti2JoUJUc9GSyA9tEQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*yiVYT522LTlJwdUgSPqISg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*hmXAt-2SmTO0O1oFxGALZg.jpeg\" /></p>\n<p>Ce cluster Mesos tient donc dans cet exemple dans une seule instance sans trop de consommation :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*wv0sZfNN1YvH9rCvx9wMmQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*w6PMOJm7CHtWBeHdY5MB6g.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bfvdImnBs-s6FsVQUsadbQ.jpeg\" /></p>\n<p>Cette version 1.6 du serveur Rancher sera amenée à disparaître (et peut être avec elle cette méthode simple de déploiement d’un cluster Mesos même si DC/OS a déjà pris la relève depuis longtemps) :</p>\n<p><a href=\"https://rancher.com/support-maintenance-terms/\">Rancher Labs Support and Maintenance - Terms of Service</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*S9ZU6cnpJsZwqYLkt2wPYQ.jpeg\" /></p>\n<p>A suivre ! …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/638/0*EFXy_s9iAStxIcsU\" /></p>", "published": "2022-11-27T10:59:18.778Z", "lastEdited": "2022-11-27T10:59:18.778Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160840.png", "source": "https://dev.to/deep75/rancher-server-avec-apache-mesos-marathon-et-traefik-dans-azure-1cad", "stars": [], "saves": []}}, {"model": "main.post", "pk": 18, "fields": {"author": 31, "title": "Initier un cluster K3S en mode HA …", "slug": "initier-un-cluster-k3s-en-mode-ha-18", "description": "Initier un cluster K3S en mode HA …     Il est visiblement possible d’initier expérimentalem...", "content": "<hr />\n<p>title: Initier un cluster K3S en mode HA …\npublished: true\ntags: kubernetes,docker,k3s,hetzner\ncanonical_url: https://medium.com/@abenahmed1/initier-un-cluster-rancher-k3s-en-mode-ha-15d469abea19</p>\n<hr />\n<h1>Initier un cluster K3S en mode HA …</h1>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*BYb9iQWkSJaou3b3IQSUdg.png\" /></p>\n<p>Il est visiblement possible d’initier expérimentalement un cluster Kubernetes avec Rancher K3S en haute disponibilité vis à vis des noeuds maîtres depuis la version 0.7.0 (même si une issue sur le dépôt github de K3S a été ouverte à ce sujet) :</p>\n<p><a href=\"https://github.com/rancher/k3s/issues/618\">Initial \"v1\" HA Support · Issue #618 · rancher/k3s</a></p>\n<p>Car officiellement on était habituellement sur ce type de structure dans un cluster K3S :</p>\n<p><a href=\"https://k3s.io/\">k3s: Lightweight Kubernetes</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*5mH4sLy417Wynv6UAEL8lg.png\" /></p>\n<p>Je commence par créer un premier noeud Ubuntu 18.04 LTS sur Hetzner Cloud qui fera office de noeud Etcd et de Load Balancer pour ce futur cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qZ0CMjRqtbf3Dq1bcqgM_Q.jpeg\" /></p>\n<p>En utilisant toujours le même gabarit CX11 à l’avenir avec 1 vCPU et 2 Go de RAM :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*5cByqtLGOoudJnQi.jpeg\" /></p>\n<p>Je récupère les binaires relatifs à Etcd sur le dépôt Github de ce dernier :</p>\n<ul>\n<li><a href=\"https://etcd.io/\">etcd</a></li>\n<li><a href=\"https://github.com/etcd-io/etcd/releases\">etcd-io/etcd</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bQe3LgPUUOAjt10yzZMveg.jpeg\" /></p>\n<p>Et je les installe sur l’instance :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vo6mdMZyMZEz78aeH12VEg.jpeg\" /></p>\n<p>Je peux lancer mon serveur Etcd qui fait office ici de backend de stockage pour ce futur cluster :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*fmrkp1WRDJEB9JOsrDQJiQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*y6jF0EVZ7Q_d66pdBW6lig.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/508/0*yDZG1yDuYkPfHBJX.jpg\" /></p>\n<p>A ce stade, je crée trois autres instances Ubuntu 18.04 LTS qui vont servir de noeuds maîtres du cluster K3S :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*XE8R2oVf6Ep8Y5F_Pd9YdQ.jpeg\" /></p>\n<p>Avec ces adresses IP publiques, je peux commncer l’installation d’un Load Balancer avec l’utilisation de gobetween :</p>\n<blockquote>\n<p><em>un équilibreur de charge L4 (et proxy inverse) libre, open-source, moderne et minimaliste …</em></p>\n</blockquote>\n<p><a href=\"http://gobetween.io/index.html\">gobetween - modern &amp; minimalistic L4 load balancer</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/670/1*lxJtLnSSRZzoK6-e_QACEQ.jpeg\" /></p>\n<p>On peut l’installer simplement via snap :</p>\n<p><code>$ snap install gobetween --edge</code></p>\n<p><a href=\"https://snapcraft.io/gobetween\">Install gobetween for Linux using the Snap Store | Snapcraft</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xOweGbWXXQxU6rDNne2Ylg.jpeg\" /></p>\n<p>Je modifie avec les adresses IP publiques des noeuds maîtres le fichier <code>/var/snap/gobetween/common/gobetween.toml</code></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oeOgRiAGk86-rQV4d5oStg.jpeg\" /></p>\n<p>Je relance le service et le Load Balancer est prêt :</p>\n<pre><code>$ snap restart gobetween\n</code></pre>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qcgoobSPEgn99NxC4dt6_g.jpeg\" /></p>\n<p>Un équilibreur de charge externe a donc été configuré pour ces nœuds maître sur le port TCP 6443 :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*VNvNJrSSuwxBXvORt290sQ.jpeg\" /></p>\n<p>Par la suite j’installe la nouvelle version de Rancher K3S sur les noeuds maîtres :</p>\n<p><a href=\"https://github.com/rancher/k3s/releases\">rancher/k3s</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*DOxdRDLOLDwBi6IYE1fvtg.jpeg\" /></p>\n<p>ainsi qu’une connexion à ZeroTier pour MetalLB :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZFE0NAk7dS16yImKPSQJpQ.png\" /></p>\n<blockquote>\n<p><em>Quand une adresse IP est utilisée au lieu d’un nom d’hôte pour l’équilibreur de charge, cette adresse IP est incluse comme ici avec un indicateur tls-san lors de la procédure de lancement des noeuds maîtres :</em></p>\n</blockquote>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FOw6-zCyxXuA5GRl2Zm8Fw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_52Q5EvJX1JKgqRJNpIVig.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oG6HhkskPWrx7lpWmeLBLw.jpeg\" /></p>\n<blockquote>\n<p><em>Pour amorcer les nœuds maîtres en haute disponibilité, les mots de passe appropriés doivent être copiés sur tous les nœuds. En passant <code>--bootstrap full</code> le noeud maître essaiera de lire les données d’amorçage à partir du serveur Etcd. Si elles n’existent pas, elles seront créées, puis les certificats seront écrits dans le serveur Etcd s’ils n’existent pas déjà. L’utilisation de <code>--bootstrap read</code> ne récupérera que les données du serveur Etcd et une erreur s’il n’en existe aucune, et <code>--bootstrap write</code> écrira toujours les données d’amorçage sur le serveur etcd mais ne les lira pas. La valeur par défaut consiste à n’effectuer aucune opération d’amorçage.</em></p>\n</blockquote>\n<p>Le cluster K3S laisse alors apparaitre les trois noeuds maîtres en haute disponibilité :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uobt-p_diiUgEwM5tnM4FA.jpeg\" /></p>\n<p>Je peux substituer l’adresse du serveur dans le fichier <em>Kubeconfig</em> avec celle du Load Balancer :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9EX28jAzC2pNYbJCr1sAyw.jpeg\" /></p>\n<p>Il est alors possible de relier des noeuds <em>“Agent”</em> dans ce cluster K3S :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*t3ASnwnkPEnoYwmIkMhwpg.png\" /></p>\n<p>Par l’ajout de trois nouveaux noeuds Ubuntu 18.04 LTS dans Hetzner :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*qq07T4dboFSliBLcLIQ4Xg.jpeg\" /></p>\n<p>J’ai donc septs noeuds au total pour ce cluster K3S en mode HA (trois autres noeuds agents ont été créés, en se connectant à l’adresse IP publique de l’équilibreur de charge des nœuds principaux) :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*uA7S8l_YQQ0-hN77njPf-A.jpeg\" /></p>\n<blockquote>\n<p><em>Lorsqu’un agent se connecte au serveur, il parcourt tous les noeuds finaux du cluster K3S et se connecte à un tunnel inverse aux noeuds maîtres afin que ces derniers puissent communiquer avec lui. Les points de terminaison du cluster K3S sont surveillés et toute modification entraînera des déconnexions d’anciens nœuds ou une connexion à de nouveaux nœuds.</em></p>\n</blockquote>\n<p>Ici tous les noeuds sont opérationnels :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*PXeVsWJ5hApt7R-gJwI-kQ.jpeg\" /></p>\n<p>Installation de MetalLB pour fournir un service de Load Balancing interne au cluster K3S en lien avec ZeroTier :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UmjO0nZV-0ibFYl96tq62A.jpeg\" /></p>\n<p><a href=\"https://metallb.universe.tf/\">MetalLB</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*OZOqbTGrXfG5Mu7GsN5-xA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mtOrRan3RhZ_ba61DYjygQ.jpeg\" /></p>\n<blockquote>\n<p><em>Le mode couche 2 avec MetalLB est le plus simple à configurer et n’exige pas que les adresses IP soient liées aux interfaces réseau des noeuds de ce cluster. Il fonctionne en répondant directement aux requêtes ARP pour donner l’adresse MAC de la machine aux clients. J’utilise donc ici un segment d’adresses IP en lien avec le plan d’adressage défini dans ZeroTier dans la configuration de MetalLB via ce fichier de manifest YAML :</em></p>\n</blockquote>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/968/1*jgrdKgtsImioEXTvEubyig.png\" /><figcaption>dhcp.yaml</figcaption></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*o2jQ1BCDSjBZDQQaXH8e7g.jpeg\" /></p>\n<p>Je peux tester simplement mon traditionnel démonstrateur FC avec ce manifest YAML :</p>\n<pre><code>$ kubectl apply -f deployment.yaml\n</code></pre>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*BfDlx9k0pF7F9d17TDpSYw.png\" /><figcaption>deployment.yaml</figcaption></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_sGalenkuhv_D8c999xZMw.jpeg\" /></p>\n<p>L’adresse IP retournée me permet d’accéder sans surprise à la page web du demonstrateur FC :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UqZvvQP13pCu2scK0JH2oQ.jpeg\" /></p>\n<p>Avec le déploiement du metrics-server dans le cluster, j’ai accès rapidement à un simple monitoring de ce dernier :</p>\n<p>```\n$ git clone https://github.com/kubernetes-incubator/metrics-server</p>\n<p>$ kubectl create -f deploy/1.8+/\n```</p>\n<p><a href=\"https://github.com/kubernetes-incubator/metrics-server\">kubernetes-incubator/metrics-server</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*SrAMZQ-2qF7rn73Tqf-pTQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jslfAzx9IiYa4XBAOikngA.jpeg\" /></p>\n<p>Pour vérifier la haute disponibilité des trois noeuds maîtres du cluster K3S, j’arrête les deux dernières instances de ce trio :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*JMByxMvZcFpoWBM_XsV6Og.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*HEkqZYP0j6T5fTQ9yV5iiA.jpeg\" /></p>\n<p>Je n’ai alors plus qu’un seul noeud maître :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/897/1*EiGAaxLfk4XK6zm16qjrLg.jpeg\" /></p>\n<p>Et le cluster K3S est toujours actif :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*u3eshWxQ5rwDVmlx3MJYMw.jpeg\" /></p>\n<p>Pour conclure, comme l’indiquait Erik Wilson dans l’issue sur Github, il est prévu dans l’avenir la mise en place d’un proxy d’équilibrage de charge sur chaque noeud du cluster K3S afin d’éviter le recours à un équilibreur de charge externe. Et également la mise en place de MySQL &amp; PostgreSQL derrière une interface Etcd3 …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/571/0*rw1Z96UhRyDYKlDm.jpeg\" /></p>\n<p>A suivre !</p>", "published": "2022-11-27T10:59:20.647Z", "lastEdited": "2022-11-27T10:59:20.647Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160843.png", "source": "https://dev.to/deep75/initier-un-cluster-k3s-en-mode-ha-3ifa", "stars": [], "saves": []}}, {"model": "main.post", "pk": 19, "fields": {"author": 32, "title": "Custom Gatsby.js Source Plugin", "slug": "custom-gatsbyjs-source-plugin-19", "description": "We take a deep dive into how data and GraphQL works with Gatsby.js, and also create our own data nodes for Gatsby using an external API.", "content": "<hr />\n<p>title: Custom Gatsby.js Source Plugin\npublished: true\ndescription: We take a deep dive into how data and GraphQL works with Gatsby.js, and also create our own data nodes for Gatsby using an external API.\ntags: React, Gatsby, GraphQL, javascript\ncanonical_url: https://codebushi.com/custom-gatsby-source-plugin/</p>\n<hr />\n<p>One of the greatest superpowers of Gatsby.js is its ability to use data and content from a variety of sources, such as Wordpress, Markdown files, or APIs. During the build process, Gatsby will query for the data and turn it into content for a static site. There are a wide variety of plugins, called <a href=\"https://www.gatsbyjs.org/plugins/?=gatsby-source\">\"source plugins\"</a>, that will help you pull data from different places. Today we'll be looking into how we can make our own source plugin and how they work under the hood.</p>\n<h4 class=\"mt-4 mb-4\"><a href=\"https://gatsby-custom-source.surge.sh/\">Gatsby Custom Source Plugin</a> <small>( <a href=\"https://github.com/codebushi/gatsby-custom-source-plugin\">view source</a> )</small></h4>\n\n<p>The source we want is <a href=\"https://rawg.io/apidocs\">https://rawg.io/apidocs</a>, which is an API for video games. Before we use the API, let's take a look at how data and sources work in Gatsby. We'll use the Gatsby default starter to kick things off.</p>\n<p>```bash</p>\n<h1>Download and install the starter using the Gatsby CLI</h1>\n<p>gatsby new games-source https://github.com/gatsbyjs/gatsby-starter-default\ncd games-source\ngatsby develop\n```</p>\n<p>In Gatsby, there is a GraphQL layer which helps you pull in data. You can build sites without the GraphQL layer, but the GraphQL helps to structure the data and makes it a lot easier to work with.</p>\n<p>With the development server running, open up the GraphiQL playground at http://localhost:8000/___graphql. On the lefthand side, you should see a variety of dropdowns and checkboxes under the Explorer sidebar. This is the current data that's available to you via the GraphQL data layer, built into the Gatsby Default Starter. We can make a query for the site's metadata, which is coming from the <code>gatsby-config.js</code> file, using the following query:</p>\n<p><code>graphql\nquery {\n  site {\n    siteMetadata {\n      author\n      description\n      title\n    }\n  }\n}</code></p>\n<p>If you paste that into the box and hit the \"Play\" button, you'll see the siteMetadata show up in the right box.</p>\n<p><img alt=\"Site Metadata\" src=\"https://thepracticaldev.s3.amazonaws.com/i/x8nd0busndeocon94kmu.png\" /></p>\n<p>Whenever we add a source plugin, new sources will appear in the Explorer sidebar and we can run queries on those sources. To see this in action, we can add our own custom test source into Gatsby.</p>\n<p>Open up the file called <code>gatsby-node.js</code>. This file allows us to have access to Gatsby's APIs, the one we'll focus on today is the <a href=\"https://www.gatsbyjs.org/docs/node-apis/#sourceNodes\">sourceNodes</a> API. We can now make data \"nodes\" for the GraphQL data layer.</p>\n<p><code>javascript\n// In gatsby-node.js\nexports.sourceNodes = async ({ actions, createNodeId, createContentDigest }) =&gt; {\n  // We'll make the newNode object here for clarity\n  const newNode = {\n    title: 'Test Node!',\n    description: 'This is a test node with static data',\n    id: createNodeId('TestNode-testid'), // required by Gatsby\n    internal: {\n      type: 'TestNode', // required by Gatsby\n      contentDigest: createContentDigest('testnode') // required by Gatsby, must be unique\n    }\n  };\n  // This is where we actually create the data node, by passing in the newNode object.\n  actions.createNode(newNode);\n};</code></p>\n<p>We create the actual node using <code>actions.createNode()</code>, which takes in an object. There are certain properties that are required by Gatsby in order for a node to work. We use <code>createNodeId</code> and <code>createContentDigest</code>, which are helper functions provided by Gatsby, to help use fill in those required properties.</p>\n<p>To see this new node, we have to restart our development server. In the terminal, terminate the server using <code>control + c</code> and restart it using <code>gatsby develop</code>.</p>\n<p>Open up the GraphiQL playground again and paste in this query:</p>\n<p><code>graphql\nquery MyQuery {\n  testNode {\n    title\n    description\n    internal {\n      contentDigest\n      type\n    }\n  }\n}</code></p>\n<p>As you can see, we now have the test data node showing up!</p>\n<p><img alt=\"Test Data\" src=\"https://thepracticaldev.s3.amazonaws.com/i/93s6gqbvrp1sbek6qtwd.png\" /></p>\n<p>We now know how to create data nodes, so the next step is to use our video game API to get real data and create nodes. All the functionality in <code>gatsby-node.js</code> runs using Node.js, and because of that we'll need to install an additional npm package that allows us to fetch data using Node.js.</p>\n<p>Shut down the development server and install the package <code>node-fetch</code></p>\n<p><code>bash\nyarn add node-fetch</code></p>\n<p>You can use either <code>yarn add</code> or <code>npm install</code>, but since the Gatsby CLI uses yarn, it's probably the better choice right now.</p>\n<p>Open up <code>gatsby-node.js</code> again with the following</p>\n<p>```javascript\nconst fetch = require('node-fetch');</p>\n<p>exports.sourceNodes = async ({ actions, createNodeId, createContentDigest }) =&gt; {\n  try {\n    // Fetch the data\n    const res = await fetch(<code>https://api.rawg.io/api/games</code>);</p>\n<pre><code>// Transform the data into json\nconst data = await res.json();\n\n// Map over the results array, calling action.createNode on each item in the array\ndata.results.forEach(game =&gt; {\n  const node = {\n    ...game, // We copy all of the properties from the game object\n    id: createNodeId(`RAWG-game-${game.id}`), // Needs to be unique\n    internal: {\n      type: 'RAWGGame',\n      contentDigest: createContentDigest(game) // We pass in the game object to make sure it's unique\n    }\n  };\n\n  // Create the actual data node\n  actions.createNode(node);\n});\n</code></pre>\n<p>} catch (error) {\n    console.log(error);\n  }\n};\n```</p>\n<p>Be sure to require the <code>node-fetch</code> package at the top of the file. We do a GET request on the endpoint <code>https://api.rawg.io/api/games</code>. I like this as an example because there are no other parameters needed to use this endpoint. Once we get the data, we loop over <code>data.results</code> and using each game object in the array, we make our data nodes.</p>\n<p>Restart the development server and head over to <a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a> once again. You can now run queries on the games like so:</p>\n<p><code>graphql\nquery MyQuery {\n  allRawgGame {\n    edges {\n      node {\n        id\n        name\n        background_image\n      }\n    }\n  }\n}</code></p>\n<p><img alt=\"Video Game GraphQL Data\" src=\"https://thepracticaldev.s3.amazonaws.com/i/ojdtf70vfu9vk9id6ae7.png\" /></p>\n<p>We can access all the data under <code>allRawgGame &gt; edges &gt; node</code>. Using the amazing GraphiQl explorer, we can toggle all the fields available to us with ease! So now we have this data, let's use it in our Gatsby site. Open up the main <code>src/pages/index.js</code> page.</p>\n<p>```jsx\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';</p>\n<p>// The GraphQL data is passed into the component via props.data\nconst IndexPage = props =&gt; {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      {props.data.allRawgGame.edges.map(({ node }) =&gt; {\n        return (\n          <div key={node.id} style={{ marginBottom: 20 }}>\n            <p>{node.name}</p>\n            <p>\n              <img src={node.background_image} alt={node.name} />\n            </p>\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};</p>\n<p>// We use the GraphiQL query here\nexport const query = graphql<code>query MyQuery {\n    allRawgGame {\n      edges {\n        node {\n          id\n          name\n          background_image\n        }\n      }\n    }\n  }</code>;</p>\n<p>export default IndexPage;\n```</p>\n<p>Now if you go to the normal development site at <a href=\"http://localhost:8000/\">http://localhost:8000/</a> you'll see our games! During the <code>gatsby-build</code> process, this data will be injected into our static site and we can just serve it up, blazingly fast!</p>\n<p>Now if you wanted to make this into a stand-alone source plugin, you can create a new directory called <code>plugins</code> in the root folder. You'll copy over the <code>gatsby-node.js</code> file into that folder and create a package.json that describes the source plugin and also the dependency <code>node-fetch</code>.</p>\n<p>To use the plugin, you would add it into the <code>gatsby-config.js</code> file like the other plugins. If your source API needs an API key or other options, you can pass those options in when adding it into the <code>gatsby-config.js</code> file</p>\n<p><code>javascript\nplugins: [\n  {\n    resolve: `gatsby-source-rawg`,\n    options: {\n      apiKey: 'API_KEY_HERE'\n    }\n  }\n];</code></p>\n<p>In the <code>gatsby-node.js</code> file, you can access these new options in the <code>sourceNodes</code> like so</p>\n<p><code>javascript\nexports.sourceNodes = async ({ actions, createNodeId, createContentDigest }, options) =&gt; {\n  console.log(options); // The options are passed as another argument\n  try {\n    const res = await fetch(`https://api.rawg.io/api/games`);\n    const data = await res.json();\n    data.results.forEach(game =&gt; {\n      const node = {\n        ...game,\n        id: createNodeId(`RAWG-game-${game.id}`),\n        internal: {\n          type: 'RAWGGame',\n          contentDigest: createContentDigest(game)\n        }\n      };\n      actions.createNode(node);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};</code></p>\n<p>Also, it's worth noting that currently the images are NOT static, they will be loaded from whatever url we get back from the endpoint. We'll make these static using the Gatsby Image plugin in a future tutorial. Hope this was helpful!</p>\n<h4 class=\"mt-4 mb-4\"><a href=\"https://gatsby-custom-source.surge.sh/\">Gatsby Custom Source Plugin</a> <small>( <a href=\"https://github.com/codebushi/gatsby-custom-source-plugin\">view source</a> )</small></h4>", "published": "2022-11-27T10:59:29.473Z", "lastEdited": "2022-11-27T10:59:29.473Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160844.png", "source": "https://dev.to/changoman/custom-gatsby-js-source-plugin-3l90", "stars": [33], "saves": []}}, {"model": "main.post", "pk": 20, "fields": {"author": 34, "title": "How I Became a Software Engineer", "slug": "how-i-became-a-software-engineer-20", "description": "My journey from healthcare to development.", "content": "<hr />\n<p>title: How I Became a Software Engineer\npublished: true\ndescription: My journey from healthcare to development.\ntags: #womenwhocode #personalstory #codingbootcamp #MicrosoftLEAP</p>\n<hr />\n<p>My name is Alyssa Williams. I am a Software Engineer at Microsoft, but that was not what I thought I was going to be when I grew up. </p>\n<p>I went to the University of Portland in Portland, OR. It was a small private Catholic university and was predominantly white. When I was choosing a major of college, I looked at Engineering, Computer Science, and Biology (for healthcare careers) because I enjoyed math and science in school. I decided I should go with a Biology degree with an emphasis in pre-physical therapy. I liked helping people, so the healthcare route seemed the best. I chose that major because I didn't want to be the only woman and woman of color in the engineering and math classes. I did not think I was smart enough to take these classes. I lacked confidence in myself. </p>\n<p>After graduating from college, I worked at physical therapy clinics and worked on applying to physical therapy doctorate programs. I applied three times and didn't get in, which sucked. I spent all of this time and money on what I thought I knew was going to be my career, but it wasn't working out. When I finally realized that physical therapy was not for me, I was working at a nursing home in the physical therapy department. Learning more about insurance and dealing with insurance companies made me lose interest. I did not want to become a physical therapist with the way the current healthcare system is structured.</p>\n<p>I was no longer sure what I wanted to do when I grew up. I made a plan, but it was not working out. During this time, my boyfriend was working on a tech startup. I enjoyed hearing about what they were working on, how they were building the product, and what technologies they were using. Then my boyfriend suggested I tried learning how to code. Since I was unsure of my next steps in my career, I decided to try it out to see if I even liked coding. I signed up for Codecademy and Treehouse. I started learning HTML and CSS. Then it happened, I became hooked. Every day I got home from work, I would get on my laptop and continue learning. </p>\n<p>When I started learning how to code, there were online resources, but not as many as there are today. I needed more in-depth content to continue my journey of learning how to code. I started looking into coding bootcamps. It was around October/November 2014, so coding bootcamps were beginning to pop up in the Seattle area. I researched the available ones and the programs they offered. I was extremely nervous thinking about quitting my job to switch careers and learn how to code. With some coaxing from my boyfriend, I took a leap of faith and applied to the General Assembly Web Development Immersive program. I was ecstatic when I got accepted! I was officially in the very first cohort of the Web Development Immersive (WDI) program in Seattle. </p>\n<p>The WDI program was a great experience, but I had my ups and downs. I remember my first two weeks in the program were tough. I wanted to quit. What we were learning wasn't sticking. All I could think about was that I left my job and, but I wasn't getting anything in class. However, then I had a breakthrough, and all of the pieces started to connect. </p>\n<p>The journey of learning how to code or learning any new technology contains ups and downs. One day I understood what I was learning, but then the next I would feel like nothing was making sense. </p>\n<p>I finished WDI in February 2015. I was nervous and excited to be starting my job search. I was busy networking, studying for interviews, and applying for jobs. I also got the opportunity to be a teaching assistant for the next WDI cohort at General Assembly. Being a TA was a helpful way for me to deepen my understanding of basic coding concepts as I helped other students through their learning process. </p>\n<p>I took me about a month and a half to find my first full-time web developer job. I got hired to be a Site Developer at Affirma Consulting. I was excited to start and learn. However, in the end, this job was not the best fit for me. I was doing a lot of SharePoint development, which was not my favorite, and I did not find interesting.</p>\n<p>After leaving Affirma Consulting, I was worked part-time, delivering groceries through Instacart while I applied for jobs and studied for interviews. After more networking, I got the opportunity to part-time work for a health care startup called Healthy Beeps as a Full Stack Developer. I learned a lot while working there, like Project Management, React.js, Agile Methodology, and more. However, since this was part-time, I was still working at Instacart delivering groceries to make ends meet. I wanted something full time so that I could have some stability in my life. </p>\n<p>A couple of months later, I got an interview at a company called Indigo Slate. I was interviewing for a Front End Developer position. I did not get the full-time job, but I did secure a contract doing SharePoint development. Even though it was SharePoint, I was excited because I was working on a project for a large commercial airline. I only say I know SharePoint development when I need to. It was getting easier to make ends meet with this contract and working part-time at Healthy Beeps. However, part-time and contract work still had a sense of instability. I was ready to level up my career. Then I heard about the Microsoft LEAP program. </p>\n<p>The career coach from General Assembly told me about the LEAP program. He said to me I needed to apply because they were looking for women and people of color to apply to the program. I applied, interviewed, and got accepted into the LEAP program as a part of cohort 3. (I think I will do another blog about the LEAP program another time.) The LEAP program was fantastic. It helped me level up my career. (I am planning on writing a separate blog post about the LEAP program.) I learned many skills and worked with technology I had not ever worked with before. </p>\n<p>When I finished the LEAP program, I did get an interview with my team, but there were more LEAP apprentices on the team than positions available. Looking back on it, that team was not a perfect fit for me. The role was a Software Engineering but incorporated tech evangelism. Being more introverted would have made it harder for me to thrive on that team. Eventually, I received an offer for a vender role at Microsoft on a small group that put on events around the world for Microsoft. I was in charge of working on their consumer-facing site and building demos for the team to use at events. I enjoyed this team and the responsibility I had. I was on able to work on that team for about a year due to the 18-month rule that Microsoft has in place for specific contract roles (certain contractor positions can only work for 18 months then have to take six months off before working at Microsoft as a contractor). As my contract was wrapping up, I continued looking for position and networking at Microsoft. I also kept in touch with the program manager for the LEAP program in case teams reached out to her for resumes. So as luck would have it, my current team did. So, in a way LEAP help me get a full-time position at Microsoft.</p>\n<p>When I received the full-time offer for my current role, I was beyond excited.  I had a feeling my interview went well, but I don't always trust that my feelings after interviews. There have been several times that I felt I did great but did not get the job. So, this is my story of how I became a Software Engineer. I am happy that I changed careers. I am one of the lucky people that can say I love what I do. </p>", "published": "2022-11-27T10:59:36.476Z", "lastEdited": "2022-11-27T10:59:36.476Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160845.png", "source": "https://dev.to/alyssaw90/how-i-became-a-software-engineer-4p38", "stars": [], "saves": []}}, {"model": "main.post", "pk": 21, "fields": {"author": 35, "title": "Corbind. First stable release.", "slug": "corbind-first-stable-release-21", "description": "Hi everyone! I don’t want to take a lot of time, so ...  Finally it happened. New Kotlin Coroutines r...", "content": "<p>Hi everyone! I don’t want to take a lot of time, so ...</p>\n<p>Finally it happened. New Kotlin Coroutines <a href=\"https://github.com/Kotlin/kotlinx.coroutines/releases/tag/1.3.0\">release</a> and the first stable (more or less) release of Flow API.\nI think it's time for me to release the first stable version of Corbind.</p>\n<h2>What is Сorbind?</h2>\n<p>Kotlin Coroutine binding APIs for Android UI widgets from the platform and support libraries. Supports <a href=\"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html\">Flow</a>, <a href=\"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-receive-channel/index.html\">ReceiveChannel</a> and <a href=\"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/actor.html\">Actor</a>.\nYou can learn more about how to use the library if you follow the link below.</p>\n<p>Github link: https://github.com/LDRAlighieri/Corbind\nCurrent version: 1.0.0</p>\n<p>Thank you.</p>", "published": "2022-11-27T10:59:40.109Z", "lastEdited": "2022-11-27T10:59:40.109Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160848.png", "source": "https://dev.to/ldralighieri/corbind-first-stable-release-51g7", "stars": [], "saves": []}}, {"model": "main.post", "pk": 22, "fields": {"author": 31, "title": "Serverless : Déployer une application Single Page (SPA) via OpenFaaS et K3S …", "slug": "serverless-deployer-une-application-single-page-spa-via-openfaas-et-k3s-22", "description": "Serverless : Déployer une application Single Page (SPA) via OpenFaaS et K3S …     Pour comme...", "content": "<hr />\n<p>title: Serverless : Déployer une application Single Page (SPA) via OpenFaaS et K3S …\npublished: true\ntags: docker,serverless,rancher,kubernetes\ncanonical_url: https://medium.com/@abenahmed1/serverless-d%C3%A9ployer-une-application-single-page-spa-via-openfaas-et-k3s-458a32957c0e</p>\n<hr />\n<h1>Serverless : Déployer une application Single Page (SPA) via OpenFaaS et K3S …</h1>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*R-8Zu_DV5g2bdz3fv3HyLA.jpeg\" /></p>\n<p>Pour commencer cette expérience, déploiement d’un premier noeud Ubuntu 18.04 LTS de type CX11 (à 1 vCPU et 2 Go RAM) dans Hetzner Cloud :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*1xcsMMGBpDejcHJuMXOxWQ.jpeg\" /></p>\n<p>en utilisant K3S et ce fichier <em>cloud-init</em> (en tant que noeud maître du cluster Kubernetes) :</p>\n<ul>\n<li><a href=\"https://k3s.io/\">k3s: Lightweight Kubernetes</a></li>\n<li><a href=\"https://www.hetzner.com/cloud\">Truly thrifty cloud hosting - Hetzner Online GmbH</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*_Yd_QAfZj_0i3aomZJb90Q.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vqD3MUUbu7Ln3vteuIgzKQ.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ch6omo7gObjvlIXUXJOUPQ.jpeg\" /></p>\n<p>Le noeud maître est prêt :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*fJXFhFW3lB-m68mv_V0_jg.jpeg\" /></p>\n<p>Puis je déploie trois autres noeuds Ubuntu 18.04 LTS (toujours de type CX11 à 1 vCPU et 2 Go de mémoire vive) via ce fichier <em>cloud-init</em> :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ScJgvQv_go5HR1P7Y_S7bQ.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8cpeKCRG84IBlyW63epBjw.jpeg\" /></p>\n<p>Le cluster Kubernetes est en fonction :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*SdlGmLk_scpbF5gVkYqJGg.jpeg\" /></p>\n<p>J’utilise comme d’habitude ZeroTier en conjonction de MetalLB pour assurer un service de Load Balancing dans ce cluster :</p>\n<ul>\n<li><a href=\"https://metallb.universe.tf/\">MetalLB</a></li>\n<li><a href=\"https://www.zerotier.com/download/\">Download</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Z7LyTy_noDhdTsxOZqBa9A.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*mCtR1Uoc0AmYsYFVr7kY5g.jpeg\" /></p>\n<p>```\n$ kubectl apply -f <a href=\"https://raw.githubusercontent.com/google/metallb/v0.8.1/manifests/metallb.yaml\">https://raw.githubusercontent.com/google/metallb/v0.8.1/manifests/metallb.yaml</a></p>\n<p>$ kubectl apply -f config.yaml\n```</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/908/1*16lvRGlAJTUswbyPav2sYQ.png\" /><figcaption>config.yaml</figcaption></p>\n<p>Je récupère sur le noeud maître OpenFaaS CLI :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*OJ_Fp9WIIiSAZd9Zw39LcQ.jpeg\" /></p>\n<p>J’installe Helm :</p>\n<p><a href=\"https://helm.sh/docs/using_helm/#installing-helm\">Helm - The Package Manager for Kubernetes.</a></p>\n<p>```\n$ curl -L https://git.io/get_helm.sh | bash</p>\n<p>$ kubectl --namespace kube-system create serviceaccount tiller</p>\n<p>$ kubectl create clusterrolebinding tiller-cluster-rule \\\n --clusterrole=cluster-admin --serviceaccount=kube-system:tiller</p>\n<p>$ kubectl --namespace kube-system patch deploy tiller-deploy \\\n -p '{\"spec\":{\"template\":{\"spec\":{\"serviceAccount\":\"tiller\"}}}}'\n```</p>\n<p>et je peux alors déployer OpenFaaS dans le cluster :</p>\n<p><a href=\"https://github.com/openfaas/faas-netes/blob/master/chart/openfaas/README.md\">openfaas/faas-netes</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Mdjz9hJO9oIogvM0G4ur6w.png\" /></p>\n<p>Via l’adresse IP fournie par le service de Load Balancing, je peux accéder au portail d’OpenFaaS :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*b7BjQOtUctamBowibdY_TA.jpeg\" /></p>\n<p>Je lance le déploiement de mon application Single Page (en l’occurence ici mon chatbot) :</p>\n<ul>\n<li><a href=\"https://github.com/deep75/pwafcbot\">deep75/pwafcbot</a></li>\n<li><a href=\"https://medium.com/@abenahmed1/serverless-publier-ses-progressive-web-apps-avec-les-azure-functions-proxies-65e400a973d1\">Serverless: Publier ses Progressive Web Apps avec les Azure Functions Proxies …</a></li>\n</ul>\n<blockquote>\n<p>via une fonction sur la base du template OpenFaaS (conçu par Alex Ellis) pour les sites statiques (utilisant Nginx pour servir le contenu). Celle-çi est d’abord construite localement sous la forme d’une image Docker qui sera poussée vers le Docker Hub (on peut également utiliser son Docker Registry privé) puis vers la plateforme OpenFaaS :</p>\n</blockquote>\n<p><a href=\"https://github.com/alexellis/static-site-template\">alexellis/static-site-template</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*JeHnThBfZSdHxx2Pm1Z_GA.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*8GYBaoUEanSrbr1l1EIr0A.png\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/892/1*D1j7ayMwtch3cmL57swcSw.png\" /><figcaption>vocalbot.yml</figcaption></p>\n<p>La fonction apparaît sur le portail OpenFaaS :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*742CfziIhzIvwor21yUmQA.jpeg\" /></p>\n<p>et je peux utiliser l’adresse fournie au moment du déploiement de la fonction pour accéder à mon chatbot :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/799/1*YbtUR2f5pJle1NJFEK3pvw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/702/0*rSs19Pty_iHdTFKa.jpg\" /></p>\n<p>Une autre variante sur la base du template OpenFaaS Node.js 10 Express :</p>\n<p><a href=\"https://github.com/openfaas-incubator/node10-express-template\">openfaas-incubator/node10-express-template</a></p>\n<p>Je récupère le template et je crée ma nouvelle fonction en m’inspirant du projet Leaderboard-app d’Alex Ellis sur Github :</p>\n<ul>\n<li><a href=\"https://www.openfaas.com/blog/serverless-single-page-app/\">How to build a Serverless Single Page App</a></li>\n<li><a href=\"https://github.com/alexellis/leaderboard-app\">alexellis/leaderboard-app</a></li>\n</ul>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZwrdrzFcGBUDYvqeDukeuw.png\" /></p>\n<p>Il utilise ce fichier <em>handler.js</em> qui permet de pointer vers le répertoire contenant la page web du Chatbot :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*i2ZJDfbkSmJ2HE5AVh4X4w.png\" /><figcaption>handler.js</figcaption></p>\n<p>avec cette dépendance minimale :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bkwlq1iuy7SsCBIWURoZ2A.png\" /><figcaption>package.json</figcaption></p>\n<p>Lancement de la construction de la nouvelle fonction :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*RLmKGOXtScHkqFenzeVKxA.png\" /></p>\n<p>Suivi de la phase de <em>“Push &amp; Deploy”</em> du Docker Hub vers OpenFaaS :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*OMaSBbaCsdQfCE5MGC1EHw.png\" /></p>\n<p>La fonction est déployée :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ZwrGO1V4TkxX2jOlNo7Jzw.jpeg\" /></p>\n<p>L’adresse retournée me permet d’accéder une nouvelle fois vers le contenu statique du chatbot :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/792/1*kU9fnE3WmuFplVaRvu6AaA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ghe6pamrkAQLMinh2_x07A.jpeg\" /></p>\n<p>Je peux vérifier via le déploiement d’un petit serveur Rancher que le tout ne consomme pas beaucoup de ressources :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TUuo1gRi47MofYcVEDcpfg.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*sleZqKRjDlJ30gspe4KXqA.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Upf6iKshUiZDRlzVCv3uFw.jpeg\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*D_IIE9Q7ybm8Xa55X0mTzw.jpeg\" /></p>\n<p>Alex Ellis propose d’aller plus loin avec une nouvelle stack PLONK apparemment soutenue par la Cloud Native Computing Foundation (CNCF) :</p>\n<p><a href=\"https://www.openfaas.com/blog/plonk-stack/\">Introducing the PLONK Stack for Cloud Native Developers</a></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*WQtjqYDVozm_s7_x.jpg\" /></p>\n<p>On retrouve là une ressemblance avec la stack FONK proposé sur Github par la société Serverless :</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/654/0*yG_DIpbINhQyIPTl.jpeg\" /></p>\n<ul>\n<li><a href=\"http://fonk-apps.io/\">FONK</a></li>\n<li><a href=\"https://github.com/fonk-apps/fonk-examples/blob/master/deploy.md\">fonk-apps/fonk-examples</a></li>\n<li><a href=\"https://serverless.com/blog/introducing-fonk/\">Introducing FONK: a serverless LAMP stack for K8S</a></li>\n</ul>\n<p>Comme le rappelle cet ancienne expérience que j’avais réalisée :</p>\n<p><a href=\"https://medium.com/@abenahmed1/serverless-d%C3%A9ploiement-et-test-de-la-stack-fonk-faas-object-store-nosql-kubernetes-via-2b6ccf5ebf05\">Serverless : déploiement et test de la stack FONK (FaaS — Object store — NoSQL — Kubernetes) via…</a></p>\n<p>A voir si la nouvelle stack PLONK permettra de populariser cette nouvelle génération d’architecture Web qui combine ces technologies dites “<em>Cloud Native”</em> …</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/604/0*5G8thvu0bc1ERciL.jpg\" /></p>\n<p>A suivre !</p>", "published": "2022-11-27T10:59:42.111Z", "lastEdited": "2022-11-27T10:59:42.111Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160850.png", "source": "https://dev.to/deep75/serverless-deployer-une-application-single-page-spa-via-openfaas-et-k3s-41gk", "stars": [], "saves": []}}, {"model": "main.post", "pk": 23, "fields": {"author": 36, "title": "On being a professional", "slug": "on-being-a-professional-23", "description": "What does it mean to be a professional ?", "content": "<hr />\n<p>title: On being a professional\npublished: true\ndescription: What does it mean to be a professional ?\ntags: career, discuss</p>\n<hr />\n<h1>Introduction</h1>\n<p>Lately, I've been thinking about what it means to be a professional in our line of work. It seems that being a professional, in our jobs and a lot of others, is about making money. You make enough money to sustain yourself, then you're a professional. Or, you have a certain degree or certification, there you go, you made it. Does the knowledge or money aspect of the job makes someone a professional ? </p>\n<p>After thinking about it, it looks like being a professional is more about a mindset, a behavior. Which would mean you could act and think like a professional one day, and be an amateur another day. So, here are a collections of thoughts, let's talk about it.</p>\n<h1>What is a professional ?</h1>\n<p>If someone shouldn't be considered a professional based on the money they make or the degrees they obtained, how would we define a professional ?</p>\n<p>I believe the notion is very subjective. While we may agree on certain key points, each person will have a very different opinion on the matter. To me, I think the list would include ( and not be limited to ) :</p>\n<ul>\n<li>Having principles.</li>\n</ul>\n<p>And <em>humane</em> ones. You could have the principle to always fuck over customers to get as much money as possible. That works, a lot of people/companies do it. But I believe a professional has principles that will benefit the greater good. Even if the greater good is always a debatable concept, I believe each person's conscience can somewhat be guided towards it.</p>\n<ul>\n<li>Doing what is right</li>\n</ul>\n<p>The previous point could be the only one, really, but it implies a lot of others things. If you have those principles, always wanting to improve the world around you, it would mean you have to say <em>No</em> to certain people when you are asked things that do not comply to your principles. That might mean saying <em>No</em> to your boss, colleagues, clients or customers. Saying <em>No</em> also means you will have to face the consequences, whatever they may be. Because those principles shouldn't be concepts a professional gives up in the face of adversity. </p>\n<ul>\n<li>Taking responsibility</li>\n</ul>\n<p>It also means that when a professional fucks up, that person owns it. No excuse, no bullshit, no trying to blame anyone or anything else. A professional has the right to make mistakes, but a professional always brings solutions to problems he created.</p>\n<ul>\n<li>Not being perfect.</li>\n</ul>\n<p>A professional is not synonym with <em>perfect</em>, or <em>never wrong</em> or <em>10x</em> or <em>ninja</em> or whatever... A professional is not immune to failure and mistakes. A professional does not know everything. I believe the difference between a professional and an amateur is that the professional will admit, hell, even embrace those shortcomings. They have to be viewed as opportunities to grow and learn. Not opportunities to lie about the knowledge we wish we had. Don't know the solution to a problem ? Tell the truth, and find a solution. </p>\n<p>I also think a professional will always strive to be better, to improve his skills. Now, some might want to improve their weaknesses, other might only want to improve their strengths. And I think it is perfectly fine. As long as you are honest with yourself, and to others, about what you know and don't know, there are no right or wrong path to improve yourself. </p>\n<p>This would also imply that a professional is predictable and reliable. The truth always comes out, we know what to expect. A professional should be someone you can trust. You wanna trust your doctors or your mechanics, you should trust a software developer the same way.</p>\n<h1>Am I a professional ?</h1>\n<p>Well, here comes the tough question. With all that in mind ? Do I consider myself a professional ?</p>\n<h3>No, not yet.</h3>\n<p>I've been making money with this craft for more than 3 years now. I'm better than I was when I started. But my choices, attitudes and behaviors have not been the ones of a professional.</p>\n<p>The first job I had as a paid software developer was the toughest one for me. I had little idea of what I was doing. I had little knowledge of the company I was working for. And my principles were non-existent. I've always been pretty honest about what I don't know, and I'm proud of that. But, after a while, I discovered in details what kind a product the company I was working for made, and how they marketed it to their customers. It wasn't illegal, but it was definitely unethical. </p>\n<p>It should have left. Right there, right then, I should have started to look for another job and get the fuck outta there. I didn't... When you have shitty principles, or when you are ready to compromise on those principles, you give ground. I was well paid, I had bills to pay, so I decided to stay. The boss and colleague ended up being douchebags and I never said no to anything they said. I was an amateur, I did the job. Even if the job didn't feel right to me, I did it for the paycheck...</p>\n<p><strong>Doing it for the paycheck... Never again</strong></p>\n<p>I stayed more than 2 years. I was miserable. I barely wanted to get out of bed in the morning... I don't think that being a professional means I should have left my job right away. I couldn't. But I should have saved more money, look for a job, and leave as soon as I had the opportunity. I <em>chose</em> to stay, and that was a mistake, an amateur's mistake.</p>\n<p>Since then, I've been extremely careful about who I work with. I do extensive research, make sure the people are respectful and that we are building something that brings value to the world. But I wouldn't consider myself a professional yet. </p>\n<p>I wish I could say <em>No</em> when I'm asked to do stuff I don't believe in. Even if the occasion has not presented itself yet since the last shitty client, I'm not sure I will have the strength to do it. I wish I could say I will not compromise the quality of my work under any circumstances, because it's not what a professional should do, but I don't think I'm there yet.</p>\n<p>But I'm working on it. I get better every damn day. I learn new things that allow me to be a better problem solver. I ask questions to understand why people want me to do certain things. I'm slowly building the habits to become a professional I can be proud of. It will take time, and will most likely be a lifelong journey, but I'll make sure to be proud of that journey and the decisions I make along the way.</p>\n<h2>Be professional</h2>\n<p>Are you a professional by your standards ? If yes, why ? If not, why not ? </p>\n<p>I think we all have the proper values inside ourselves to make sure technology makes the world a better place. But it takes a lot of courage to follow our hearts, follow our minds to build that place. Because it's easy to believe that giving up those principles, at the scale of one individual, means nothing, that we can afford it. I don't believe we do anymore. </p>\n<p>Technology makes this world run. And we have some knowledge to make the technology work. Come to think of it, we have some power in this world. At my very small scale, in the small circle I have full control of, which includes only myself, I can at least make sure that I won't write code that could do harm to anyone or anything.</p>\n<p>I've been caught once, won't happen again.</p>\n<p>Than you for reading, and if you have a different take on what it is to be a professional, I would love to read it.:heart:</p>", "published": "2022-11-27T10:59:45.691Z", "lastEdited": "2022-11-27T10:59:45.691Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160851.png", "source": "https://dev.to/damcosset/on-being-a-professional-h8h", "stars": [37], "saves": [37]}}, {"model": "main.post", "pk": 24, "fields": {"author": 38, "title": "Typescript. Simple React components.", "slug": "typescript-simple-react-components-24", "description": "How to write components with friendly interface, but also with strict typings.", "content": "<hr />\n<p>title: Typescript. Simple React components.\npublished: true\ndescription: How to write components with friendly interface, but also with strict typings.\ntags: #react #typescript #beginners #tutorial</p>\n<hr />\n<p>Hello there. I very like to use React and Typescript. Almost in each new project need simple components, like atoms, for example: button, input, checkbox etc. I have some best practices to make it friendly for all members of team, but also with strict typings. Let's get a look, maybe it will be helpful for you too.</p>\n<h3>Button</h3>\n<p>```jsx\nimport React from 'react';</p>\n<p>interface IProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  block?: boolean; // Your some custom prop\n}</p>\n<p>export const Button: React.FunctionComponent<IProps> = ({ block, children, ...shared }) =&gt; {\n  return <button {...shared}>{children}</button>;\n}</p>\n<p>Button.defaultProps = {\n  type: 'button',\n}\n```</p>\n<p>That's it. You have custom <code>Button</code> component, that supports all native button attributes with strict typings. You can put common things for all buttons in project, like styles or some business logic.</p>\n<p>For use <code>import React from 'react'</code> instead of <code>import * as React from 'react'</code> add in your <code>tsconfig.json</code> property <code>esModuleInterop: true</code></p>\n<h3>Input</h3>\n<p>```jsx\nimport React from 'react';</p>\n<p>interface IProps extends Omit<React.InputHTMLAttributes\\<HTMLInputElement>, 'onChange' | 'value'> {\n  value: string;</p>\n<p>onChange(value: string): void;\n}</p>\n<p>export const Input: React.FunctionComponent<IProps> = ({ children, onChange, ...shared }) =&gt; {\n  return <input onChange={e => onChange(e.target.value)} {...shared} /&gt;;\n}</p>\n<p>Input.defaultProps = {\n  type: 'text',\n};\n```</p>\n<p>The Omit helper type was added in Typescript 3.5. If you use previous version of Typescript, just add this string:\n<code>type Omit&lt;T, K&gt; = Pick&lt;T, Exclude&lt;keyof T, K&gt;&gt;</code></p>\n<h3>Checkbox</h3>\n<p>```jsx\nimport React from 'react';</p>\n<p>interface IProps extends Omit<React.InputHTMLAttributes\\<HTMLInputElement>, 'onChange'> {\n  onChange(value: boolean): void;\n}</p>\n<p>export const Checkbox: React.FunctionComponent<IProps> = ({ children, \nonChange, ...shared }) =&gt; {\n  return <input onChange={e => onChange(e.target.checked)} {...shared} /&gt;\n}</p>\n<p>Checkbox.defaultProps = {\n  type: 'checkbox',<br />\n}\n```</p>\n<p>Now you can use it like here:</p>\n<p><code>jsx\n&lt;Checkbox checked={false} onChange={toggleCheckbox} /&gt;</code></p>\n<p>It is end of small tutorial. If it will be helpful for someone, I can continue to explain some good things of React and Typescript. Thanks for attention.</p>", "published": "2022-11-27T10:59:51.098Z", "lastEdited": "2022-11-27T10:59:51.098Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160852.png", "source": "https://dev.to/pretaporter/typescript-simple-react-components-occ", "stars": [38, 39, 40, 41, 42, 43, 44], "saves": [38, 42, 44]}}, {"model": "main.post", "pk": 25, "fields": {"author": 45, "title": "Firestore Modelling Data", "slug": "firestore-modelling-data-25", "description": "Instagram clone", "content": "<hr />\n<p>title: Firestore Modelling Data\npublished: true\ndescription: Instagram clone\ntags: firebase, firestore, data, modelling</p>\n<hr />\n<p>Hi,</p>\n<p>I want to create an instagram clone with firebase and found some limitations while working on the datastructure. </p>\n<p>As the documentation reccomends to keep the documents as small as possible and the collections big I have created this model.</p>\n<p>```\n+ Profile (collection)</p>\n<p>|--- uid (document)</p>\n<pre><code>  |--- userName (String)\n\n  |--- firstName (String)\n\n  |--- lastName (String)\n\n  |--- profileImgUrl (String)\n\n  |--- userName (String)\n\n  |--- UserPosts (collection)\n\n     |--- uid (document)\n\n        |--- title (String)\n\n        |--- createdAt (timeStamp)\n\n        |--- description (String)\n\n        |--- imgUrl (String)\n</code></pre>\n<p>```</p>\n<p>I have decided to go with this model because by splitting <code>Profile</code> and <code>Post</code> into seperate root collections I am not able to query Posts by <code>userName</code> without a second query after I get the <code>uid</code> of the user.</p>\n<p>My problem now is that I dont know how to write a query to get the posts of a user by <code>userName</code></p>", "published": "2022-11-27T11:00:06.932Z", "lastEdited": "2022-11-27T11:00:06.932Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160853.png", "source": "https://dev.to/nikomontana/firestore-modelling-data-1kmo", "stars": [46], "saves": [46]}}, {"model": "main.post", "pk": 26, "fields": {"author": 47, "title": "Read it or Throw it #213", "slug": "read-it-or-throw-it-213-26", "description": "https://read-it-or-throw-it.blogspot.com/2019/08/read-it-or-throw-it-213.html", "content": "<p>https://read-it-or-throw-it.blogspot.com/2019/08/read-it-or-throw-it-213.html</p>", "published": "2022-11-27T11:00:12.023Z", "lastEdited": "2022-11-27T11:00:12.023Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160855.png", "source": "https://dev.to/yaronwittenstein/read-it-or-throw-it-213-4bi5", "stars": [], "saves": []}}, {"model": "main.post", "pk": 27, "fields": {"author": 48, "title": "Adding ads to OpenSource projects", "slug": "adding-ads-to-opensource-projects-27", "description": "Hi all,   I'd started my day as always and, when I was checking Twitter, I saw a post with a...", "content": "<h3>Hi all,</h3>\n<p>I'd started my day as always and, when I was checking Twitter, I saw a post with an image showing somebody on github running an experiment about new ways to fund projects.</p>\n<blockquote>\n<p><strong>What's the experiment?</strong> Whenever standard 14 is installed, we'll display a message from a company that supports open source. Currently, these are Linode and LogRocket. The sponsorship pays directly for maintainer time. That is, writing new features, fixing bugs, answering user questions, and improving documentation.</p>\n</blockquote>\n<p>I understand how complicated is receiving support to OSS, specially when nobody wants to support your project but there are lot of downloads. In my opinion, there should be better ways to earn money instead of showing ads on terminals, we just have to go deeper and find it out.</p>\n<p>What do you think? Do you have a better idea to fund projects?</p>\n<p>Here's the <a href=\"https://github.com/standard/standard/issues/1381\">issue</a> on github if you're interested in check it out.</p>", "published": "2022-11-27T11:00:17.067Z", "lastEdited": "2022-11-27T11:00:17.067Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160858.png", "source": "https://dev.to/edrome/adding-ads-on-opensource-projects-32dj", "stars": [], "saves": []}}, {"model": "main.post", "pk": 28, "fields": {"author": 49, "title": "What Are Your Thoughts on Self-Comparison?", "slug": "what-are-your-thoughts-on-self-comparison-28", "description": "During one of the online courses I have taken, there was a discussion about the social comparison theory.", "content": "<hr />\n<p>title: What Are Your Thoughts on Self-Comparison?\npublished: true\ndescription: During one of the online courses I have taken, there was a discussion about the social comparison theory.\ntags: discuss, career, productivity, mentalhealth</p>\n<hr />\n<p>It’s effortless to compare one’s self to others. I struggled with it in the past and continuously had to remind myself that my day/life cannot measure up to someone else’s day or life.</p>\n<p>During one of the online courses I have taken, there was a discussion about the social comparison theory.</p>\n<p>The theory states that we determine our own social and personal worth based on how we stack up against others we perceive as somehow faring better or worse. It can be useful if we compare ourselves to others as a way of fostering self-improvement and motivation if we have a positive image of the self. However, because we are continually evaluating ourselves and others, these evaluations can also promote judgmental, biased, competitive, or superior attitudes.</p>\n<p>In fact, some researches have shown that people who often compare themselves to others report negative feelings of deep dissatisfaction, envy, guilt, and remorse, which means that by comparing yourself with others you can ruin your self-esteem!</p>\n<p>And comparing yourself with other influencers, for example, on Twitter or Instagram might make you believe that they are leading perfect lives. In reality, people rarely share their hard days on social media.</p>\n<p>I hope this mini-post can ignite a discussion in the comments, as I would love to hear your thoughts on self-comparison.</p>\n<p><strong>Have you compared yourself to the people you follow on social media? Do you think they have a better life than you? Why?</strong></p>\n<hr />\n<p><em>Ilona helps women developers to succeed in their careers without stress via her weekly newsletter. Sign up and <a href=\"https://www.ilonacodes.com/networking-cheat-sheet\">grab her networking cheat sheet as a bonus here</a>.</em></p>", "published": "2022-11-27T11:00:23.312Z", "lastEdited": "2022-11-27T11:00:23.312Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160862.png", "source": "https://dev.to/ilonacodes/what-are-your-thoughts-on-self-comparison-2bce", "stars": [50, 51, 52, 53, 54, 55], "saves": [51, 53, 55]}}, {"model": "main.post", "pk": 29, "fields": {"author": 56, "title": "little rust starter hint series: tests and TDD", "slug": "little-rust-starter-hint-series-tests-and-tdd-29", "description": "rust has a very easy way to test your code. Here you will learn the very basics how to start to solve a problem test driven in rust", "content": "<hr />\n<p>title: little rust starter hint series: tests and TDD\npublished: true\ndescription: rust has a very easy way to test your code. Here you will learn the very basics how to start to solve a problem test driven in rust\ntags: rust, beginners, programming, testing\nseries: little rust starter hint series\ncover_image: https://lh3.googleusercontent.com/NYGDLLWVuh_6CCeN5uM9r7gLXSjINF62oCXd2hME7O8CFl54Q32lLL9DHuiR8pXo1ObJQx_e7m8ExMxP-DCUxLtlxeId6JeLk83lWLYZ8eCQZdGQ19f-lcSpAyJkIz-4-RYWIJckC3E=w1000-h408-no</p>\n<hr />\n<p>Today we going to solve the <a href=\"https://dev.to/thepracticaldev/daily-challenge-47-alphabets-4cbn\">Daily Challenge #47 - Alphabets</a> in rust by applying test driven development (TDD) methodologies. Don't worry we will do very little steps and the full code is available as repo (link at the end).</p>\n<p>For those that are familiar with <a href=\"https://rspec.info/\">rspec</a> like testing frameworks as karma or mocha are known in Javascript I will provide a nice bonus and show how we can use the rspec syntax as candy to make our test code more expressive and readable.</p>\n<h2>the problem statement</h2>\n<p>first things first, the problem statement from the challenge is</p>\n<blockquote>\n<p>In today's challenge, you are asked to replace every letter with its position in the alphabet for a given string where 'a' = 1, 'b'= 2, etc.\nFor example:\nalphabet_position(\"The sunset sets at twelve o' clock.\") should return 20 8 5 19 21 14 19 5 20 19 5 20 19 1 20 20 23 5 12 22 5 15 3 12 15 3 11 as a string.</p>\n</blockquote>\n<h2>first test first</h2>\n<p>let's start a new project by <code>cargo new</code> and let's prepare the source files</p>\n<p><code>bash\ncargo new dev_challenge_47\ncd dev_challenge_47 &amp;&amp; mkdir -f tests\ntouch tests/alphabet_position_test.rs</code></p>\n<p>So now let's start with translating the requirement into code, that is for now</p>\n<blockquote>\n<p>for a given string where 'a' = 1</p>\n</blockquote>\n<p>```rust\n// test/alphabet_position_test.rs\nuse dev_challenge_47::alphabet_position;    // &lt;-- we don't have this function yet</p>\n<h1>[test]                                     // &lt;-- how to define a test in rust</h1>\n<p>fn it_should_replace_the_a_with_1() {        // &lt;-- we express the requirement as name\n    let replaced = alphabet_position(\"a\");\n    assert_eq!(replaced, \"1\");              // &lt;-- we assert that the both are equal\n}\n```</p>\n<p>At this point the code will even not compile, so lets write the minimal implementation to get failing tests but a compiling project.</p>\n<p><code>rust\n// src/lib.rs\npub fn alphabet_position(s: &amp;str) -&gt; String {\n    String::from(\"Hello\")\n}</code></p>\n<p>So we just return a predefined \"Hello\" String and that's it.</p>\n<p>When we run now <code>cargo test</code> then we will get a lot of output but also</p>\n<p><code>bash\ntest it_should_ignore_non_characters ... FAILED</code></p>\n<p>Nice, we got our first test failing.</p>\n<h2>let the test pass</h2>\n<p>Let's go and fix our first test by changing the code. We could do this now by the very naive implementation that would be replace 'a' with '1' but that step I would skip and jump to the refactoring of that. Where we would use like ascii math: <code>x - 'a' + 1</code></p>\n<p><code>rust\n// src/lib.rs\npub fn alphabet_position(s: &amp;str) -&gt; String {\n    s.chars()                             // &lt;-- get an iterator over all chars\n        .map(|x| -&gt; u8 { x as u8 - 'a' as u8 + 1 })   // &lt;-- substract the ascii value of 'a'\n        .map(|x| -&gt; String { x.to_string() })         // &lt;-- convert the char to a String\n        .collect::&lt;Vec&lt;String&gt;&gt;()                     // &lt;-- collect a Vector of String\n        .join(\" \")                                    // &lt;-- join the Strings by whitespace\n}</code></p>\n<p>Here are a lot of things to learn..</p>\n<ul>\n<li><code>.chars()</code> returns an iterator of chars</li>\n<li><code>.map</code> apply a closure that does the ascii math.</li>\n<li><code>.map</code> apply a closure that converts the char to a String</li>\n<li><code>.collect</code> collects all the entries to a vector</li>\n<li><code>.join</code> will join all string together into one</li>\n</ul>\n<p>After rerun <code>cargo test</code> we see that our little test is now green.</p>\n<h2>next iteration</h2>\n<p>as you might guess already, now we go back to our tests and write another one that. That is basically the cycle of TDD, we just write as many tests and code so that little by little we hit all the requirements. This time we add this test here:</p>\n<p>```rust\n// test/alphabet_position_test.rs</p>\n<h1>[test]</h1>\n<p>fn it_should_replace_the_capital_a_with_1() {\n    let replaced = alphabet_position(\"A\");\n    assert_eq!(replaced, \"1\");\n}\n```</p>\n<p>Note: I'm so lazy that I don't want to rerun <code>cargo test</code> all over, this is why I use <code>cargo watch -x check -x test</code> that watches for changes on any file and will rerun the tests automatically. Checkout <a href=\"https://docs.rs/crate/cargo-watch/3.2.0/source/README.md\">the docs</a> to install that.</p>\n<p>Now let's fix the failing test again</p>\n<p><code>rust\n// src/lib.rs\npub fn alphabet_position(s: &amp;str) -&gt; String {\n    s.to_lowercase()      // &lt;-- adding this line\n        .chars()\n        .map(|x| -&gt; u8 { x as u8 - 'a' as u8 + 1 })\n        .map(|x| -&gt; String { x.to_string() })\n        .collect::&lt;Vec&lt;String&gt;&gt;()\n        .join(\" \")\n}</code></p>\n<p>Now we lower case it all, so that our math will not fail.</p>\n<h2>another iteration</h2>\n<p>ok before we hit to the full sentence lets have a look at corner cases:</p>\n<p>```rust\n// test/alphabet_position_test.rs</p>\n<h1>[test]</h1>\n<p>fn it_should_ignore_non_characters() {\n    let replaced = alphabet_position(\"'a a. 2\");\n    assert_eq!(replaced, \"1 1\");\n}\n```</p>\n<p>ok let's fix that test as well, by skipping all non letters:</p>\n<p><code>rust\npub fn alphabet_position(s: &amp;str) -&gt; String {\n    s.to_lowercase()\n        .chars()\n        .filter(|x| x.is_alphabetic())        // &lt;-- adding this line here\n        .map(|x| -&gt; u8 { x as u8 - 'a' as u8 + 1 })\n        .map(|x| -&gt; String { x.to_string() })\n        .collect::&lt;Vec&lt;String&gt;&gt;()\n        .join(\" \")\n}</code></p>\n<p>alright, I couldn't think of any more corner cases, so it's always good to verify a full test case if you have one. Luckily we got one in the challenge description for free:</p>\n<p>```rust</p>\n<h1>[test]</h1>\n<p>fn it_should_replace_the_sentence() {\n    let replaced = alphabet_position(\"The sunset sets at twelve o' clock.\");\n    assert_eq!(\n        replaced,\n        \"20 8 5 19 21 14 19 5 20 19 5 20 19 1 20 20 23 5 12 22 5 15 3 12 15 3 11\"\n    );\n}\n```</p>\n<p>And as you can see that test is as well green without any code changes. Well done :)</p>\n<h2>Specs ftw</h2>\n<p>as mentioned above I want to show how we can rewrite our tests now with rspec like syntax to make it even more expressive. For this I will use <a href=\"https://crates.io/crates/speculate\">a crate called speculate</a> that comes with that handy candy. Let's add that dependency.</p>\n<p><code>bash\n$ cat &gt;&gt; Cargo.toml\n[dev-dependencies]\nspeculate = \"0.1\"\n^D</code></p>\n<p>For the sake of demonstration I will create a new test file (<code>touch test/alphabet_position_spec.rs</code>) and keep the old one. But you can also refactor the existing one.</p>\n<p>```rust\n// test/alphabet_position_spec.rs\nuse dev_challenge_47::alphabet_position;\nuse speculate::speculate;</p>\n<p>speculate! {                  // &lt;-- it's a macro but who cares\n    describe \"alphabet_position\" {\n        it \"should replace 'a' with 1\" {\n            assert_eq!(alphabet_position(\"a\"), \"1\");\n        }\n        it \"should replace 'A' with 1\" {\n            assert_eq!(alphabet_position(\"A\"), \"1\");\n        }\n        it \"should ignore non characters\" {\n            assert_eq!(alphabet_position(\"'a a. 2\"), \"1 1\");\n        }\n        it \"should replace the full test sentence\" {\n            assert_eq!(\n                alphabet_position(\"The sunset sets at twelve o' clock.\"),\n                \"20 8 5 19 21 14 19 5 20 19 5 20 19 1 20 20 23 5 12 22 5 15 3 12 15 3 11\"\n            );\n        }\n    }\n}\n```</p>\n<p>That looks very nice to my Eyes, how about yours?</p>\n<p>The only thing that I have to complain about is the out put when running <code>cargo test</code>, it's not that nice as you might be used to it from karma or others.</p>\n<p><code>sh\nrunning 4 tests\ntest speculate_0::alphabet_position::test_should_ignore_non_characters ... ok\ntest speculate_0::alphabet_position::test_should_replace_A_with_1 ... ok\ntest speculate_0::alphabet_position::test_should_replace_a_with_1 ... ok\ntest speculate_0::alphabet_position::test_should_replace_the_full_test_sentence ... ok</code></p>\n<p>You can still get it, and the code gets more expressive and readable, that is for me important enough to use this nice crate.</p>\n<p>used versions:</p>\n<p><code>bash\n$ cargo --version &amp;&amp; rustc --version\ncargo 1.37.0 (9edd08916 2019-08-02)\nrustc 1.37.0 (eae3437df 2019-08-13)</code></p>\n<p>Please don't forget to share your feedback, and let me know what was your learning if there was any.</p>\n<p><a href=\"https://github.com/sassman/edu-tdd-rust\">The entire code can be found on github</a></p>", "published": "2022-11-27T11:00:35.403Z", "lastEdited": "2022-11-27T11:00:35.403Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/5422m4n/little-rust-starter-hint-series-tests-and-tdd-3jim", "stars": [], "saves": []}}, {"model": "main.post", "pk": 30, "fields": {"author": 57, "title": "Fully Accessible Accordion with HTML & CSS(no JS)", "slug": "fully-accessible-accordion-with-html-cssno-js-30", "description": "how to create an accordion using only HTML & CSS(no JS) using semantic markup", "content": "<hr />\n<p>title: Fully Accessible Accordion with HTML &amp; CSS(no JS)\npublished: true\ndescription: how to create an accordion using only HTML &amp; CSS(no JS) using semantic markup\ntags: html, css, semantic, accessible</p>\n<hr />\n<p>Recently I came across <code>details</code> and <code>summary</code> HTML tags. Their basic use is to create an accordion-type UX out of the box.</p>\n<p>I have previously worked on creating an accordion-like structure using <code>div</code> and <code>span</code> and JS to handle opening and closing. On the JS there is logic to keep track which element is open if the user clicks on another one close all and open clicked one. Over time this can get complicated.</p>\n<p>Having discovered these tags, I worked a prototype to achieve the functionality with plain HTML &amp; CSS</p>\n<p>Let's go over the steps for that</p>\n<p><code>details</code> tag is the parent, where the below 2 tags are enclosed.\n<code>summary</code> tag is where the headline users see by default(like a question for FAQ's) is held.\n<code>p</code> or <code>div</code> can be the response(answer for FAQ's) or more details around the headline.</p>\n<p>Every browser supports the accordion-style arrow out of the box. The good part here is that using CSS we can style it however we choose.</p>\n<p><img alt=\"Alt Text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/ovmpr3bdtauaizikgt6u.png\" /></p>\n<p>Now, let try to style it how we choose. I decided to do see if I can replicate the pattern we have at PayPal.</p>\n<p>To do this, we first need to hide the browser's default <code>marker</code></p>\n<p><code>css\nsummary::-webkit-details-marker {\n  display: none;\n}</code></p>\n<p>Next step, in my case, add styles for open &amp; close arrows.</p>\n<p>```css\n// creates the close arrow\nsummary:after {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  transform: rotate(45deg);\n  transition: all 0.3s ease-out;\n  border-bottom: 1px solid #cbd2d6;\n  border-right: 1px solid #cbd2d6;\n  float: right;\n}</p>\n<p>// creates the open(inverted) arrow.\ndetails[open] summary:after {\n  content: \"\";\n  transform: rotate(-135deg);\n  margin-top: 8px;\n}\n``` </p>\n<p>On the <code>details</code> tag, there is also an option to have it open by default. Use the <code>open</code> attribute to do that. Goes like <code>&lt;details open&gt;</code>.</p>\n<p>{% codesandbox accordion-with-details-tag-vqwsb %}</p>\n<p>Other than Edge &amp; IE(of course) all other <a href=\"https://caniuse.com/#search=details\">browsers support these tags</a>.</p>\n<p><img alt=\"Alt Text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/4rybcsci0hoiks60blwd.png\" /></p>\n<p>This is basic(getting starter) guide. For more detailed and advanced examples I recommend <a href=\"https://css-tricks.com/quick-reminder-that-details-summary-is-the-easiest-way-ever-to-make-an-accordion/\">this article</a> on CSS Tricks.</p>", "published": "2022-11-27T11:00:38.132Z", "lastEdited": "2022-11-27T11:00:38.132Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160864.png", "source": "https://dev.to/hozefaj/fully-accessible-accordion-with-html-css-no-js-59n9", "stars": [58, 57], "saves": [57]}}, {"model": "main.post", "pk": 31, "fields": {"author": 59, "title": "Create your own node framework", "slug": "create-your-own-node-framework-31", "description": "I've created a simple node framework just to get the idea behind node frameworks like express.  check...", "content": "<hr />\n<p>title: Create your own node framework\npublished: true\ndescription: \ntags: javascript,node,beginners</p>\n<hr />\n<p>I've created a simple node framework just to get the idea behind node frameworks like express.</p>\n<p>check the code in this repo.</p>\n<p>{% github theashraf/bare-node %}</p>", "published": "2022-11-27T11:00:43.149Z", "lastEdited": "2022-11-27T11:00:43.149Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160865.png", "source": "https://dev.to/theashraf/create-your-own-node-framework-38mi", "stars": [], "saves": []}}, {"model": "main.post", "pk": 32, "fields": {"author": 60, "title": "Angular theme provider", "slug": "angular-theme-provider-32", "description": "Providing theme provider is a MUST in component library. All the components should be able to gain ac...", "content": "<hr />\n<p>title: Angular theme provider\npublished: true\ndescription: \ntags: angular, themeprovider</p>\n<hr />\n<p>Providing theme provider is a MUST in component library. All the components should be able to gain access to the Theme Object. This includes palettes, spacings, sizings and many more. </p>\n<p>In Angular, providing the theme provider is easy to be accomplished as the Angular have this ability out-of-the-box.</p>\n<p>In this post we are using forwardRef and ngTemplate </p>\n<h2>forwardRef</h2>\n<p>Basically <a href=\"https://angular.io/api/core/forwardRef\">forwardRef</a> is just a function that captures a class reference into closure. By using forwardRef we be able to get access to the component reference and use it in others components.</p>\n<p>~~~javascript\nconstructor(\n  @Inject(forwardRef(() =&gt; YourComponentName))\n  private yourComponentName: YourComponentName\n) {}\n~~~</p>\n<h2>ng-template</h2>\n<p>ngTemplate can use properties of its parent context and can have its own private context.</p>\n<p>~~~html\n<parent>\n  <ng-template let-parentData1=\"data1\" let-parentData2=\"data2\">\n    <!-- The \"data1\" and \"data2\" is available to be used here -->\n  </ng-template>\n</parent>\n~~~</p>\n<blockquote>\n<p>In above example, the <b>data2</b> and <b>data2</b> is the data's from Parent Component</p>\n</blockquote>\n<h2>ThemeProviderComponent</h2>\n<p>ThemeProviderComponent is the root component or the parent component for the other components. All the components must be wrapped in this provider component in order to gain access to the theme object. It's highly recommended to wrap your entire app at the highest level (see below)</p>\n<p>~~~html\n<theme-provider>\n <app>\n  <layout>\n   <grid>\n    <div> \n    </div>\n   <grid>\n  <layout>\n </app>\n</theme-provider>\n~~~</p>\n<h3>ThemeProviderComponent snippet code</h3>\n<p>~~~javascript\n@Component({\n  selector: \"theme-provider\",\n  template: <code>&lt;ng-container *ngIf=\"childAsTemplate\"&gt;\n      &lt;ng-container *ngTemplateOutlet=\"template; context: theme\"&gt;&lt;/ng-container&gt;\n    &lt;/ng-container&gt;\n    &lt;ng-content *ngIf=\"!childAsTemplate\"&gt;&lt;/ng-content&gt;</code>\n})\nexport class ThemeProviderComponent implements AfterContentInit {\n  @ContentChild(TemplateRef, { static: false }) template!: TemplateRef<any>;\n  theme: any = {\n    palette,\n    scales\n  };\n  childAsTemplate: boolean = false;</p>\n<p>constructor() {}</p>\n<p>ngAfterContentInit() {\n    this.childAsTemplate = this.template &amp;&amp; true;\n  }\n}\n~~~</p>\n<h3>palette snippet code</h3>\n<p>~~~javascript\nconst palette = {\n  uiBlueDarker: \"#071d40\",\n  uiBlueDark: \"#0d3880\",\n  uiBlue: \"#184da8\",\n  uiBlueLight: \"#2765cf\",\n  uiBlueLighter: \"#e60278\"\n  ...\n};\n~~~</p>\n<h3>scales snippet code</h3>\n<p>~~~javascript\nconst scales = {\n  \"spacing-01\": \"0.125rem\",\n  \"spacing-02\": \"0.25rem\",\n  \"spacing-03\": \"0.5rem\",\n  \"spacing-04\": \"0.75rem\"\n  ...\n};\n~~~</p>\n<blockquote>\n<p><b>palette</b> and <b>scales</b> is the theme items provided for child components usage</p>\n</blockquote>\n<h2>usages</h2>\n<h3>used in Component</h3>\n<p>In this example, we created a button component that accept color and scale as an inputs and use the theme object provided by ThemeProviderComponent for <b>palette</b> and <b>scales</b> values.</p>\n<p>~~~javascript\n@Component({\n  selector: \"my-button\",\n  template: <code>&lt;button type=\"button\" [style.color]=\"themeProvider?.theme?.palette[color]\" [style.font-size]=\"themeProvider?.theme?.scales['spacing-0'+scale]\"&gt;\n      &lt;ng-content&gt;&lt;/ng-content&gt;\n    &lt;/button&gt;</code>\n})\nexport class MyButtonComponent {\n  @HostBinding(\"class\") className;\n  @Input() color: string;\n  @Input() scale: number;</p>\n<p>constructor(\n    @Inject(forwardRef(() =&gt; ThemeProviderComponent))\n    private themeProvider: ThemeProviderComponent\n  ) {}</p>\n<p>}\n~~~</p>\n<blockquote>\n<p>we get the reference of ThemeProviderComponent by using forwardRef. In the template markup, we utilised the theme for palette and scale.</p>\n</blockquote>\n<p>Below is code implementation for my-button component</p>\n<p>~~~html\n<theme-provider>\n  <my-button \n    [color]=\"'uiBlue'\" \n    [scale]=\"9\">\n    Button\n  </my-button>\n</theme-provider>\n~~~</p>\n<h3>used in ngTemplate</h3>\n<p>In this example we customised my-button component and gain access the theme object thru ngTemplate</p>\n<p>~~~html\n<theme-provider>\n  <ng-template let-palette=\"palette\" let-scales=\"scales\">\n    <my-button>\n    <div \n      [style.color]=\"palette['uiYellow']\"\n      [style.background-color]=\"palette['uiPink']\"\n      [style.font-size]=\"scales['spacing-09']\"\n    >\n      Button\n    </div>\n  </my-button>\n  </ng-template>\n</theme-provider>\n~~~</p>\n<h2>Summary</h2>\n<p>The theme provider let us use the theme object like palette, spacing and sizing in scripting layer rather than stylesheet layer. For those who more comfortable in styling the component in JavaScript, this pattern can help to speed up styling works. </p>\n<p>You can get all the codes used in this post here - <a href=\"https://stackblitz.com/edit/theme-provider\">https://stackblitz.com/edit/theme-provider</a></p>", "published": "2022-11-27T11:00:46.715Z", "lastEdited": "2022-11-27T11:00:46.715Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160867.png", "source": "https://dev.to/aziziyazit/angular-theme-provider-59pe", "stars": [61], "saves": []}}, {"model": "main.post", "pk": 33, "fields": {"author": 62, "title": "How Codifying your life can increase your productivity", "slug": "how-codifying-your-life-can-increase-your-productivity-33", "description": "Every person on this earth desires productivity, essence of any growing business. If you are working...", "content": "<p>Every person on this earth desires productivity, essence of any growing business.\nIf you are working on any solo project you can relate to this. We strive to be productive all the time. This is our weapon against big competitors as we ship features fast.</p>\n<p>In his book <a href=\"https://makebook.io/\">MAKE</a>, Pieter Levels says:</p>\n<blockquote>\n<p>While working alone in my underwear on the side of my hotel bed with my MacBook and my coffee, I was able to outcompete million-dollar VC-funded teams of 30+ people.</p>\n</blockquote>\n<p>In short, he was being more productive as compared to a company with many employees.</p>\n<h2>My everyday struggle</h2>\n<p>As a developer and maker myself I strive to finish more tasks everyday. I usually work on my side-project Curatemails after work hours, ( I have a full-time job) and on weekends.\nI always end up wishing for more time to work on Curatemails. I guess everyone with a side project has this wish.\nI don’t want to quit my job, I love my job. I just want more time or may be increase my productivity.</p>\n<p><a href=\"https://medium.com/@aytekintank\">Aytekin Tank</a> (founder of Jotforms ) in his article writes:</p>\n<blockquote>\n<p>The key to better long-term productivity is the same as it was 100 years ago. It’s so simple: building good habits.</p>\n</blockquote>\n<p>I started inspecting my daily activities and realised I can increase my productivity by adjusting few of my habits.</p>\n<p>I decided to make small tweaks and not ground breaking changes. The first thing I decided to do was to minimize decision fatigue.</p>\n<blockquote>\n<p>What is decision fatigue?\nIt is basically the deterioration of our abilities to make wise decisions. This usually happens after a long session of continuous decision making. Our brain decides to take shortcuts instead of taking a rational one.</p>\n</blockquote>\n<p>It turned out that just by reducing the decision making on un-important tasks I was able to conserve brain power and therefore increase productivity. Here’s how:</p>\n<h2>Codify your least important tasks</h2>\n<p>The first task was to figure out things that are not important and repeat them everyday. Create a routine for them.</p>\n<p>I started waking up at the same time everyday.</p>\n<p>Consumed same breakfast everyday.</p>\n<p>Wore the same set of clothes to work everyday.</p>\n<p>Basically I was set to codify my least important tasks, so that I don’t have to think much about them. Preserve my brain power for important tasks. I created a script and followed it everyday without giving it a thought.</p>\n<p>The next logical step in this direction was to shift all my non-creative and robotic tasks to the end of the day. Non-creative tasks like answering emails, data-entry works or may be washing dishes.</p>\n<p>And it works, having a routined codified life helps you achieve goals, big or small. Basically you remove the decision making fatigue that comes with randomness.</p>\n<hr />\n<p>This article was originally published on my <a href=\"https://medium.com/@kanurag/indie-makers-how-codifying-your-life-can-increase-your-productivity-349094ba6106\">Medium</a></p>\n<p><sub><sup><sub><sup>Photo by <a href=\"https://unsplash.com/@jefflssantos?utm_source=medium&amp;utm_medium=referral\">Jefferson Santos</a> on <a href=\"https://unsplash.com/@jefflssantos?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></sup></sub></sup></sub></p>", "published": "2022-11-27T11:00:52.301Z", "lastEdited": "2022-11-27T11:00:52.301Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_33_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--TrA7RY28--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/a6xry86jjifzpwtsy44f.jpg", "source": "https://dev.to/ak_8085/how-codifying-your-life-can-increase-your-productivity-2nbg", "stars": [], "saves": []}}, {"model": "main.post", "pk": 34, "fields": {"author": 63, "title": "Adding a dynamic sitemap.xml to a next.js site", "slug": "adding-a-dynamic-sitemapxml-to-a-nextjs-site-34", "description": "While building my blog with Next.js I naturally wanted to support sitemaps because it can supposedly...", "content": "<p>While building my blog with Next.js I naturally wanted to support sitemaps because it can supposedly help out the search engines. For my small blog it will not make any difference but for larger sites it's more important. <a href=\"https://support.google.com/webmasters/answer/156184?hl=en#\">Google has this to say</a>.</p>\n<blockquote>\n<p>Using a sitemap doesn't guarantee that all the items in your sitemap will be crawled and indexed, as Google processes rely on complex algorithms to schedule crawling. However, in most cases, your site will benefit from having a sitemap, and you'll never be penalized for having one.</p>\n</blockquote>\n<h2>Page for the sitemap</h2>\n<p>The first thing we need to do is to create a <em>sitemap.xml.ts</em> page in the \"page\"-folder. This will expose a <em>https://yourdomain.com/sitemap.xml</em> url that you can submit to search engines. if you want to you can omit the <em>.xml</em> part and only use <em>/sitemap</em>, Google search console will accept the url anyway.</p>\n<p>We want to make sure that we set the <code>Content-Type</code> header to <code>text/xml</code> and to write our xml output to the response stream.</p>\n<p><code>export default class Sitemap extends React.Component {\n  static async getInitialProps({ res }: any) {\n    const blogPosts = getBlogPosts();\n    res.setHeader(\"Content-Type\", \"text/xml\");\n    res.write(sitemapXml(blogPosts));\n    res.end();\n  }\n}</code></p>\n<h2>Generating the base xml</h2>\n<p>For the site map we want to list all pages on the site, apart from the blog posts we have to add all additional pages that we want the search engines to find. </p>\n<p>I have an about page that I add manually together with the index page but if you have many pages I suggest you create an array and add them in a more automated way.</p>\n<p>I won't go into the inner workings of all the properties of a sitemap but I want to mention the <code>&lt;priority&gt;</code>-tag that lets you set a value between 0 and 1 indicating how important you think the page is.\n<code>&lt;lastmod&gt;</code> is used to indicate when the page was changed.</p>\n<p><code>``\nconst sitemapXml = (blogPosts: IBlogPostListItem[]) =&gt; {\n  const { postsXml, latestPost } = blogPostsXml(blogPosts);\n  return</code>\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?></p>\n<pre><code>&lt;urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.bergqvist.it/&lt;/loc&gt;\n  &lt;lastmod&gt;${latestPost}&lt;/lastmod&gt;\n  &lt;priority&gt;1.00&lt;/priority&gt;\n&lt;/url&gt;\n&lt;url&gt;\n  &lt;loc&gt;https://www.bergqvist.it/about&lt;/loc&gt;\n  &lt;priority&gt;0.5&lt;/priority&gt;\n&lt;/url&gt;\n${blogPostsXml}\n</code></pre>\n<p></urlset>`;\n};</p>\n<p>```</p>\n<h2>Adding xml for the blog posts</h2>\n<p>As mentioned above I want to add the dynamic blog post pages to the site map as well. In the <code>blogPostsXml</code>-function I generate xml for all posts and keep track of when the latest post was posted.</p>\n<p><code>const blogPostsXml = (blogPosts: IBlogPostListItem[]) =&gt; {\n  let latestPost = 0;\n  let postsXml = \"\";\n  blogPosts.map(post =&gt; {\n    const postDate = Date.parse(post.createdAt);\n    if (!latestPost || postDate &gt; latestPost) {\n      latestPost = postDate;\n    }\n    postsXml += `\n    &lt;url&gt;\n      &lt;loc&gt;${post.url}&lt;/loc&gt;\n      &lt;lastmod&gt;${postDate}&lt;/lastmod&gt;\n      &lt;priority&gt;0.80&lt;/priority&gt;\n    &lt;/url&gt;`;\n  });\n  return {\n    postsXml,\n    latestPost\n  };\n};</code></p>\n<h2>Last words</h2>\n<p>Make sure to check that you do not add any pages to the sitemap that is blocked in your robots.txt. </p>\n<p>If you have a large site with many pages (100 or more) you can split up the sitemap into several smaller ones, for very large sites this is a must!</p>\n<p>I hope this could help out someone and please leave a comment. <a href=\"https://gist.github.com/fredrikbergqvist/d2896af6563b38c3d880c0e135925ad1\">A full gist of the code can be found here</a></p>", "published": "2022-11-27T11:00:56.381Z", "lastEdited": "2022-11-27T11:00:56.381Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_34_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--MSKbj_UD--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/75ksb11omd8nh65gf15d.jpg", "source": "https://dev.to/fredrikbergqvist/adding-a-sitemap-to-next-js-354g", "stars": [64, 63], "saves": [64]}}, {"model": "main.post", "pk": 35, "fields": {"author": 65, "title": "Unit Tests Do Find Bugs", "slug": "unit-tests-do-find-bugs-35", "description": "This article is my \"attempt\" to define the benefits of proper levels of testing, from my own personal experience.", "content": "<hr />\n<p>title: Unit Tests Do Find Bugs\npublished: true\ndescription: This article is my \"attempt\" to define the benefits of proper levels of testing, from my own personal experience.\ntags: WebDev, JavaScript, Unit Testing, Bugs\nseries: Front-End Testing\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/60lq640y4iz1ur5d7tet.png</p>\n<hr />\n<p>(Sorry, lazily reused the same graphic above.)</p>\n<p>This article is my \"attempt\" to define the benefits of proper levels of testing. I had a larger project in the past that showed clear benefits from developer-level Unit and Integration Testing.</p>\n<p>I will update the contents here from time-to-time as I get more concrete numbers.</p>\n<h2>Script Parser and Engine</h2>\n<blockquote>\n<p>~120,000+ LINES-OF-CODE\n58 BUGS found before reaching production BY TESTING\n1 BUG found once the code was in production BY USERS</p>\n</blockquote>\n<p>This means ...</p>\n<blockquote>\n<p>1 BUG per ~2,034 LINES-OF-CODE</p>\n</blockquote>\n<p>From December 2016 until April 2017, about five months, I wrote the 120,000+ lines of code that became a parser and engine for a \"user\" scripting language. This language replicated (in JavaScript) one created on a mainframe with almost three decades of fine-tuning and optimization.</p>\n<p>While writing this code, I began writing Unit and Integration Tests. The integration tests being written were designed to tests the parts of this system against each other (for example, could I pass in a script to the parser and get an appropriate Active Syntax Tree back). I was not using Test-Driven Development (TDD).</p>\n<p>I also kept track of the number of bugs in the original code that did not make it to production ... 58 bugs found</p>\n<p>Once the code was <strong><em>released</em></strong> into production, there were two (2) issues and one (1) bug located by users running scripts against this code. The issues were due to incorrect specifications between what I was actually designing and what was needed.</p>\n<h2>Testing Checklist</h2>\n<blockquote>\n<p>~700 LINES-OF-CODE\n5 BUGS found before reaching production BY TESTING\n0 BUGS found once the code was in production BY USERS</p>\n</blockquote>\n<p>This means ...</p>\n<blockquote>\n<p>1 BUG per ~140 LINES-OF-CODE</p>\n</blockquote>\n<p>This application was actually the catalyst for this article. I designed an application for developers, designed to reinforce the testing ideals we were trying to propagate to the client's teams.</p>\n<p>Proper testing, in this case, allowed me to see a refactor of the logging methodologies that made the code easier to read and understand, as well as simpler to test.</p>\n<h2>Conclusions</h2>\n<p>This article is simply my \"attempt\" to define the benefits of proper testing levels. Having had a larger project in the past that showed clear benefits from developer-level Unit and Integration Testing, this seemed like a clear direction to go.</p>\n<p>I will update the contents here from time-to-time as I get more concrete numbers.</p>", "published": "2022-11-27T11:01:01.759Z", "lastEdited": "2022-11-27T11:01:01.759Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_35_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--DmGbrXT9--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/60lq640y4iz1ur5d7tet.png", "source": "https://dev.to/rfornal/unit-tests-do-find-bugs-50db", "stars": [66, 65], "saves": [66]}}, {"model": "main.post", "pk": 36, "fields": {"author": 67, "title": "Replace Conditional With Pattern-matching Refactoring", "slug": "replace-conditional-with-pattern-matching-refactoring-36", "description": "Use Pattern-matching and SwiftUI to build TicTacToe game", "content": "<hr />\n<p>title: Replace Conditional With Pattern-matching Refactoring\npublished: true\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/u8sq9fvehdywgjszaurw.png\ndescription: Use Pattern-matching and SwiftUI to build TicTacToe game\ntags: swift, ios, swiftui</p>\n<hr />\n<p>This is one of my favorite refactorings. It helps to group logic, making code easier to read and extend.</p>\n<p><em>I'm writing this blog post to use as a bookmark.</em></p>\n<p>Very often, I see code which looks like the following:</p>\n<p>```swift\nfunc fizzbuzz(i: Int) -&gt; String {</p>\n<p>if i % 3 != 0 {\n    if i % 5 != 0 {\n      return \"(i)\"\n    } else {\n      return \"Buzz\"    <br />\n    }\n  } else if i % 5 != 0 {\n    return \"Fizz\"\n  } else {\n    return \"FizzBuzz\"\n  }\n}</p>\n<p>for i in 1...100 {\n  print(fizzbuzz(i))\n}\n```</p>\n<p>It's quite a mental challenge to see all the possible states and predict what will hapen on given input number. Nested <code>if's</code> makes that part of the process even harder. \nWe have to find a good way to represent the base-case and make all of the illegal cases impossible.</p>\n<p><strong>Pattern matching</strong> is technique in which we compare the values (or in our example: <strong>tuple</strong> values).., in a way that we could <strong>deconstruct the complex data structure, and match it's internal values against pattern</strong>: <code>SomeComplexDataStructure == (0, 0)  ?</code>. </p>\n<p>Notice that we can use <code>_</code> as wildcard symbol, \n<code>case(0, _)</code> will match all values where <code>i%3=0</code> and <code>i%5=anyvalue</code></p>\n<p>```swift\nfunc fizzbuzz(i: Int) -&gt; String {\n  let someComplexDataStructure = (i % 3, i % 5) // Tuple complex data structure</p>\n<p>switch someComplexDataStructure {\n    case (0, 0): \"FizzBuzz\"\n    case (0, <em>): \"Fizz\"\n    case (</em>, 0): \"Buzz\"\n    case (<em>, </em>): \"(i)\"\n  }\n}\n```</p>\n<h3>Lets up our game on another level,</h3>\n<p>Let's go crazy and make a  <strong>Tic Tac Toe</strong> game, that stores all of it's internal state with <strong>enum</strong>'s and uses <em>pattern matching</em> to display each player moves on the board, find who is the winner,  ...</p>\n<p><em>Disclaimer: I'll use the  new SwiftUI syntax in to build the views (there is github download link bellow)</em></p>\n<p><img alt=\"1\" src=\"https://thepracticaldev.s3.amazonaws.com/i/r4dgck6frgekcqvy628x.png\" /></p>\n<p><img alt=\"2\" src=\"https://thepracticaldev.s3.amazonaws.com/i/d1o6lii97z9b94zwq388.png\" /></p>\n<p><img alt=\"3\" src=\"https://thepracticaldev.s3.amazonaws.com/i/azn49p6jqjq27v9lbppa.png\" /></p>\n<p><img alt=\"4\" src=\"https://thepracticaldev.s3.amazonaws.com/i/u8sq9fvehdywgjszaurw.png\" /></p>\n<p>Here there are the building block <strong>types</strong> of our game:</p>\n<p><code>Player</code> represents the two opponents in the game (<code>0</code> and <code>X</code>)\n<code>Filed</code> represents the squares on the board: can be either empty or marked by one of the players\n<code>GameState</code> represents which player turn is (<code>playing</code>), which player won the game or neither of the players have won (draw)</p>\n<p>```swift\nenum Player {\n  case cross, circle\n}</p>\n<p>enum Field {\n  case empty, marked(Player)\n}</p>\n<p>enum GameState {\n  case playing(Player), winner(Player), draw\n}\n```</p>\n<h3>SwiftUI</h3>\n<p>We are going to use SwiftUI <code>Views</code> to build the basic ui for our little game. \nSwiftUI is great way to quickly prototype interfaces, declaratively compose views and subviews... </p>\n<p>```swift\nimport SwiftUI\nimport PlaygroundSupport</p>\n<p>struct App: View {\n  var title: String\n  var body: some View {\n    VStack {\n      Text(title).foregroundColor(.gray)\n      Game()\n    }\n  }\n}</p>\n<p>PlaygroundPage.current.liveView = UIHostingController(rootView: App(\"TicTacToe\"))\n```</p>\n<p>We have <code>App</code> component that contains the <code>Game</code> component that contains <code>Board &gt; Board Row &gt; Square</code>...</p>\n<p><img alt=\"lists\" src=\"https://thepracticaldev.s3.amazonaws.com/i/8pvnvn1c92wd3gajuulw.png\" /></p>\n<h3>SwiftUI @State binding</h3>\n<p>The most beneficial thing about SwiftUI is the realtime binding between state variable's  changes and redrawing/refreshing the component itself.</p>\n<p>If we declare variable with <code>@State</code> modifier, every change that we make will <strong>refresh</strong> the subviews of our component:</p>\n<p>```swift\nstruct Game: View {\n  @State var board: [[Field]]\n  @State var gameState: GameState</p>\n<p>mutating func restart() {\n    self.board = ....\n  }\n  mutating func clickSquare(_ x: Int, y: Int) {\n    self.board = updateBoard(board, gameState, id: \"(x) (y)\")\n    self.gameState = updateGameState(board, gameState) \n  }</p>\n<p>var body: some View {\n        Board(state, onRestart, clickSquare)\n  }\n}\n```</p>\n<h3>Board variable [[Field]]</h3>\n<p>The <code>board</code> variable is <strong>2 dimentional matrix</strong> with all the board squares placed by x and y axis coordinate: Every square have value of either <code>empty</code> or <code>marked</code> by some of the players (<code>X</code>,<code>O</code> )</p>\n<p><code>let y = 0, x = 1</code></p>\n<p><code>board[y][x] = .marked(.cross)</code></p>\n<p><img alt=\"matrix\" src=\"https://thepracticaldev.s3.amazonaws.com/i/i1l6xyh4t37dv7dcmefv.png\" /></p>\n<p>When we click on a square, a function will set the <code>board[y][x] = .marked(.cross)</code> , then SwiftUI will <strong>refresh</strong> the views and show <code>x</code> under the square we clicked (because <code>board</code> is @State variable )</p>\n<h3>Let's go back to pattern matching!</h3>\n<p>But how we know if click on <code>board</code> in which square exatly to put <code>X</code> or should we put <code>O</code> alternatively?</p>\n<p>I'm going to remind us the rules of  TicTacToe:</p>\n<blockquote>\n<p>We can place mark one of the remaing empty squares on the board</p>\n<p>We can draw <code>O</code> or <code>X</code> inside it (depending on who's player turn is)</p>\n</blockquote>\n<p>The <code>updateBoard</code> function does this calculation and changes the <code>board</code> variable's field on x, y coordinate.</p>\n<p>```swift\nfunc updateBoard(_ board: [[Field]], _ gameState: GameState, id: String) -&gt; [[Field]] {\n  return board.enumerated().map { (indy, row) in\n    return row.enumerated().map { (indx, field) in\n      if \"(indx) (indy)\" != id { return field }   </p>\n<pre><code>        //if the board current field == clicked square field\n\n  switch (gamestate, field) {\n    //if square is alredy marked -&gt; return same field \n    (.playing(_), .marked(_)) =&gt; return field,\n            //if the square is empty -&gt; modify it -&gt; as marked by X or O player\n    (.playing(let player), .empty) =&gt; return .marked(player),\n    //otherwise in every other case, like when game is won, no started.. square is empty\n    (_, _) =&gt; return .empty\n  }\n}\n</code></pre>\n<p>}\n```</p>\n<p>Excelent the pattern matching will handle all of the <strong>other default cases</strong> for us for free!</p>\n<h3>Calculate the game winner, or next-turn player</h3>\n<p>In the next part we will calculate if the game is finished, who is the winner, or who's the next player turn is.</p>\n<p>I'll break the <code>updateGameState</code> function in tree parts: </p>\n<ol>\n<li>\n<p>Get the player for the next-turn</p>\n</li>\n<li>\n<p>Flatten the board 2dimensional matrix to 1dimentional array <code>[[x0y0, x1y0, x2y0] [x0y1, x1y1, x2y1]]</code> becomes <code>(x0y0, x1y0, x2y0, x0y1, x1y1, x2y1)</code> </p>\n</li>\n<li>\n<p>Find if the board contains 3 marked fields in row (horizontal, vertical, diagonal), and if so - change the <code>gameState</code> to <code>.winner</code></p>\n</li>\n</ol>\n<p>We're placing mark on square on the board (either <code>X</code> or <code>O</code>), then we calculate - do we have any series of 3 squares in row, and if we have 3 squares in row  <code>gameState = winner</code>\nIf we didn't finished playing the game (<code>gameState != winner</code> <code>gameState != draw</code>   we don't have winner but it's not draw either) , \nwe will continue playing and <code>gameState = .playing(the other player)</code></p>\n<p>```swift\nfunc updateGameState(_ board: [[Field]], _ state: GameState) -&gt; GameState {\n  // 1. \n  func nextPlayer(state: GameState) -&gt; GameStates {\n    switch state {\n      case .plaing(.cross): return .plaing(.circle)\n      case .plaing(.circle): return .plaing(.cross)    <br />\n      default: return state\n    }\n  }</p>\n<p>// 2.\n  let b = board.flatmap { $0 }\n  let flatBoard = (b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9])</p>\n<p>// 3.\n    switch flatBoard {\n    //horizontal lines\n    case (.marked(.X), .marked(.X), .marked(.X), <em>, </em>, <em>, </em>, <em>, </em>): return .winner(.cross)\n    case (<em>, </em>, <em>, .marked(.X), .marked(.X), .marked(.X), </em>, <em>, </em>): return .winner(.cross)\n    case (<em>, </em>, <em>, </em>, <em>, </em>, .marked(.X), .marked(.X), .marked(.X)): return .winner(.cross)\n        case (.marked(.O), .marked(.O), .marked(.O), <em>, </em>, <em>, </em>, <em>, </em>): return .winner(.circle)\n    case (<em>, </em>, <em>, .marked(.O), .marked(.O), .marked(.O), </em>, <em>, </em>): return .winner(.circle)\n    case (<em>, </em>, <em>, </em>, <em>, </em>, .marked(.O), .marked(.O), .marked(.O)): return .winner(.circle)\n    //vertical lines\n    case (.marked(.X), <em>, </em>, .marked(.X), <em>, </em>, .marked(.X), <em>, </em>): return .winner(.cross)\n    case (<em>, .marked(.X), </em>, <em>, .marked(.X), </em>, <em>, .marked(.X), </em>): return .winner(.cross)\n    case (<em>, </em>, .marked(.X), <em>, </em>, .marked(.X), <em>, </em>, .marked(.X)): return .winner(.cross)\n    case (.marked(.O), <em>, </em>, .marked(.O), <em>, </em>, .marked(.O), <em>, </em>): return .winner(.circle)\n    case (<em>, .marked(.O), </em>, <em>, .marked(.O), </em>, <em>, .marked(.O), </em>): return .winner(.circle)\n    case (<em>, </em>, .marked(.O), <em>, </em>, .marked(.O), <em>, </em>, .marked(.O)): return .winner(.circle)       <br />\n    // diagonal lines\n    case (.marked(.X), <em>, </em>, <em>, .marked(.X), </em>, <em>, </em>, .marked(.X)): return .winner(.cross)\n    case (<em>, </em>, .marked(.X), <em>, .marked(.X), </em>, .marked(.X), <em>, </em>): return .winner(.cross)\n    case (.marked(.O), <em>, </em>, <em>, .marked(.O), </em>, <em>, </em>, .marked(.O)): return .winner(.circle)\n    case (<em>, </em>, .marked(.O), <em>, .marked(.O), </em>, .marked(.O), <em>, </em>): return .winner(.circle)\n    // default -&gt; all fields filled -&gt; draw\n    case (.marked(<em>), .marked(</em>), .marked(<em>), .marked(</em>), .marked(.O), .marked(<em>), .marked(</em>), .marked(<em>), .marked(</em>)): return .draw\n    // still unfilled fields -&gt; switch to other player\n    default: return nextPlayer(state)\n  }\n}\n```</p>\n<p>In effect these 2 functions (<code>updateGameState</code>, <code>updateBoard</code>) handle the all of the possible business logic cases for the game: under 100-lines of code. </p>\n<h3>Conclusion</h3>\n<p>This is simple and natural refactoring.</p>\n<p>Use this refactoring when you see data being mapped to other data or behavior.</p>\n<p>One thing to take as lesson from here: Using <strong>data-driven</strong>  in stead of event driven (<code>if/else</code>) architecture is almost always better. </p>\n<p>Not every <code>switch</code> case is the same. Some times you can't easily convert a nested <code>ifs</code> to  <code>switch</code>, take for example the  <code>updateGameState</code> function -&gt; tuple with 9 or more values is difficult to write and maintain.</p>", "published": "2022-11-27T11:01:10.276Z", "lastEdited": "2022-11-27T11:01:10.276Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_36_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--GG683BSt--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/u8sq9fvehdywgjszaurw.png", "source": "https://dev.to/vaderdan/replace-conditional-with-pattern-matching-refactoring-3o96", "stars": [], "saves": []}}, {"model": "main.post", "pk": 37, "fields": {"author": 68, "title": "Send `Job` from Node-app to PHP-app via Queue. ", "slug": "send-job-from-node-app-to-php-app-via-queue-37", "description": "Hello guys!   In this article, I wanna share one very interesting and fast solution to executing jobs...", "content": "<p>Hello guys! </p>\n<p>In this article, I wanna share one very interesting and fast solution to executing <code>jobs</code> onto PHP side. <a href=\"https://github.com/spiral/app\">Spiral Framework</a> allows us to use <code>jobs</code> in an easy way. The whole done repository is <a href=\"https://github.com/spiral/app\">here</a>.</p>\n<p>At my contrived app, <code>Nodejs(Nestjs)</code> sends the job to <code>PHP</code>. \nLook at Nodejs <code>job</code>:\n```js\nimport {IJob} from \"../interfaces/job.interface\";</p>\n<p>export class Ping implements IJob {\n    readonly JOB = 'App.Job.Amqp.Ping'; //namespace(path) to job on PHP side</p>\n<pre><code>constructor(\n    private readonly value: string\n) {\n\n}\n</code></pre>\n<p>}\n<code>`job.interface`</code>js</p>\n<p>export interface IJob {\n    JOB: string;\n}\n<code>This `dto` will be sent to PHP-app via the queue (RabbitMQ). \nLook at `JobPusherService`:</code>js\nimport {Injectable} from \"@nestjs/common\";\nimport uuid4 from \"uuid/v4\";\nimport {IJob} from \"./interfaces/job.interface\";\nimport amqp from \"amqplib\";</p>\n<p>@Injectable()\nexport class JobPusherService {\n    readonly CONNECT = 'amqp://rabbit:rabbit@rabbitmq:5672';</p>\n<pre><code>async send(job: IJob) {\n    const server = await amqp.connect(this.CONNECT);\n    const channel = await server.createChannel();\n\n    const jobExecuting = job.JOB;\n\n    delete job.JOB;\n\n    channel.sendToQueue(\n        'contrived_queue',\n        Buffer.from(\n            JSON.stringify(job)\n        ),\n        {\n            headers: {\n                \"rr-id\": uuid4(),\n                \"rr-job\": jobExecuting,\n                \"rr-attempt\": 1000_000_000_000,\n                \"rr-maxAttempts\": 1000_000_000_000,\n                \"rr-timeout\": 1000_000_000_000,\n                \"rr-delay\": 1000_000_000_000,\n                \"rr-retryDelay\": 1000_000_000_000,\n            }\n        }\n    );\n}\n</code></pre>\n<p>}\n<code>``  \nThat one wraps up</code>dto` with necessary headers and push it into the queue.</p>\n<p>Move up to <code>PHP-app</code>. Underhood, Spiral Framework uses <a href=\"https://github.com/spiral/roadrunner\">roadrunner</a>. All necessary configuration is at <code>.rr.yml</code>:\n```yml</p>\n<h1>http service configuration.</h1>\n<p>http:\n  address: 0.0.0.0:8080</p>\n<p>http2:\n    # enable HTTP/2, only with TSL, enabled by default\n    enabled: true</p>\n<p>workers:\n    command: \"php app.php\"</p>\n<pre><code># max transfer channels, default 128\n</code></pre>\n<p>maxConcurrentStreams: 128</p>\n<p>ssl:\n    # force redirect to https connection\n    redirect: true</p>\n<pre><code># custom https port (default 443)\nport:  443\n\n# ssl cert\ncert: ./certs/server.crt\n\n# ssl private key\nkey: ./certs/server.key\n</code></pre>\n<h1>queue and jobs</h1>\n<p>jobs:\n  amqp:\n    addr: amqp://rabbit:rabbit@rabbitmq:5672/</p>\n<p>dispatch:\n    app-job-amqp*.pipeline: amqp</p>\n<p>pipelines:\n    amqp:\n      broker: amqp\n      queue:  contrived_queue</p>\n<p>consume: [\"amqp\"]</p>\n<p>workers:\n    command: \"php app.php\"\n    pool.numWorkers: 10</p>\n<h1>serve static files</h1>\n<p>static:\n  dir:    \"public\"\n  forbid: [\".php\", \".htaccess\"]</p>\n<h1>control the max memory usage</h1>\n<p>limit:\n  services:\n    http.maxMemory: 100\n    jobs.maxMemory: 100</p>\n<p>rpc:\n  listen: tcp://php-app:6001 #for watcher</p>\n<p>```\nFor more details information look at <a href=\"https://github.com/spiral/roadrunner\">this doc</a>.</p>\n<p><code>Job</code> looks like:\n```php\n/<strong>\n * (QueueInterface)-&gt;push(new PingJob([\"value\"=&gt;\"my value\"]));\n */\nclass Ping extends AbstractJob\n{\n    /</strong>\n     * @param string $id\n     * @param string $value\n     */\n    public function do(string $id, string $value)\n    {</p>\n<pre><code>    // do something\n    error_log(\"pong by {$id}, {$value}\");\n}\n</code></pre>\n<p>}\n<code>`` \nAs you can see, It's very easy and quite fast to execute</code>jobs`.</p>\n<p>To be continued...</p>", "published": "2022-11-27T11:01:18.670Z", "lastEdited": "2022-11-27T11:01:18.670Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160883.png", "source": "https://dev.to/sergey_telpuk/send-job-from-node-app-to-php-app-via-queue-8do", "stars": [], "saves": []}}, {"model": "main.post", "pk": 38, "fields": {"author": 69, "title": "To Code, or Not to Code on Vacation: That is My Question", "slug": "to-code-or-not-to-code-on-vacation-that-is-my-question-38", "description": "I coded on vacation, and now I feel guilty about it. What tips do you have?", "content": "<hr />\n<p>title: To Code, or Not to Code on Vacation: That is My Question\npublished: True\ndescription: I coded on vacation, and now I feel guilty about it. What tips do you have?\ntags: #discuss #webdev #beginners #help</p>\n<hr />\n<p>I just got back from a 2 week vacation. This was my first long vacation since I really have sunk my teeth into passion projects, and I found myself coding more than I anticipated. </p>\n<p>Personally, I <em>plug in</em> when I code. I don the oversized headphones, listen to my focus music of choice, and zone out trying to solve problems. When I am home, I rarely set time limits for myself, and I continued that pattern on vacation. Something to note, I find coding therapeutic. I get to stretch my creativity, and I’m a bit of an introvert so coding gives me a chance to recharge from social interactions that I can find draining at times. </p>\n<p>Inadvertently on this vacation, I isolated myself from my friends and family.</p>\n<p><img alt=\"Know that I'm not happy about it\" src=\"https://media3.giphy.com/media/xUOwGlB5HeAI0yG54A/giphy.gif?cid=790b7611f2ed4764f06cff5741cbeecec9a554eddcb6d555&amp;rid=giphy.gif\" /> </p>\n<p>While everyone seemed content and made no mention of my absence, I could not help but feel like I was missing out on the intention of <em>vacation</em>.  Instead of immersing myself in my book or chatting with people in lawn chairs, I spent time in front of my computer screen. Really nothing had changed from my day to day activities other than the setting and that I was working on fun problems by choice. Now that I am back, I am regretting limiting my screen time. I think there is this notion that vacation is supposed to be about reconnecting with people, strengthening existing relationships while also finding some <em>me time</em> away from the blue screen light. I cannot help this gnawing feeling that I missed out on some valuable parts of my vacation.</p>\n<p>So my questions to the community, do you code while on vacation? If so, when do you find time to code? How do you feel when you code around people? </p>\n<p>Selfishly, I do not want to stop coding when I’m on vacation. So, what tips do you have to help avoid my guilty feelings on future trips? \n<img alt=\"I feel so bad about it\" src=\"https://media3.giphy.com/media/wHd6y7EUkSKxpaEBbA/giphy.gif?cid=790b761159881bd04b9c5018ff41f874a096a58c3631cefe&amp;rid=giphy.gif\" /></p>", "published": "2022-11-27T11:01:22.558Z", "lastEdited": "2022-11-27T11:01:22.558Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160884.png", "source": "https://dev.to/knheidorn/to-code-or-not-to-code-on-vacation-that-is-my-question-4bio", "stars": [22, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "saves": [22, 70, 71, 73, 75, 77, 79, 81, 82, 83, 86, 88, 90, 92, 94, 96, 99]}}, {"model": "main.post", "pk": 39, "fields": {"author": 101, "title": "What the Hell! Can anyone help me with scrset and sizes in HTML? ", "slug": "what-the-hell-can-anyone-help-me-with-scrset-and-sizes-in-html-39", "description": "I'm trying to figure out how srcset and sizes work in HTML, but I'm not able to understand why a spec...", "content": "<p>I'm trying to figure out how <code>srcset</code> and <code>sizes</code> work in HTML, but I'm not able to understand why a specific image instead of another one is chosen. Can anyone help me? I don't know any other place to ask.</p>", "published": "2022-11-27T11:02:30.164Z", "lastEdited": "2022-11-27T11:02:30.164Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160885.png", "source": "https://dev.to/francoscarpa/what-the-hell-can-anyone-help-me-with-scrset-and-sizes-in-html-3i3d", "stars": [71, 101], "saves": [71]}}, {"model": "main.post", "pk": 40, "fields": {"author": 102, "title": "Learn to Add AI to your apps with Cognitive Services", "slug": "learn-to-add-ai-to-your-apps-with-cognitive-services-40", "description": "Learn to use Cognitive Services to augment your apps", "content": "<hr />\n<p>title: Learn to Add AI to your apps with Cognitive Services\npublished: true\ndescription: Learn to use Cognitive Services to augment your apps\ntags: azure, tutorial, javascript, webdev</p>\n<hr />\n<p>Follow me on <a href=\"https://twitter.com/chris_noring\">Twitter</a>, happy to take your suggestions on topics or improvements /Chris</p>\n<blockquote>\n<p>An AI villain against humanity! As a kid growing up in the 80s some of the coolest movies to come out was Terminator and Terminator 2 starring Arnold Schwarzenegger. ICYMI - an AI robot ( Arnold ) was sent from the future to try to destroy any chance of human resistance in the future.</p>\n</blockquote>\n<p>Back then it felt far away into the future for us humans to construct a robot moving like that until this clip made the internet <a href=\"https://www.youtube.com/watch?v=LikxFZZO2sk\">https://www.youtube.com/watch?v=LikxFZZO2sk</a>\na robot constructed by Boston Dynamics. A lot of people choked on their coffee that day.</p>\n<p>If that thing ever becomes smart and hostile to humans we need to join Elon Musks Tesla in space :wink:\nOne really cutting edge scene in Terminator edged itself into my mind. The Terminator enters the motorcycle bar, scans the people and objects around the room, correctly classifying what the objects are, their color, size and if they are his target! https://www.youtube.com/watch?v=zzcdPA6qYAU</p>\n<p>Back then it was amazing, science fiction at its best.\nHere's the thing though, it's not science fiction anymore. So many things have happened in the area of Machine Learning. The Machine Learning industry employs an army of data scientists that construct algorithms that given training data is able to correctly identify what it's looking at.\nA quite famous example is the pug or muffin training data in which we get a peek on how these algorithms are trained on countless images like this one:</p>\n<p><img alt=\"alt text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/3ono6o66n0wkurieguyk.jpeg\" title=\"Pug or muffin ML training data\" /></p>\n<p>I know some of you are probably chuckling by now, thinking we don't need to worry about machines overtaking us any time soon :wink:.</p>\n<p>I mentioned it wasn't science fiction anymore and it isn't. Microsoft offers a whole suite of services called <a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/?wt.mc_id=devto-blog-chnoring\">Azure Cognitive Services</a> </p>\n<p>centering on </p>\n<ul>\n<li><a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/directory/language/#vision?wt.mc_id=devto-blog-chnoring\">vision</a>, This is image-processing algorithms that can identify, <code>caption</code>, <code>index</code>, moderate <code>pictures</code> and <code>videos</code></li>\n<li><a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/directory/language/#speech?wt.mc_id=devto-blog-chnoring\">speech</a>, Can convert spoken audio into text, use voice for verification or add speech recognition to your app</li>\n<li><a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/directory/language/#lang?wt.mc_id=devto-blog-chnoring\">language</a>, Allow your apps to process natural language with pre-built scripts, evaluate sentiment and learn how to recognize what users want</li>\n<li><a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/directory/language/#know?wt.mc_id=devto-blog-chnoring\">knowledge</a>, Map complex information and data in order to solve tasks such as intelligent recommendations and semantic search.</li>\n<li><a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/directory/language/#search?wt.mc_id=devto-blog-chnoring\">search</a>, Enable apps and services to harness the power of a web-scale, ad-free search engine with Search. Use search services to find exactly what you're looking for across billions of web pages, images, videos and news search results</li>\n</ul>\n<p>As you notice, where you to click on any of the above categories, each area leads to a ton of services and they are free to try. I don't know about you but I feel like a kid in a candy store when someone tells me that here are a ton of APIs for you to use and especially if it makes Machine Learning usable for me as a developer.\nTo go with the introduced narrative let's dive into the <a href=\"https://azure.microsoft.com/en-us/services/cognitive-services/directory/language/#vision?wt.mc_id=devto-blog-chnoring\">vision</a> category, cause we want to see like a Terminator right? ;)</p>\n<p>Let's click on <a href=\"https://azure.microsoft.com/en-gb/services/cognitive-services/computer-vision/#celebrities-landmarks?wt.mc_id=devto-blog-chnoring\">Celebrity and landmark recognition</a> in images. Oh, cool we get a demo page where we can see the algorithms at work, try it before you buy it :)</p>\n<p><img alt=\"alt text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/t8vc1c75upgi77v7clcc.png\" title=\"Satya sample picture\" /></p>\n<p>Above we can see it requires us to input a URL for an image and it seems to respond with JSON. Ok, let's give it something easy, a picture of Abe Lincoln:</p>\n<p><img alt=\"alt text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/pwr4msqhkjp0hyep6o5q.png\" title=\"Abe Lincoln\" /></p>\n<p>And the winner is…. Abe Lincoln. Ok, that was easy let's try something else:</p>\n<p>I have to admit. I'm about nervous about this one ;). Ok, let's see the results:</p>\n<p><img alt=\"alt text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/ao57wg3p0rjobt252qpb.png\" title=\"Terminator\" /></p>\n<p>Ok, it recognized Arnold Schwarzenegger from the movie Terminator 2, good. I swear if it had mentioned John Connor I would have run for the hills, just kidding :)</p>\n<h2>Using Azure Cognitive Services</h2>\n<p>To start using the Cognitive Services API we need an API key. We need to take a few steps to acquire said key but it really isn't that much. The Cognitive Services resides on Azure. To get a free Azure account head to this <a href=\"https://azure.microsoft.com/en-gb/free/?wt.mc_id=devto-blog-chnoring\">link</a>:</p>\n<p>Once you are signed up you could either be using the Azure portal or the Azure CLI. The Azure CLI enables us to talk to Azure from the command line which is usually way quicker and cooler, than clicking around in a UI.</p>\n<p>Once we have come this far there are only four steps left, so stay with me and we will soon see the world like Arnold 😃</p>\n<p>What remains is the following:\n- <strong>create a resource group</strong>, this is a like a directory where you put all the things that belong together like accounts, databases, apps, it takes only a second to create\n- <strong>create a cognitive services account</strong>, that's also just a one-liner of code, creating this will give us our API key\n- <strong>make a POST call to the API</strong>, it's a very simple REST API call given they API key we get from constructing our cognitive services account\n- <strong>parse the JSON response</strong>, we will get a JSON back and we will have a look at the different parts it gives us to see what we can show to our user</p>\n<h3>Create a resource group</h3>\n<p>First thing we will need to do is to log in to Azure using the Azure CLI. To use the Azure CLI we first need to install it. Head over to this link for installation instructions, the installation instruction is different for different OS so make sure you pick the right one:</p>\n<blockquote>\n<p>https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest</p>\n</blockquote>\n<p>Let's login to Azure using the Azure CLI:</p>\n<p><code>az login</code></p>\n<p>This will open up a window in the browser where we login to our Azure account. Thereafter the terminal will have access to Azure.</p>\n<p>Let's now create the resource group:</p>\n<p>```\naz group create \\</p>\n<p>--name resourceforcogservices \\</p>\n<p>--location westeurope\n```</p>\n<p>The command here is <code>az group create</code> and we are giving it the following arguments:</p>\n<ul>\n<li><strong>name</strong>, this is a name we choose</li>\n<li><strong>location</strong>, we can select between a number of locations here depending on where we are in the world</li>\n</ul>\n<p>For location we have chosen <code>westeurope</code>, cause that's where I am writing this article. So choose a region depending on where you are located. Here is the full list of supported regions:</p>\n<ul>\n<li>westus2</li>\n<li>southcentralus</li>\n<li>centralus</li>\n<li>eastus</li>\n<li>westeurope</li>\n<li>southeastasia</li>\n<li>japaneast</li>\n<li>brazilsouth</li>\n<li>australiasoutheast</li>\n<li>centralindia</li>\n</ul>\n<h3>Create a Azure Cognitive Services account</h3>\n<p>It's quite easy to create this account. It's done with the following command:</p>\n<p>```\naz cognitiveservices account create \\</p>\n<p>--kind ComputerVision \\</p>\n<p>--name ComputerVisionService \\</p>\n<p>--sku S1 \\</p>\n<p>--resource-group resourceforcogservices \\</p>\n<p>--location westeurope\n```</p>\n<p>Ok, our basic command is <code>az cognitiveservices account create</code>, thereafter we have added some arguments to said command:</p>\n<ul>\n<li>kind, here we need to type what kind of Cognitive Services we will use, our value here needs to be ComputerVision </li>\n<li><strong>name</strong>, the name is simply the name of the service, which is <code>ComputerVisionService</code></li>\n<li><strong>sku</strong>, means the pricing tier and is fixed for the lifetime of the service, we choose S1, which is really cheap. </li>\n<li><strong>resourcegroup</strong>, we have created this one previously and as stated before this is like a folder where everything that is related should be organized under</li>\n<li><strong>location</strong>, we keep going with westeurope here cause that's what we started with, you are welcome to continue with the location you went with</li>\n</ul>\n<blockquote>\n<p>https://docs.microsoft.com/en-us/azure/search/search-sku-tier</p>\n</blockquote>\n<p>Once the Cognitive Services account is created then we can retrieve the API key. The following command will list our cognitive services account, including the API key:</p>\n<p>```\naz cognitiveservices account show \\</p>\n<p>--name ComputerVisionService \\</p>\n<p>--resource-group resourceforcogservices\n```</p>\n<p>Our command for retrieving the key is <code>az cognitiveservices account show</code> then we need to give said command some arguments:</p>\n<ul>\n<li>name, this is the name of our service</li>\n<li>resource group, we keep using the resource group <code>westeurope</code> that we chose initially</li>\n</ul>\n<h3>Make a POST call to the API</h3>\n<p>Now to make it easy to use when doing our REST call we will assign the API key to a shell variable and we can refer to said variable when we later do our REST call. Let's do the assignment:</p>\n<p>```\nkey=$(az cognitiveservices account keys list \\</p>\n<p>--name ComputerVisionService \\</p>\n<p>--resource-group resourceforcogservices \\</p>\n<p>--query key1 -o tsv)\n```</p>\n<p>The above lists all the keys on the account picks out a key called <code>key1</code> and assigns it to the variable key. Now we are all set up and ready to make our REST call.</p>\n<p>Let's have a look at our API and see what the URL looks like generally:</p>\n<p><code>https://[region].api.cognitive.microsoft.com/vision/v2.0/analyze?visualFeatures=&lt;...&gt;&amp;details=&lt;...&gt;&amp;language=&lt;...&gt;</code></p>\n<p>We see that we need to replace <code>[region]</code> with whatever region we created our resource group and account with, in our case that is <code>westeurope</code>. Furthermore, we see the API is using a method called <code>analyze</code> and the parameters <code>visualFeatures</code>, details and <code>language</code>.</p>\n<ul>\n<li><strong>details</strong>, this can have value <code>Landmarks</code> or <code>Celebrities</code></li>\n<li><strong>visualFeatures</strong>, this is about what kind of information you want back, The <code>Categories</code> option will categorize the content of the images like trees, buildings, and more. <code>Faces</code> will identify people's faces and give you their gender and age</li>\n</ul>\n<p>Ok, let's see what the actual call looks like:</p>\n<p>```\ncurl \"https://westeurope.api.cognitive.microsoft.com/vision/v2.0/analyze?visualFeatures=Categories,Description&amp;details=Landmarks\" \\</p>\n<p>-H \"Ocp-Apim-Subscription-Key: $key\" \\</p>\n<p>-H \"Content-Type: application/json\" \\</p>\n<p>-d \"{'url' : 'https://raw.githubusercontent.com/MicrosoftDocs/mslearn-process-images-with-the-computer-vision-service/master/images/mountains.jpg'}\" \\</p>\n<p>| jq '.'\n```</p>\n<p>Above we call <code>cURL</code> and set the header <code>Ocp-Apim-Subscription-Key</code> to our API key, or more specifically to our variable <code>key</code> that contains our API key. We see that we create a BODY value with property <code>url</code> and set that to the image we want to analyze.</p>\n<h3>Looking at the response</h3>\n<p>Ok, we make the call, we were told there would be JSON. And there is, a whole lot of it :)</p>\n<p><code>json\n{\n  \"categories\": [{\n    \"name\": \"outdoor_mountain\",\n    \"score\": 0.99609375,\n     \"detail\": {\n       \"landmarks\": []\n     }\n  }],\n  \"description\": {\n  \"tags\": [\n    \"snow\",\n    \"outdoor\",\n    \"mountain\",\n    \"nature\",\n    \"covered\",\n    \"skiing\",\n    \"man\",\n    \"flying\",\n    \"standing\",\n    \"wearing\",\n    \"side\",\n    \"air\",\n    \"slope\",\n    \"jumping\",\n   \"plane\",\n   \"red\",\n   \"hill\",\n   \"riding\",\n  \"people\",\n  \"group\",\n  \"yellow\",\n  \"board\",\n  \"doing\",\n  \"airplane\"\n],\n\"captions\": [{\n  \"text\": \"a snow covered mountain\",\n  \"confidence\": 0.956279380622841\n}]\n},\n\"requestId\": \"&lt;undisclosed&gt;\",\n  \"metadata\": {\n  \"width\": 600,\n  \"height\": 462,\n  \"format\": \"Jpeg\"\n }\n}</code></p>\n<p>The <code>score</code> is an indication of how certain it is of the results. With a value of <code>0.99609375</code> (max is 1.0) i would say it's pretty darn certain. The captions are the algorithm trying to give us a normal sentence of what this is. It says it is: <code>a snow-covered mountain</code>. Let's see for ourselves with the URL we provided to the service call:</p>\n<p><img alt=\"alt text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/67zkyg3goby1w5ccd8z9.jpeg\" title=\"Mountain\" /></p>\n<blockquote>\n<p>Yep, looks like a Mountain to me, good Skynet ;)</p>\n</blockquote>\n<h2>Summary</h2>\n<p>I've taken you through my childhood and by now you know I'm a movie nerd, a bit of a skeptic on where all this AI, Machine Learning research is taking us. At the same time excited about all the cool apps I can build with Cognitive Services.\nHere is also some food for thought. It's easy to joke about killer robots especially when they come from the world of movies. With all great tech, we have a responsibility to do something useful with it, to serve mankind. Imagine algorithms like this mounted on drones or helicopters. Imagine further that a catastrophe has happened and you are looking for survivors and you got some great algorithms that quickly can aid you to find people. That can make a real difference, save lives.\nI hope you are as excited as me and give it a try. The best way to get started is hopefully this blog post but it's worth checking the <a href=\"https://docs.microsoft.com/en-gb/learn/?wt.mc_id=devto-blog-chnoring\">LEARN</a> platform and especially this course. Good luck :)</p>\n<p>If you found this article useful/hilarious/ amusing / anything, please give me a clap :)</p>", "published": "2022-11-27T11:02:33.442Z", "lastEdited": "2022-11-27T11:02:33.442Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160886.png", "source": "https://dev.to/azure/learn-to-add-ai-to-your-apps-with-cognitive-services-2c32", "stars": [103], "saves": [103]}}, {"model": "main.post", "pk": 41, "fields": {"author": 104, "title": "Demystify Closures", "slug": "demystify-closures-41", "description": "In the previous post we implemented functions, but not about closures. Let's fix this.", "content": "<hr />\n<p>title: Demystify Closures\npublished: true\ncanonical_url: https://stereobooster.com/posts/demystify-closures/\ntags: [beginner, explainlikeimfive, computerscience, javascript]\nseries: \"Demystify Programming Languages\"\ndescription: In the previous post we implemented functions, but not about closures. Let's fix this.</p>\n<hr />\n<p>In the previous post we implemented functions, but not about <a href=\"https://stereobooster.com/posts/from-function-to-closure/\">closures</a>. Let's fix this.</p>\n<!--more-->\n\n<h2>The problem</h2>\n<p>Without closures following code snippet doesn't work as expected:</p>\n<p>```repl</p>\n<blockquote>\n<p>(define getFun\n    (function (x y)\n      (function (i j)\n        (- (+ x y) (+ i j))\n      )\n    )\n  )\n(define fun (getFun 5 4))\n(fun 3 2)\n```</p>\n</blockquote>\n<p>It will result in an error (<code>Can't find \"y\" variable...</code>) but we want it to return <code>4</code>.</p>\n<p>Closures will fix this problem because closure is a function with environment attached to it e.g. <code>(function (i j) ...</code> will have access to local variables of parent function <code>(function (x y)</code>.</p>\n<p>This kind of variable resolution (nested scopes) is called lexical scope.</p>\n<h2>The solution</h2>\n<p>The solution is to store the environment (at which function was created) together with function. The function which comes with environment called closure.</p>\n<blockquote>\n<p>Closures are data structures with both a code and a data component.</p>\n<p>-- <a href=\"http://matt.might.net/articles/closure-conversion/\">Closure conversion: How to compile lambda</a></p>\n</blockquote>\n<p>For now, we store a function as a list with 3 items: symbol \"function\", list of arguments, the body of the function. Let's store environment as the fourth item:</p>\n<p><code>js\nconst evaluate = (ast, environment = { ...defaultEnvironment }) =&gt; {\n  // ...\n  const [name, first, second] = ast;\n  const numberOfArguments = ast.length - 1;\n  if (name === \"define\") {\n    // ...\n  } else if (name === \"function\") {\n    return [name, first, second, environment];\n  } else {\n    // ...\n  }\n};</code></p>\n<p>And when we call the function we need to use closure's environment along with \"global\" environment:</p>\n<p><code>js\nconst evaluate = (ast, environment = { ...defaultEnvironment }) =&gt; {\n  // ...\n  if (name === \"define\") {\n    // ...\n  } else {\n    // ...\n    if (isFunction(environment[name])) {\n      const [_, argumentNames, functionBody, closureEnvironment] = environment[\n        name\n      ];\n      // create new environment from \"global\" and closure's environment\n      const functionEnvironment = { ...environment, ...closureEnvironment };\n      // add arguments to environment\n      // ...\n      return evaluate(functionBody, functionEnvironment);\n    }\n    throw new RuntimeError(`\"${name}\" is not a function`);\n  }\n};</code></p>\n<p>And this is the whole secret behind closures. Note: proposed implementation of environment storage is not the most effective, because we will have a lot of copies of the environment.</p>\n<h2>Local scope</h2>\n<p>What would you expect from the usage of <code>define</code> inside a function? The function has its local scope, all variables defined in this scope will stay in this scope (insert joke about Las Vegas here).</p>\n<p>```repl</p>\n<blockquote>\n<p>(define testLocal\n    (function (x)\n      (define local x)\n    )\n  )\n(testLocal 10)\n(+ local 1)\n```</p>\n</blockquote>\n<p>This code snippet will produce error <code>Can't find \"local\" variable...</code>.</p>\n<h2>Encapsulation</h2>\n<p>Encapsulation (a term often used in Object Oriented Programming) - is the way to provide isolation, for example, to prevent undesired data change, or to hide implementation details.</p>\n<p>Closures provide encapsulation as well. Closure carries a piece of the environment which can contain variables nobody else can read (if the closure was created inside another function). In this sense, closure provides a way to isolate a piece of data.</p>\n<h2>PS</h2>\n<p>Code for this post is <a href=\"https://github.com/stereobooster/write-a-language/tree/master/6.closure\">here</a>. In the next post will probably talk about the evaluation strategies.</p>", "published": "2022-11-27T11:02:39.115Z", "lastEdited": "2022-11-27T11:02:39.115Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160889.png", "source": "https://dev.to/stereobooster/demystify-closures-5g42", "stars": [], "saves": []}}, {"model": "main.post", "pk": 42, "fields": {"author": 105, "title": "Scala for the Potterhead: For Comprehensions", "slug": "scala-for-the-potterhead-for-comprehensions-42", "description": "We'll cover For comprehensions, generator expressions, guards and yielding in this tutorial. Before w...", "content": "<p>We'll cover For comprehensions, generator expressions, guards and yielding in this tutorial. Before we dive in, let's talk about wands.</p>\n<p>Everyone knows that good wands are crafted from the finest wood, and imbued with a token from a magical creature. Here is a wand class represented in Scala:</p>\n<p>```scala \nclass wand(typeOfWood: String, lengthOfWand: Long, magicalMaterial:String) {\n  val wood = typeOfWood\n  val length = lengthOfWand\n  val magic = magicalMaterial</p>\n<p>override def toString(): String = {\n    wood + \" wand of length \" + length + \" inches with \" + magic\n  }\n}\n<code>``\nNotice that we override the</code>toString<code>method. Whenever we call the print function on an object, Scala asks the object's</code>toString` method how it should be displayed to the console. Let's see that in action: </p>\n<p><code>sh \nscala&gt; val wandA = new wand(\"english wood\", 6, \"wampus cat hair\")\nwandA: wand = english wood wand of length 6 inches with wampus cat hair</code></p>\n<p>That looks good! Now let's create a catalog of more wands in Olivander's shop. We will store them in a <code>List</code>.</p>\n<p>```scala</p>\n<p>val wandA = new wand(\"english wood\", 6, \"wampus cat hair\")\nval wandB = new wand(\"hazel\", 9, \"veela hair\")\nval wandC = new wand(\"Walnut\", 11, \"troll whisker\")\nval wandD = new wand(\"Cypress\", 9, \"kelpie hair\")\nval wandE = new wand(\"ash\", 7, \"phoenix feather\")\nval wandF = new wand(\"birch\", 5, \"unicorn tail hair\")</p>\n<p>val wands = List(wandA, wandB, wandC, wandD, wandE, wandF)</p>\n<p>```</p>\n<p>Now, we want to find a wand for a particularly tall wizard. We know that he will require a wand that is greater than 7 inches in length. Let's look at some code that does that: </p>\n<p>```scala \n//For comprehension that prints all wands with length &gt; 7 inches\nval wandsLongerThan7Inches: List[wand] = for {\n//Generator expression\nwand &lt;- wands\n//Guard\n  if wand.length &gt; 7\n//Yielding\n} yield wand</p>\n<p>```</p>\n<p>Let's talk about each of the pieces: </p>\n<ol>\n<li>\n<p>Generator expression (<code>wand &lt;- wands</code>): \nThis gives us access to individual elements of the <code>wands</code> list. In python we would write this as <code>for wand in wands</code>. The <code>&lt;-</code> operator is called a left arrow operator, and it's Scala's way of iterating through elements in a <code>List</code> </p>\n</li>\n<li>\n<p>Guard (<code>if wand.length &gt; 7</code>):\nA guard is just an <code>if</code> expression that helps us filter elements in the foor loop. In this case, we only want to keep wands that are greater than 7 inches.</p>\n</li>\n<li>\n<p>Yielding (<code>yield wand</code>):<br />\nYielding is a way to return values from the For comprehension. In this case, every time a wand passes the guard statement, we <code>yield</code> it to the <code>wandsLongerThan7Inches</code> List. </p>\n</li>\n<li>\n<p>For comprehension: \nThis entire block is called a For comprehension. It's similar to a for loop in other programming languages, but we call it a comprehension because it can have side effects. In this case, the side effect is populating the <code>wandsLongerThan7Inches</code> List. </p>\n</li>\n</ol>\n<p>Let's see what the <code>wandsLongerThan7Inches</code> List looks like: </p>\n<p>```sh </p>\n<p>scala&gt; wandsLongerThan7Inches\nres30: List[wand] = List(hazelwood wand of length 9 inches with veela hair, Walnutwood wand of length 11 inches with troll whisker, Cypresswood wand of length 9 inches with kelpie hair)</p>\n<p>```</p>\n<p>Yay! Our new list only contains wands that are greater than 7 inches in length. But we're not done yet! We think that the wizard will do very well with a wand composed with the hair of a magical creature. Let's add that to our Guard condition: </p>\n<p><code>scala \nscala&gt; val wandsLongerThan7InchesWithMagicalCreatureHair: List[wand] = for {\n  wand &lt;- wands\n  if wand.length &gt; 7\n  if wand.magic.contains(\"hair\")\n} yield wand</code>\nWe can add multiple if statements in our guard if we choose to do so. In this case, we also have the option of simplifying the code and grouping the conditions: </p>\n<p><code>scala \nscala&gt; val wandsLongerThan7InchesWithMagicalCreatureHair: List[wand] = for {\n  wand &lt;- wands\n  if wand.length &gt; 7 &amp;&amp; wand.magic.contains(\"hair\")\n} yield wand</code></p>\n<p>This looks good, let's take a look at the result:</p>\n<p><code>sh\nscala&gt; wandsLongerThan7InchesWithMagicalCreatureHair\nres1: List[wand] = List(hazel wand of length 9 inches with veela hair, Cypress wand of length 9 inches with kelpie hair)</code></p>\n<p>Nice! The wizard only has to 'swish and flick' two wands, and wait for one of them to pick him! </p>\n<p>You can find links below to learn more about for comprehensions or magical wands. </p>\n<p>Thanks for reading!</p>\n<hr />\n<ol>\n<li>All the example code on <a href=\"https://github.com/kamyashethia/ScalaForThePotterhead/blob/master/ForComprehension.scala\">github</a></li>\n<li><a href=\"https://www.pottermore.com/features/the-great-wand-o-graphic\">This</a> neat wand-o-graphic from pottermore</li>\n<li>Official documentation about <a href=\"https://docs.scala-lang.org/tour/for-comprehensions.html\">for comprehensions</a> </li>\n<li><a href=\"https://alvinalexander.com/scala/scala-for-loop-yield-examples-yield-tutorial\">These</a> examples of for loops from the author of the scala cookbook</li>\n</ol>", "published": "2022-11-27T11:02:43.509Z", "lastEdited": "2022-11-27T11:02:43.509Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160891.png", "source": "https://dev.to/shethiakamya/scala-for-the-potterhead-for-comprehensions-2lma", "stars": [], "saves": []}}, {"model": "main.post", "pk": 43, "fields": {"author": 22, "title": "Feruz Oripov, The Real MVP.", "slug": "feruz-oripov-the-real-mvp-43", "description": "Refactoring organizations_controller.rb.              #3793...", "content": "<p>{% github https://github.com/thepracticaldev/dev.to/pull/3793 %}\n{% github https://github.com/thepracticaldev/dev.to/pull/3794 %}\n{% github https://github.com/thepracticaldev/dev.to/pull/3808 %}\n{% github https://github.com/thepracticaldev/dev.to/pull/3818 %}</p>\n<p>{% user feruzoripov %}</p>\n<p>This is how great software happens.</p>\n<p><img alt=\"\" src=\"https://media1.tenor.com/images/3ed84016385a06560957920423fea2f8/tenor.gif?itemid=4088269\" /></p>", "published": "2022-11-27T11:02:46.056Z", "lastEdited": "2022-11-27T11:02:46.056Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160892.png", "source": "https://dev.to/devteam/feruz-oripov-the-real-mvp-3lah", "stars": [106, 107, 108, 109, 110], "saves": [107, 108]}}, {"model": "main.post", "pk": 44, "fields": {"author": 111, "title": "Part 1: How to build a data platform from scratch", "slug": "part-1-how-to-build-a-data-platform-from-scratch-44", "description": "Have you ever tried to build a data platform from scratch? Do you know where to start, what to look f...", "content": "<p>Have you ever tried to build a data platform from scratch? Do you know where to start, what to look for? And most importantly: what <em>not</em> to do? Fear no more! Learn how to build the perfect data platform with these series of articles :) This article will be the first part of a series, that will give you an inside in my journey towards building a data platform from scratch. By sharing my experience, the lessons learned while developing it, the advantages and disadvantages of certain design choices, and my goals, I hope to make your journey less bumpy.</p>\n<p>Wether you are given the task to build a data platform, or you decide to do this in your own time: you aim high with your ambitions - or at least that's what I do. Having ambition is great and it is necessary in order to push yourself a little bit further. That's why, when you start designing something it's important that you look further than the initial <em>requirements</em>.</p>\n<p>Without further ado, let's start this journey by discussing the motivations I had behind creating a Data Platform for my current job.</p>\n<h2>Motivations (aka Requirements)</h2>\n<p>I work in the Media industry, and the company I work for doesn't have a Tech department like Netflix, GitHub or Twitter. We might not be considered as a 'tech company', we have a team of great engineers that are as motivated as me to create something nice.</p>\n<p>One day, our manager came in and said that our company decided to build a Data Platform from scratch. The requirements we've got were the following:</p>\n<ul>\n<li>It needs to be scalable</li>\n<li>It needs to ingest a lot of data</li>\n<li>It needs to be able to query very quickly</li>\n</ul>\n<p>That's \"all\"!</p>\n<p>The engineering team had a discussion on what type of technologies we wanted to use, and what the architecture should look like. We decided to focus a lot on <strong>Kubernetes</strong>. But the choice wasn't straightforward. A large part of the team had never worked with Kubernetes, they had more knowledge on AWS Lambda and API Gateway. While to me Kubernetes was a natural choice, for other people it was a bit scary. </p>\n<p>In the end we commonly agreed that it would serve our needs better to use Kubernetes, especially in terms of scalability and deployment of our Dockerized application. Using it meant that we had to migrate tons of services from ECS and other EC2 instances, to Kubernetes.</p>\n<h2>Initial architecture</h2>\n<p>After the choice for Kubernetes, we created a bunch of bash files and <strong>Terraform</strong> scripts to get started. Within the engineering team, there was a discussion on how to tackle the automation and we decided to build a \"1-click-deployment\" system.</p>\n<p>This \"1-click-deployment\" system, consisted of a Docker image that contained all the packages we needed in order to generate the entire infrastructure of the Data Platform. After that we created the initial skeleton based on this awesome <a href=\"https://blog.gruntwork.io/how-to-create-reusable-infrastructure-with-terraform-modules-25526d65f73d\">article</a> of Yevgeniy Brikman from Gruntwork. Our result looked similar to this <a href=\"https://github.com/spaghettifunk/cluster-example\">repository</a>.</p>\n<p><strong>Tip:</strong> When there are a lot of \"moving\" parts within your infrastructure, it's a good practice to automate it and to rely on tools that will help you and your team to put all the pieces together with minimum effort. The picture below shows how the initial architecture looked like</p>\n<p><img alt=\"Initial Architecture\" src=\"https://i.ibb.co/3cKjcxf/init.png\" /></p>\n<p>This was quite simple to us; we needed to <a href=\"https://github.com/terraform-aws-modules/terraform-aws-eks\">create a Kubernetes cluster</a>, add a <a href=\"https://github.com/nginxinc/kubernetes-ingress/blob/master/docs/installation.md\">Load Balancer via NGINX</a>. We were ready to move to the next step.</p>\n<h2>Drama was about to come</h2>\n<p>We only used one cluster, and we immediately had to start thinking about how we were going to deploy applications. Then other questions popped up; how do we create a <strong>Staging</strong> environment, or a <strong>Testing</strong> environment? The initial choice was to scale the cluster with few more machines and leverage the <strong>Kubernetes Namespaces</strong>.</p>\n<p>The advantage of using Namespaces, is that you can <code>\"isolate\"</code> your applications in a sort of <code>box</code>. Isolation is what we were trying to achieve, so that we could distinguish the <code>environments</code>. Doing this, created an issue with naming and with how we were going to deploy the applications. For example, let's assume the following: we have two APIs and one WebApp. All three need to have a Testing and Staging environment, so that developers can safely deploy their code before going to production. Because we decided to use Namespaces, we tried to first create three Namespaces: Production, Staging, Testing. There are some drawbacks in putting all the application under the same namespace. The first issue is that it would be much easier to delete everything. For example, the Kubernetes CLI (<code>kubectl</code>) is able to delete namespaces. If a developer would issue the follwing command <code>kubectl delete ns &lt;env&gt;</code> all the applications under that namespace would be gone. The second problem is in the <code>isolation</code>. In fact, the reason why namespacing was created in the first place, was to partition the cluster in <code>smaller virtual cluster</code>.</p>\n<p>We tried another approach: we create a namespace per application per environment. For example we would have the following:</p>\n<ul>\n<li>production_api1</li>\n<li>staging_api1</li>\n<li>testing_api1</li>\n<li>production_webapp</li>\n<li>staging_webapp</li>\n<li>testing_webapp</li>\n<li>and so on...</li>\n</ul>\n<p>You can clearly see that this would pollute the Kubernetes cluster with tons of namespaces. The following <a href=\"https://kubernetes.io/blog/2016/08/kubernetes-namespaces-use-cases-insights/\">article</a> gave us a lot of insights on how to use namespace in better way. Despite the article states that you can use both of the approaches I described above, it also highlights the anti-patterns when using such approaches. For us, those solution didn't work well.</p>\n<p>What did we do? The solution was simple: multiple Kubernetes clusters.</p>\n<h2>Multiple clusters</h2>\n<p>As mentioned above, we initially decided to adopt the \"1-click-deployment\" strategy: which means that our code-base was ready for deploying as many clusters we wanted. And so we did. The second Architecture we pulled-off looks like the picture below</p>\n<p><img alt=\"Multiple clusters\" src=\"https://i.ibb.co/9ymV46J/second.png\" /></p>\n<p>As you can see from the picture, we have three clusters. In this way we could deploy applications depending on the environment we wanted to target.</p>\n<p>The whole team was very hyped and we thought that we nailed it. But, with great powers come great responsibilities. Responsibilities here means <strong>logging</strong> and <strong>monitoring</strong>. With three clusters, understanding what it's going on is rather challenging. We yet again had a problem we needed to tackle.</p>\n<p>In a distributed environment with multiple applications, understanding what is happening is crucial. In fact, being able to quickly debug your application in Development or understand what caused an eventual error in Production is the fundamental step for keeping control over your systems.</p>\n<p>But logging is not sufficient. Machines themselves in general don't write logs, the expose metrics of their hardware. Thus, collecting such information and visualize them, it will allow you and your team to set up <strong>alarms</strong> based on certain rules. A rule can be \"if the average CPU usage is above 80% trigger an alarm\". The alarm itself can be an email or a Slack message to your team. Alarms will prevent having your machines to reach undesirable states.</p>\n<h2>Controlplane at rescue</h2>\n<p>When you have a lot of applications, different environments, and a team of engineers and data scientists that is eager to create, test and put applications or models in production, you need to have a solid monitoring and logging system. But how do we do so? Yet again the answer was simple: another Kubernetes cluster :)</p>\n<p>Controlplane was a fancy name we took from another team within the company. The sole purpose of this cluster is to collect metrics and logs from the other clusters and centralize the visualization of such information. At this point the architecture looks like the following</p>\n<p><img alt=\"Controlplane system\" src=\"https://i.ibb.co/mzD23s9/third.png\" /></p>\n<p>On each cluster we set up <a href=\"https://prometheus.io/\"><strong>Prometheus</strong></a>, <a href=\"https://github.com/prometheus/node_exporter\"><strong>Node-exporter</strong></a>, <a href=\"https://github.com/kubernetes/kube-state-metrics\"><strong>Kube-state-metrics</strong></a> for exposing all the metrics of the cluster. To collect the information and send them out the cluster, we used <a href=\"https://github.com/fluent/fluent-bit\"><strong>Fluent-Bit</strong></a>. All the metrics and logs were redirected towards a <strong>Kafka Topic</strong>. In this way we were able to fetch them from the controlplane.</p>\n<p>In controlplane we installed <a href=\"https://www.elastic.co/products/logstash\"><strong>Logstash</strong></a> and connected it to the <strong>Kafka Topic</strong> mentioned above so it could start fetching the logs. Logstash is an open source, server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to an output.</p>\n<p>Now that Logstash has access to the logs we just need to redirect them to the <a href=\"https://github.com/elastic/elasticsearch\"><strong>Elasticsearch</strong></a> service and visualize them with <a href=\"https://github.com/elastic/kibana\"><strong>Kibana</strong></a>. For the metrics we put in place <a href=\"https://grafana.com/\"><strong>Grafana</strong></a> and created a bunch of Dashboards for visualizing the status of each system.</p>\n<p>With the controlplane in place we had full visualization and control of every single aspect of each individual cluster. The controlplane was a win-win solution.</p>\n<h2>Conclusion</h2>\n<p>In this first part I explained how we started designing the Data Platform. This article focused mostly on the underlying infrastructure and the problems that we had to overcome.</p>\n<p>The lesson I learned during this part of the development: is to think ahead much more than when I design software. Software can be changed more rapidly than infrastructure. When designing an infrastructure there are more variables to take into account, and the choices that you make can have a big impact on the final result. Long story short: think first and take your time. Rushing to get things out quickly will not always help you.</p>\n<p>In the next article I am going to talk about how applications are deployed and how the team interacts with this architecture.</p>", "published": "2022-11-27T11:03:00.993Z", "lastEdited": "2022-11-27T11:03:00.993Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160894.png", "source": "https://dev.to/spaghettifunk/part-1-where-it-all-begins-1d72", "stars": [], "saves": []}}, {"model": "main.post", "pk": 45, "fields": {"author": 112, "title": "👨‍💻 What I learned from my first week as a Software Developer Intern", "slug": "what-i-learned-from-my-first-week-as-a-software-developer-intern-45", "description": "Introduction   In this post, I'd like to detail a few bits of advice upon starting my first...", "content": "<h1>Introduction</h1>\n<p>In this post, I'd like to detail a few bits of advice upon starting my first job as a Software Developer Intern. </p>\n<p>💡 To quickly introduce myself, I'm currently studying my Bachelor's in Computer Science in the city of Manchester, UK. As part of this degree, I've taken a year out to gain some Industrial Experience, which will form part of my degree. I started working over a week ago, so thought I'd get this post out following my experiences so far, as well as general tips which I feel will help <em>anyone</em> starting out in a new job.</p>\n<h2>What I've learned and my tips 👍🏼</h2>\n<p><strong>You won't know everything straight away, <em>and that's OK</em> 🤯</strong>\nI felt bad about all of the things I didn't know, despite being new to the company. I had to adjust this mindset so that, instead of feeling bad about myself, I'd simply <strong>try my best</strong> with a given task and see what I could achieve. Over time, you will get to grips with things - just know that <em>this will take time</em>.</p>\n<p><strong>Don't be afraid to ask for help 🗣️</strong>\nAs nice as it may be to get on with a task for some time to try and make progress, there may come a point where you aren't getting anywhere. <em>This is the time to ask for help</em>. You don't want to be hitting the same brick wall which, if you had asked for help earlier, could've avoided completely. The way I'm trying to approach this is to try my best with a given task and when I'm feeling <strong>completely stuck</strong>, I will ask for guidance.</p>\n<p><strong>Don't be afraid to make mistakes ❌</strong>\nLet's be honest, the last thing you want to be doing as a new employee is making a mistake - whether it be a small mistake or a catastrophic one. <em>But these things happen sometimes</em>. Why shouldn't you be afraid of these mistakes? Because: you will genuinely learn from such an experience. You'll want to ensure that the same mistake won't happen again, so you will do what you need to do in order to really learn from the mistake you made.</p>\n<p><strong>Reflect on your experiences regularly 📖</strong>\nThe process of reflecting can really help you look back on all of the things you've achieved so far, and help you identify areas which you'd like to work on more. I'm personally trying to write down all of the things I've done at the end of each week, reflecting on both my progress at work and also my feelings throughout the process. I feel like this will help me as I progress in my career as a developer. As a student, I'll have something to look back on, before eventually starting my career once I've graduated from university.</p>\n<p><strong>If you aren't feeling totally comfortable - speak to someone about it</strong>\nStarting a new job, no matter what level you are at, can be daunting. You may have a bunch of thoughts and emotions running through your mind, and sometimes just talking to someone about things can help you make sense of all of this. This could be with someone at your new workplace, or someone you know in your personal life. </p>\n<h1>Conclusion</h1>\n<p>I hope this quick post helps you out in some way, and if you found it useful, please share it with friends and family who you think may find it useful too! Thank you for taking the time to read my post☺️\nFind me on social media 👋🏽:\n-<a href=\"www.instagram.com/yusufcodes\">Instagram</a>\n-<a href=\"www.twitter.com/yusufcodes\">Twitter</a></p>", "published": "2022-11-27T11:03:06.245Z", "lastEdited": "2022-11-27T11:03:06.245Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160898.png", "source": "https://dev.to/yusufcodes/what-i-learned-from-my-first-week-as-a-software-developer-intern-5859", "stars": [22, 112, 113, 114, 115], "saves": [22, 113, 114, 115]}}, {"model": "main.post", "pk": 46, "fields": {"author": 116, "title": "React Sticky Event with Intersection Observer", "slug": "react-sticky-event-with-intersection-observer-46", "description": "Photo by Kelly Sikkema on Unsplash  There isn’t a way to monitor stickiness of a component in CSS (po...", "content": "<hr />\n<p>title: React Sticky Event with Intersection Observer\npublished: true\ntags: react, css\ncanonical_url: https://www.slightedgecoder.com/2019/08/24/react-sticky-event-with-intersection-observer/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/jpqevj8yxbfbaf34qggj.jpg</p>\n<hr />\n<p><em>Photo by <a href=\"https://unsplash.com/@kellysikkema?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Kelly Sikkema</a> on <a href=\"https://unsplash.com/search/photos/sticky-notes?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></em></p>\n<p>There isn’t a way to monitor stickiness of a component in CSS (<code>position: sticky</code>).</p>\n<p>This nice article on Google, <a href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\">An event for CSS position:sticky</a> shows how to emulate sticky events in vanilla JavaScript without using scroll event but using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\">IntersectionObserver</a>.</p>\n<p>I will show how to create React components to emulate the same behavior.</p>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#prerequisite\">Prerequisite</a></li>\n<li><a href=\"#what-we-are-building\">What we are building</a></li>\n<li><a href=\"#here-is-the-working-sandbox\">Here is the working Sandbox</a></li>\n<li><a href=\"#using-sticky-event-components\">Using sticky event components</a></li>\n<li><a href=\"#implementing-sticky-components\">Implementing Sticky Components</a></li>\n<li>⚛ <a href=\"#%E2%9A%9B-stickyviewport\">StickyViewport</a></li>\n<li>⚛ <a href=\"#%E2%9A%9B-stickyprovider\">StickyProvier</a></li>\n<li>⚛ <a href=\"#%E2%9A%9B-stickyboundary\">StickyBoundary</a><ul>\n<li>🎣 <a href=\"#usesentineloffsets\">useSentinelOffsets</a></li>\n<li>🎣 <a href=\"#useobservetopsentinels\">useObserveTopSentinels</a></li>\n<li>🎣 <a href=\"#useobservebottomsentinels\">useObserveBottomSentinels</a></li>\n</ul>\n</li>\n<li>⚛ <a href=\"#%E2%9A%9B-sticky\">Sticky</a></li>\n<li><a href=\"#resources\">Resources</a></li>\n</ul>\n<h2>Prerequisite</h2>\n<p>This article is based on <a href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\">An event for CSS position:sticky</a>, which also provides a nice <a href=\"https://ebidel.github.io/demos/sticky-position-event.html\">demo</a> and explanation on how it was implemented as well as the <a href=\"https://github.com/ebidel/demos/blob/master/sticky-position-event.html\">source code</a>.</p>\n<p>The basic idea is that, you add top &amp; bottom sentinels around the sticky boundary, and observe those sentinels using <code>IntersectionObserver</code>.</p>\n<p>Left is the terms used in the linked article above and the right is corresponding component name used here.</p>\n<ul>\n<li>Scrolling Container -&gt; <code>&lt;StickyViewport /&gt;</code></li>\n<li>Headers -&gt; <code>&lt;Sticky /&gt;</code></li>\n<li>Sticky Sections -&gt; <code>&lt;StickyBoundary /&gt;</code></li>\n</ul>\n<p><img alt=\"\" src=\"https://i2.wp.com/www.slightedgecoder.com/wp-content/uploads/2019/08/Sticky-Component-Overview.png?fit=1024%2C760&amp;ssl=1\" /></p>\n<h2>What we are building</h2>\n<p>Before moving on, let’s see what we are building.</p>\n<p>{% youtube Mq-g7bSEQvg %}</p>\n<p>Sticky headers styles are changed as they stick and unstick without listening to <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event\">scroll event</a>, which can cause site performance issue if not handled correctly.</p>\n<h3>Here is the working Sandbox.</h3>\n<p>{% codesandbox react-sticky-javascript-refactored-w8otj %}</p>\n<p><em>You can click on <code>Toggle Debug</code> button to show sentinels.</em></p>\n<p>You can see that the sticky headers change the color and the box shadow styles.<br />\nLet’s see the usage of sticky components.</p>\n<h2>Using sticky event components</h2>\n<p>Here is the how one might use the component to observe un/stuck events.</p>\n<p>{% gist https://gist.github.com/dance2die/a39355c83f23f5e8c66747eb612c7c3a %}</p>\n<ol>\n<li>Specifies the viewport in which the IntersectionObserver should base on “threshold” with (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\">root</a>). By default, IntersectionObserver’s root is set to the viewport. <code>as</code> specifies which element the DOM should be rendered as. It’s rendered as <code>main</code> in this case where default is <code>div</code>.</li>\n<li>shows the section within which the sticky component sticks. (This is where “top/bottom” sentinels are added as shown in the Google doc)</li>\n<li>The boundary is where the un/stuck events can be subscribed via following props.</li>\n<li>Render a sticky component as “h1” – This is the component that will stick within the <code>StickyBoundary</code> on scroll.</li>\n<li>shows event handlers. <code>handleChange</code> handler changes the background color and the box shadow depending on sticky component’s stickiness.</li>\n</ol>\n<p>Now let’s see how each component is implemented.</p>\n<h2>Implementing Sticky Components</h2>\n<p>I will start from top components toward the bottom because I’ve actually written the rendered component (how the components should be used) before writing down implementations for them.</p>\n<p><em>I wasn’t even sure if it’d work but that’s how I wanted the components to work.</em></p>\n<h3>⚛ StickyViewport</h3>\n<p>Let’s take a look at how it’s implemented.</p>\n<p>{% gist https://gist.github.com/dance2die/d2c410470a75b612ec38e94af3011126 %}</p>\n<ol>\n<li>It’s basically a container to provide a context to be used within the Sticky component tree (“the tree” hereafter).</li>\n<li>\n<p>The real implementation is within <code>StickyRoot</code>, which is not used (or made available via module export) in the usage above.</p>\n</li>\n<li>\n<p>While <code>StickyViewport</code> makes context available within the tree without rendering any element, <code>StickyRoot</code> is the actual “<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\">root</a>” (of IntersectionObserver option).</p>\n</li>\n<li>\n<p>To make the container ref available down in the tree, action dispatcher is retrieved from the custom hook, <code>useStickyActions</code> (,which is a <code>dispatch</code> from <code>useReducer</code>) in the provider implementation.</p>\n</li>\n<li>Using the <code>dispatcher.setContainerRef</code>, we make the reference available in the tree for the child components.</li>\n</ol>\n<p>Now let’s see what state and actions <code>StickyProvider</code> provides in the tree.</p>\n<h3>⚛ StickyProvider</h3>\n<p>The context is implemented using the pattern by Kent C. Dodd’s article, <a href=\"https://kentcdodds.com/blog/how-to-use-react-context-effectively\">How to use React Context effectively</a>.</p>\n<p>Basically, you create two contexts, one for the state, another for dispatch and create hooks for each.</p>\n<p>The difference in <code>StickyProvider</code> is that, instead of exposing raw <code>dispatch</code> from <code>useReducer</code> directly, I’ve encapsulated it into actions.</p>\n<p><em>I’d recommend reading Kent’s article before moving on.</em></p>\n<p>{% gist https://gist.github.com/dance2die/07659aef6b54ed1305bb67f7fe88498d %}</p>\n<ol>\n<li><code>containerRef</code> refers to the ref in <code>StickyRoot</code>, which is passed to the IntersectionObserver as the <code>root</code> option while <code>stickyRefs</code> refers to all <code>&lt;Sticky /&gt;</code> elements, which is the “target” passed to event handlers.</li>\n<li><code>setContainerRef</code> is called in the <code>StickyRoot</code> to pass to <code>StickyBoundary</code> while <code>addStickyRef</code> associates TOP &amp; BOTTOM sentinels with <code>&lt;Sticky /&gt;</code> element.<br />\n   We are observing TOP &amp; BOTTOM sentinels so when <code>&lt;StickyBoundary /&gt;</code> fires events, we can correctly retrieve the target sticky element.</li>\n<li>I am not returning a new reference but updating the existing “state” using <code>Object.assign(state,...)</code>, not <code>Object.assign({}, state, ...)</code>.<br />\n   Returning a new state would infinitely run the effects, so only <code>stickRefs</code> are updated as updating the state reference would cause <code>containerRef</code> to be of a new reference, causing a cascading effect (an infinite loop).</li>\n<li><code>StickyProvider</code> simply provides states raw, and</li>\n<li>creates “actions” out of dispatch, which makes only allowable actions to be called.</li>\n<li>and</li>\n<li>are hooks for accessing state and actions (I decided not to provide a “Consumer”, which would cause a false hierarchy as render prop would.).</li>\n<li><code>StickySectionContext</code> is just another context to pass down TOP &amp; BOTTOM sentinels down to <code>Sticky</code> component, with which we can associate the sticky <code>target</code> to pass to the event handlers for <code>onChange, onUn/Stuck</code> events.</li>\n</ol>\n<p>It was necessary because we are observing TOP &amp; BOTTOM sentinels and during the declaration, we don’t know which sticky element we are monitoring.</p>\n<p>Now we have enough context with state &amp; actions, let’s move on and see implementations of child components, <code>StickyBoundary</code>, and <code>Sticky</code>.</p>\n<h3>⚛ StickyBoundary</h3>\n<p>The outline of <code>StickyBoundary</code> looks as below.</p>\n<p>{% gist https://gist.github.com/dance2die/c494a38b8923f83f1e4ee4963817d14e %}</p>\n<ol>\n<li>The boundary is where you’d subscribe stickiness changes.</li>\n<li>Create TOP &amp; BOTTOM sentinel references, with which, we observe the stickiness of sticky components.</li>\n<li>Compute sentinel offsets.</li>\n<li>This hook observes top sentinel and fires events depending on the boundary calculation in relation to the viewport.</li>\n<li>This hook observes BOTTOM sentinel and fires events depending on the boundary calculation in relation to the viewport.</li>\n<li>Saving the sentinel refs to associate with sticky component somewhere down in the tree.</li>\n<li><code>StickyBoundary</code> simplys wraps the children with TOP &amp; BOTTOM sentinels and applies computed offsets calculated in step 3.</li>\n</ol>\n<p>So basically <code>StickyBoundary</code> wraps children with TOP &amp; BOTTOM sentinels, with which we can tell whether a sticky component is stuck or unstuck.</p>\n<p>Now let’s implement hooks.</p>\n<h4>🎣 useSentinelOffsets</h4>\n<p>{% gist https://gist.github.com/dance2die/b334739cabccfc716d1b177f303af947 %}</p>\n<ol>\n<li>TOP margin &amp; BOTTOM height calculation requires the top sentinel ref.</li>\n<li>This is where the calculation occurs whenever sticky elements, and top sentinel ref changes (<code>[stickyRefs, topSentinelRef]</code>).</li>\n<li>We’ve associated sticky elements with TOP &amp; BOTTOM sentinels via context, so fetch the sticky node associated with the top sentinel.</li>\n<li>Get the sticky element styles required for calculation.</li>\n<li>Calculate the BOTTOM sentinel height.</li>\n<li>We make the calculated states available to the caller.</li>\n</ol>\n<h4>🎣 useObserveTopSentinels</h4>\n<p>{% gist https://gist.github.com/dance2die/f26f7b64094d635ae8de5498c3ac4cb1 %}</p>\n<p>OK, this is now where it gets messy a bit. I’ve followed the logic in <a href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\">the Google doc</a> so will be brief and explain only relevant React codes.</p>\n<ol>\n<li>These are the events to be triggered depending on the TOP sentinel position.</li>\n<li>We have saved the references via context actions. Retrieve the container root (viewport) and the stick refs associated with each TOP sentinel.</li>\n<li>This is where observation side effect starts.</li>\n<li>The logic was “taken” from the Google doc, thus will skip on how it works but focus on events.</li>\n<li>As the TOP sentinel is moved up, we fire the “stuck” event here.</li>\n<li>And when the TOP sentinel is visible, it means the sticky element is “unstuck”.</li>\n<li>We fire whenever either unstuck or stuck is even fired.</li>\n<li>Observe all TOP sentinels that are registered.</li>\n</ol>\n<h4>🎣 useObserveBottomSentinels</h4>\n<p>The structure is about the same as <code>useObserveTopSentinels</code> so will be skipping over the details.</p>\n<p>The only difference is the logic to calculate when to fire the un/stuck event depending on the position of BOTTOM sentinel, which was discussed in the Google doc.</p>\n<p>{% gist https://gist.github.com/dance2die/f813bd90dcf680bf67fdde163dca3a89 %}</p>\n<p>Now time for the last component, <code>Sticky</code>, which will “stick” the child component and how it works in conjunction with aforementioned components.</p>\n<h3>⚛ Sticky</h3>\n<p>{% gist https://gist.github.com/dance2die/4483589c5ff5ed9cc9a6fc9ecd2588be %}</p>\n<ol>\n<li>First we get the TOP &amp; BOTTOM sentinels to associate with</li>\n<li>so that we can retrieve correct child target element from either a top sentinel or a bottom sentinel.</li>\n<li>We simply wrap the children and apply <code>position: sticky</code> around it using a class module (not shown here).</li>\n</ol>\n<p>Let’s take a look at the working demo one more time.</p>\n<p>{% codesandbox react-sticky-javascript-refactored-w8otj %}</p>\n<h2>Resources</h2>\n<ul>\n<li>Google Documentation</li>\n<li><a href=\"https://developers.google.com/web/updates/2017/09/sticky-headers\">An event for CSS position:sticky</a><ul>\n<li><a href=\"https://ebidel.github.io/demos/sticky-position-event.html\">Demo</a></li>\n<li><a href=\"https://github.com/ebidel/demos/blob/master/sticky-position-event.html\">Source Code</a></li>\n</ul>\n</li>\n<li><a href=\"https://developers.google.com/web/updates/2016/04/intersectionobserver\">IntersectionObserver’s Coming into View</a></li>\n<li>MDN</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\">IntersectionObserver</a></li>\n<li>IntersectionObserver <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\">root</a> option</li>\n<li><a href=\"https://codesandbox.io/s/react-sticky-javascript-refactored-w8otj\">Sandbox</a></li>\n</ul>\n<p>The post <a href=\"https://www.slightedgecoder.com/2019/08/24/react-sticky-event-with-intersection-observer/\">React Sticky Event with Intersection Observer</a> appeared first on <a href=\"https://www.slightedgecoder.com\">Sung's Technical Blog</a>.</p>", "published": "2022-11-27T11:03:18.489Z", "lastEdited": "2022-11-27T11:03:18.489Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_46_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--CFRUfYLd--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/jpqevj8yxbfbaf34qggj.jpg", "source": "https://dev.to/dance2die/react-sticky-event-with-intersection-observer-310h", "stars": [116, 117, 118, 119], "saves": [117, 118, 119]}}, {"model": "main.post", "pk": 47, "fields": {"author": 120, "title": "A CEO's #1 Tip On How Stand Out As A New Full-Stack Developer in A Competitive Market ⚡", "slug": "a-ceos-1-tip-on-how-stand-out-as-a-new-full-stack-developer-in-a-competitive-market-47", "description": "The full-stack market is saturated with newbies. There are radical ways however you can stand out from the crowd.", "content": "<hr />\n<p>title: A CEO's #1 Tip On How Stand Out As A New Full-Stack Developer in A Competitive Market ⚡\npublished: true\ndescription: The full-stack market is saturated with newbies. There are radical ways however you can stand out from the crowd.\ntags: #beginners,#codenewbies,#career,#webdev\nseries: Mindset tips for anyone learning to code </p>\n<hr />\n<p><em>Want to listen to the full episode? Check the bottom of the post!</em></p>\n<p>Andrew Brown (CEO of ExamPro.co) joined us recently to talk about a load of topics that would be helpful to anyone looking to get a job in development.</p>\n<p>A recurring theme we talked about was how bootcamps (and from what we see, university) tend to set everyone up with a very similar skillset in what are <em>extremely competitive</em> job markets.</p>\n<p>That's why a lot of graduates can apply to 200 jobs and hardly get any responses, let alone interviews.</p>\n<p>So how do you stand out from the crowd?</p>\n<h1>Pick a highly demanded skill to add to your technical hamburger 🍔</h1>\n<p>If a company has to pick between full stack developers, one of the easiest way to decide is to <em>go with the developer with skills that complement their role</em>. Particularly if the skill adds real value to the business.</p>\n<p>We like to call this \"Supercharging Your Skillset\" because it opens up a bunch of new opportunities for your career and even the projects you work on.</p>\n<p>In this podcast snippet, Andrew talks about how cloud computing is one of the best choices. Here’s a visualisation of this he posted recently:</p>\n<p>{% instagram B1ovK38JVvY %}</p>\n<p>And there's many others you can pick from, such as:</p>\n<h2>UI Design</h2>\n<p>Most developers think they are terrible at UI Design. The truth is, you just need some simple, actionable principles to follow to level up your designs.</p>\n<p>If you can really get a more theoretical understanding of UI Design and what makes a good and bad design, not only will your personal work stand out, but you can bring tons of value to a company you work for by being able to produce better quality prototypes and even giving them a hand in other areas.</p>\n<h2>User Experience</h2>\n<p>We all have instincts on what feels right and wrong with our own user experience journey on applications and websites we've used. There are however a set of techniques and research methods you can learn and implement on projects to work towards excellent user experience, and this is something companies really want.  </p>\n<p>Here's a fantastic post from Emma Wedekind on the \"UX Engineer\" job title and what it means.</p>\n<p>{% link https://dev.to/emmawedekind/ux-engineering-3hem %}</p>\n<h2>Data Science</h2>\n<p>As companies collect more and more data, and our computing power and availability with cloud and the tools becoming available become far more advanced and accessible, we've moved into an age where we can use that data to improve so many aspects of our products and businesses. And companies pay <em>a lot</em> of money for people who do this as a specialization.</p>\n<p>Also, check this awesome A-Z post out from Helen Anderson, she’s an experienced Data Analyst and Advocate for the industry, and really this is one of the best comprehensive top-level references available</p>\n<p>{% link https://dev.to/helenanders26/big-data-from-a-to-z-3l7j %}</p>\n<h2>Copywriting</h2>\n<p>Ever used a great looking website to feel like some of the buttons, sentences, documentation and other pieces of text just didn't make sense, went on too much or just didn't feel right? That's where copywriters come in.</p>\n<p>Not only can understanding copywriting principles help your own projects, it improves your resumé, portfolio, cover letter and can be an invaluable asset to any company you work for.</p>\n<h2>Security (not just the basics, there are specialisations that pay a lot!)</h2>\n<p>Security comes in all shapes and sizes - from basic security, to penetration testing, to cloud-specific security practices. Learning some more advanced principles can not only get you a much higher paying job (especially when it's your main skill-set) but you'll have a skill set that a lot of CTO and VP of Engineering types will be very impressed to see on your list of skills.</p>\n<p>Andrew recently gave a talk on how to implement security in AWS and posted it here on DEV:</p>\n<p>{% link https://dev.to/andrewbrown/the-fast-track-to-aws-security-feb-26-2019-5d20 %}</p>\n<h2>Unix</h2>\n<p>Learning more advanced Unix principles and how to actually set up servers locally rather than just through the cloud is something that a lot of developers struggle with - particularly because it's one of those weird things some of us tend to avoid.</p>\n<p>Learning it more in-depth and understanding your way around Unix on a more than just basic level is another big way to set yourself apart.</p>\n<p>The list goes on but these are some of the things companies hire entire teams of experts for - and if you can pick one or more of these to really stack up those technical skillsets, you massively increase your chances of being considered for the jobs you're applying for.</p>\n<h1>Check out Andrew on DEV 👇</h1>\n<p>Andrew has written some epic content on how LinkedIn is a hidden gem full of opportunities, and loads of great AWS-related stuff too. Check his stuff out below.\n{% user andrewbrown %}\n{% link https://dev.to/exampro/700-web-developers-asked-me-to-give-them-linkedin-profile-feedback-and-these-are-my-5-top-tips-5382 %}</p>\n<h1>Listen to the podcast here 🎙</h1>\n<p>If you want, you can listen to the full episode from the embedded player below. Andrew has tons of unique left field tips that can really help you accelerate your career progression.\n{% spotify spotify:episode:5j7StGmIBF8XDtL7UsbwGR %}</p>", "published": "2022-11-27T11:03:27.828Z", "lastEdited": "2022-11-27T11:03:27.828Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/skill_pathway/a-ceo-s-1-tip-on-how-stand-out-as-a-new-full-stack-developer-in-a-competitive-market-6h2", "stars": [87, 103, 104, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "saves": [120, 121, 122, 123, 124, 125, 128, 133, 134, 135, 138, 142, 149, 150, 151, 152, 153, 155, 157]}}, {"model": "main.post", "pk": 48, "fields": {"author": 158, "title": "6 Literacies and Competencies You Didn’t Know You Need…But You Do.", "slug": "6-literacies-and-competencies-you-didnt-know-you-needbut-you-do-48", "description": "Ideas for planning a future in technology ", "content": "<hr />\n<p>title: 6 Literacies and Competencies You Didn’t Know You Need…But You Do.\npublished: true\ndescription: Ideas for planning a future in technology \ntags: DataScience \ncover_image: https://thepracticaldev.s3.amazonaws.com/i/kw26w23j4une3vmfqkzx.jpeg</p>\n<hr />\n<body>\n\n<p>I just finished the book <strong><a target=\"_blank\" href=\"https://www.amazon.com/gp/product/0262535971/ref=as_li_tl?ie=UTF8&camp=1789&creative=9325&creativeASIN=0262535971&linkCode=as2&tag=rayphaistos1-20&linkId=fbd1037d742f855ff2471cc44a072a66\">Robot-Proof: Higher Education in the Age of Artificial Intelligence (The MIT Press)</a><img src=\"//ir-na.amazon-adsystem.com/e/ir?t=rayphaistos1-20&l=am2&o=1&a=0262535971\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /></strong> written by Joseph Aoun, the President of Northeastern University.\nWhile the author’s intended audience is other individuals within the academic community, I found the model which he built his message around one worth sharing. The premise of the book is a call to arms to the higher learning community, stating the current situation in the world one where machines are competing directly against the wider human workforce at a magnitude and speed like never before. Indeed technology as destroyed jobs before, resulting in workers both willing and able needing to retool, and for workers not both willing and able being left out in the cold. What is pointed out is that at each of these pivotal moments in society, individuals sought education as a counter. Factory workers replaced by machines learned how to operate and repair the machines. Economists who before created models “by hand” , now utilize data science tools. Where I feel this book is applicable to our business is the framework he provides for the literacy and cognitive competencies, and his articulation of near and far transfer of learning.\n</p>\n<p>\n      <h2><strong>The 6 Literacies </strong></h2>\n<IMG SRC=\"https://media.giphy.com/media/1jl173guBKkbvC03rQ/giphy.gif\">\nMost of us are familiar with half of the list presented in the book; reading, writing, and arithmetic. The argument presented is that for the majority of explosion of the middle class in most of the world’s middle-class populations, these three knowledge areas were most closely correlated to the earnings potential, job stability, and an individuals demand in the market. The presence of technology however has threatened this relationship. Machines are not able to read books and even provide critiques of them. Machines are actually writing news articles to a level audiences can not tell they were not written by humans. Law firms are using software to read through documents to find necessary discovery information. Even the most complex math we are finding that computers are having little trouble handling. This leads to the necessity for individuals to possess levels of acumen in three additional literary areas; data, technology, and humanities.\n</p>\n\n<strong>DATA literacy </strong> centers around the current reality that we have more information being created, transmitted, and stored than ever before. Individuals today have an incentive to understand this body of information surrounding their everyday life. While everyone will not be expected to be an expert in time-series analysis, individuals would best serve themselves understanding better visualization formats for time, understanding relations of data sets across time. Basic univariate (one variable) descriptive statistics like mean, and the median. Bivariate statistics to describe relationships between two items. The big picture frameworks that previously were only required for management is really now a need for all individuals on the team.\n\n<strong> TECHNOLOGY literacy </strong> centers around the need to have insight into how the tools around us work. When machines first began to be adopted into society, there was a closer relationship between being able to use a machine, and knowing how the machine works. Early cars required an understanding on how they worked in order to use them. The opportunity cost of how much technology has been democratized is the fact that an understanding of how technology works is beyond most individuals. Individuals today have an incentive to now just know how to use their cell phone, or Tensor-Flow 2.0, but have some level of understanding how these technologies work.\n\n<strong> HUMANITIES literacy </strong> centers around the group of studies that previously were seen only useful to smaller subsets of society. Psychology, Philosophy, Politics, Economics, and History. Only a decade ago, I remember being told the joke that the fastest way to your parent’s basement was through an anthropology degree. If you the list of the top ten most in demand jobs that LinkedIn post every October, you will see that things have definitely changed. Data science, data analyst, and user experience (A job that didn’t even exist a decade ago) teams are filled with individuals with backgrounds in these areas. Organizations are finding that the humanities are needed more than ever as we navigate what Moore (1985) called the ‘policy vacuums’ that technology creates. Data privacy, data governance, market segmentation, net effects of tools more a part of societies’ everyday activities, how individuals can be expected to misuse technology. Internally to organizations, collaboration and communication are main premises of AGILE teams. Data ethics concerns requires individuals to have a respect for these areas of knowledge.\n\n<i> So you are good now.... </i>\n<IMG SRC=\"https://media.giphy.com/media/3o7btNhMBytxAM6YBa/giphy.gif\">\n<i> ....but wait wait, there is more! </i>\n\n<h2><strong> Cognitive Competencies: </strong></h2>\n\nThe literacy group of six presented above are the areas of knowledge that we need to know. The cognitive competencies following are not about what you know, but rather how you think and perceive,how you process information. While computers are more and more able to compete and actually beat humans in processing digital quantitative information with which they have previous experience, humans remain far superior in processing analog qualitative information with which they have never seen before. The following competencies assist an individual in this ability.\n\n<strong> CRITICAL THINKING </strong> is the sole member of this list from ‘the old days’. Many of us can remember in college or maybe even high school, syllabi that had this category for the areas that were focused on for the education. A Big Picture definition is rational, logic based approaches to situations.\n<IMG SRC=\"https://media.giphy.com/media/2jOcXFwhIEypPeQvOY/giphy.gif\">\n<strong> SYSTEMS THINKING </strong> is the ability to examine and perceive environments, situations, events, machines, and interactions holistically. Many best selling business books speak on the negative outcomes associated with “silo mentality”. The reality of the situation however is that it is not only management and C-level individuals who need to internalize this message. Agile brings teams the concept of “the definition of done”. Only a couple decades ago, the manufacturing community was given the book The Goal, talking about better processes for running a shop. Many of those same firms today are using, and embedding software into their products. This is the reason the development operations (DevOps) book “The Phoenix Project” was written. A recommended read, but premised around the idea is that firms that use to build hardware are more and more building software, and that this tech and software world is really no different than the manufacturing floor of yesterday, except now many of your stations are harder to see visually.\n\n<IMG SRC=\"https://thepracticaldev.s3.amazonaws.com/i/cq2xwk09f6c9yr8uogee.png\">\n<i> image of a WW2 plane that returned from mission highlighting the bullet hole misconception. The area of interest is not where the planes were shot, but rather where they were <strong> not </strong> shot </i>\n\n<strong> ENTREPRENEURSHIP </strong> is the ability to create something new. A traditional approach to the term entrepreneur may lead some to believe there is no context outside of a self employed or business owner setting. The companies of today and tomorrow actually require individuals who approach their tasking from a point of view of creativity. Technology is moving so fast that it is no longer reasonable to expect that a service or product provided today will be desired tomorrow, or that it will be brought to fruition in the same ways. It is estimated that for children in grade school in the world, 65% of the jobs they will take do not yet exist.\n\n<IMG SRC=\"https://media.giphy.com/media/3Z1basZxa2mGOSPBzR/giphy.gif\" >\n\n<strong> CULTURAL AGILITY </strong> is the ability to understand and interact with different environments. There is a difference between and international and a global firm. An international firm is one with operations in numerous countries, but centralized authority from their home office. A globalized firm allows autonomy at the various country branches to better address regional concerns. Such firms are needing people with these mindsets capable of adjusting to different areas, and more importantly arriving to today’s problem with insightful contributions and solutions from their diverse interactions and experiences from yesterday.\n<IMG SRC=\"https://media.giphy.com/media/UPOsAgqtBq0Ug/giphy.gif\">\n\n<h2><strong> Near and Far Learning Transfer: </strong></h2>\n\nAnother strong separation between our best machines and the average four year old; our ability to apply learning almost anywhere. This is a skill set that again is highly desirable and one an individual can work on and thus improve. Learning would not be very beneficial if we are only able to apply it in the specific situations that it was taught. This is often the critique of certain schoolhouse education approaches that do not correlate with workforce success as they do school house success. Our desire is that our learning can be transferred to other areas. A mathematics background being applied in economics or data science can be viewed as a near transfer; while there is not a 100% overlap, there is much in common between the original education and the destination application area. Far transfers are where humans outperform computers. It is a human ability to take an algorithm created in data science to predict fracture patterns of frozen ice, and adapt it to predict the “fracture” patterns of social media conversations between partisan political groups.\n<IMG SRC=\"https://media.giphy.com/media/Wp5u0z13Jsjp45ZNzO/giphy.gif\">\n<h2><strong> Summary: </strong></h2>\n\nWhile technology today is impacting society at a rate and magnitude like never before, the action is still the same. Individuals can respond very much the way individuals have always responded; adopting new areas of knowledge, and provide as products and services the cognitive skills that machines to date have never been able to attempt. Whether building personal acumen, resumes, or creating a team of personnel to face the challenges of day, these frameworks indeed can provide a useful model to minimum start the race, if not get you across the finish line.\n\n<IMG SRC= \"https://thepracticaldev.s3.amazonaws.com/i/yvo6wgqm4il6drhogn58.jpeg\">\n<b><u><a href=\"https://www.linkedin.com/in/raymondkroberts/\">Raymond K Roberts</u></b></a>\n\nBelow are links to the author’s book and some video presentations of his.\nRobot Proof: Higher Education in the Age of Artificial Intelligence\n\n<a href=\"https://www.youtube.com/watch?v=nu7uhjeVn4Y&t=1s\">3 minute video</a> \n<a href=\"https://www.youtube.com/watch?v=gi3sBk2L9HI\">60 minute video</a> \n\n<i>I would love to hear your thoughts as well. Please feel free to reach out to me at raymond.k.roberts@gmail.com </i> \n\n<i>Originally Posted in Medium July 9, 2019<i>\n</body>", "published": "2022-11-27T11:04:48.700Z", "lastEdited": "2022-11-27T11:04:48.700Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_48_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--85ZcGAtY--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/kw26w23j4une3vmfqkzx.jpeg", "source": "https://dev.to/rayphaistos1/6-literacies-and-competencies-you-didn-t-know-you-need-but-you-do-3ob0", "stars": [], "saves": []}}, {"model": "main.post", "pk": 49, "fields": {"author": 159, "title": "Universal Rendering in Flask using Vue.js and Ara Framework", "slug": "universal-rendering-in-flask-using-vuejs-and-ara-framework-49", "description": "tags: Flask, Vue.js, Universal Rendering", "content": "<hr />\n<p>title: Universal Rendering in Flask using Vue.js and Ara Framework\npublished: true\ndescription:\ntags: Flask, Vue.js, Universal Rendering</p>\n<hr />\n<p>Universal Rendering consists in server-side render pages and make them interactive on the browser using the same view components built with React, Vue.js, Angular, etc. </p>\n<p>Nowdays, JavaScript frameworks such as <a href=\"https://nextjs.org/\">Next.js</a>, <a href=\"https://nuxtjs.org/\">Nuxt.js</a> and <a href=\"https://github.com/angular/universal\">NgUniversal</a> make this duty easier. However, how can we achieve it on non JavaScript frameworks like Flask?</p>\n<h2>Nova Proxy</h2>\n<p>It's a proxy server part of <a href=\"https://ara-framework.github.io/website/\">Ara Framework</a> to implement Universal Rendering with any view library (React, Vue.js, etc) on any web platform (Laravel, Flask, etc). For example, in this demo we'll render a view using Vue.js into a web application built with Flask.</p>\n<p>How it works:</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/2400/1*0_KCs-IFVCIN8J5RwP7uFg.png\" />\n1. A user requests a page to <strong>Nova Proxy</strong>.</p>\n<ol>\n<li>\n<p><strong>Nova Proxy</strong> passes the request to the website server.</p>\n</li>\n<li>\n<p>The website uses a <strong>Nova Directive</strong> to render the placeholders where the Nova views should be included.</p>\n</li>\n<li>\n<p>The website sends back the HTML generated to <strong>Nova Proxy</strong>.</p>\n</li>\n<li>\n<p><strong>Nova Proxy</strong> include the Nova views on the placeholders and sends back the HTML to the browser.</p>\n</li>\n</ol>\n<p>Finally, on the browser, JavaScript is used to progressively enhance the application and make it interactive. Read more <a href=\"https://ara-framework.github.io/website/docs/nova-architecture\">here</a> about the Nova Architecture.</p>\n<h2>Set Up Flask App</h2>\n<p>We'll use <a href=\"https://github.com/saojs/sao\">SAO</a> to generate the base Flask application.</p>\n<p>Install SAO:</p>\n<p><code>shell\nnpm i -g sao</code></p>\n<p>Create Flask app:</p>\n<p><code>shell\nsao marconi1992/create-flask-app ara-flask</code></p>\n<h3>Set Up Nova Directive</h3>\n<p>Notice the <code>requirements.txt</code> file contains a package named <a href=\"https://github.com/ara-framework/hypernova-jinja2-directive\">hypernova_jinja2_directive</a>. It's used to render the Nova directives using the template engine for Flask (Jinja2).</p>\n<p>Set up the <code>nova</code> helper for <code>jinja</code> into <code>__init__.py</code>:</p>\n<p>```python\nfrom flask import Flask\nfrom hypernova_jinja2_directive import nova</p>\n<h1>Initialize the app</h1>\n<p>app = Flask(<strong>name</strong>, instance_relative_config=True)</p>\n<h1>Load the views</h1>\n<p>from app import views</p>\n<h1>Load the config file</h1>\n<p>app.config.from_object('config')</p>\n<p>app.jinja_env.globals.update(nova=nova)\n```</p>\n<h3>Run Flask App</h3>\n<p>The application generated contains a <code>docker-compose.yml</code> file to run the Flask app.</p>\n<p>Run it:</p>\n<p><code>shell\ndocker-compose up -d</code></p>\n<p>Test the Flask application on http://localhost:8000/.</p>\n<p>Browser:</p>\n<p><img alt=\"flask page\" src=\"https://ara-framework.github.io/website/img/blog/flask-page.png\" /></p>\n<h2>Set up the Nova service</h2>\n<p>We'll create a Nova service using Vue.js.</p>\n<p>Install <a href=\"https://github.com/ara-framework/ara-cli\">Ara CLI</a>:</p>\n<p><code>shell\nnpm i -g ara-cli</code></p>\n<p>Create Nova service:</p>\n<p><code>shell\nara new:nova -t vue nova</code></p>\n<p>Go to the Nova service folder:</p>\n<p><code>shell\ncd nova</code></p>\n<p>Run Nova service:</p>\n<p><code>shell\nnpm run dev</code></p>\n<p>The Nova service runs on http://localhost:3000.</p>\n<h3>Test the Nova Service.</h3>\n<p>Once the Nova service is running you can make a <code>POST</code> request to http://localhost:3000/batch using a payload like:</p>\n<p><code>json\n{\n  \"uuid\": {\n    \"name\": \"Example\",\n    \"data\": {\n      \"title\": \"Ara Framework\"\n    }\n  }\n}</code></p>\n<p>The <code>results</code> property in the response contains the <code>html</code> of the view rendered by the Nova service.</p>\n<p>Example:</p>\n<p><code>json\n{\n  \"success\": true,\n  \"error\": null,\n  \"results\": {\n    \"uuid\": {\n      \"name\": \"Example\",\n      \"html\": \"&lt;div data-hypernova-key=\\\"Example\\\" data-hypernova-id=\\\"4d9e81bd-6413-4661-ab56-ed5bb4f59cae\\\"&gt;&lt;h1 data-server-rendered=\\\"true\\\"&gt;Ara Framework&lt;/h1&gt;&lt;/div&gt;\\n&lt;script type=\\\"application/json\\\" data-hypernova-key=\\\"Example\\\" data-hypernova-id=\\\"4d9e81bd-6413-4661-ab56-ed5bb4f59cae\\\"&gt;&lt;!--{\\\"title\\\":\\\"Ara Framework\\\"}--&gt;&lt;/script&gt;\",\n      \"meta\": {},\n      \"duration\": 1.210146,\n      \"statusCode\": 200,\n      \"success\": true,\n      \"error\": null\n    }\n  }\n}</code></p>\n<h3>Update the Example view</h3>\n<p>The <code>Example</code> view is rendering only a simple heading. We can make it interactive adding an input element that changes the heading text.</p>\n<p>Replace the <code>nova/src/components/Example.vue</code> with the following code:</p>\n<p>```vue\n<template>\n<br />\n<div>\n    <h2 class=\"title\">{{title}}</h2>\n    <input type=\"text\" v-model=\"title\">\n  </div></p>\n<p></template></p>\n<script>\nexport default {\n  props: ['title']\n}\n</script>\n<p>```</p>\n<h2>Set up Nova Proxy</h2>\n<p>Create a configuration file for Nova Proxy in the root folder:</p>\n<p><code>touch nova-proxy.json</code></p>\n<p>Add the following configuration in <code>nova-proxy.json</code> file to proxy the incoming requests to the Flask web server.</p>\n<p><code>json\n{\n  \"locations\": [\n    {\n      \"path\": \"/\",\n      \"host\": \"http://localhost:8000\",\n      \"modifyResponse\": true\n    }\n  ]\n}</code></p>\n<h3>Run Nova Proxy</h3>\n<p>Before to run the command we need to set the <code>HYPERNOVA_BATCH</code> variable using the Nova service endpoint.</p>\n<p><code>shell\nexport HYPERNOVA_BATCH=http://localhost:3000/batch</code></p>\n<p>You need to run the following command where the <code>noxa-proxy.json</code> file was created or pass the <code>--config</code> parameter with the configuration file path.</p>\n<p><code>ara run:proxy --config ./nova-proxy.json</code></p>\n<p>The command runs Nova Proxy on http://localhost:8080.</p>\n<h3>Render Nova views (Vue.js)</h3>\n<p>Use the Nova directive in a Jinja2 template page:</p>\n<p><code>app/templates/index.html</code></p>\n<p>```jinja\n{% extends \"base.html\" %}\n{% block body %}\n<br />\n<div class=\"container\">\n    <h1 class=\"title\">Hello Flask</h1>\n    {{ nova('Example', {'title':'Ara Framework'}) }}\n  <div>\n{% endblock %}\n```\n\nThe `nova` helper requires the `name` of the view, and the `data` necessary to render the it.\n\nOpen the page on http://localhost:8080 and notice the Nova view is rendered.\n\n![flask-example-vue-render](https://ara-framework.github.io/website/img/blog/flask-example-vue-render.png)\n\nThe rendered view is not interactive yet, if we type something in the input element the heading text is not updated. It's happening because we're not loading the client script.\n\n## Hydrate Nova views on the browser\n\nHydration is the process of mounting a view component on the browser using the state used when it was rendered on the server.\n\nIn order to hydrate the views we need to load the `client.js` script on the browser.\n\nUpdate the `base.html` file in the Flask app:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    ....\n</head>\n<body>\n    ....\n    {% block body %}\n    {% endblock %}\n    <script src=\"http://localhost:3000/public/client.js\"></script>\n</body>\n</html>\n```\n\nFinally, the Nova view rendered on the server is interactive and dynamic on the browser.\n\n![interactive-nova-view](https://ara-framework.github.io/website/img/blog/interactive-nova-view.gif)\n\n\n## Conclusion\n\nNova Proxy enables us to use modern view libraries on any web framework. So if you previously developed a web application using non Javascript frameworks (Laravel, Flask, Ruby on Rails, etc) then Nova Proxy can help you to gradually migrate its views to a JavaScript view library (React, Vue.js) in a short period of time.\n\n\n\n</p>", "published": "2022-11-27T11:04:52.809Z", "lastEdited": "2022-11-27T11:04:52.809Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160909.png", "source": "https://dev.to/phillipgd1992/universal-rendering-in-flask-using-vue-js-and-ara-framework-59n5", "stars": [], "saves": []}}, {"model": "main.post", "pk": 50, "fields": {"author": 160, "title": "Build a JWT Authenticated API with Lumen(v5.8)", "slug": "build-a-jwt-authenticated-api-with-lumenv58-50", "description": "In this tutorial, we will be using lumen; a super-fast micro-framework by laravel to build a simple and secure REST API. At the end of this tutorial, you should be able to build production-ready APIs. Let's get started!", "content": "<hr />\n<p>title: Build a JWT Authenticated API with Lumen(v5.8)\npublished: true\ndescription: In this tutorial, we will be using lumen; a super-fast micro-framework by laravel to build a simple and secure REST API. At the end of this tutorial, you should be able to build production-ready APIs. Let's get started!\ntags: php,lumen,laravel,webDev\ncanonical_url: https://voidnerd.com/posts/build-a-jwt-authenticated-api-with-lumen</p>\n<hr />\n<p>In this tutorial, we will be using lumen; a super-fast micro-framework by laravel to build a simple and secure REST API. At the end of this tutorial, you should be able to build production-ready APIs. Let's get started!</p>\n<h2>Prerequisite</h2>\n<p>Make sure you have the essentials, I beg of you.</p>\n<ul>\n<li>PHP &gt;= 7.1.3</li>\n<li>OpenSSL PHP Extension</li>\n<li>PDO PHP Extension</li>\n<li>Mbstring PHP Extension</li>\n<li>Mysql &gt;= 5.7</li>\n<li>Composer (Dependency Manager for PHP)</li>\n<li>Postman (To test your endpoints)</li>\n</ul>\n<h2>Installation</h2>\n<p>First things first, you need to get lumen's cli.</p>\n<p><code>$ composer global require \"laravel/lumen-installer\"</code></p>\n<p>If your download was successful, run below command to confirm you have lumen installed.</p>\n<p><code>$ lumen</code>\nIf you encounter an error like  <code>-bash: lumen: command not found</code>, you need to  <a href=\"https://stackoverflow.com/questions/25373188/laravel-installation-how-to-place-the-composer-vendor-bin-directory-in-your\">add composer's vender bin to your path</a>.</p>\n<p>If all is in order, you should see something like so.</p>\n<p><img alt=\"Lumen\" src=\"https://res.cloudinary.com/iamndie/image/upload/v1566656870/Screen_Shot_2019-08-24_at_3.16.08_PM_mqbqso.png\" title=\"Lumen CLI\" /></p>\n<p>Now run this command to create the lumen project</p>\n<p><code>$ lumen new auth-app</code></p>\n<p>Enter the project folder\n<code>$ cd auth-app</code></p>\n<p>Run the app\n<code>$ php -S localhost:8000 -t public</code>\nLoad <code>localhost:8000</code> on your browsers address bar and it should render a result as shown below.</p>\n<p><img alt=\"Lumen response\" src=\"https://res.cloudinary.com/iamndie/image/upload/v1566658430/Screen_Shot_2019-08-24_at_3.53.20_PM_ivhqpc.png\" title=\"Lumen response\" /></p>\n<p>Open up the project (auth-app) in your preferred editor. </p>\n<p>Create a .env file, copy all contents in .env.example into the .env file and add your database configurations.</p>\n<p>In <code>boostrap/app.php</code> uncomment the facades and eloquent method</p>\n<p>```php\n//before</p>\n<p>// $app-&gt;withFacades();</p>\n<p>// $app-&gt;withEloquent();</p>\n<p>//after</p>\n<p>$app-&gt;withFacades();</p>\n<p>$app-&gt;withEloquent();</p>\n<p>```\nTurning on withFacades inject the application IoC to Illuminate\\Support\\Facades\\Facade. Without doing so even if you're importing Illuminate\\Support\\Facades\\File it wouldn't work. <a href=\"https://github.com/laravel/lumen-framework/issues/143\">Credit</a></p>\n<p>The $app-&gt;withEloquent() method actually enables the query builder too. It's registering the DatabaseServiceProvider, which is required to use the query builder. <a href=\"https://github.com/laravel/lumen-framework/issues/584\">Credit</a>.</p>\n<h2>Create a user</h2>\n<p>Make user's database migration</p>\n<p><code>$ php artisan make:migration create_users_table --create=users</code></p>\n<p>Locate the migration file <code>database/migrations/*_create_users_table.php</code> and add neede table columns(name, email, password); see code below:</p>\n<p><code>php\n...\n    public function up()\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table-&gt;bigIncrements('id');\n            $table-&gt;string('name');\n            $table-&gt;string('email')-&gt;unique()-&gt;notNullable();\n            $table-&gt;string('password');\n            $table-&gt;timestamps();\n        });\n    }\n...</code></p>\n<p>Migrate your database</p>\n<p>```\n$ php artisan migrate</p>\n<p>```</p>\n<p>Add register route which as the name implies; register users. Locate <code>routes/web.php</code> and insert the needed code as seen below</p>\n<p>```php\n// API route group\n$router-&gt;group(['prefix' =&gt; 'api'], function () use ($router) {\n   // Matches \"/api/register\n   $router-&gt;post('register', 'AuthController@register');</p>\n<p>});\n```</p>\n<p>Since we are going to prefix <code>api</code> in all our endpoint, to reduce repetition we will use route grouping to do just that.</p>\n<p>This method (<code>$router-&gt;post($uri, $callback);</code> takes in a $url and a $callback parameter. In the <code>$callback</code>, <code>AuthController</code> is our controller class (we will create this class in a bit) and <code>register</code> is a method in said class.</p>\n<p>Let's create our AuthControler.</p>\n<p>Create file <code>app/Http/Controllers/AuthController.php</code> and populate it with code as seen below.</p>\n<p>```php</p>\n<p>&lt;?php</p>\n<p>namespace App\\Http\\Controllers;</p>\n<p>use Illuminate\\Http\\Request;\nuse  App\\User;</p>\n<p>class AuthController extends Controller\n{\n    /*<em>\n     * Store a new user.\n     *\n     * @param  Request  $request\n     * @return Response\n     </em>/\n    public function register(Request $request)\n    {\n        //validate incoming request \n        $this-&gt;validate($request, [\n            'name' =&gt; 'required|string',\n            'email' =&gt; 'required|email|unique:users',\n            'password' =&gt; 'required|confirmed',\n        ]);</p>\n<pre><code>    try {\n\n        $user = new User;\n        $user-&gt;name = $request-&gt;input('name');\n        $user-&gt;email = $request-&gt;input('email');\n        $plainPassword = $request-&gt;input('password');\n        $user-&gt;password = app('hash')-&gt;make($plainPassword);\n\n        $user-&gt;save();\n\n        //return successful response\n        return response()-&gt;json(['user' =&gt; $user, 'message' =&gt; 'CREATED'], 201);\n\n    } catch (\\Exception $e) {\n        //return error message\n        return response()-&gt;json(['message' =&gt; 'User Registration Failed!'], 409);\n    }\n\n}\n</code></pre>\n<p>}\n```</p>\n<p>Register a user(use POSTMAN) with route <code>localhost:8000/api/register</code> and you should get a successful response like so </p>\n<p><img alt=\"Lumen register example\" src=\"https://res.cloudinary.com/iamndie/image/upload/v1566663229/Screen_Shot_2019-08-24_at_4.34.01_PM_vnm7zv.png\" title=\"Lumen register example\" /></p>\n<h2>User sign in</h2>\n<p>Pull in the JWT authentication package.</p>\n<p><code>$ composer require tymon/jwt-auth:dev-develop</code></p>\n<p>Generate your API secret</p>\n<p><code>$ php artisan jwt:secret</code></p>\n<p>create file <code>config/auth.php</code> with below config</p>\n<p>```php\n//config.auth.php</p>\n<p>&lt;?php</p>\n<p>return [\n    'defaults' =&gt; [\n        'guard' =&gt; 'api',\n        'passwords' =&gt; 'users',\n    ],</p>\n<pre><code>'guards' =&gt; [\n    'api' =&gt; [\n        'driver' =&gt; 'jwt',\n        'provider' =&gt; 'users',\n    ],\n],\n\n'providers' =&gt; [\n    'users' =&gt; [\n        'driver' =&gt; 'eloquent',\n        'model' =&gt; \\App\\User::class\n    ]\n]\n</code></pre>\n<p>];</p>\n<p><code>``\nMake some changes to your</code>User<code>model(</code>app/User.php`) to fit <strong>tymon/jwt-auth's</strong> requirements. Keep your eye out for everything that includes \"JWT\".</p>\n<p>```php\n&lt;?php</p>\n<p>namespace App;</p>\n<p>use Illuminate\\Auth\\Authenticatable;\nuse Laravel\\Lumen\\Auth\\Authorizable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\Access\\Authorizable as AuthorizableContract;</p>\n<p>use Tymon\\JWTAuth\\Contracts\\JWTSubject;</p>\n<p>class User extends Model implements AuthenticatableContract, AuthorizableContract, JWTSubject\n{\n    use Authenticatable, Authorizable;</p>\n<pre><code>/**\n * The attributes that are mass assignable.\n *\n * @var array\n */\nprotected $fillable = [\n    'name', 'email'\n];\n\n/**\n * The attributes excluded from the model's JSON form.\n *\n * @var array\n */\nprotected $hidden = [\n    'password',\n];\n\n\n\n\n/**\n * Get the identifier that will be stored in the subject claim of the JWT.\n *\n * @return mixed\n */\npublic function getJWTIdentifier()\n{\n    return $this-&gt;getKey();\n}\n\n/**\n * Return a key value array, containing any custom claims to be added to the JWT.\n *\n * @return array\n */\npublic function getJWTCustomClaims()\n{\n    return [];\n}\n</code></pre>\n<p>}</p>\n<p><code>``\nMake some changes to</code>bootstrap/app.php`</p>\n<p>```php\n//before\n// $app-&gt;routeMiddleware([\n//     'auth' =&gt; App\\Http\\Middleware\\Authenticate::class,\n// ]);</p>\n<p>//After\n$app-&gt;routeMiddleware([\n    'auth' =&gt; App\\Http\\Middleware\\Authenticate::class,\n]);\n```</p>\n<p>```php\n//before\n // $app-&gt;register(App\\Providers\\AppServiceProvider::class);\n // $app-&gt;register(App\\Providers\\AuthServiceProvider::class);\n // $app-&gt;register(App\\Providers\\EventServiceProvider::class);</p>\n<p>//After\n // $app-&gt;register(App\\Providers\\AppServiceProvider::class);\n $app-&gt;register(App\\Providers\\AuthServiceProvider::class);\n // $app-&gt;register(App\\Providers\\EventServiceProvider::class);</p>\n<p>// Add this line\n $app-&gt;register(Tymon\\JWTAuth\\Providers\\LumenServiceProvider::class);\n```</p>\n<p>Add login route in <code>routes/web.php</code></p>\n<p>```php\n// API route group\n$router-&gt;group(['prefix' =&gt; 'api'], function () use ($router) {\n     // Matches \"/api/register\n    $router-&gt;post('register', 'AuthController@register');</p>\n<pre><code>  // Matches \"/api/login\n $router-&gt;post('login', 'AuthController@login');\n</code></pre>\n<p>});\n```</p>\n<p>Add a global respondWithToken method to Controller class in  <code>app/Http/Controllers/Controller.php</code>. This is so we could access it from any other controller.</p>\n<p>```php\n   ...\n  //import auth facades\n  use Illuminate\\Support\\Facades\\Auth;</p>\n<p>//Add this method to the Controller class\n  protected function respondWithToken($token)\n    {\n        return response()-&gt;json([\n            'token' =&gt; $token,\n            'token_type' =&gt; 'bearer',\n            'expires_in' =&gt; Auth::factory()-&gt;getTTL() * 60\n        ], 200);\n    }</p>\n<p>```</p>\n<p>Add a login method to your AuthController class in <code>app/Http/Controllers/AuthController.php</code></p>\n<p>```php\n   ...</p>\n<p>//import auth facades\n   use Illuminate\\Support\\Facades\\Auth;</p>\n<p>...</p>\n<pre><code> /**\n * Get a JWT via given credentials.\n *\n * @param  Request  $request\n * @return Response\n */\npublic function login(Request $request)\n{\n      //validate incoming request \n    $this-&gt;validate($request, [\n        'email' =&gt; 'required|string',\n        'password' =&gt; 'required|string',\n    ]);\n\n    $credentials = $request-&gt;only(['email', 'password']);\n\n    if (! $token = Auth::attempt($credentials)) {\n        return response()-&gt;json(['message' =&gt; 'Unauthorized'], 401);\n    }\n\n    return $this-&gt;respondWithToken($token);\n}\n</code></pre>\n<p>```</p>\n<p>Login a user using route <code>localhost:8000/api/login</code> and you should get a successful response like so:</p>\n<p><img alt=\"Lumen login example\" src=\"https://res.cloudinary.com/iamndie/image/upload/v1566672721/Screen_Shot_2019-08-24_at_7.51.18_PM_srhwrs.png\" title=\"Lumen login example\" /></p>\n<h2>Authenticated routes</h2>\n<p>For our grand finale, we are going to make some authenticated routes.</p>\n<p>Add a couple of routes to <code>routes/web.php</code></p>\n<p>```php\n...\n// API route group\n$router-&gt;group(['prefix' =&gt; 'api'], function () use ($router) {\n    // Matches \"/api/register\n   $router-&gt;post('register', 'AuthController@register');\n     // Matches \"/api/login\n    $router-&gt;post('login', 'AuthController@login');</p>\n<pre><code>// Matches \"/api/profile\n$router-&gt;get('profile', 'UserController@profile');\n\n// Matches \"/api/users/1 \n//get one user by id\n$router-&gt;get('users/{id}', 'UserController@singleUser');\n\n// Matches \"/api/users\n$router-&gt;get('users', 'UserController@allUsers');\n</code></pre>\n<p>});</p>\n<p>...</p>\n<p>```</p>\n<p>Create a file <code>app/Http/Controllers/UserController.php</code> and populate it with this elegant looking code.</p>\n<p>```php\n&lt;?php</p>\n<p>namespace App\\Http\\Controllers;</p>\n<p>use Illuminate\\Support\\Facades\\Auth;\nuse  App\\User;</p>\n<p>class UserController extends Controller\n{\n     /*<em>\n     * Instantiate a new UserController instance.\n     *\n     * @return void\n     </em>/\n    public function __construct()\n    {\n        $this-&gt;middleware('auth');\n    }</p>\n<pre><code>/**\n * Get the authenticated User.\n *\n * @return Response\n */\npublic function profile()\n{\n    return response()-&gt;json(['user' =&gt; Auth::user()], 200);\n}\n\n/**\n * Get all User.\n *\n * @return Response\n */\npublic function allUsers()\n{\n     return response()-&gt;json(['users' =&gt;  User::all()], 200);\n}\n\n/**\n * Get one user.\n *\n * @return Response\n */\npublic function singleUser($id)\n{\n    try {\n        $user = User::findOrFail($id);\n\n        return response()-&gt;json(['user' =&gt; $user], 200);\n\n    } catch (\\Exception $e) {\n\n        return response()-&gt;json(['message' =&gt; 'user not found!'], 404);\n    }\n\n}\n</code></pre>\n<p>}</p>\n<p>``` </p>\n<p>Below is an example call to one of the three newly added endpoints </p>\n<p><img alt=\"Lumen users example\" src=\"https://res.cloudinary.com/iamndie/image/upload/v1566677009/Screen_Shot_2019-08-24_at_8.54.39_PM_vqr7bx.png\" title=\"Lumen users example\" /></p>\n<p>Here's a <a href=\"https://github.com/ndiecodes/lumen-auth-example\">link to the full code on github</a>.</p>\n<p>The end-ish!</p>\n<p>I hope this article has helped you in some way, and that you build upon this knowledge to deploy awesome APIs in the nearest future. I would like to see your contributions down in the comments too.</p>\n<p>Hasta la vista.</p>", "published": "2022-11-27T11:04:55.601Z", "lastEdited": "2022-11-27T11:04:55.601Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160910.png", "source": "https://dev.to/ndiecodes/build-a-jwt-authenticated-api-with-lumen-2afm", "stars": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "saves": [160, 162, 164, 165, 167, 169, 171, 173, 175, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189]}}, {"model": "main.post", "pk": 51, "fields": {"author": 190, "title": "Ditching worthless friends with Facebook data and JavaScript", "slug": "ditching-worthless-friends-with-facebook-data-and-javascript-51", "description": "Friendships are hard to maintain. So much energy is wasted maintaining friendships that might not act...", "content": "<p>Friendships are hard to maintain. So much energy is wasted maintaining friendships that might not actually provide any tangible returns. I find myself thinking \"Sure I've known her since kindergarten, she introduced me to my wife, and let me crash at her place for 6 months when I was evicted, but is this <em>really</em> a worthwhile friendship?\".</p>\n<p>I need to decide which friends to ditch. But what's the criteria? Looks? Intelligence? Money?</p>\n<p>Surely, the value of an individual is subjective. There's no way to benchmark it empirically, right? <strong>WRONG</strong>. There is one surefire way to way to measure the worth of a friend: <em>the amount of emoji reactions received on Facebook Messenger.</em></p>\n<p><img alt=\"And the bartender said &quot;why the long face&quot; lmao. 12 laughing emoji reactions.\" src=\"https://i.imgur.com/ztbplsK.png\" /></p>\n<p>More laughing reactions means that's the funny friend. The one with the most angry reactions is the controversial one. And so on. Simple!</p>\n<p>Counting manually is out of the question; I need to automate this task.</p>\n<h1>Getting the data</h1>\n<p>Scraping the chats would be too slow. There's an API, but I don't know if it would work for this. It looks scary and the documentation has too many words! I eventually found a way to get the data I need:</p>\n<p><img alt=\"Facebook data download page\" src=\"https://i.imgur.com/4kquCab.png\" /></p>\n<p><a href=\"https://www.facebook.com/help/1701730696756992\">Facebook lets me download all the deeply personal information</a> they collected on me over the years in an easily readable JSON format. So kind of them! I make sure to select only the data I need (messages), and select the lowest image quality, to keep the archive as small as possible. It can take hours or even days to generate.</p>\n<p>The next day, I get an email notifying me that the archive is ready to download (all <em>8.6 GB</em> of it) under the \"Available Copies\" tab. The zip file has the following structure:</p>\n<p><code>messages\n├── archived_threads\n│   └── [chats]\n├── filtered_threads\n│   └── [chats]\n├── inbox\n│   └── [chats]\n├── message_requests\n│   └── [chats]\n└── stickers_used\n    └── [bunch of PNGs]</code></p>\n<p>The directory I am interested in is <code>inbox</code>. The <code>[chats]</code> directories have this structure:</p>\n<p><code>[ChatTitle]_[uniqueid]\n├── gifs\n│   └── [shared gifs]\n├── photos\n│   └── [shared photos]\n├── videos\n│   └── [shared videos]\n├── files\n│   └── [other shared files]\n└── message_1.json</code></p>\n<p>The data I need is in <code>message_1.json</code>. No clue why the <code>_1</code> suffix is needed. In my archive there was no <code>message_2.json</code> or any other variation.</p>\n<p>For example, if the chat I want to use is called \"Nude Volleyball Buddies\", the full path would be something like <code>messages/inbox/NudeVolleyballBuddies_5tujptrnrm/message_1.json</code>.</p>\n<p>These files can get pretty big, so don't be surprised if your fancy IDE faints at the sight of it. The chat I want to analyze is about 5 years old, which resulted in over <em>a million lines</em> of JSON.</p>\n<p>The JSON file is structured like this:</p>\n<p><code>json\n{\n  \"participants\": [\n    { \"name\": \"Ricardo L\" },\n    { \"name\": \"etc...\" }\n  ],\n  \"messages\": [\n    \" (list of messages...) \" \n  ],\n  \"title\": \"Nude Volleyball Buddies\",\n  \"is_still_participant\": true,\n  \"thread_type\": \"RegularGroup\",\n  \"thread_path\": \"inbox/NudeVolleyballBuddies_5tujptrnrm\"\n}</code></p>\n<p>I want to focus on <code>messages</code>. Each message has this format:</p>\n<p><code>json\n{\n  \"sender_name\": \"Ricardo L\",\n  \"timestamp_ms\": 1565448249085,\n  \"content\": \"is it ok if i wear a sock\",\n  \"reactions\": [\n    {\n      \"reaction\": \"\\u00f0\\u009f\\u0098\\u00a2\",\n      \"actor\": \"Samuel L\"\n    },\n    {\n      \"reaction\": \"\\u00f0\\u009f\\u0098\\u00a2\",\n      \"actor\": \"Carmen Franco\"\n    }\n  ],\n  \"type\": \"Generic\"\n}</code></p>\n<p>And I found what I was looking for! All the reactions listed right there.</p>\n<h1>Reading the JSON from JavaScript</h1>\n<p>For this task, I use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader\">FileReader API</a>:</p>\n<p><code>html\n&lt;input type=\"file\" accept=\".json\" onChange=\"handleChange(this)\"&gt;</code>\n```js\nfunction handleChange(target) {\n  const reader = new FileReader();\n  reader.onload = handleReaderLoad;\n  reader.readAsText(target.files[0]);\n}</p>\n<p>function handleReaderLoad (event) {\n  const parsedObject = JSON.parse(event.target.result);\n  console.log('parsed object', parsedObject);\n}\n```</p>\n<p>I see the file input field on my page, and the parsed JavaScript object is logged to the console when I select the JSON. It can take a few seconds due to the absurd length. Now I need to figure out how to read it.</p>\n<h1>Parsing the data</h1>\n<p>Let's start simple. My first goal is to take my <code>messages_1.json</code> as <strong>input</strong>, and something like this as the <strong>output</strong>:</p>\n<p><code>js\noutput = [\n  {\n    name: 'Ricardo L',\n    counts: {\n      '😂': 10,\n      '😍': 3,\n      '😢': 4,\n    },\n  },\n  {\n    name: 'Samuel L',\n    counts: {\n      '😂': 4,\n      '😍': 5,\n      '😢': 12,\n    },\n  },\n  // etc for every participant\n]</code></p>\n<p>The <code>participants</code> object from the original JSON already has a similar format. Just need to add that <code>counts</code> field:</p>\n<p><code>js\nconst output = parsedObject.participants.map(({ name }) =&gt; ({\n  name,\n  counts: {},\n}))</code></p>\n<p>Now I need to iterate the whole message list, and accumulate the reaction counts:</p>\n<p>```js\nparsedObject.messages.forEach(message =&gt; {\n  // Find the correct participant in the output object\n  const outputParticipant = output.find(({ name }) =&gt; name === message.sender_name)</p>\n<p>// Increment the reaction counts for that participant\n  message.reactions.forEach(({ reaction }) =&gt; {\n    if (!outputParticipant.counts[reaction]) {\n      outputParticipant.counts[reaction] = 1\n    } else {\n      outputParticipant.counts[reaction] += 1\n    }\n  })\n})\n```</p>\n<p>This is how the logged output looks like:</p>\n<p><img alt=\"JavaScript console Output. Two participants, with reaction counts, but with weird characters instead of emojis\" src=\"https://i.imgur.com/kd0Fqks.png\" /></p>\n<p>I'm getting four weird symbols instead of emojis. What gives?</p>\n<h1>Decoding the reaction emoji</h1>\n<p>I grab one message as an example, and it only has one reaction: the crying emoji (😢). Checking the JSON file, this is what I find:</p>\n<p><code>js\n\"reaction\": \"\\u00f0\\u009f\\u0098\\u00a2\"</code></p>\n<p>How does this character train relate to the crying emoji?</p>\n<p>It may not look like it, but this string is four characters long:</p>\n<ul>\n<li><code>\\u00f0</code></li>\n<li><code>\\u009f</code></li>\n<li><code>\\u0098</code></li>\n<li><code>\\u00a2</code></li>\n</ul>\n<p>In JavaScript, <code>\\u</code> is a prefix that denotes an escape sequence. This particular escape sequence starts with <code>\\u</code>, followed by exactly four hexadecimal digits. It represents a Unicode character in UTF-16 format. <em>Note: <a href=\"https://mathiasbynens.be/notes/javascript-encoding\">it's a bit more complicated than that</a>, but for the purposes of this article we can consider everything as being UTF-16.</em></p>\n<p>For instance, <a href=\"https://unicode-table.com/en/0053/\">the Unicode hex code of the capital letter S is <code>0053</code></a>. You can see how it works in JavaScript by typing <code>\"\\u0053\"</code> in the console:</p>\n<p><img alt=\"JavaScript Console. &quot;\\u0053&quot; as input, &quot;S&quot; as output\" src=\"https://i.imgur.com/KfIY8Lc.png\" /></p>\n<p>Looking at the Unicode table again, I see <a href=\"https://unicode-table.com/en/1F622/\">the hex code for the crying emoji is <code>1F622</code></a>. This is longer than four digits, so simply using <code>\\u1F622</code> wouldn't work. There are two ways around this:</p>\n<ul>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/UTF-16#U+010000_to_U+10FFFF\">UFT-16 surrogate pairs</a>. This splits the big hex number into two smaller 4-digit numbers. In this case, the crying emoji would be represented as <code>\\ud83d\\ude22</code>.</p>\n</li>\n<li>\n<p>Use the Unicode code point directly, using a slightly different format: <code>\\u{1F622}</code>. Notice the curly brackets wrapping the code.</p>\n</li>\n</ul>\n<p>In the JSON, each reaction uses four character codes without curly brackets, and none of them can be surrogate pairs because <a href=\"https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\">they're not in the right range</a>.</p>\n<p>So what are they?</p>\n<p>Let's take a look at a bunch of <a href=\"https://graphemica.com/%F0%9F%98%A2\">possible encodings for this emoji</a>. Do any of these seem familiar?</p>\n<p><img alt=\"graphemica.com's page on the crying emoji. The encoding for UTF-8 (hex) is &quot;0xF0 0x9F 0x98 0xA2&quot;\" src=\"https://i.imgur.com/Y18GlSx.png\" /></p>\n<p>That's pretty close! Turns out this is a UTF-8 encoding, in hex format. But for some reason, each byte is written as a Unicode character in UTF-16 format.</p>\n<p>Knowing this, how do I go from <code>\\u00f0\\u009f\\u0098\\u00a2</code> to <code>\\uD83D\\uDE22</code>?</p>\n<p>I extract each character as a byte, and then merge the bytes back together as a UTF-8 string:</p>\n<p>```js\nfunction decodeFBEmoji (fbString) {\n  // Convert String to Array of hex codes\n  const codeArray = (\n    fbString  // starts as '\\u00f0\\u009f\\u0098\\u00a2'\n    .split('')\n    .map(char =&gt; (\n      char.charCodeAt(0)  // convert '\\u00f0' to 0xf0\n    )\n  );  // result is [0xf0, 0x9f, 0x98, 0xa2]</p>\n<p>// Convert plain JavaScript array to Uint8Array\n  const byteArray = Uint8Array.from(codeArray);</p>\n<p>// Decode byte array as a UTF-8 string\n  return new TextDecoder('utf-8').decode(byteArray);  // '😢'\n}\n```</p>\n<p>So now I have what I need to properly render the results:</p>\n<p><img alt=\"JavaScript console Output. Two participants, with reaction counts, and now showing correct emojis\" src=\"https://i.imgur.com/9hOSokB.png\" /></p>\n<h1>Selecting a friend to ditch</h1>\n<p>I want to calculate a score based on the count of each type of reaction. I need some variables:</p>\n<ul>\n<li>Total message count for participant (<strong>T</strong>)</li>\n<li>Total reactions sent by participant (<strong>SR</strong>)</li>\n<li>Global average message count per participant (<strong>AVG</strong>)</li>\n</ul>\n<p>And for the received reactions, I made some categories:</p>\n<ul>\n<li>👍: Approval (<strong>A</strong>)</li>\n<li>👎: Disapproval (<strong>D</strong>)</li>\n<li>😆 and 😍: Positive emotion (<strong>PE</strong>)</li>\n<li>😢 and 😠: Negative emotion (<strong>NE</strong>)</li>\n<li>😮: Neutral, I'll chuck it</li>\n</ul>\n<p>The final formula is:</p>\n<p><img alt=\"Equation: (2A + 3PE + SR) - (2D + 3NE)/(abs(T - AVG) / AVG)\" src=\"https://i.imgur.com/Jw4JrIO.png\" /></p>\n<p>The higher the resulting score, the better the person. <a href=\"https://i.imgur.com/g7mvdGT.png\">Here is an explanation of how I reached this equation.</a></p>\n<p>In JavaScript it would go something like this:</p>\n<p>```js\nparticipants.forEach((participant) =&gt; {\n  const {\n    reactions,\n    sentReactionCount,\n    messageCount,\n  } = participant</p>\n<p>const approval = reactions['👍']\n  const disapproval = reactions['👎']\n  const positiveEmotion = reactions['😆'] + reactions['😍']\n  const negativeEmotions = reactions['😢'] + reactions['😠']</p>\n<p>const positiveFactor = (2 * approval + 3 * positiveEmotion + sentReactionCount)\n  const negativeFactor = (2 * disapproval + 3 * negativeEmotions)\n  const totalMessageFactor = Math.abs(messageCount - messageCountAverage) / (messageCountAverage)</p>\n<p>participant.score = (positiveFactor - negativeFactor) / totalMessageFactor\n})\n```</p>\n<p>Displaying the information in table form makes it easier to parse:</p>\n<p><img alt=\"Results table\" src=\"https://i.imgur.com/9HbsshT.png\" /></p>\n<p><em>Note: Due to privacy concerns I replaced my friend's real names with their home addresses.</em></p>\n<h1>Goodbye</h1>\n<p>With a quick look at the table I can finally decide who I need to remove from my life.</p>\n<p><img alt=\"Deleting Samuel L from Facebook\" src=\"https://i.imgur.com/aZWaG77.gif\" /></p>\n<p>Farewell, cousin Sam.</p>", "published": "2022-11-27T11:06:08.260Z", "lastEdited": "2022-11-27T11:06:08.260Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_51_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--JBD-PI-R--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/re912bdi05hvfcl1toix.jpg", "source": "https://dev.to/raicuparta/ditching-worthless-friends-with-facebook-data-and-javascript-3f2i", "stars": [20, 190, 191, 192, 193, 194, 195, 196, 197], "saves": [20, 191, 193, 195, 197]}}, {"model": "main.post", "pk": 52, "fields": {"author": 198, "title": "Outsource: how to organize?", "slug": "outsource-how-to-organize-52", "description": "Hello friends!  I have several projects. Source code of them hosted on github. Long ago I had a frien...", "content": "<p>Hello friends!</p>\n<p>I have several projects. Source code of them hosted on github.\nLong ago I had a friend who helped me to update project by updating source code.\nNow he can't help, but I still need to update projects.</p>\n<p>I'm not a coder, shame on me but i'm too lazy, please forgive me.\nIn my dream, the best way for me is to create an issue as a task. In that task I can write what I want to update.\nThen I have to find a coder who can do the task.</p>\n<p>Coder make a branch for new version of code. Add necessary functions and updates, then he pushes commit to git and we test the result.</p>\n<p>I like to create tasks. In this job i'm not so lazy. :)</p>\n<p>The question is: how to advertise my tasks and not doing a spam (i hate to span and to bother) and may be there is even better way to solve my quest? </p>\n<p>Excuse me, my English is not native language.\nPeace!</p>", "published": "2022-11-27T11:06:25.440Z", "lastEdited": "2022-11-27T11:06:25.440Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160922.png", "source": "https://dev.to/kayzercode/outsource-how-to-organize-4flg", "stars": [198], "saves": [198]}}, {"model": "main.post", "pk": 53, "fields": {"author": 199, "title": "I'm building my first CMS website", "slug": "im-building-my-first-cms-website-53", "description": "So I'm building my first CMS website ever and it's kind of overwhelming which framework / solution to...", "content": "<p>So I'm building my first CMS website ever and it's kind of overwhelming which framework / solution to pick. I've read a lot about it such as dropal, (now dropsl 8),laravel, keystone.js but I still don't know what to pick, and I feel this might have a huge impact once I start to build the website (mostly static but editable content). What could you share on this? </p>", "published": "2022-11-27T11:12:30.831Z", "lastEdited": "2022-11-27T11:12:30.831Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160923.png", "source": "https://dev.to/joaofranco19/i-m-building-my-first-cms-website-490l", "stars": [71, 199], "saves": [199]}}, {"model": "main.post", "pk": 54, "fields": {"author": 200, "title": "The popup killer from hell", "slug": "the-popup-killer-from-hell-54", "description": "a coding horror story", "content": "<hr />\n<p>title: The popup killer from hell\npublished: true\ndescription: a coding horror story\ntags: automation,testing,codinghorror,Ranorex</p>\n<hr />\n<p>Back when I worked at my first programming job, we had a distinct lack of unit tests in our legacy codebase. Every change had to go by QA, because even a single line change could ruin everyone's day. In an attempt to fix this management hired an automation engineer to write a gigantic automation suite. They used Ranorex to automate mouse clicks like a real human user - click on this button, then that, scroll down, click here, etc.  Unfortunately Ranorex frequently failed for bizarre hard-to-debug reasons. Sometimes it would fail to find an element that was staring it in its face. Other times it would simply fail because why not? </p>\n<p>Popups were one such cause of failure. Ranorex would be happily moving the mouse, when BOOM - popup. With the popup covering up the application or demanding focus ranorex would simply fail. My coworker blamed IT for causing the popups, but eventually got tired of navigating IT bureaucracy and decided to go nuclear on the problem - he made a script that would kill EVERYTHING except for a few whitelisted processes.</p>\n<p>I'll leave you a few seconds to think about how this could go wrong.....</p>\n<p>So one day I started debugging the automation and everything except Visual Studio suddenly died. I stared at the screen in horror[^1]. What on earth happened? Then I realized - <em>the popup killer!</em> Of course! It launched in a seperate process and because I stopped debugging in the middle of the run the class cleanup was skipped. </p>\n<p>Well, no matter. I would fix it but in the meantime I'd just reopen up chrome... it closed. I reopened chrome again, it closed again. Click close Click close. I tried opening up notepad. Same thing. Oh god. I tried opening the task manager and it was murdered right before my eyes. But I was able to open up the command line. I ran <code>tasklist</code> to find the popup killer process followed by <code>taskkill</code> to kill it but taskill itself was killed before it could even run! </p>\n<p>Things were looking grim. </p>\n<p>The class cleanup code killed the process by creating a file called <code>killthekiller</code>. The popup killer looked for this and committed suicide when it saw it. But for some reason when i created the file nothing happened. As a final resort I tried using C# code in Visual Studio's <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/reference/immediate-window?view=vs-2019\">immediate window</a>. This didn't work either - I don't remember why. Now I was <strong>totally</strong> screwed. I had to restart the computer.</p>\n<p>💀💀💀💀💀💀💀💀💀💀💀💀💀💀</p>\n<p>After restarting, I made some changes to the code. I put all sorts of programs in the whitelist and I changed the class cleanup to directly kill the process. The problem was fixed. But the memory of it will remain scarred into my brain.</p>\n<p>I now work for <a href=\"https://www.15five.com\">15Five</a>. We have a comprehensive unit test suite growing in coverage each month. Besides the occasional timezone issue tests are pretty stable. Sometimes I miss my old coworkers. But let me tell you: I do NOT miss Ranorex.</p>\n<p>[^1]: To be honest, this was about a year ago and I don't quite remember how I reacted. I'm using artistic license <code>¯\\_(ツ)_/¯</code></p>", "published": "2022-11-27T11:12:32.876Z", "lastEdited": "2022-11-27T11:12:32.876Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160924.png", "source": "https://dev.to/almenon/the-popup-killer-from-hell-4708", "stars": [], "saves": []}}, {"model": "main.post", "pk": 55, "fields": {"author": 201, "title": "Make a custom night mode toggle w/React & CSS Variables", "slug": "make-a-custom-night-mode-toggle-wreact-css-variables-55", "description": "This post is the first in a short series where I will detail the things I learned while designing and...", "content": "<p>This post is the first in a short series where I will detail the things I learned while designing and developing a website to promote AIGA Louisville's annual Design Week. Please have a look and let me know what you think in the comments.</p>\n<p><a href=\"https://louisvilledesignweek2019.netlify.app/\">louisvilledesignweek.com</a></p>\n<p>Peep my <a href=\"https://github.com/davidysoards/louisville-design-week\">source code</a> 👀 </p>\n<p><a href=\"https://dev.to/ninjasoards/make-a-flickering-neon-svg-animation-from-scratch-w-illustrator-react-emotion-39gm\">Part 2: Animated Neon SVG</a></p>\n<p>I tried a couple other methods to achieve this effect that involved using React's Context API before settling on simple CSS variables. The trouble I ran into using Context was that it simply triggered a re-render and switched the theme colors immediately without applying a transition animation.</p>\n<p>I also believe that the best method is often the simplest method and using CSS variables is a win in that respect. The only issue is that (wah-waaah, get ready) they aren't supported in IE 🙄. Because this site is aimed at designers, the vast majority of whom are using a modern browser on their desktop (many of them a Mac where IE isn't an option at all) or using their smartphone to access the site, I reason that full IE support is not required.</p>\n<p>Alright, now onto the fun stuff.</p>\n<h2>The CSS Variables</h2>\n<p>Step one is to set the CSS variables on the root in the global CSS file so they can be accessed anywhere in the DOM (or in this case the virtual DOM).</p>\n<p>Because I'm attempting to \"partially\" support IE11 for this project, I'm using fallbacks by first setting the element directly to a hex code and then overriding that with the variable. The override will be ignored by any browser that doesn't support CSS variables.</p>\n<p>```css\n/<em> layout.css </em>/\n:root {\n  --color-bg: #f0f0f0;\n  --color-text: #994cc3;\n  --color-primary: #ef5350;\n  --color-secondary: #0c969b;\n  --color-header-bg: rgba(255, 255, 255, 0.9);\n  --color-neon-fill: #ef5350;\n  --color-neon-glow: none;\n}</p>\n<p>body {\n  background: #f0f0f0; /<em> fallback </em>/\n  background: var(--color-bg);\n  color: #994cc3;\n  color: var(--color-text);\n  transition: background 0.8s, color 0.8s;\n}</p>\n<p>h1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  color: #ef5350; /<em> fallback </em>/\n  color: var(--color-primary);\n}</p>\n<p>a {\n  color: #0c969b; /<em> fallback </em>/\n  color: var(--color-secondary);\n}\n```</p>\n<h2>The JavaScript</h2>\n<p>With the variables set globally in the CSS, new values can be assigned as needed using JavaScript. I started by creating two color theme objects -- lightTheme &amp; darkTheme -- inside my main layout.js component.</p>\n<p>```jsx\n// layout.js\nimport './layout.css';</p>\n<p>const lightTheme = {\n  '--color-text': '#994cc3',\n  '--color-bg': '#f0f0f0',\n  '--color-primary': '#EF5350',\n  '--color-secondary': '#0c969b',\n  '--color-header-bg': 'rgba(255, 255, 255, 0.9)',\n  '--color-neon-fill': '#ef5350',\n  '--color-neon-glow': 'rgba(255, 255, 255, 0)',\n};\nconst darkTheme = {\n  '--color-text': '#82AAFF',\n  '--color-bg': '#011627',\n  '--color-primary': '#c792ea',\n  '--color-secondary': '#7fdbca',\n  '--color-header-bg': 'rgba(1, 10, 18, 0.9)',\n  '--color-neon-fill': '#FFFEFC',\n  '--color-neon-glow': '#d99fff',\n};</p>\n<p>```</p>\n<p>Up first, inside the component, there are 2 useState hooks. One to set the mode and one to toggle the switch.</p>\n<p>Next, a useEffect hook loops over the values in the chosen mode object and assigns the correct colors to the corresponding CSS variables. The 2nd argument tells React to only re-render if currentMode changes.</p>\n<p>A second useEffect checks localStorage upon page load for a 'mode' item set to 'dark'. If this item is found it toggles to dark mode. For this hook the 2nd argument is an empty array, which means the effect will be run only once on the initial load of the page (similar to how ComponentDidMount works in class components). </p>\n<p>The toggleTheme function updates the checked status to the opposite of what it is currently set to and switches the mode from 'dark' to 'light' or 'light' to 'dark'. It also sets the 'mode' item inside localStorage to the new mode.</p>\n<p>```jsx\n// layout.js\nimport React, { useState, useEffect } from 'react';</p>\n<p>// ...</p>\n<p>export default function Layout({ children }) {\nconst [currentMode, setCurrentMode] = useState('light');\nconst [isChecked, setIsChecked] = useState(false);</p>\n<p>useEffect(() =&gt; {\n  if (localStorage.getItem('mode') === 'dark') {\n    setCurrentMode('dark');\n    setIsChecked(true);\n  }\n}, []);</p>\n<p>useEffect(() =&gt; {\n  const theme = currentMode === 'light' ? lightTheme : darkTheme;\n  Object.keys(theme).forEach(key =&gt; {\n    const value = theme[key];\n    document.documentElement.style.setProperty(key, value);\n  });\n}, [currentMode]);</p>\n<p>const toggleTheme = () =&gt; {\n  const newMode = currentMode === 'light' ? 'dark' : 'light';\n  setIsChecked(!isChecked);\n  setCurrentMode(newMode);\n  localStorage.setItem('mode', newMode);\n};</p>\n<p>```</p>\n<p>Because the ToggleSwitch component is located inside of the Header component, the toggleTheme and isChecked functions need to be passed into the Header and then into the ToggleSwitch.</p>\n<p>```jsx\n//layout.js\nimport Header from './header';</p>\n<p>// ...</p>\n<p>return (\n<br />\n<div className=\"site\">\n    <Header\n      toggleTheme={toggleTheme}\n      isChecked={isChecked}\n    />\n    <main>{children}</main>\n  </div></p>\n<p>);\n<code></code>jsx\n// header.js\nimport ToggleSwitch from './ToggleSwitch';</p>\n<p>// ...</p>\n<p><ToggleSwitch\n  toggleTheme={toggleTheme}\n  isChecked={isChecked}\n  id=\"mode\"\n  ariaLabel=\"dark mode toggle\"\n/>\n```</p>\n<blockquote>\n<p>A toggle is just a checkbox with some CSS magic applied to it. 🧙‍♂️</p>\n</blockquote>\n<p>The jsx for the component consists of a div (Toggle), an input with type=\"checkbox\", and a span (Slider). On the checkbox input, toggleTheme is assigned to onChange and isChecked is assigned to checked.</p>\n<p>```jsx\nimport React from 'react';\nimport styled from '@emotion/styled';</p>\n<p>export default function ToggleSwitch({\n  toggleTheme,\n  isChecked,\n  ariaLabel,\n  id,\n}) {\n  return (\n    <Toggle>\n      <Input\n        type=\"checkbox\"\n        onChange={toggleTheme}\n        checked={isChecked}\n        id={id}\n        aria-label={ariaLabel}\n      />\n      <Slider />\n    </Toggle>\n  );\n}\n```</p>\n<h2>Styling the Toggle Switch</h2>\n<p>As you can see I'm using CSS-in-JS 🙀 via the @emotion/styled library. If you are familiar with styled-components, it works almost exactly the same but the package is slightly smaller and apparently more performant (I haven't actually tested it, so what do I know?). Emotion also gives you the option of using css props to style components, which can be useful in certain situations.</p>\n<p>To use styled-components, you simple rename your HTML tags to whatever makes sense semantically, and then define which native HTML elements your new tags should use with the CSS for each element inside back-ticks. The API supports nesting similar to SCSS, and the styles are <strong>SCOPED TO THE COMPONENT!</strong></p>\n<p>Personally, I love how semantic and simple this makes my JSX markup. No more jamming 14 different classnames onto every element ala Bootstrap or writing disgusting classnames like \"header__toggle-switch--dark-mode\" ala BEM.</p>\n<p><code>jsx\nconst Toggle = styled.div`\n  position: relative;\n  &amp;:after {\n    content: '☀️';\n    font-size: 18px;\n    position: absolute;\n    top: 7px;\n    left: 37px;\n  }\n  &amp;:before {\n    content: '🌙';\n    font-size: 18px;\n    position: absolute;\n    top: 7px;\n    left: 6px;\n    z-index: 1;\n  }\n`;\nconst Input = styled.input`\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 5;\n  opacity: 0;\n  cursor: pointer;\n  &amp;:hover + span:after {\n    box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.2);\n  }\n  &amp;:checked + span {\n    background: #4a5b90;\n    &amp;:after {\n      transform: translate3d(32px, 0, 0);\n    }\n  }\n`;\nconst Slider = styled.span`\n  position: relative;\n  display: block;\n  height: 32px;\n  width: 64px;\n  border-radius: 32px;\n  transition: 0.25s ease-in-out;\n  background: #3a9df8;\n  box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.15);\n  &amp;:after {\n    content: '';\n    position: absolute;\n    border-radius: 100%;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    background: #fff;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n    transition: 0.25s ease-in-out;\n    width: 32px;\n    height: 32px;\n  }\n`;</code>\nThe CSS variable can then be assigned to any element and the colors will change upon clicking the toggle switch. </p>\n<p>The variables can be assigned globally...</p>\n<p><code>css\n/* layout.css */\nbody {\n  margin: 0;\n  line-height: 1;\n  background: #f0f0f0;\n  background: var(--color-bg);\n  color: #994cc3;\n  color: var(--color-text);\n  transition: background 0.8s, color 0.8s;\n}</code></p>\n<p>and inside components using CSS-in-JS.</p>\n<p><code>jsx\n// header.js\nconst MenuButton = styled.button`\n  background: none;\n  border: none;\n  padding: 0;\n  margin: 0;\n  .hamburger {\n    fill: #994cc3;\n    fill: var(--color-text); \n    transition: fill 0.5s;\n    height: 40px;\n  }\n  @media screen and (min-width: ${bpMed}) {\n    display: none;\n  }\n`;</code></p>\n<p>Thanks for reading! I hope you found this informative.</p>\n<p>Next up, I will be documenting how I created the flickering Neon SVG animation.</p>\n<p>Part 2 is now available 👇</p>\n<p>{% link https://dev.to/ninjasoards/make-a-flickering-neon-svg-animation-from-scratch-w-illustrator-react-emotion-39gm %}</p>\n<p>{% github davidysoards/louisville-design-week %}</p>", "published": "2022-11-27T11:12:38.257Z", "lastEdited": "2022-11-27T11:12:38.257Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_55_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--9mR48kgz--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/8h72rvkm0gh5625xelsp.png", "source": "https://dev.to/ninjasoards/make-a-custom-night-mode-toggle-w-react-css-variables-272o", "stars": [201, 202, 203, 204], "saves": [201]}}, {"model": "main.post", "pk": 56, "fields": {"author": 205, "title": "Repeatable Read vs Serializable Isolation Level in Postgres", "slug": "repeatable-read-vs-serializable-isolation-level-in-postgres-56", "description": "The question I want to answer here, is the question I had for the last 1.5 years:   When to use which...", "content": "<hr />\n<p>title: Repeatable Read vs Serializable Isolation Level in Postgres\npublished: true\ntags: Postgres,Performance\ncover_image: https://images.unsplash.com/photo-1477949858942-6a62ff5e8e19?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;cs=tinysrgb&amp;h=420&amp;w=1000&amp;fit=crop&amp;ixid=eyJhcHBfaWQiOjExNzczfQ&amp;s=4605d8175ba1636acb92c6112b8ce241\ncanonical_url: https://peter.grman.at/postgres-repeatable-read-vs-serializable/</p>\n<hr />\n<p>The question I want to answer here, is the question I had for the last 1.5 years:</p>\n<blockquote>\n<p>When to use which isolation level and what is the difference in real world scenarios?</p>\n</blockquote>\n<h2>What's wrong with read committed?</h2>\n<p>First off, you might wonder, why am I comparing those 2 strict isolation levels at all and don't just take read committed. I think in my whole professional career and as a student, I always used the default transaction isolation level, <em>read committed</em>, and only learned in theory about the other ones. (OK, in one company that I joined, they actually also used <em>read uncommitted</em>, but let's not talk about that.)</p>\n<p>So, to answer the question, <em>what's wrong with read committed isolation level?</em> - depending on your use case, maybe nothing. However, it does lead to behaviors, which could cause bugs that are hard to test for and fix. Those behaviors are in short:</p>\n<ol>\n<li>Lost update - 2 transactions read the old state; both perform changes; last write wins;</li>\n<li>Non repeatable reads and phantom reads - when you execute the same query the second time, you might get less or more elements back than the first time;</li>\n</ol>\n<p>Yes, you can prevent both of them. You can get around lost updates with explicit locking, and non repeatable read isn't an issue if you only read once. But this introduces additional complexity in your application, which we didn't want to deal with.</p>\n<h2>Serializable VS Repeatable Read - documentation</h2>\n<p>After reading the <a href=\"https://www.postgresql.org/docs/current/static/transaction-iso.html\">on-line documentation</a>, the <a href=\"https://wiki.postgresql.org/wiki/SSI\">Postgres wiki</a> and even mailing lists, I still wasn't quite sure, what the big difference between those isolation levels would be. According to the SQL standard, <em>repeatable read</em> can allow phantom reads, while <em>serializable</em> can't. But in Postgres, they don't differ in this regard. In fact, up to Postgres 9.0, there wasn't any <em>repeatable read</em> isolation level. <a href=\"https://www.postgresql.org/docs/9.0/static/transaction-iso.html\">Go, check the documentation if you don't believe me.</a></p>\n<p>With Postgres 9.1 SSI arrived and the old <em>serializable</em> isolation level was renamed to <em>repeatable read</em> and a new, more strict one emerged. <a href=\"https://wiki.postgresql.org/wiki/SSI\">From the wiki</a>:</p>\n<blockquote>\n<p>[...] Serializable Snapshot Isolation (SSI) in PostgreSQL compared to plain Snapshot Isolation (SI). These correspond to the SERIALIZABLE and REPEATABLE READ transaction isolation levels, respectively, in PostgreSQL beginning with version 9.1.</p>\n</blockquote>\n<p>I won't go into deep technical details, about what SSI is and how it works, mostly because I'm not sure I understood it fully. Instead, this post will focus on the practical differences between the two isolation levels as I experienced them when switching form <em>serializable</em> to <em>repeatable read</em> in a real world application.</p>\n<p>When you are running transactions in isolation level <em>repeatable read</em> (or <em>serializable</em>) you should expect for the transaction to fail from time to time with:</p>\n<blockquote>\n<p>ERROR: could not serialize access due to concurrent update</p>\n</blockquote>\n<p>However, thanks to SSI and fancy predicate locks (at least I think that's how it's implemented), Postgres can now abort the transaction also with another error:</p>\n<blockquote>\n<p>ERROR: could not serialize access due to read/write dependencies among transactions</p>\n</blockquote>\n<p>If you want to know more about SSI, then you should definitely <a href=\"https://wiki.postgresql.org/wiki/SSI\">check out the explanation on the Postgres wiki</a>. I'll try to stick to practical examples for the rest of this post.</p>\n<h2>Serializable all the way</h2>\n<p>In the beginning of 2017, together with several other co-founders, we started building an ERP system for the travel industry. Because we had previously experienced the pain of inconsistent databases due to the <em>lost update</em> problem, we decided to trade stability for performance (at first). The idea was simple:</p>\n<ul>\n<li>Every request is packed into a serializable transaction to guarantee that concurrent requests wouldn't screw up the system, and we wouldn't need to think about it.</li>\n<li>Once we actually have many customers and this becomes an issue, we'll analyze our options and fix it. But we'd think about it only when we have that problem and not right from day one.</li>\n</ul>\n<p>This worked great with one tiny exception. Remember those errors I mentioned before? During our CI builds we were testing also for concurrent requests and pretty soon started getting quite a few <em>\"could not serialize access due to read/write dependencies among transactions\"</em> errors. That shouldn't have been unexpected though, since the Postgres documentation clearly stated that you need to be ready to retry transactions when using any of those 2 isolation levels. We could also solve this fairly easily and in a global manner, not to deal with it anymore. (The implementation details, how we did it, will follow in a separate post.)</p>\n<h3><em>read/write dependencies</em> in the real world</h3>\n<p>We were running our application in production with <em>serializable</em> isolation level for almost a year. We monitored closely, how many transaction retries we had during this time. Our assumption was, that it would get better, once we have more data. The reason for our assumption was <strong>our understanding</strong> , how SSI supposedly works. Part of it was based on predicate locks, by locking down index pages. If you only have few rows in your table (like you do during integration tests), all the data in a table will most likely fit into one or few index pages. This means, you'll get into deadlock situations very easily. This seemed fine for us since in real world scenarios you wouldn't have little data and a lot of requests. In fact we almost never had concurrent write requests. You should also keep in mind, those were internal retries and only led to sightly longer response times. So even in the unlikely case of concurrent writes, the end users didn't notice anything.</p>\n<p>While on production everything was running as expected, we also had an integration environment. This environment contained countless partners with their own test accounts and data. Additionally, we started doing performance tests for bigger prospects. All of this led to quite a lot of data on the integration environment. That's when we realized, that things aren't getting better with more data. We were trying to come up with a new model explaining what we saw (as I mentioned, just by reading the documentation on SSI and <em>serializable</em> isolation level, it was quite hard to understand the real world implications for our use case). We realized that the majority of failures happened during a particular request. Additionally, it was almost exclusively <em>read/write dependencies</em> errors and only a tiny fraction (less than <code>0.1%</code>) were <em>concurrent update</em> errors.</p>\n<h3>read+insert tables become the bottle neck</h3>\n<p>We had by far the highest number of collisions on a specific table. From this table, we were at first reading data, in order to verify if an additional row could be inserted. Why would we do that? Imagine tracking inventory. Instead of keeping count of how many items you have, you keep track of how many you bought and sold. Every time you want to sell an item (imagine it's an on-line shop) you need to verify that you still have it. If somebody else bought it in the meanwhile, the data you read from the table, based on which you made your decision, changed. In case you, at the same time, try to update the data, Postgres says that this isn't serializable anymore. That's why we were getting so many of those <em>read/write dependencies</em> errors.</p>\n<p>Doing this might seem like a stupid idea, since keeping the count is so easy. However, instead of selling items, imagine you're hiring them out. You have for instance rental cars, which could be taken any hour of the day and brought back the same day or in 2 weeks. In that case it becomes really difficult figuring out how many cars still are available for lease. Instead, counting how many you already rented out is trivial.</p>\n<p>Given how (I think that) Postgres SSI (<em>serializable</em> isolation level) works, it might have been possible to improve the predicate locking, by improving the index structure on that table. However, it's not only the predicate, which is considered, but the whole index page, with an additional random factor. Tweaking this in order to get things right seemed like an uphill battle and therefore we chose a different path.</p>\n<h2>Moving on to <em>repeatable read</em></h2>\n<p>First we switched the tests in our integration pipeline. Instead of being restricted to 2 concurrent processes, we could now easily run more. The highest I tested with was 64 concurrent agents bombarding our application. Of course, the performance was poor on the build agent, but it worked and didn't lead to almost any transaction retries. So our expectations were met. Finally we had a model and it fit!</p>\n<p>The problems, however, started shortly after. Because <em>repeatable read</em> doesn't throw the <em>read/write dependencies</em> errors we knew, we were going to have an issue with our read+insert table. We thought of 2 possible solutions:</p>\n<ol>\n<li>Serialize the access ourselves.</li>\n<li>Hope for the best, assuming that it is really unlikely to cause any real world problems.</li>\n</ol>\n<p>Depending on your use case, option 2 (hope for the best) might actually be a really viable option. Sure you might oversell a bit, but orders also get canceled, so maybe nothing bad will ever happen. Unfortunately, for us, this wasn't a viable option. Instead, we had to serialize the access manually in those few cases and be smarter about it than Postgres' <em>serializable</em> isolation level.</p>\n<h3>Manually serialize access</h3>\n<p>You might think - this is easy, just run <a href=\"https://www.postgresql.org/docs/current/static/sql-select.html\"><code>SELECT [...] FOR UPDATE</code></a>. This only works in <em>read committed</em> isolation level because ...</p>\n<ul>\n<li>... for <em>repeatable read</em> transactions it actually isn't necessary, since they would anyway fail with a <em>concurrent update</em> error. (However, it does make the locking more aggressive, if that is what you are looking for.)</li>\n<li>... <em>repeatable read</em> transactions can only see data, which were committed before the transaction started. So even though a concurrent transaction <code>T2</code> would need to wait for <code>T1</code> to be finished, before continuing past the <code>SELECT [...] FOR UPDATE</code> locking, it still wouldn't be able to read the new data. (This actually causes another interesting issue, which I'll explain in detail in another post.)</li>\n</ul>\n<p>Keep in mind, an explicit serialization is done automatically, the moment you are updating a shared row. So if you keep count of how many items you have in your inventory, additionally to storing the events of bought and sold items, this count is a shared resource and updating it in one transaction would cause all others to fail with a <em>concurrent update</em> error. If you don't have such a shared row naturally (even if it is just an optimization with calculated values), you can create one.</p>\n<p>Take as an example the rental cars. Although it would be hard to keep correctly track of how many cars were reserved for which days, especially since one car could be reserved only for a few hours and therefore multiple times per day, we still can use that information for serialization. Every time a car is reserved, we update the counter in a separate table for all the days which are intersecting the reservation. Including the first and last day, even though we shouldn't be counting them as full days. This will be enough to trigger a <em>concurrent update</em> error in the unlikely event of 2 requests coming in at (almost) exactly the same time, for overlapping periods. In case those periods wouldn't have actually overlapped, because we aren't considering the time component in our simple locking table, it would be only a false positive, the transaction would retry and nobody would notice anything.</p>\n<h2>Conclusion</h2>\n<p>In the end, I was surprised of how well <em>serializable</em> isolation level worked for us. However, if you want a bit more predictability and can take read / write inconsistencies into account, I'd favor <em>repeatable read</em>. Now that I know how to deal with retrying transactions (blog post will follow), I don't think I want to go back to <em>read committed</em> any time soon. Of course, this greatly depends on the RDBMS you are using, and this article was Postgres specific. In case you do have a highly concurrent database where a lot of the rows are shared and you don't care too much about consistency when reading data multiple times, <em>read committed</em> might be the best option for you. But as a default, <em>repeatable read</em> seems just fine.</p>", "published": "2022-11-27T11:13:01.097Z", "lastEdited": "2022-11-27T11:13:01.097Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/pgrm/repeatable-read-vs-serializable-isolation-level-in-postgres-56fo", "stars": [], "saves": []}}, {"model": "main.post", "pk": 57, "fields": {"author": 200, "title": "Down the rabbit hole", "slug": "down-the-rabbit-hole-57", "description": "Dealing with distraction", "content": "<hr />\n<p>title: Down the rabbit hole\npublished: true\ndescription: Dealing with distraction\ntags: productivity,programming,howdoi,distraction</p>\n<hr />\n<p>In my post <a href=\"https://dev.to/almenon/keeping-yourself-motivated-as-acoder-5cah\">Keeping yourself motivated</a> I mentioned that programming is one of the most distracting jobs in existence. Recently[^1] I ran into a concrete example of that. After a long day of work I went home, suffering from a cold and a inflamed nose, but being the industrious person I am, as soon as I got home I s̶a̶t̶ ̶o̶n̶ ̶t̶h̶e̶ ̶c̶o̶u̶c̶h̶ ̶f̶e̶e̶l̶i̶n̶g̶ ̶t̶e̶r̶r̶i̶b̶l̶e̶ ̶a̶n̶d̶ ̶w̶a̶t̶c̶h̶i̶n̶g̶ ̶a̶n̶i̶m̶e̶ ̶started programming. I was experimenting with using <a href=\"https://pysimplegui.readthedocs.io\">pysimpleGui</a>, a increadibly easy to use gui library based on tkinter, in <a href=\"https://github.com/Almenon/AREPL-vscode\">arepl</a>. It was working great - the simplicity of use paired well with arepl's real-time evaluation. Making a gui had never been this easy. </p>\n<p>Until I got an <a href=\"https://github.com/PySimpleGUI/PySimpleGUI/issues/496#issuecomment-430480930\">error</a>, that is. No big deal - I reported it to the github page, and he quickly responded. I continued reading the documentation and noticed it mentioned <a href=\"https://github.com/gleitz/howdoi\">howdoi</a>, a python command line utility that searches stackoverflow for your question. Not a very revolutionary concept, but very convenient to use. I'm in the command line all the time - using howdoi from there saves me a alt-tab and several clicks. That got me thinking - what if this was in arepl? Imagine programming and wondering how do something. Let's say, get the desktop width. Without even having to switch applications you could type <code>howdoi('get the desktop width')</code> and arepl would print out the answer for you to use. No losing your focus - just a question and answer, fitting seamlessly into your workflow. </p>\n<p>I got to work. I quickly figured out how to call howdoi programatially and verified it ran in arepl. But there's a slight problem - in real-time mode arepl runs every code change, debounced to a customizable interval, but still quite frequently. This would lead to dozens of unnecessary duplicated requests. Thankfully howdoi has caching, which skips this problem. Just to double-check I opened up fiddler and captured the network traffic:</p>\n<p><img alt=\"Alt Text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/pd10y3nkhqq1cpdbwuef.png\" /></p>\n<p>Uh oh. What you see there is a call to stackoverflow every request - no caching at all. The library howdoi was using, requests_cache, is supposed to create a sqlite database in <code>%userprofile%/.howdoi/cache</code>, and that wasn't even present! I'm not going to talk about the entire issue in this article - you can read a thorough report <a href=\"https://github.com/gleitz/howdoi/issues/213\">here</a> - but suffice to say it was a real issue and required a significant amount of work. While investigating this two days pass. Then the weekend comes, and with all the hiking and friends and other gross \"outdoors\" stuff I don't get any programing done. Finally on Monday I was able to get back to work on arepl. </p>\n<p>So what started off as a simple test of a library in arepl became a weeklong adventure. That's life on the internet - <a href=\"https://www.youtube.com/watch?v=oHg5SJYRHA0\">you never know where it will take you</a>[^2].</p>\n<p>And that's not a bad thing. It's part of why I love the internet - that it's filled with unknowns and behind every turn lies a new fact to be discovered. But sometimes you have something pressing to do and getting sidetracked can be frustrating. Your curiosity and perfectionism conflicts with your desire to be productive and finish the work already. If you're like me you'll continue being sidetracked, possibly overshoot the deadline, and be disappointed with yourself afterwords. </p>\n<p>But you need to make the right choice. The hard choice. When you find yourself being sidetracked, make a note of what needs to be done and save it for later. This follows the <a href=\"https://en.wikipedia.org/wiki/Agile_software_development\">agile</a> principle of MVP - produce a Minimal Viable Product first. Perfectionism can come later. Delivering a product earlier, even if not perfect, is better for many reasons. Shorter iteration time. Faster feedback from customer. Elimination of potentially unnecessary work. Higher ticket completion rate. It's worth it. </p>\n<p>Now, I'm aware of the above... but I still get sidetracked 🙈. So here's some more practical tips:</p>\n<ul>\n<li>Use <a href=\"https://www.one-tab.com\">onetab</a> or a similar extension to save your tabs for later</li>\n<li>Keep your tickets small. Less work in the ticket less complexity and risk involved. This is another <a href=\"https://agilepainrelief.com/notesfromatooluser/2010/09/story-slicing-how-small-is-enough.html#.XWfycChKiUk\">agile recommendation</a>.</li>\n<li>Set a deadline for yourself. For example, <a href=\"https://github.com/Almenon/AREPL-vscode/milestones\">github milestones</a>.</li>\n<li>When creating a story for researching something, keep in mind are you <em>just</em> going to research it or are you also going to try it out? If you also do the latter a half-hour of researching could turn into days worth of work.</li>\n<li>Similar to the above, try to detail each task you need to do in a ticket. Maybe even make a checklist. If the work is planned for, it doesn't count as getting sidetracked :)</li>\n<li>Modifying code without unit tests? You'll probably need to refactor it when adding unit tests.</li>\n<li>Make it easy to create new tickets. If there's a bunch of fields to fill out maybe you can configure some of them to have sensible defaults? Or if you are not in control of your ticketing system you could write a quick script to automate it.</li>\n<li>Set aside some time for an innovation sprint where you can take care of all the issues you've noticed. </li>\n</ul>\n<p>Hopefully those help you out, do you have any more tips? And how deep down the rabbit hole have you gotten? Comment below!</p>\n<p>[^1]: Last year, to be honest. Look, I forgot I had this article drafted, okay?\n[^2]: Including me. It was so long since I wrote the article I forgot what it linked to.</p>", "published": "2022-11-27T11:13:04.088Z", "lastEdited": "2022-11-27T11:13:04.088Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160948.png", "source": "https://dev.to/almenon/down-the-rabbit-hole-1cp7", "stars": [200], "saves": [200]}}, {"model": "main.post", "pk": 58, "fields": {"author": 206, "title": "Iterators, Generators and Iteration Protocol in Javascript", "slug": "iterators-generators-and-iteration-protocol-in-javascript-58", "description": "In this post, I explain how JavaScript iterates over object and what are the characteristics it looks before iterating.", "content": "<hr />\n<p>title: Iterators, Generators and Iteration Protocol in Javascript\npublished: true\ndescription: In this post, I explain how JavaScript iterates over object and what are the characteristics it looks before iterating.\ntags: javascript, iteration protocol, iterators, generators</p>\n<hr />\n<blockquote>\n<p>This post was originally published on <a href=\"https://varundey.me/blog/js-iteration/\">my website</a></p>\n</blockquote>\n<p>If you have been writing JavaScript for a while, you might be well aware what data types are iteratables in JavaScript. If you are not or just can't remember from top of your head, it's <code>String</code>, <code>Array</code>, <code>Map</code>, <code>Set</code> and <code>TypedArray</code>. </p>\n<blockquote>\n<p>But Varun, except <code>String</code> isn't everything here an implementation of <code>Object</code>?</p>\n</blockquote>\n<h2>Iterable protocol</h2>\n<p>You would be absolutely correct to think that. After all <a href=\"https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl\">most data-types in JavaScript are derived from <code>Object</code></a>. So what makes <code>Array</code>, <code>Map</code>, <code>Set</code> and <code>TypedArray</code> an iteratable but not <code>Object</code>? Let's open up our console and find out.\n<code>javascript\nArray.prototype[Symbol.iterator]\nMap.prototype[Symbol.iterator]\nSet.prototype[Symbol.iterator]\nInt16Array.prototype[Symbol.iterator]\nObject.prototype[Symbol.iterator]</code>\nYou might have noticed that except the last statement, every line returns us a function. All the remaining object type have a property called <code>Symbol.iterator</code> up their prototype chain. Since this property is not available in <code>Object</code> it returns <code>undefined</code>. Thus, for an object to be iteratable, it must implement iterable protocol which means that the given object must have a <code>Symbol.iterator</code> up it's prototype chain. <code>Symbol.iterator</code> is a function which takes no argument and returns an <code>Object</code>. This returned <code>Object</code> should follow convention of iterator protocol.</p>\n<h2>Iterator Protocol</h2>\n<p>Iterator protocol states that for an iterator object, there is a standard way in which the values should be returned back. The object returned from <code>Symbol.prototype</code> is said to be adhering to iterator protocol if it has a method <code>next</code> which returns following two properties:</p>\n<ul>\n<li>done [boolean]\n    A boolean value denoting if the iteration sequence has finished</li>\n<li>value\n    Any value returned while iterating. Can be optional when <code>done</code> is <code>true</code></li>\n</ul>\n<p>Let's prove what we've learnt so far\n<code>javascript\nconst map = new Map()\nmapIterator = map[Symbol.iterator]()\nmapIterator.next          // function next()</code>\nThis means that <code>Map</code> implements\n- Iterable protocol\n    - becuase it has <code>Symbol.iterator</code> in it's __proto__ chain.\n- Iterator protocol\n    -   because iterable protocol returns an <code>Object</code> which has a method <code>next</code> in it.</p>\n<h2>Iteration protocol in action</h2>\n<p>Let's put our theory to test on some actual data types\n<code>javascript\nconst string = \"Hello\"\nconst stringIterator = string[Symbol.iterator]()\nstringIterator.next()       // Object { value: \"H\", done: false }\nstringIterator.next()       // Object { value: \"e\", done: false }\nstringIterator.next()       // Object { value: \"l\", done: false }\nstringIterator.next()       // Object { value: \"l\", done: false }\nstringIterator.next()       // Object { value: \"o\", done: false }\nstringIterator.next()       // Object { value: undefined, done: true }</code>\nWe just proved that <code>String</code> implements both iterable and iterator protocol. Many constructs (for..of, spread, destructuring, yield, etc.) implements iteration protocol under the hood. You can try the same thing with other data types and the result will be similar.\n<code>javascript\nconst map = new Map()\nmap.set('a', 1)\nmap.set('b', 2)\nconst mapIterator = map[Symbol.iterator]()\n[...mapIterator]</code></p>\n<h2>Custom iteratation protocol</h2>\n<blockquote>\n<p>So basically my object should have a property <code>Symbol.iterator</code> which is a method and should return me an <code>Object</code> which should have a <code>next</code> method in it, calling which should give me a <code>done</code> and <code>value</code> property? That shouldn't be hard to create.</p>\n</blockquote>\n<p>Turns out, it isn't. 😄\n```javascript\nconst customIteratationProtocol = (start, end) =&gt; ({\n    [Symbol.iterator]: () =&gt; {\n        let startIndex = start;\n        return {\n            next: () =&gt; {\n                if(startIndex !== end){\n                    return {\n                        value: startIndex += 1,\n                        done: false\n                    }\n                }\n                return {\n                    done: true\n                }\n            }\n        }\n    }\n});</p>\n<p>const customIteratationProtocolInstance = customIteratationProtocol(1, 3);\nconst customIterationProtocolObj = customIteratationProtocolInstance<a href=\"\">Symbol.iterator</a>\ncustomIteratationProtocolInstance.next();  // Object { value: 2, done: false }\ncustomIteratationProtocolInstance.next();  // Object { value: 3, done: false }\ncustomIteratationProtocolInstance.next();  // Object { done: true }\n```\nYou can also implement either of iterable protocol or iterator protocol but that is generally not advisable as it might throw a run-time error if such an object is consumed by a construct which expects an iterable. An object which implements iterable protocol but does not implement iterator protocol is known as non-well-formed iterables.</p>\n<h2>Generators</h2>\n<p>Generators in JavaScript are a special kind of function whose execution is not continuous. They allow you to create an internal state in the function construct. The value from this function is returned only when it comes across a <code>yield</code> keyword. Generators are defined by <code>function*</code> syntax. Generator function can be instantiated n number of times but each instantiated object can iterate over the generator only once. You can't use generators with arrow functions though.\n<code>javascript\nfunction* myGenerator(n) {\n    let index = n;\n    while(true) {\n        yield index += 1;\n    }\n}\nconst myGeneratorObj = myGenerator(2);\nmyGeneratorObj.next().value;      // 3\nmyGeneratorObj.next().value;      // 4\nmyGeneratorObj.next().value;      // 5</code></p>\n<h2>Are generators really useful? 😕</h2>\n<p>Although iterators are a great concept of JavaScript engine, I personally never had to use generators in JavaScript. Also in a prototypical language such as JavaScript, I really do not understand the use case which ES6 generators tries to solve. In my opinion, generators bring a lot of complexity to the language because of the following reasons:\n1. It creates a constructor\n2. It then creates a method under that constructor\n3. The value is finally inside the object of that method call</p>\n<p>This creates a performance overhead and introduces lots of throwaway stuff. I think we can do away with generators by introducing a simple function factory. The above example can be rewritten as\n<code>javascript\nconst myGenerator = n =&gt; {\n    let index = n;\n    return () =&gt; index += 1;\n}\nconst gen = myGenerator(2);\ngen();      // 3\ngen();      // 4\ngen();      // 5</code></p>\n<h2>Conclusion</h2>\n<p>JavaScript has a lots of things going under its hood. Iterations is just one of them. If you would like to learn more about iterators and generators, I would recommend going through the official <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables\">MDN docs</a>. I would love to hear from you what you think about this post. Also if there is a particular use case which generator solved for you I would love to hear that as well. Happy coding! 😁</p>", "published": "2022-11-27T11:13:09.206Z", "lastEdited": "2022-11-27T11:13:09.206Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160951.png", "source": "https://dev.to/varundey/iterators-generators-and-iteration-protocol-in-javascript-51hl", "stars": [206, 207, 208, 209, 210], "saves": [208, 206]}}, {"model": "main.post", "pk": 59, "fields": {"author": 211, "title": "Faked SVG path stroke pattern", "slug": "faked-svg-path-stroke-pattern-59", "description": "A stroke of an SVG shape can have only one constant shape. Though vector drawing apps like Affinity D...", "content": "<hr />\n<p>title: Faked SVG path stroke pattern\npublished: true\ntags: codepen, svg, stroke patterns</p>\n<hr />\n<p>A stroke of an SVG shape can have only one constant shape. Though vector drawing apps like Affinity Designer and Adobe Illustrator offers advanced stoke patterns, it has not yet landed in SVG. This little pen uses a very heavy and not very method to generate something which looks like patterns, but certainly is not. It uses a combination of adding many copies of the path and changing the stroke-dasharray to only draw a 1 pixel wide path, which at that given point have the calculated stroke-width. Fun, to play with, but not intended for real-world use.</p>\n\n<p>{% codepen https://codepen.io/netsi1964/pen/yLBMYPo %}</p>", "published": "2022-11-27T11:13:20.277Z", "lastEdited": "2022-11-27T11:13:20.277Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160952.png", "source": "https://dev.to/netsi1964/faked-svg-path-stroke-pattern-2dkl", "stars": [], "saves": []}}, {"model": "main.post", "pk": 60, "fields": {"author": 212, "title": "9 software engineering job search and interview tips from the last 3 years", "slug": "9-software-engineering-job-search-and-interview-tips-from-the-last-3-years-60", "description": "Over the last three years, I was at a startup, a large company, and a smaller company inside a larger...", "content": "<hr />\n<p>title: 9 software engineering job search and interview tips from the last 3 years\npublished: true\ntags: career, programming, beginners, codenewbie\ncanonical_url: https://ibuildmvps.com/blog/9-software-engineering-job-search-and-interview-tips-from-the-last-3-years/\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/77v9codmqfsa2z7md2di.jpg</p>\n<hr />\n<p>Over the last three years, I was at a startup, a large company, and a smaller company inside a larger company. I’ve interviewed. I’ve been interviewed. I’ve been the deciding vote and I’ve watched great people get passed over. I’ve seen whiteboarding, pair programming, coderpad technical interviews, hacker rank challenges, take home assignments, written tests, and just about everything else you can imagine.</p>\n<p>Here are the things I’ve learned during this time. This post should help you if you’re looking for new opportunities, if you were recently laid off, or if you’re fresh out of college or a coding school. </p>\n<h1>Finding Opportunities</h1>\n<h2>Make a list of companies you want to work for</h2>\n<p>This is probably my favorite part of looking for a new job. You have a blank canvas. You can work anywhere. Ever wanted to live in Hawaii? Hell – now’s the time. Ever wanted to work for a cool company like EA Sports, Google, or Facebook? Put it on your list. The world is your oyster. Don’t limit yourself to companies similar to where you’ve worked at in the past.</p>\n<p>Also – ignore job postings. A lot of great positions are filled by internal referrals and never get posted to job sites. If you put in the time, you should be able to get a referral for almost any company you’re interested in applying to.</p>\n<p>I would suggest making a list of at least 15 companies to give you a chance to sample many different types. You don’t want to limit your search to just a few companies, but rather, a larger pool. Some people you will email and will never respond. This can get disheartening if you’re only waiting for that one email, but if you’re looking at 15 different companies at once, you won’t fixate on one person not getting back to you. You should also view this like a conversion funnel. X% of the jobs you apply to will give you a phone call. A percentage of that number will get you on another call for a technical interview. A percentage of that number will bring you in for an in-person interview. A percentage of that number will give you an offer. In an ideal world, you will have multiple offers you can choose between.</p>\n<p>This may be difficult to keep track of, so I highly recommend keeping a Google spreadsheet of all current opportunities. Also, you should add companies to the pipeline as opportunities don’t turn into offers.</p>\n<h2>Always look for a referral</h2>\n<p>You should always look for a referral for any opportunity.</p>\n<p>A friend in HR once told me that hiring a friend is better than hiring a friend of a friend. Hiring a friend of a friend is is better than a referral from someone you work with. And a coworker’s referral is better than a random resume from a job board.</p>\n<p>When it comes down to a decision to hire someone, it always makes hiring managers feel a little better if someone is vouching for that person – even if its subtle. Put yourself in the hiring manager’s shoes. Random people are risky. There’s no one vouching for them.</p>\n<p>In an ideal scenario, your best friend works for the company you are applying to, but it’s more likely that you have a common LinkedIn connection. When you do, reach out to the common connection. Let them know you’re interested in working at their connection’s company and then ask for an introduction via email or on LinkedIn.</p>\n<p>If your mutual friend sent the intro, you should thank your friend for the intro and then ask that other person for coffee. I would tell them that I’m an engineer and I’m interested in opportunities at their company. And I’d also mention that I’d like to learn more about the culture and what it’s like to work there.</p>\n<p>If a mutual friend doesn’t send the intro, you can always email the person you wanted to get connected to directly (or send them a request on LinkedIn). If you want to email them directly, there’s a chrome extension called <a href=\"http://hunter.io\">hunter.io</a> that will make it easy to find their email address.</p>\n<h2>Be open to different opportunities</h2>\n<p>During the course of your job hunt, you will get random emails and LinkedIn messages about different job opportunities. When you get this type of email, give the company a shot. There’s really no downside. Even if you weren’t initially interested in the company, you might love the people and the culture there.</p>\n<p>When I was job hunting a few years ago, a friend mentioned opportunities at Liberty Mutual early in my job search. I didn’t give the opportunity a lot of consideration. I knew I wanted to work in a startup environment – not at a larger company. Boy, was I wrong! I’m really lucky I changed my mind and explored opportunities at Liberty because it ended up being the perfect fit for me. If I didn’t give it a chance, I would have never found out how great it was.</p>\n<h1>The Interview</h1>\n<h2>Know the format before the technical interview</h2>\n<p>It’s okay to ask the format of a technical interview. Most of the time, companies will tell you what to expect. If you know the types of questions you should expect in an interview, you’ll be able to practice and prepare for the specific format. It’s a different mindset going in if you’re writing on the whiteboard vs. on a computer.</p>\n<p>One of the mistakes I frequently made was that I would try to improve weaknesses from the last technical interview instead of work on what I needed to succeed on the next technical interview. While you need to make sure you’re fixing up your weaknesses, you also need to be prepared for the next interview.</p>\n<p>Knowing if pseudo code is okay or if you need to know specific syntax is important. Whiteboarding is a different mindset than writing on a computer. A timed hacker rank challenge is different than exercises on <a href=\"http://coderpad.io\">coderpad</a> vs. a take home technical assignment. Just like any mid-term, knowing the format of the test will help you prepare.</p>\n<p><a href=\"https://ibuildmvps.com////wp-content/uploads/2017/06/programming_whiteboard-620x465-100594253-primary.idge_.jpg\"><img alt=\"programming_whiteboard-620x465-100594253-primary.idge\" src=\"https://ibuildmvps.com//wp-content/uploads/2017/06/programming_whiteboard-620x465-100594253-primary.idge_.jpg\" /></a></p>\n<h2>Don’t mention your weaknesses</h2>\n<p>I am a very firm believer that it is the company’s job in technical interviews to assess your technical competencies.</p>\n<p>If you feel worse about your front-end experience versus your back-end experience, don’t let them know that. First of all, it’s their job to assess your skills. Second, developers are often harder on themselves than other people. Just because you don’t love your front-end skillsets doesn’t mean other people won’t be envious of what you can do.</p>\n<p>Also, don’t make excuses as you code. I’ve seen it happen. I’ve done it in the past. I’ve also heard this mentioned in interview debriefings. If you mention you are not great at something, your interviewers will take your words and mention them later. Even if you are being humble, what you say often becomes “the truth” in technical interviews. Make it hard for them. Don’t speak about your faults. Put your best foot forward. Be confident. Let them know you are competent in all parts of your work, and put the work on them to be able to prove otherwise.</p>\n<h2>Make sure you are prepared</h2>\n<p>Research company interview reviews on <a href=\"http://glassdoor.com\">GlassDoor</a>. Don’t assume the questions will be the same, but you can expect similar questions based on available reviews.</p>\n<p><a href=\"https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850\">Cracking the Coding Interview Book</a> – This book is fantastic! I highly recommend it if you are interviewing. It has a lot of commonly asked behavioral and technical questions. It helps you brush up on CS fundamentals and commonly asked MVC and OOP questions. If you are interviewing, you must buy this book!</p>\n<p>Go through <a href=\"http://hackerrank.com\">HackerRank</a> challenges – A lot of companies will use tools like HackerRank to decide if they should bring you into the office to give you an in-person interview. If companies are using this, you should use the platform in order to practice. They provide many different options for algorithm, data structure, and other types of challenges. They also have dozens of languages available for you to code in.</p>\n<p>Check out <a href=\"https://www.interviewcake.com/\">InterviewCake</a>. Interview Cake is one of the best kept secrets in programming interviews. If you aren’t great at technical interviews, check out this website. It’s the only resource online that recreates a technical algorithm interview (which you often see when an interviewer asks you to use <a href=\"https://coderpad.io/\">coderpad</a>). It will have you create an initial solution. It will ask you if you can do better. It will show you how you can do better and how the algorithmic efficiency of your solution can be increased. It will teach you how to ace algorithm interviews. It’s probably the best resource you will find online to help you solve these challenges. Don’t take my word for it, go try their demo and you will see why it’s so great!</p>\n<h1>Post Interview</h1>\n<h2>Learn from every interview</h2>\n<p>I had an “interviewing notebook” during my job search. In it, I would write down every term I didn’t fully understand. If I was asked a question and I wasn’t happy with my response, I would write it down. Taking note of your mistakes is the first part in correcting them.</p>\n<p>I suggest writing these things down in the middle of an interview. If you don’t feel okay doing that, make sure you open up your notebook as soon as your interview is over, and scribble everything you remember not being able to answer efficiently.</p>\n<p>If you don’t know the answer to a question once, that’s okay – it happens. If you fail to answer the same question from multiple interviews, that’s your own fault. Make sure you go back in this notebook when you get home and look up what you didn’t fully understand. Software development is about continuous learning.</p>\n<h2>Go back to the fundamentals</h2>\n<p>Depending on the company you are interviewing with, they may want you to know a lot about Big O notation, data structures, and algorithms. This is something self taught developers often struggle with. You can take 2 online classes for free to level up your skills and fully understand these concepts. I highly recommend <a href=\"https://www.youtube.com/watch?v=ZFjhkohHdAA&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b\">Steve Skiena’s Algorithms class</a> and <a href=\"http://www.infocobuild.com/education/audio-video-courses/computer-science/cs61a-fall2010-berkeley.html\">Brian Harvey’s Intro to Computer Science</a> class.</p>\n<p>Even if you never learned them, CS fundamentals aren’t too tough to learn. I recommend going over <a href=\"http://teachyourselfcs.com\">teachyourselfcs.com</a> and following their recommendations to fill in knowledge gaps.</p>\n<p><a href=\"https://ibuildmvps.com////blog/wp-content/uploads/2017/06/learning-from-mistakes-8-638.jpg\"><img alt=\"learning-from-mistakes-8-638\" src=\"https://ibuildmvps.com////blog/wp-content/uploads/2017/06/learning-from-mistakes-8-638.jpg\" /></a></p>\n<h2>Ask for feedback explicitly from your interviewers</h2>\n<p>You should already be writing down what you think you did wrong in your interviews. However, this isn’t always good enough. You also need to find out what the interviewer’s reasons were for passing on you if you don’t get an offer.</p>\n<p>I suggest explicitly asking interviewers why they passed on you. You should ask for feedback from your interviewer. You should mention that you’re always trying to improve, and you need to find out what to focus on. Ask them if they can provide any feedback on your interview or suggestions on what you should focus on as you continue your job search.</p>\n<p>Companies don’t really have incentives to give you this feedback, but a few will provide it to you if you explicitly ask. Not all feedback is created equal, but any negative feedback you get from a company is a gift. It tells you exactly what you need to improve. It tells you why you didn’t get the offer. You won’t always get it, but make sure you follow-up and ask at least twice for feedback after an interview.</p>\n<p><strong>Read more at my blog</strong>\nhttp://ibuildmvps.com</p>\n<p><strong>Connect with me</strong>\nhttp://twitter.com/cavezza\nhttp://linkedin.com/in/cavezza</p>", "published": "2022-11-27T11:13:29.625Z", "lastEdited": "2022-11-27T11:13:29.625Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_60_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--Hzbw8_yj--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/77v9codmqfsa2z7md2di.jpg", "source": "https://dev.to/cavezza/9-software-engineering-job-search-and-interview-tips-from-the-last-3-years-1bhb", "stars": [212], "saves": [212]}}, {"model": "main.post", "pk": 61, "fields": {"author": 212, "title": "Front End Architecture for Angular Applications", "slug": "front-end-architecture-for-angular-applications-61", "description": "In my current role as Director of Product Engineering at FINCURA, I’m often thinking about our front...", "content": "<hr />\n<p>title: Front End Architecture for Angular Applications\npublished: true\ntags: frontend, angular, javascript, webdev\ncanonical_url: https://ibuildmvps.com/blog/front-end-architecture-for-angular-applications/\ncover_image: https://ibuildmvps.com/wp-content/uploads/2019/08/angular-architecture.png</p>\n<hr />\n<p>In my current role as Director of Product Engineering at <a href=\"http://fincura.com\">FINCURA</a>, I’m often thinking about our front end architecture. For our front end application, we use Angular.</p>\n<p>Angular architecture comes down to three main players: services, container components, and presentation components.</p>\n<p><a href=\"https://ibuildmvps.com////wp-content/uploads/2019/05/Screen-Shot-2019-05-06-at-5.37.42-PM.png\"><img alt=\"\" src=\"https://ibuildmvps.com////wp-content/uploads/2019/05/Screen-Shot-2019-05-06-at-5.37.42-PM-1024x557.png\" /></a></p>\n<p>I’m going to explain each of these pieces separately, but to get a snapshot of what’s going on, take a look at this diagram:</p>\n<p><a href=\"https://ibuildmvps.com////wp-content/uploads/2019/05/angular-component-based-architecture.jpg\"><img alt=\"\" src=\"https://ibuildmvps.com////wp-content/uploads/2019/05/angular-component-based-architecture.jpg\" /></a></p>\n<p>[Image by Claudo Clavijo from his slideshare deck at <a href=\"https://www.slideshare.net/paucls/angular-and-redux\">https://www.slideshare.net/paucls/angular-and-redux</a>]</p>\n<p><strong>Services</strong></p>\n<p>Services will do the heavy lifting for your application. They should contain all business logic in your application because business logic will typically be used system-wide. In order to ensure maximum reusability, make sure you can access business rules easily. Angular’s dependency injection for services makes it trivial to reuse service methods site-wide.</p>\n<p>If you’re not using Redux, you will want to store system-wide state in services. One common example is keeping the current logged in user as a variable in the <code>UserService</code>. It is an alternative option to store common state in a system-wide container component that is the master parent. However, if you do this, there will be instances in your application where you pass a <code>user</code> variable down in many places. You can expect most components to need the <code>user</code> variable at different times. I call this “Input() Hell” and it’s not all that different from “callback” hell.</p>\n<p>Services don’t have any visual output. They process data for components and then components are the part of the infrastructure that display information.</p>\n<p>According to <a href=\"https://angular.io/guide/testing#service-tests\">Angular’s official documentation</a>, “(<a href=\"https://angular.io/guide/testing#testing-services-with-the-testbed\">services are the easiest files to unit test</a>\". Generally, when you test services, you don’t need to worry about the Angular TestBed. Services aren’t much more than regular javascript classes. My go-to method for testing services are to instantiate the service classes with their dependencies mocked with jasmine’s “createSpyObj” method. Once I do that, I can write tests as if I was dealing with a regular javascript class. Here’s a quick example of a test I wrote a few weeks ago:</p>\n<p>```\ndescribe('PortfolioService', () =&gt; {\n  let portfolioService: PortfolioService\n  const apiServiceSpy = jasmine.createSpyObj('ApiService', {'send': of( {   response: { objects: [] }} ) } );</p>\n<p>beforeEach(() =&gt; {\n    portfolioService = new PortfolioService(apiServiceSpy);\n  });</p>\n<p>describe('#cssColorNumber', () =&gt; {\n    beforeEach(() =&gt; {\n      const portfolios = [\n        { name: 'Portfolio1', id: 0 },\n        { name: 'Portfolio2', id: 1 },\n        { name: 'Portfolio3', id: 2 },\n        { name: 'Portfolio4', id: 13 },\n        { name: 'Portfolio5', id: 14 },\n      ]; \n      portfolioService.portfolios = portfolios;\n    }); </p>\n<pre><code>it('returns id index +1 of id found', () =\\&gt; {\n  const expectedResult = 5;\n  const result = portfolioService.cssColorNumber({name: 'Portfolio5', id: 14});\n  expect(result).toEqual(expectedResult);\n});\n</code></pre>\n<p>});\n});\n```</p>\n<p>In the test above, we are testing the output of a method that returns the index+1 of objects found in an array by their id. Before each test, we instantiate the service class with a mocked dependency injection. We apply sample data to the service we are testing. Then, we are able to test this with a simple expectation. No TestBed needed and no complicated setup that typically comes with the TestBed.</p>\n<p>In summary, services should contain all business logic for your application, contain shared state over different pieces of the application, perform all api calls, and have no visual output. They are also much easier to test than presentation components.</p>\n<p><strong>Container Components</strong></p>\n<p>Container components get their name because they contain presentation components, and always pass data down to these presentation component layers. They are sometimes referred to as smart components. In many cases, you will have nested container components that pass data down to other containers, which eventually pass data down to presentation components.</p>\n<p>It’s difficult to get a true sense of what this looks like without an example, so let’s take a look at how this works in practice.</p>\n<p>Let’s take a look at my LinkedIn homepage. This is what I see when I log into LinkedIn.</p>\n<p><a href=\"https://ibuildmvps.com/wp-content/uploads/2019/08/linkedin_homepage_for_angular_post-1024x511.png\"><img alt=\"\" src=\"https://ibuildmvps.com/wp-content/uploads/2019/08/linkedin_homepage_for_angular_post-1024x511.png\" /></a> [click image to enlarge]</p>\n<p>Here’s an attempt to break this up based on what I assume LinkedIn’s container components and presentation components are (in their front end architecture). Note: Most of my abilities to mock up container components and presentation components comes from reading <a href=\"https://reactjs.org/docs/thinking-in-react.html\">Thinking in React</a>.</p>\n<p><a href=\"https://ibuildmvps.com////wp-content/uploads/2019/05/Screen-Shot-2019-05-06-at-6.37.27-PM.png\"><img alt=\"\" src=\"https://ibuildmvps.com////wp-content/uploads/2019/05/Screen-Shot-2019-05-06-at-6.37.27-PM-1024x522.png\" /></a></p>\n<p>The different colors represent the hierarchies of container components. The main focus for drawing components in this example is the left side navigation bar and all of its parents (which are also container components). The entire page is wrapped by a red line. This will typically be called “app-component” in an application. The next yellow layer of hierarchy separates the top navigation bar from the main wrapper component, which will represent the body of the page. The pink layer is the container for the sidebar. After that, the orange breaks up each of the clearly separated panels. Then the panels are further subdivided into separate child components. The red, yellow, purple, and orange are all container components. Once we get past that, it’s a little more hazy depending on what exactly the application is doing and how granular LinkedIn builds its presentation components. Once you get down to the green layer, you are now looking at presentation components. It’s pretty easy to tell how the top 2 green rectangles and the bottom two green rectangles are probably reused presentation components based on how similar they look.</p>\n<p>In our Angular application, we utilize a technique that React has made famous called “lifting state up” (<a href=\"https://reactjs.org/docs/lifting-state-up.html\">https://reactjs.org/docs/lifting-state-up.html)</a>. This means that we store the state used by numerous different components at their lowest shared parent component.</p>\n<p>Let’s use LinkedIn’s homepage for this example as well. In our current working example, we have one instance of a user’s avatar on the page. A product manager has come to us and has told us that she wants to add a new item to the top navigation component that contains the user’s avatar. The mockup she gives us looks like this:</p>\n<p><a href=\"https://ibuildmvps.com/wp-content/uploads/2019/05/mockup_pm_gave_us.png\"><img alt=\"\" src=\"https://ibuildmvps.com/wp-content/uploads/2019/05/mockup_pm_gave_us.png\" /></a></p>\n<p>[The mockup our PM has given us. Click to enlarge]</p>\n<p>If we look closely at the page that we marked up with the component structure, we can see that we already have the avatar on the page. One option is to call our user service again as part of the navigation component, but http calls are expensive. Instead, we want to move where we store the user’s avatar information up to a common parent of both the side navigation bar and the top navigation header. That common parent is the component that we highlighted with a red outline – “app-component”.</p>\n<p>If we are currently calling the UserService.getUser method in the orange panel container component, we will now want to call that method in app component (the red wrapper). Then, we will pass down the avatar url as “@Input()”s down to the yellow, down to the maroon, and then down to the orange, where it lived to begin with. We will also pass that same value down to the yellow navigation component and to its children where the new html element will live and display the avatar on the navigation bar.</p>\n<p>Containers do not do a lot of heavy lifting for the visual components, but they do have a key presentation responsibility. That responsibility is the placement of presentation components. A good rule of thumb is that you don’t want presentation components to have margin css attributes. The positioning of presentation components should generally be controlled by their parent container components.</p>\n<p>Testing container components is generally the hardest of the three types of files we discuss in this article. The main reason for this is the handling of state. State changes and angular lifecycle methods need to be tested. This causes added testing complexity. A key reason to separate out container components and presentation components is so you test container components less and presentation components more.</p>\n<p><strong>Presentation components</strong></p>\n<p>Presentation components are sometimes referred to as “dumb” components, used mostly to display information. Presentation components will inherit all data and events (@Input()s and @Output()s) from parent components. They are entirely visual output components.</p>\n<p>Continuing with our LinkedIn example, we can see a presentation wrapped in green:</p>\n<p><a href=\"https://ibuildmvps.com////wp-content/uploads/2019/05/Screen-Shot-2019-05-06-at-6.37.27-PM.png\"><img alt=\"\" src=\"https://ibuildmvps.com////wp-content/uploads/2019/05/Screen-Shot-2019-05-06-at-6.37.27-PM-1024x522.png\" /></a></p>\n<p>This presentation component is used four times on this page, in two separate places. You can reasonably guess what the inputs and outputs are for this presentation component.</p>\n<p><a href=\"https://ibuildmvps.com/wp-content/uploads/2019/05/who_viewed_your_profile.png\"><img alt=\"\" src=\"https://ibuildmvps.com/wp-content/uploads/2019/05/who_viewed_your_profile.png\" /></a></p>\n<p>The inputs and outputs for this component will probably look something like this:</p>\n<p><code>@Input() label  \n@Input() value\n@Output() onClickLabel\n@Output() onClickValue</code></p>\n<p>These inputs and outputs are passed in by their parents.</p>\n<p><strong>Why separate container and presentation components?</strong></p>\n<p>There are three reasons: (1) reusability, (2) testability, and (3) ease of use for HTML/CSS designers.</p>\n<p><em>(1) Reusability</em></p>\n<p>If you break components down into smaller and smaller pieces, you will be able to reuse different components in different areas of your code. You can see this in the LinkedIn example with the green outlines on the sidebar. This is all about the “DRY” (don’t repeat yourself) principle. If you didn’t break those green outlines into presentation components, you would have coded the same thing twice. If you later got instructions to change something there, you would have to make changes in multiple places. Doing this usually leads to bugs.</p>\n<p><em>(2) Testability</em></p>\n<p>Presentation components are much easier to test than container components. When you remove state and lifecycle methods as concerns, testing is much easier. Yes, you do need to test container components. It’s a part of writing good, maintainable code. However, the more testing you can do in presentation components, the better off you will be.</p>\n<p><em>(3) HTML/CSS Developers</em></p>\n<p>Many software teams have varying degrees of skillsets. It is not unusual to have someone on the team that knows HTML and CSS really well, but little javascript. When you separate presentation components and container components, it is now a lot easier for HTML/CSS specialists to tweak design-related code. Using a tool like <a href=\"https://storybook.js.org/\">Storybook</a> works wonders on letting HTML/CSS developers control design elements.</p>\n<p><strong>Conclusion</strong></p>\n<p>This architecture has worked well for us. Separating logic into services, container components, and presentation components has made testing easier. Having a well tested codebase has allowed us to have a much more stable application.</p>\n<p>Breaking components down into presentation components has increased our code reusability. Code reusability has allowed us to deliver features faster and introduce less bugs.</p>\n<p><strong>Read more at my blog</strong>\nhttp://ibuildmvps.com</p>\n<p><strong>Connect with me</strong>\nhttp://twitter.com/cavezza\nhttp://linkedin.com/in/cavezza</p>", "published": "2022-11-27T11:13:34.289Z", "lastEdited": "2022-11-27T11:13:34.289Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_61_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--X9mT-Msm--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://ibuildmvps.com/wp-content/uploads/2019/08/angular-architecture.png", "source": "https://dev.to/cavezza/front-end-architecture-for-angular-applications-g4i", "stars": [], "saves": []}}, {"model": "main.post", "pk": 62, "fields": {"author": 212, "title": "Always Be Improving", "slug": "always-be-improving-62", "description": "You should always improving, but should you strengthen a strength or improve a weakness?   G...", "content": "<hr />\n<p>title: Always Be Improving\npublished: true\ntags: beginners, webdev, productivity, career\ncanonical_url: https://ibuildmvps.com/blog/always-be-improving/\ncover_image: https://ibuildmvps.com/wp-content/uploads/2019/08/Screen-Shot-2019-08-27-at-8.25.49-AM-e1566908965295.png</p>\n<hr />\n<h2>You should always improving, but should you strengthen a strength or improve a weakness?</h2>\n<p>Getting better is difficult. You need to make time to improve. I’m pretty good at that. What I’m not good at is picking an area to work on.</p>\n<p>On any given evening, I’ll think to myself, “Should I strengthen a strength or should I improve a weakness?” It’s a tough question.  There’s no definitive answer.</p>\n<p>In fact, I read between 3 and 10 books at a time (<a href=\"https://www.bustle.com/p/reading-more-than-one-book-at-a-time-actually-has-some-pretty-incredible-benefits-73777\">There’s a lot of benefits to this!</a>). In any given evening, based on my challenges of the past day or my mood, I’ll pick up a different book. I’ll read a few pages. I’ll learn something new or interesting. Then, I’ll write some notes in my notebook.</p>\n<p>Some nights I’ll read a book that will help me get better at something I’m good at. Maybe this would be front end development or management. Other nights, I’ll work on something I know I need to improve. These days, this is usually something like executive presence, strategy, or infrastructure.</p>\n<p>I’m currently working towards a <a href=\"https://www.extension.harvard.edu/academics/graduate-degrees/software-engineering-degree\">Master’s Degree in Software Engineering at Harvard University’s Extension School</a>. For weeks, I’ll go back and fourth on which courses to take. Should I work on something that will help me improve my day to day work? Should I work on something that I have no knowledge of whatsoever? Should I put every possibility in a top hat and pick one at random?</p>\n<p>Last Fall, I decided to take a <a href=\"https://www.extension.harvard.edu/course-catalog/courses/cloud-devopsmdashbasics-and-modern-techniques/15869?keyword=devops\">DevOps course</a>. It focused mostly on AWS and its services. I learned about S3, EC2, VPCs, Internet Gateways, Nat Gateways, Cloud Formation, Ansible, Jenkins, and a few other technologies and services. This was a textbook “improving a weaknesses” strategy.</p>\n<p>Earlier this Spring, I took “<a href=\"https://www.extension.harvard.edu/course-catalog/courses/web-application-development-using-nodejs/25038?keyword=node.js\">Internet Applications using Node.js and Angular</a>“. This was textbook example of the “strengthening a strength” strategy. At <a href=\"http://fincura.com\">FINCURA</a>, I wear multiple hats. One of those hats is the frontend architect – and we use Angular. Needless to say, I learned a few interesting tidbits about Angular I didn’t already know. It was also fun to learn more about Node.</p>\n<p>This Fall, I’m getting out of my comfort zone and taking two classes! I’m going to strengthen a strength (Data visualizations with a focus on d3) and improve a weakness (Java! “Java, Hadoop, Lamba Expressions, and Streams).</p>\n<p>It’s your call if you want to strengthen a strength or improve a weakness. There’s no right or wrong answer. You can even be like me and do both depending on your mood.</p>\n<p>The key is to always be improving. Always try to get better. People often overestimate what they can do in a week, but underestimate what they can do in ten years. Keep moving. Keep improving.</p>", "published": "2022-11-27T11:13:35.672Z", "lastEdited": "2022-11-27T11:13:35.672Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/cavezza/always-be-improving-3717", "stars": [], "saves": []}}, {"model": "main.post", "pk": 63, "fields": {"author": 213, "title": "Hello World", "slug": "hello-world-63", "description": "Hi, there. I'm &lt;Mark age=25 hat=true/&gt; and want to learn a lot of developing stuff and there is...", "content": "<p>Hi, there.<br />\nI'm <code>&lt;Mark age=25 hat=true/&gt;</code> and want to learn a lot of developing stuff and there isn't a better way to learn than by <strong>sharing</strong> and <strong>teaching</strong>.<br />\nCurrently I'm learning and practicing <code>TDD (Test Driven Development), Functional Programming, React, Javascript, HTML</code> and <code>CSS</code>.<br />\nI also want to learn and explore <code>VueJS, Typescript, BDD (Behavior Driven Development), Python, Go, Data Science</code> and some Computer Science stuff.<br />\nI'll challenge myself to post here often, so stay tuned (also follow me on Twitter <a href=\"https://twitter.com/HeyMarkKop\">@HeyMarkKop</a>)</p>", "published": "2022-11-27T11:13:39.480Z", "lastEdited": "2022-11-27T11:13:39.480Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160976.png", "source": "https://dev.to/heymarkkop/hello-world-31p8", "stars": [], "saves": []}}, {"model": "main.post", "pk": 64, "fields": {"author": 214, "title": "webtorrent is great", "slug": "webtorrent-is-great-64", "description": "webtorrent is so great i mean imagine if a website like netflix or wikipedia uses it , it will lower...", "content": "<hr />\n<p>title: webtorrent is great\npublished: true\ndescription: \ntags: javascript , webdev  , torrent</p>\n<hr />\n<p>webtorrent is so great i mean imagine if a website like netflix or wikipedia uses it , it will lower the bandwith and the cost of the severs </p>", "published": "2022-11-27T11:13:42.916Z", "lastEdited": "2022-11-27T11:13:42.916Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160977.png", "source": "https://dev.to/sihamza/webtorrent-is-great-2koh", "stars": [215, 25, 216], "saves": [215]}}, {"model": "main.post", "pk": 65, "fields": {"author": 217, "title": "BDD working together with Hexagonal architecture", "slug": "bdd-working-together-with-hexagonal-architecture-65", "description": "Post about the benefit of using hexagonal architecture to ease real BDD", "content": "<hr />\n<p>title: BDD working together with Hexagonal architecture\npublished: true\ndescription: Post about the benefit of using hexagonal architecture to ease real BDD\ntags: hexagonal,bdd,testing</p>\n<hr />\n<p>Behaviour driven development is a development methodology that aims to create a good communication between the development team and the business. It also focus the testing on the actual behaviour of the system rather than focusing too much on low level details. </p>\n<p>Sadly over the years cucumber (and behat) was used as an user acceptance testing tool or solely to write end to end tools. The creator of cucumber actually made a blog <a href=\"https://aslakhellesoy.com/post/11055981222/the-training-wheels-came-off\">post</a> titled \"The training wheels came off\" trying to explain why using cucumber as a web test automation was just a bad idea. He made a point that by doing so you would not reap any of the benefits that BDD should provide you. </p>\n<p>Now let's hope you are not writing anymore scenarios like this one: </p>\n<p><code>gherkin\nScenario: Successful login\n  Given a user \"Aslak\" with password \"xyz\"\n  And I am on the login page\n  And I fill in \"User name\" with \"Aslak\"\n  And I fill in \"Password\" with \"xyz\"\n  When I press \"Log in\"\n  Then I should see \"Welcome, Aslak\"</code></p>\n<p>Moving on to hexagonal architecture, A.K.A. ports and adapters. This architecture was coined by a gentleman named Alistair Cockburn in June 2005. It aims to write highly testable applications. It does so by providing clean layers and pushing all the technical bits to \"adapters\". The application core has to provide contracts (interfaces) \"ports\" that the infrastructure layers should implement (adapters).</p>\n<p><img alt=\"the hexagon\" src=\"https://speakerd.s3.amazonaws.com/presentations/de8629f0bf520131c2e20239d959ba18/slide_11.jpg?1400675141\" /></p>\n<p>In case you want to read more into the subject, I highly recommend Chris Fidao (fideloper) <a href=\"https://fideloper.com/hexagonal-architecture\">post</a>.</p>\n<p>Now what these two things can do for us. </p>\n<p><img alt=\"shrug\" src=\"https://media.giphy.com/media/3o7TKHKjrDyqphX9Cg/giphy.gif\" /></p>\n<p>Basically usually if use BDD tool but you are testing using the UI of your application (web testing, end to end), it means there is a big chance that these tests are slow and flaky. On the other hand, if you follow the hexagonal architecture motto: </p>\n<blockquote>\n<p>Allow an application to equally be driven by users, programs, automated test or batch scripts, and to be developed and tested in isolation from its eventual run-time devices and databases.\n</p>\n</blockquote>\n<p>It means that your should be able to write tests that bypass your web interface and go talk directly to the application layer. This bring two major benefits.</p>\n<ol>\n<li>you can't write scenarios that are too focused on the UI (there is no more UI involved)</li>\n<li>it will be super fast!!!</li>\n</ol>\n<p>Just to prove my point here the output from a real application:</p>\n<p><code>93 scenarios (93 passed)\n384 steps (384 passed)\n0m5.31s (58.20Mb)</code></p>\n<p><img alt=\"mind blow\" src=\"https://media.giphy.com/media/V0IdVIIW1y5d6/giphy.gif\" /></p>\n<p>Enjoy clean testable applications with up-to-date documentation written in Gherkin. </p>\n<p>Bonus: these scenarios could be maintained by business analysis or domain expert.</p>", "published": "2022-11-27T11:13:50.365Z", "lastEdited": "2022-11-27T11:13:50.365Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160980.png", "source": "https://dev.to/ragezbla/bdd-working-together-with-hexagonal-architecture-2on9", "stars": [], "saves": []}}, {"model": "main.post", "pk": 66, "fields": {"author": 218, "title": "Enable debugging in a Django project with Docker", "slug": "enable-debugging-in-a-django-project-with-docker-66", "description": "Hi! In this post i’m going to show you how to debug your Django code with Docker.   In a Django proje...", "content": "<p>Hi! In this post i’m going to show you how to debug your Django code with Docker. </p>\n<p>In a Django project with 3 images (django, postgres and redis) you can't debug your code.</p>\n<p>Our project run without any issue:</p>\n<p><code>$ docker-compose up\nStarting redis_1        ... done\nStarting postgres_1     ... done\nStarting celeryworker_1 ... done\nStarting django_1       ... done\nStarting flower_1       ... done\nStarting celerybeat_1   ... done\nAttaching to redis_1, postgres_1, celerybeat_1, django_1, celeryworker_1, flower_1\n...\n...\ndjango_1        | Performing system checks...\ndjango_1        |\ndjango_1        | System check identified no issues (0 silenced).\ndjango_1        | August 25, 2019 - 02:29:42\ndjango_1        | Django version 2.0.9, using settings 'config.settings.local'\ndjango_1        | Starting development server at http://0.0.0.0:8000/\ndjango_1        | Quit the server with CONTROL-C.</code></p>\n<p>But, if we put a breakpoint into our code (<code>import pdb; pdb.set_trace()</code>), we get this kind of error:</p>\n<p><code>django_1        | Performing system checks...\ndjango_1        |\ndjango_1        | &gt; /app/config/urls.py(12)&lt;module&gt;()\ndjango_1        | -&gt; path(settings.ADMIN_URL, admin.site.urls),\ndjango_1        | (Pdb)\ndjango_1        | Unhandled exception in thread started by &lt;function check_errors.&lt;locals&gt;.wrapper at 0x7f959fef4400&gt;\ndjango_1        | Traceback (most recent call last):\ndjango_1        |   File \"/usr/local/lib/python3.6/site-packages/django/utils/autoreload.py\", line 225, in wrapper\n...\n...\ndjango_1        |   File \"/app/config/urls.py\", line 12, in &lt;module&gt;\ndjango_1        |     path(settings.ADMIN_URL, admin.site.urls),\ndjango_1        |   File \"/app/config/urls.py\", line 12, in &lt;module&gt;\ndjango_1        |     path(settings.ADMIN_URL, admin.site.urls),\ndjango_1        |   File \"/usr/local/lib/python3.6/bdb.py\", line 51, in trace_dispatch\ndjango_1        |     return self.dispatch_line(frame)\ndjango_1        |   File \"/usr/local/lib/python3.6/bdb.py\", line 70, in dispatch_line\ndjango_1        |     if self.quitting: raise BdbQuit\ndjango_1        | bdb.BdbQuit</code></p>\n<p>What do we have to do to resolve this? We need to run django server in other terminal instance:</p>\n<p>These are the steps:</p>\n<p>1- Open other terminal instance\n2- Run <code>docker-compose ps</code> to view running containers÷\n<code>$ docker-compose ps\ndjango_1         /entrypoint /start               Up       0.0.0.0:8000-&gt;8000/tcp\npostgres_1       docker-entrypoint.sh postgres    Up       5432/tcp\nredis_1          docker-entrypoint.sh redis ...   Up       6379/tcp</code></p>\n<p>3- Run <code>docker rm -f django_1</code> to remove containers\n4- Then, run <code>docker-compose run --rm --service-ports django</code>:\n```\n$ docker-compose run --rm --service-ports django\nStarting postgres_1 ... done\nPostgreSQL is available\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, sessions\nRunning migrations:\n  No migrations to apply.\nPerforming system checks...</p>\n<p>System check identified no issues (0 silenced).\nAugust 25, 2019 - 02:54:59\nDjango version 2.0.9, using settings 'config.settings.local'\nStarting development server at http://0.0.0.0:8000/\nQuit the server with CONTROL-C\n```</p>\n<p>5- Now, you can put a breakpoint! Save the changes and...\n```\nPerforming system checks...</p>\n<blockquote>\n<p>/app/config/urls.py(12)<module>()\n-&gt; path(settings.ADMIN_URL, admin.site.urls),\n(Pdb)\n```</p>\n</blockquote>\n<p>I hope you find it useful!</p>", "published": "2022-11-27T11:13:53.379Z", "lastEdited": "2022-11-27T11:13:53.379Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160981.png", "source": "https://dev.to/herchila/enable-debugging-in-a-django-project-with-docker-2550", "stars": [], "saves": []}}, {"model": "main.post", "pk": 67, "fields": {"author": 219, "title": "The 8 Primitive Types in Java", "slug": "the-8-primitive-types-in-java-67", "description": "As I begin to edit my Java Basics series from a couple years ago, I thought it would make sense to st...", "content": "<p>As I begin to edit my Java Basics series from a couple years ago, I thought it would make sense to start pulling some really detailed information out into their own posts. That way, the beginner content is much easier to digest. To start, I’m pulling out all the information I have on the 8 primitive types in Java.</p>\n<h2>Java Primitive Types</h2>\n<p>As the title of this article suggests, Java has 8 primitive types built into the language. In the following subsections, we’ll take a look at all eight primitive types in no particular order. For each primitive type, we’ll describe how to use it and what its limits are.</p>\n<h4>The Int Primitive Type</h4>\n<p>To start, Java integers are 32-bit signed (meaning positive or negative) values, and they are denoted by the <code>int</code> keyword:</p>\n<p><code>java\nint someNumber = 10;</code></p>\n<p>Of course, like all primitive types, integers have their limits. Since they’re 32-bit, we’re looking at a range of values from -2,147,483,648 to 2,147,483,647. That’s a lot of numbers! Of course, we can confirm that range using a handy trick in DrJava’s interactions pane:</p>\n<p><code>java\nInteger.MAX_VALUE // Prints 2,147,483,647\nInteger.MIN_VALUE // Prints -2,147,483,648</code></p>\n<p>Naturally, <code>int</code> is probably the most common integer type used for simple calculations. If you need more range, see <code>long</code> below.</p>\n<h4>The Double Primitive Type</h4>\n<p>Unlike <code>int</code>, Java doubles are 64-bit floating point values, and they are marked by the <code>double</code> keyword:</p>\n<p><code>java\ndouble someNumber = 110.55;</code></p>\n<p>As a reminder, floating point numbers are just real numbers. In other words, we gain access to decimal points when we use doubles.</p>\n<p>Since doubles are 64-bit, we have access to significantly more numbers than with integers. If we use the same interactions pane trick, we can find out just how massive the range of potential values is:</p>\n<p><code>java\nDouble.MAX_VALUE // Prints 1.7976931348623157E308\nDouble.MIN_VALUE // Prints 4.9E-324</code></p>\n<p>Keep in mind that negative exponents imply extremely small numbers—as opposed to extremely negative numbers—so we’re not exactly looking at the same kind of range as with integers.</p>\n<p>In general, <code>double</code> is the default choice for floating point values in Java. The alternative is <code>float</code>.</p>\n<h4>The Char Primitive Type</h4>\n<p>As we’ve seen already, Java chars represent 16-bit characters, and they are marked by the <code>char</code> keyword:</p>\n<p><code>java\nchar someCharacter = 'f';</code></p>\n<p>All characters in Java are defined using single quotes. Meanwhile, double quotes are used to define strings—something we’ll chat about later.</p>\n<p>As usual, we can find out the character range using the following code snippet:</p>\n<p><code>java\nCharacter.MAX_VALUE // Prints '???' \nCharacter.MIN_VALUE // Prints ''</code></p>\n<p>To make sense of this range, we can always cast the results to an integer (more on that later):</p>\n<p><code>java\n(int) Character.MAX_VALUE // Prints 65535\n(int) Character.MIN_VALUE // Prints 0</code></p>\n<p>As it turns out, the <code>char</code> type is the only unsigned type in Java. In other words, a character can range from 0 to 65,535 where each number maps to a specific character. In order to create characters beyond this list, Java may combine pairs of characters. Check out <a href=\"https://therenegadecoder.com/code/reverse-a-string-in-java/\">Reverse a String in Java</a> for some examples.</p>\n<h4>The Byte Primitive Type</h4>\n<p>When we were chatting about binary, we talked about the concept of a bit. Well, a group of eight bits makes a byte which Java supports as a primitive type. The <code>byte</code> type is essentially just an 8-bit number which ranges from -128 to 127. As expected, bytes are denoted by the <code>byte</code> keyword:</p>\n<p><code>java\nbyte someByte = 20;</code></p>\n<p>As always, we can confirm the range of a the <code>byte</code> type using the following code snippet:</p>\n<p><code>java\nByte.MAX_VALUE // Prints 127\nByte.MIN_VALUE // Prints -128</code></p>\n<p>In my experience, the <code>byte</code> type is useful for reading and processing raw data. In general, however, we will likely have no use for it since the range of potential values is so small.</p>\n<h4>The Short Primitive Type</h4>\n<p>The <code>short</code> type is another integer type, but it takes up less space than the int type. In fact, it takes up exactly half the space at 16 bits, and it is marked by the <code>short</code> keyword:</p>\n<p><code>java\nshort someNumber = 11;</code></p>\n<p>In terms of range, the <code>short</code> type clocks in at just half of the bits as an integer, but we can confirm that as usual:</p>\n<p><code>java\nShort.MAX_VALUE // Prints 32767\nShort.MIN_VALUE // Prints -32768</code></p>\n<p>For practical purposes, a <code>short</code> only has 65,546 possible values. Both <code>byte</code> and <code>short</code> are typically used when memory and disk space is low. Otherwise, it is safe to use <code>int</code> as it is the default type when declaring integers.</p>\n<h4>The Long Primitive Type</h4>\n<p>On the other end of the spectrum is the <code>long</code> primitive type. This type represents extremely large integers where we might want values even greater than the <code>int</code> type can provide. The <code>long</code> type is a 64-bit signed integer which means the values range into the quintillions.</p>\n<p>Naturally, we denote longs with the <code>long</code> keyword:</p>\n<p><code>java\nlong someBigNumber = 1013401346173L;</code></p>\n<p>To demonstrate just how wide of a range a 64-bit value can have, let’s take a look at the following code snippet:</p>\n<p><code>java\nLong.MAX_VALUE // Prints 9,223,372,036,854,775,807\nLong.MIN_VALUE // Prints -9,223,372,036,854,775,808</code></p>\n<p>Perhaps a <code>long</code> would be useful for computing the distance light travels in a given time frame. After one second, light travels roughly 300 million meters. If we wrote a program to track the distance of light in real time, the int type would cap out after around 7 seconds while a long could calculate out to around 975 years. Don’t believe me? Check out <a href=\"https://gist.github.com/jrg94/820d3f0f482dd19f0170964346381df0\">this Gist</a> which runs through the entire calculation.</p>\n<h4>The Float Primitive Type</h4>\n<p>While we often use the <code>double</code> which is a 64-bit floating point number type, Java supports another floating point number type called the <code>float</code>. Like <code>int</code>, however, Java defaults to <code>double</code> for floating point values. At any rate, we can denote a 32-bit floating point number using the <code>float</code> keyword:</p>\n<p><code>java\nfloat someNumber = 11.4f;</code></p>\n<p>To get an idea of the range of a <code>float</code>, let’s use our trick again:</p>\n<p><code>java\nFloat.MAX_VALUE // Prints 3.4028235E38\nFloat.MIN_VALUE // Prints 1.4E-45</code></p>\n<p>As we can see, 32 bits really reduces our range and precision. If we want to use a decimal value with less precision than <code>double</code> while using half the space, the <code>float</code> type is an option.</p>\n<h4>The Boolean Primitive Type</h4>\n<p>Finally, we can cover the <code>boolean</code> type. To declare a <code>boolean</code>, we can use the <code>boolean</code> keyword:</p>\n<p><code>java\nboolean isBool = true;</code></p>\n<p>Booleans are a bit unique because they don’t represent numeric values like all the other primitive types. In fact, our little <code>MAX_VALUE</code> and <code>MIN_VALUE</code> trick won’t work here. Instead, booleans represent <code>true</code> or <code>false</code> which we might recall from the previous lesson on logic.</p>\n<p>We won’t spend much time on this now because it will become part of almost everything we do in Java. That said, we often won’t declare them explicitly like this. Instead, they are the result of comparisons which drive logic in code. Check out the boolean operators section below for more information.</p>\n<h2>Want to Learn More?</h2>\n<p>As mentioned already, this information could be previously found in the <a href=\"https://therenegadecoder.com/code/primitive-types-and-variables-in-java/\">Primitive Types and Variables in Java</a> article. Of course, now that article is much easier to read.</p>\n<p>If you liked this article and you want more, <a href=\"https://www.patreon.com/TheRenegadeCoder\">become a member of The Renegade Coder</a>. Membership is an excellent way to show your support, and it goes a long way to ensuring content like this stays free to the public.</p>\n<p>At any rate, thanks again for your support. See you next time!</p>\n<p>The post <a href=\"https://therenegadecoder.com/code/the-8-primitive-types-in-java/\">The 8 Primitive Types in Java</a> appeared first on <a href=\"https://therenegadecoder.com\">The Renegade Coder</a>.</p>", "published": "2022-11-27T11:13:56.166Z", "lastEdited": "2022-11-27T11:13:56.166Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_67_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--HITUulzV--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/19alz68aqqbmkfs0u5bo.jpeg", "source": "https://dev.to/renegadecoder94/the-8-primitive-types-in-java-10cl", "stars": [219, 220, 221, 222, 223], "saves": [220, 219, 223]}}, {"model": "main.post", "pk": 68, "fields": {"author": 224, "title": "Robots Protect Better Than You", "slug": "robots-protect-better-than-you-68", "description": "Why your business is safer in the hands of technology. ", "content": "<hr />\n<p>title: Robots Protect Better Than You\npublished: true\ndescription: Why your business is safer in the hands of technology. \ntags: Business, Technology, Security</p>\n<hr />\n<p>We live in an age where our personal information is sold for money by multiple companies that we innocently give our information to. In the old days, it may have seemed like we could protect our information by ourselves with a little bit of web searching. Thieves and companies have gotten stronger and smarter. </span><a href=\"https://www.symantec.com/theme/global-intelligence-network.=\"font-weight: 400;\">Threat intelligence</span></a><span style=\"font-weight: 400;\"> is now necessary. It just has come a time where robots can actually protect us better than we can protect ourselves when it comes to the internet. Here are some of the ways a robot protects us better than we can protect ourselves.</p>\n<p>24 Hour Watch</p>\n<p>There is so much to do these days that you do not have time to watch your computer and information 24 hours a day. There is stored information on your computer that can be stolen. Every business that has ever stored your information can potentially get hacked. Your information can be at risk wherever you have used it with a second party. A robot can keep watch if your information pops up anywhere on the web 24 hours a day. You can not do this alone. It is great to have a robot to help keep your vital information like social security number, banking info, and credit card number safe.</p>\n<p>Robots Save You Time</p>\n<p>Robots can save you time. If you have your identity stolen, it takes time and money to get back to normal again. You have to call and cancel cards and different accounts that have been opened in your name. You have to prove that you did not do the things that the person who stole your identity did. All of your identity restorations take time. By having a robot protect you before your identity is stolen really helps. Robots are really great with </span><a href=\"https://www2.deloitte.com/us/en/pages/technology-media-and-telecommunications/articles/technology-industry-outlook.html\"font-weight: 400;\">the technology industry</span></a><span style=\"font-weight: 400;\">.</p>\n<p>Robots Lower Stress</p>\n<p>Peace of mind goes a long way these days. Robots help to lower the stress level. If you feel safe, because a robot is protecting your information, you are going to have less stress. There is never a 100 percent guarantee of information safety even with robots. The best you can do is let robots protect you. You will be less likely to have your personal information breached when you have something watching all your information for you as security.</p>\n<p>Robots Understand Technology Better Than You</p>\n<p>Robots speak the language of the internet. Robots are programmed that way. There is so much programming when it comes to the internet, internet security, information protection, and the like. Let a robot do what it knows best. There is no need for you to have to learn every little thing about protecting your identity. It is the responsibility of the robot to know what hackers know. This way the robot stays one step ahead. The internet changes every day. Hackers change every day. Robots change faster than we can keep up. Overall it is perfectly safe to hand over the protection of our information to a robot.</p>\n<p>Our personal information is worth a lot of money. Our good credit enables us to get money when we need it. If we do not protect our personal information and all our sensitive information that is given when needing to take out loans and such, we might get our identity stolen and used. This is a horrible experience to live through. No good person deserves to have their information used against them. Robots are out there to help protect us and we should let them. The future is here. Take the leap of faith and realize a robot can actually protect you better than you can protect yourself. </p>", "published": "2022-11-27T11:14:07.782Z", "lastEdited": "2022-11-27T11:14:07.782Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160984.png", "source": "https://dev.to/brettclawson75/robots-protect-better-than-you-3eb2", "stars": [], "saves": []}}, {"model": "main.post", "pk": 69, "fields": {"author": 225, "title": "Quick and dirty mock service with Starlette", "slug": "quick-and-dirty-mock-service-with-starlette-69", "description": "I had a challenge at work.  The team needed to mock out a third party service in a testing environmen...", "content": "<p>I had a challenge at work.  The team needed to mock out a third party service in a testing environment.  The service was slow and configuring it was painful.  If we could mock it out, then the team could avoid those problems.</p>\n<p>The challenge with mocking out the service is that part of the flow needs to invoke a webhook that will call back to my company's system to indicate that all work is done.  Additionally, the webhook call must be after a delay because the service we're simulating takes a long time (i.e., more than 60 seconds).</p>\n<blockquote>\n<p><strong>The Problem:</strong> Run a mocked third party service with a delayed webhook callback.</p>\n</blockquote>\n<p>The solution needs to:</p>\n<ul>\n<li>Respond to a POST request and return a <code>200 OK</code> status.</li>\n<li>Call a webhook back to the system that will include extra identifiers to connect the webhook call to the original request.</li>\n<li>Be as simple as possible because this is not the core product.</li>\n</ul>\n<h2>Solution options</h2>\n<p>The Python ecosystem is full of strong options to address the first part of the solution.  Django, Flask, Pyramid, Bottle, and any other web framework you can think of would handle that with ease.</p>\n<p>The second part of the solution is harder.  If I'm not careful, then being simple goes out the window, and I've destroyed the third objective.</p>\n<h3>Background task tools</h3>\n<p>As much as I love Django, I didn't think it was a good fit.  In my thought process, calling the webhook later required some kind of background task.  If you know Django, then you may immediately think of <a href=\"http://www.celeryproject.org/\">Celery</a>, and that was my first thought too.  The problem is that Celery requires a message broker like <a href=\"https://www.rabbitmq.com/\">RabbitMQ</a>.  <em>With that, the simplicity budget is totally shot.</em></p>\n<p>An alternative to Celery is <a href=\"https://python-rq.org/\">RQ</a>, but it has similar problems and requires running <a href=\"https://redis.io/\">Redis</a> along with a separate worker process.</p>\n<blockquote>\n<p>Could we solve this problem without using a separate background task tool?</p>\n</blockquote>\n<h3>Sans background task tools</h3>\n<p>Knowing that simplicity was an important goal, I really wanted to do this without a background task tool.</p>\n<p>I considered two approaches:</p>\n<ol>\n<li>Use threads.</li>\n<li>Use cooperative concurrency (read: asynchronous programming)</li>\n</ol>\n<p>I don't like threaded programming in Python.  In fact, I don't like threaded programming. [^1] A threaded solution could totally work by executing the webhook call in a separate thread, but I was interested in other options.</p>\n<p>[^1]: I've been studying Rust on the side so maybe that language can change my mind about threaded programming, but the verdict is still out.</p>\n<p>Could I solve the problem with async programming?  Async programming is much easier in recent versions of Python.  The language now has built-in keywords like <code>async</code> and <code>await</code> that makes programming in that style friendlier.  I've assessed a few async web frameworks, and I recalled a feature that I saw in the <a href=\"https://www.starlette.io/\">Starlette</a> documentation: <a href=\"https://www.starlette.io/background/\">Background Tasks</a></p>\n<p>Starlette is a web framework developed by the author of <a href=\"https://www.django-rest-framework.org/\">Django REST Framework (DRF)</a>, <a href=\"https://twitter.com/_tomchristie\">Tom Christie</a>.  DRF is such a solid project.  Sharing the same creator bolstered my confidence that Starlette will be a well designed piece of software.</p>\n<p>I decided to <a href=\"https://en.wikipedia.org/wiki/Spike_(software_development)\">spike</a> on the project to see if it was a viable path.  A hour later, I was shocked to see that I had a final, <em>working</em>, solution.</p>\n<p>The rest of this article will explore what I did to solve the problem using Starlette with a generic version that skips the boring details of the third party service.</p>\n<h2>Starlette</h2>\n<p>Since Starlette is an async framework, the Python tools needed to support a Starlette application are different from a standard <a href=\"https://www.python.org/dev/peps/pep-3333/\">WSGI</a> app.</p>\n<p>Instead of a <em>synchronous</em> web server like <a href=\"https://gunicorn.org/\">Gunicorn</a> or <a href=\"https://uwsgi-docs.readthedocs.io/en/latest/\">uWSGI</a>, an <em>asynchronous</em> web server is required.  I selected <a href=\"https://www.uvicorn.org/\">Uvicorn</a>, a web server similar to Gunicorn that uses <a href=\"https://uvloop.readthedocs.io/\">uvloop</a> to handle the asynchronous event loop.</p>\n<p>To do the webhook callback, the emulator needs to make HTTP requests.  The natural package to reach for is <a href=\"https://requests.readthedocs.io/en/master/\">requests</a>, but <code>requests</code> is a synchronous package that would block the event loop.  I needed an asynchronous HTTP request library.  For that requirement, I picked <a href=\"https://www.encode.io/httpx/\">HTTPX</a>.  HTTPX is a very new library that shares the same API as <code>requests</code> <strong>and</strong> works with async programming.</p>\n<p>If you want to follow along, first, install all the necessary dependencies.  You'll need at least Python 3.6.</p>\n<p><code>bash\n$ mkdir mock-service\n$ cd mock-service\n$ python3 -m venv venv\n$ . venv/bin/activate\n(venv) $ pip install starlette uvicorn httpx</code></p>\n<p>For future readers, here are the versions that the <code>pip install</code> command installed into my local virtual environment at the time of writing this article.</p>\n<p><code>bash\n$ pip freeze\ncertifi==2019.6.16\nchardet==3.0.4\nClick==7.0\nh11==0.8.1\nh2==3.1.1\nhpack==3.0.0\nhstspreload==2019.8.20\nhttptools==0.0.13\nhttpx==0.7.1\nhyperframe==5.2.0\nidna==2.8\nrfc3986==1.3.2\nstarlette==0.12.8\nuvicorn==0.8.6\nuvloop==0.12.2\nwebsockets==7.0</code></p>\n<p>Let's start by listing the full example.  I'll break down each part of the app, but sometimes it helps to get the full picture first.  To try this out yourself, you can grab <a href=\"https://www.mattlayman.com/2019/mock_service.py\">the example script</a>.</p>\n<p>```python\nimport asyncio\nimport os\nimport uuid</p>\n<p>import httpx\nfrom starlette.applications import Starlette\nfrom starlette.background import BackgroundTask\nfrom starlette.responses import JSONResponse\nimport uvicorn</p>\n<p>app = Starlette()\nclient = httpx.AsyncClient()\nCALLBACK_URL = os.environ[\"CALLBACK_URL\"]</p>\n<p>@app.route(\"/api/endpoint\", methods=[\"POST\"])\nasync def fake_endpoint(request):\n    identifier = str(uuid.uuid4())\n    payload = {\n        \"identifier\": identifier,\n        \"some_parameter\": request.query_params.get(\"some_parameter\"),\n    }\n    task = BackgroundTask(trigger_webhook, payload)\n    return JSONResponse(\n        {\"identifier\": identifier, \"success\": True}, background=task)</p>\n<p>async def trigger_webhook(payload):\n    await asyncio.sleep(5)\n    params = {\n        \"success\": True,\n        \"identifier\": payload[\"identifier\"],\n        \"some_parameter\": payload[\"some_parameter\"],\n    }\n    await client.get(CALLBACK_URL, params=params)</p>\n<p>if <strong>name</strong> == \"<strong>main</strong>\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n```</p>\n<h3>Running the code</h3>\n<p>We can run the code end-to-end to simulate how this would plug into a real environment.</p>\n<p>First, we need a webhook receiver.  The Python built-in HTTP server is perfectly suited for this task.  In a separate terminal, run:</p>\n<p><code>bash\n$ python3 -m http.server 5000\nServing HTTP on 0.0.0.0 port 5000 (http://0.0.0.0:5000/) ...</code></p>\n<p>Next, start the mock service.</p>\n<p><code>bash\n(venv) $ CALLBACK_URL=http://0.0.0.0:5000 python3 mock_service.py\nINFO: Started server process [47148]\nINFO: Waiting for application startup.\nINFO: Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)</code></p>\n<p>Notice that I've passed in <code>CALLBACK_URL</code> as an environment variable with the URL from our webhook receiver.  The mock service will use this information to know where to send the webhook request.</p>\n<p>With the core pieces in place, we need to trigger the mock service.  I like <a href=\"https://httpie.org/\">HTTPie</a> as a friendlier alternative to <a href=\"https://curl.haxx.se/\">curl</a>.</p>\n<p><code>bash\n(venv) $ pip install httpie</code></p>\n<p>Now we can get everything moving!  Let's fire off a POST to the mock service.</p>\n<p>```bash\n(venv) $ http POST :8000/api/endpoint some_parameter==some_value\nHTTP/1.1 200 OK\ncontent-length: 68\ncontent-type: application/json\ndate: Sat, 24 Aug 2019 15:54:07 GMT\nserver: uvicorn</p>\n<p>{\n    \"identifier\": \"4a3a0ce2-ae0c-41d3-ba58-89a5a9579692\",\n    \"success\": true\n}\n```</p>\n<p>From the mock service, you will see a log like:</p>\n<p><code>bash\nINFO: ('127.0.0.1', 61647) - \\\n    \"POST /api/endpoint?some_parameter=some_value HTTP/1.1\" 200</code></p>\n<p>Five seconds later, the fake webhook receiver should show:</p>\n<p><code>bash\n127.0.0.1 - - [24/Aug/2019 11:54:12] \\\n    \"GET /?success=true&amp;identifier= \\\n    4a3a0ce2-ae0c-41d3-ba58-89a5a9579692&amp;some_parameter=some_value \\\n    HTTP/1.1\" 200 -</code></p>\n<p>I've reformatted the lines so they will fit better in the article.</p>\n<p><strong>Awesome!</strong> The mock service did exactly what we wanted.  The POST request got a successful response and, after a delay, the webhook got some of the same information.</p>\n<p>Now that we've seen things work, let's break down the code.</p>\n<h3>Mock service explanation</h3>\n<p>We can look at this code in a few separate chunks.</p>\n<p>```python\nimport asyncio\nimport os\nimport uuid</p>\n<p>import httpx\nfrom starlette.applications import Starlette\nfrom starlette.background import BackgroundTask\nfrom starlette.responses import JSONResponse\nimport uvicorn\n```</p>\n<p>The import section isn't very exciting.  I've divided the standard library imports from the third party imports.  If we had more code in separate files, then I'd have a third section for local imports, but we don't need that because the entire emulator file fits in 39 lines.</p>\n<p><code>python\napp = Starlette()\nclient = httpx.AsyncClient()\nCALLBACK_URL = os.environ[\"CALLBACK_URL\"]</code></p>\n<p>This section creates the module level globals that we are going to use.  Sometimes globals are the best tool for a job even if they are often frowned upon.  The <code>CALLBACK_URL</code> is the only setting for the emulator.  Notice that I get the value from <code>os.environ</code> with the index syntax instead of the <code>os.environ.get('CALLBACK_URL')</code> syntax.  The index style of fetching will ensure that we have the value since it's required to operate the emulator properly.</p>\n<p><code>python\n@app.route(\"/api/endpoint\", methods=[\"POST\"])\nasync def fake_endpoint(request):\n    identifier = str(uuid.uuid4())\n    payload = {\n        \"identifier\": identifier,\n        \"some_parameter\": request.query_params.get(\"some_parameter\"),\n    }\n    task = BackgroundTask(trigger_webhook, payload)\n    return JSONResponse(\n        {\"identifier\": identifier, \"success\": True}, background=task)</code></p>\n<p>This async function defines the core route.  The style should be extremely familiar to Flask users.  The body of the function does a handful of things:</p>\n<ol>\n<li>Generates an identifier that a caller could use to associate this call with the webhook that will follow.</li>\n<li>Extracts a value from the request's query string, <code>some_parameter</code>, and stores it for the background task.</li>\n<li>Bundles data into a payload that will be available to the <code>BackgroundTask</code> which will execute the <code>trigger_webhook</code> function.</li>\n<li>Responds with the identifier and sets the background task to run.</li>\n</ol>\n<p>One weird aspect of this emulator is that it's handling POST requests, but there is no POST data processed.  The real third party service included PDF files in the POST, but I wanted to ignore that aspect since it did not illustrate any extra value.</p>\n<p><code>python\nasync def trigger_webhook(payload):\n    await asyncio.sleep(5)\n    params = {\n        \"success\": True,\n        \"identifier\": payload[\"identifier\"],\n        \"some_parameter\": payload[\"some_parameter\"],\n    }\n    await client.get(CALLBACK_URL, params=params)</code></p>\n<p>The webhook trigger sleeps for 5 seconds.  It's important to use <code>asyncio.sleep</code> instead of <code>time.sleep</code>.  The sleep function from <code>time</code> is a synchronous command and will block the event loop.  By calling <code>asyncio.sleep</code> with <code>await</code>, the function yields execution back to the event loop until 5 seconds pass.</p>\n<p>Once the delay is over, the HTTPX <code>client</code> calls the callback URL to return the identifier and parameter.  This indicates to the caller that the emulator is done.</p>\n<p><code>python\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)</code></p>\n<p>The final bit of code connects the app to Uvicorn so that Uvicorn will start when the service is invoked with:</p>\n<p><code>bash\n(venv) $ python3 mock_service.py</code></p>\n<h3>Starlette's promising future</h3>\n<p>Starlette's API made this emulator as quick to produce as I could possibly hope for.  The framework is still new, but I think it has a very promising future in the Python ecosystem.  It already has the best performance of any Python framework in the <a href=\"https://www.techempower.com/benchmarks/#section=data-r18&amp;hw=ph&amp;test=query&amp;l=zijzen-f\">TechEmpower Benchmarks</a>.</p>\n<p>I hope you enjoyed looking at some async programming in Python.  If you have any questions, please share on Twitter and reach me at <a href=\"https://twitter.com/mblayman\">@mblayman</a>.</p>\n<p>Thanks for reading!</p>\n<p>This article first appeared on <a href=\"https://www.mattlayman.com/blog/2019/starlette-mock-service/\">mattlayman.com</a>.</p>", "published": "2022-11-27T11:14:11.873Z", "lastEdited": "2022-11-27T11:14:11.873Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_69_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--EW28J1yA--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/hnhcqueh9otwb2pr9p26.png", "source": "https://dev.to/mblayman/quick-and-dirty-mock-service-with-starlette-cfh", "stars": [], "saves": []}}, {"model": "main.post", "pk": 70, "fields": {"author": 74, "title": "Slap Someone with Slack Commands", "slug": "slap-someone-with-slack-commands-70", "description": "Original Post: https://ajonp.com/lessons/slap-someone-with-slack-commands/                Slappy...", "content": "<hr />\n<p>title: Slap Someone with Slack Commands\npublished: true\ntags: firebase, webdev, productivity, slack\ncanonical_url: https://ajonp.com/lessons/slap-someone-with-slack-commands/\ncover_image: https://res.cloudinary.com/ajonp/image/upload/w_1000,h_420/ajonp-ajonp-com/19-slack-slash-command-slap/Slack_Slash_Command_Slap.png</p>\n<hr />\n<blockquote>\n<p>Original Post: https://ajonp.com/lessons/slap-someone-with-slack-commands/</p>\n</blockquote>\n<p>{% youtube 3A4iucpZiwo %}</p>\n<h1>Slappy Slack</h1>\n<p>So one of the Purr-fect Peeps on the channel wanted a fun <code>/slap</code> command added to our Slack channel. I basically said, challange accepted!A quick Google search led me down the right path and found <a href=\"https://spicefactory.co/blog/2015/12/09/slapbot-for-slack-good-old-slap-available-again/\">Spicefactory Slapbot</a>. I cloned this and then started making some tweaks!</p>\n<p><img alt=\"slap challenge\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566663387/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_12.08.04_PM.png\" /></p>\n<h2>Installation</h2>\n<blockquote>\n<p>Note you could run this as a stand alone node server, but I chose to utilize Firebase Cloud Functions since the plan is to add some Machine Learning later.</p>\n</blockquote>\n<p>Before continuing I am committing the files <code>.firebaserc</code> and <code>firebase.json</code>, mainly so I can keep making changes. For your project you will want to delete these files before you begin with the project setup and Firebase initialization.</p>\n<h2>Initialize Firebase</h2>\n<blockquote>\n<p>Docs for setting up <a href=\"https://firebase.google.com/docs/cli\">Firebase CLI</a>.</p>\n</blockquote>\n<p><code>firebase init</code></p>\n<p>When presented with your choices arrow down and hit space bar on <code>Functions: Configure and deploy Cloud Functions</code>.</p>\n<p><img alt=\"Firebase Functions select\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566664040/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_12.26.04_PM.png\" /></p>\n<p>If you would like to start using a new project select <code>Create a new project</code>, for more info checkout <a href=\"https://firebase.google.com/docs/cli\">Firebase Init Docs</a>.</p>\n<p>After that you can select Javascript</p>\n<p><img alt=\"JS selection for firebase init\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566664040/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_12.26.20_PM.png\" /></p>\n<p>For the final settings select N (No) for everything except “Do you want to install dependencies with npm now?”, for this Y (Yes).</p>\n<p><img alt=\"Firebase init Selections\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566664040/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_12.27.07_PM.png\" />.</p>\n<p>Now that you have this complete you should see two new files <code>.firebaserc</code> and <code>firebase.json</code>.</p>\n<h2>Deploy Functions</h2>\n<p>As it stands right now, this will allow you to test locally (not the intent of this lesson).What we really want is to deploy this to Firebase so that Slack can access it. Since our project should all be setup at this point we just use the deploy command.</p>\n<p>In order for us to access an external network you will need to switch your Firebase Subscription for this project, I recommend the Blaze plan as you will not get charged until you go over 125K Invocations a month, I don’t know about your slack fans but that would be very impressive! You can select Modify project at the bottom left of the screen and it should open a modal like below.</p>\n<p>![Firebase Modal(<a href=\"https://res.cloudinary.com/ajonp/image/upload/v1566667914/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_1.31.47_PM.png\">https://res.cloudinary.com/ajonp/image/upload/v1566667914/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_1.31.47_PM.png</a>)</p>\n<p>Now it is time to deploy our function:</p>\n<p><code>firebase deploy</code></p>\n<p>It should result in a successful creation of a cloud function with this output: <img alt=\"cloud deploy output\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566667465/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_1.24.11_PM.png\" /></p>\n<p>You can check in the <a href=\"https://console.firebase.com/\">Firebase Console</a> under Develop-&gt;Functions</p>\n<p><img alt=\"Functions in Console\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566667721/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_1.28.22_PM.png\" /></p>\n<h3>Example of local testing</h3>\n<p><code>firebase serve</code></p>\n<p>This command will output where the emulator is running.</p>\n<p>```\n=== Serving from '/Users/ajonp/Documents/Web/slapbot'...</p>\n<p>⚠ Your requested \"node\" version \"8\" doesn't match your global version \"10\"\n✔ functions: Emulator started at http://localhost:5000\ni functions: Watching \"/Users/ajonp/Documents/Web/slapbot/functions\" for Cloud Functions...\n✔ functions[api]: http function initialized (http://localhost:5000/ajonp-slack-slap/us-central1/api).\n```</p>\n<p>So if you want to throw some curl commands at it you could like:</p>\n<p><code>curl -X POST \\\n  'https://us-central1-ajonp-slack-slap.cloudfunctions.net/api/slap?callback=YOURCALLBACK' \\\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\n  -H 'cache-control: no-cache' \\\n  -d 'user_name=ajonp&amp;text=slappy&amp;channel_id=1234&amp;undefined='</code></p>\n<h2>Slack Configuration</h2>\n<p>Go to Slack services section https://<your_slack_team>.slack.com/apps. For example <a href=\"https://ajonp-com.slack.com/apps\">https://ajonp-com.slack.com/apps</a>.</your_slack_team></p>\n<h3>Incoming Webhook</h3>\n<p>First we need a way to have Slack accept our <code>/slap</code> messages coming back into Slack’s system for our account. We will add an inbound Webhook to allow this interaction to succeed.</p>\n<p><img alt=\"slash incoming webhooks\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566668484/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_1.37.36_PM.png\" /></p>\n<ul>\n<li>Choose any channel to post to (don’t worry, bot will use the channel you type in when you do your slapping)</li>\n<li>Copy and paste tha token part of the URL that you got (it will be something like : <code>https://hooks.slack.com/services/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</code></li>\n<li>So it would be the <code>/T2UR5KNQ2/BMNTDRAG0/mPToTmuARk2BqYhn93Izzbbb</code> portion as we will need this for our slash command.</li>\n</ul>\n<p><img alt=\"Full configuration\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566668484/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_1.41.05_PM.png\" /></p>\n<h3>Slash Command App</h3>\n<p>Now we need to add and app for the slash command configuration.</p>\n<p><img alt=\"Slash Command Search\" src=\"https://res.cloudinary.com/ajonp/image/upload/v1566667140/ajonp-ajonp-com/blog/Screen_Shot_2019-08-24_at_12.49.28_PM.png\" /></p>\n<p>Put in the URL your service url or you can use ours -&gt; <code>https://us-central1-ajonp-slack-slap.cloudfunctions.net/api/slap?callback=YOURCALLBACK</code>.</p>\n<p>Now you have a working bot with whom you can interact, but it is a private communication between you and him, so you could say that it is not that fun. Let’s make it more fun!</p>\n<ul>\n<li>Take the part after <code>services</code>, as in the above example it will be -&gt; <code>/T2UR5KNQ2/BMNTDRAG0/mPToTmuARk2BqYhn93Izzbbb</code></li>\n<li>Go back to Slash Command and edit the URL to add the token part from above so it should be at the end something like <code>https://us-central1-ajonp-slack-slap.cloudfunctions.net/api/slap?callback=/T2UR5KNQ2/BMNTDRAG0/mPToTmuARk2BqYhn93Izzbbb</code>.</li>\n</ul>\n<p>BTW replace <code>https://us-central1-ajonp-slack-slap.cloudfunctions.net/api</code> with your url, or feel free to use this one.</p>\n<h2>Usage in Slack</h2>\n<p>In the easiest form you can just type:</p>\n<p><code>/slap @chouse</code></p>\n<p>This will tell slapbot to give Chris a big ol’ slap with a fish emoji. You can also supply your own emoji by typing:</p>\n<p><code>/slap @chouse :hot_pepper:</code></p>\n<p>In this example, Chris will be slapped by the emoji 🌶. LOL!</p>\n<p>By default, the bot will also include some banter at the end. Read on to learn how to configure this.</p>\n<h2>Configuring the bot behaviour</h2>\n<ul>\n<li>To edit the random banter strings, change the <code>banterArray</code> variable in <code>helpers.js</code>.</li>\n<li>To remove the banter, remove the <code>banter</code> variable from the <code>text</code> property of <code>botPayload</code> in <code>server.js</code>.</li>\n<li>To change the bot name or icon, change the <code>user_name</code> and <code>icon_emoji</code> property of <code>botPayload</code> in <code>server.js</code>.</li>\n<li>To change the default emoji, change the <code>DEFAULT_EMOJI</code> variable in <code>constants.js</code>.</li>\n</ul>\n<p>Congratulations, enjoy slapping!</p>", "published": "2022-11-27T11:14:14.316Z", "lastEdited": "2022-11-27T11:14:14.316Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/codingcatdev/slap-someone-with-slack-commands-23oa", "stars": [], "saves": []}}, {"model": "main.post", "pk": 71, "fields": {"author": 226, "title": "Finally Letting Go of Tutorial Hell", "slug": "finally-letting-go-of-tutorial-hell-71", "description": "Ever since I realized that web developers would have to figure out a lot of stuff on their own, I've...", "content": "<p>Ever since I realized that web developers would have to figure out a lot of stuff on their own, I've let go of blind tutorial consumption. These days, I try to build projects entirely on my own. Even if I have to battle with bugs for days. There's an awesome feeling that comes with bringing a project into some level of completion.</p>\n<h2>What I've been working on</h2>\n<p>Basically, since I've learned a lot of JS, I felt that I should move unto React. But then, that's just an evil voice in this head of mine. Another voice tells me to build up to 20 projects using vanilla everything. I signed up for 30 days 30 sites and Daily UI. They weren't successfully done. Mostly because of school work and code fatigue. </p>\n<p>Anyways. I went back to an old tutorial project and decided to rebuild it from scratch. Though I didn't eventually do it all from my head. I learned even more things on my own and added more features to the web app. It's basically a color guessing game. Where you have to guess a color given its RGB values. It's hosted <a href=\"https://vicradon.github.io/color-guessing-game-redo/\">here</a> on a GitHub page.\n{% codepen https://codepen.io/vicradon/pen/dybvMbW %}</p>\n<p>I really want to work on more, real projects in the future. Preferably with other developers. I also want to start contributing to open source. Although that seems really big right now. Maybe one day, I'd have a story to tell about my developer journey. [Edit: I finally have a story to tell <a href=\"https://dev.to/vicradon/2-years-of-coding-my-journey-25pj\">here</a>] You can check out the code of the color guessing game <a href=\"https://github.com/Vicradon/color-guessing-game-redo/blob/master\">here</a>.</p>\n<h2>Edit</h2>\n<p>Seeing this post, It makes me reflect on my growth in the past year. Consistency still stands as the best way to grow.</p>", "published": "2022-11-27T11:14:17.371Z", "lastEdited": "2022-11-27T11:14:17.371Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160990.png", "source": "https://dev.to/vicradon/finally-letting-go-of-tutorial-hell-5fag", "stars": [226, 227, 228, 229, 230, 231, 232, 233, 234], "saves": [226, 229, 231, 232, 233, 234]}}, {"model": "main.post", "pk": 72, "fields": {"author": 235, "title": "The Basics: Paragraph Tag", "slug": "the-basics-paragraph-tag-72", "description": "&lt;p&gt; content &lt;/p&gt;  The &lt;p&gt; tag defines a paragraph. We use it to wrap to wrap text....", "content": "<p><code>&lt;p&gt; content &lt;/p&gt;</code></p>\n<p>The <code>&lt;p&gt;</code> tag defines a paragraph. We use it to wrap to wrap text.</p>\n<h2>The Basics: The Paragraph Tag</h2>\n<h2>Navigation</h2>\n<ul>\n<li><a href=\"#chapter-1\">Codepen Lesson</a></li>\n<li><a href=\"#chapter-2\">Video Walkthrough</a></li>\n<li><a href=\"#chapter-3\">Audio Walkthrough</a></li>\n<li><a href=\"#chapter-4\">Helpful Links</a></li>\n<li><a href=\"https://slides.com/lennyroyroy/deck#/9\" target=\"_blank\" class=\"button\">Link to Lesson Slide Deck</a></li>\n</ul>\n<h3>Codepen Lesson <a name=\"chapter-1\"></a></h3>\n<p>{% codepen https://codepen.io/lennyroycodes/pen/vwbXpJ default-tab=html,result %}</p>\n<iframe height=\"650\" style=\"width: 100%;\" scrolling=\"no\" title=\"The Basics: The Paragraph Tag\" src=\"//codepen.io/lennyroycodes/embed/preview/vwbXpJ/?height=300&theme-id=37020&default-tab=html,result&editable=true\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/lennyroycodes/pen/vwbXpJ/'>The Basics: The Paragraph Tag</a> by lennyroy\n  (<a href='https://codepen.io/lennyroycodes'>@lennyroycodes</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n<h3>Video Walkthrough <a name=\"chapter-2\"></a></h3>\n<p>Brief YouTube clip of the lesson.</p>\n<p>{% youtube 9RVf3nZi-jw %}</p>\n<iframe width=\"760\" height=\"515\" src=\"https://www.youtube.com/embed/9RVf3nZi-jw?autoplay=0&rel=0\" frameborder=\"0\" allow=\"accelerometer;encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n<h3>Audio Walkthrough <a name=\"chapter-3\"></a></h3>\n<p>Brief podcast episode of the lesson.</p>\n<iframe src=\"https://open.spotify.com/embed-podcast/episode/2k1PINTB0iVZ0fJeUZ5lUM\" width=\"100%\" height=\"232\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n\n<p>{% spotify spotify:episode:2k1PINTB0iVZ0fJeUZ5lUM %}\n* <a href=\"https://anchor.fm/lennyroy-robles4/episodes/The-Basics-Paragraph-Tag-e4gf5l\" target=\"_blank\">Podcast Link</a></p>\n<h3>Helpful Links <a name=\"chapter-4\"></a></h3>\n<ul>\n<li><a href=\"https://www.w3schools.com/html/html_paragraphs.asp\" target=\"_blank\">w3 Schools</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p\" target=\"_blank\">MDN</a></li>\n<li><a href=\"http://www.htmlbasictutor.ca/paragraph-tag.htm\" target=\"_blank\">HTML Tutor</a></li>\n<li><a href=\"https://slides.com/lennyroyroy/deck#/\" target=\"_blank\">Slide Deck</a></li>\n</ul>", "published": "2022-11-27T11:14:37.282Z", "lastEdited": "2022-11-27T11:14:37.282Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160994.png", "source": "https://dev.to/lennyroyroy/the-basics-paragraph-tag-nam", "stars": [], "saves": []}}, {"model": "main.post", "pk": 73, "fields": {"author": 236, "title": "Add to a Dictionary in D", "slug": "add-to-a-dictionary-in-d-73", "description": "Dictionary, hash table, associative array, map it has many names. The main challenge with dictionary...", "content": "<p>Dictionary, hash table, associative array, map it has many names. The main challenge with dictionary adds is more around nested associative arrays, are you going to be annoyed if I select a different name every time?</p>\n<p><code>dlang\nint[string] dict;\ndict[\"Key\"] = 55;</code></p>\n<p>There is a Dictionary literal in D. </p>\n<p><code>dlang\nauto data = [\"key\" : 55]</code></p>\n<p>but this is not good for adding data as it will replace the variable with a new object. However if you're nesting and the inner dictionary might be null it can be good to use for starting a dictionary.</p>\n<p><code>dlang\nstring[int][string] data;\ndata[\"hello\"] = [95: \"value\"];</code></p>", "published": "2022-11-27T11:14:41.092Z", "lastEdited": "2022-11-27T11:14:41.092Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160996.png", "source": "https://dev.to/jessekphillips/add-to-a-dictionary-in-d-ga4", "stars": [], "saves": []}}, {"model": "main.post", "pk": 74, "fields": {"author": 237, "title": "Two kinds of hackathon", "slug": "two-kinds-of-hackathon-74", "description": "After finishing the Makers bootcamp course, I've been jobhunting. While jobhunting can feel like a fu...", "content": "<p>After finishing the <a href=\"https://makers.tech\">Makers</a> bootcamp course, I've been jobhunting. While jobhunting can feel like a full-time job sometimes, I do make time for other things: namely going to meetups and participating in <em>hackathons</em>.</p>\n<p>In this post, I'd like to share with you my experiences. Broadly speaking, hackathons tend to be either <a href=\"#charitable-hackathons\">for charity</a> (i.e. non-competitive), or they can be <a href=\"#competitive-hackathons\">competitive</a>. I've done one of each so I want to take a look at their similarities and differences.</p>\n<h2>Why hackathons?</h2>\n<ul>\n<li>Apply what you know to <em>real</em> projects</li>\n<li>An antidote to impostor syndrome</li>\n<li>Get introduced to new skills and technologies</li>\n<li>Networking, meeting like-minded people and making friends</li>\n<li>Discover job opportunities</li>\n<li>Something interesting to talk about at job interviews</li>\n<li>It's fun!</li>\n</ul>\n<h2>What are hackathons?</h2>\n<blockquote>\n<p><em>Hackathon</em> (noun)\nA portmanteau of the words <em>hack</em> and <em>marathon</em>. An event where people come together and form teams to create real solutions to real problems.</p>\n</blockquote>\n<p>I tend to think of hackathons as intense 1-day or 2-day events at a physical venue. These events might also allow for some to participate remotely, but mainly you attend in person.</p>\n<p>There is usually a theme, around which will be defined possible problems to solve. Hackathon projects can be about creating something new, or they might be about extending something that already exists.</p>\n<p>From Makers, I've internalized ideas like agile, scrum, clean code, and TDD. Makers is all about TDD and robust, sustainable processes. So I did kind of instinctively try to apply these principles of sustainable software engineering. Except here's the thing, hackathons are not your usual software development situation.</p>\n<p>My experience of hackathons is that they are much more focussed on prototyping a MVP or proof-of-concept (or proof-of-value). As far as I could tell, no one was using TDD. However, perhaps this is understandable given how little time you've got. Granted, two hackathons is hardly a statistically significant sample size, so maybe you'll have a different experience. </p>\n<p>The definition above is how I would personally define a hackathon. Code jams are similar but differ in terms of venue, duration and mode of participation. That said, there can be some overlap between hackathons and jams.</p>\n<p>If you would like to know more about code jams, I cover them briefly <a href=\"#bonus-code-jams\">below</a>.</p>\n<h3>Hackathon Tips</h3>\n<ul>\n<li>\n<p><strong>Just relax!</strong>\nWhen you turn up at your first hackathon, you might feel like I did and be unsure about what kind of contribution you'll be able to make. What I did was talk to people and think about the available projects, and think about where I can add the most value.</p>\n</li>\n<li>\n<p><strong>Have a web presence</strong>\nYour project should have a some kind of page or site so everyone can find out more about your project. If the project isn't a website or web app you can deploy, you can do what I did and set up a <a href=\"https://pages.github.com/\">GitHub Pages</a> (or similar) from your repository. It's quick and easy to set up, and will make it easier for other people to share or refer to it - e.g. our <a href=\"https://benknight135.github.io/wdd-asylum-claims/\"><em>Spotlight on asylum claims</em></a> project.</p>\n</li>\n<li>\n<p><strong>Ask questions</strong>\nDon't be afraid to ask questions, just as if you were working on a project in your day-job and you needed to clarify something.</p>\n</li>\n<li>\n<p><strong>Prepare your presentation</strong>\nI found this was the most difficult part. Especially if you are only allowed 5 minutes for the presentation. Allow enough time to prepare!</p>\n</li>\n<li>\n<p><strong>Have fun</strong>\nThe most important thing. Hackathons are intense even if you're not taking part in a competitive one, but remember to enjoy the experience!</p>\n</li>\n</ul>\n<h3>Charitable hackathons</h3>\n<p>These are the non-competitive kind of hackathon, usually done in aid of charity or a good cause. My first hackathon was of this type.</p>\n<blockquote>\n<p><a href=\"https://womendrivendev.org/\">Women Driven Development</a>:\n<em>WDD brings gender minorities and leaders in tech together, to share knowledge, experiences and to create real connections, promoting sponsorship through hackathons, practical sessions and events.</em></p>\n<p><strong>Theme</strong>: <em>#TechItForward With Pride</em>\n<strong>Pre-hack</strong>: 17 July 2019\n<strong>Hack Day</strong>: 26 July 2019\n<strong>Venue</strong>: Expedia Group</p>\n</blockquote>\n<p>We worked on a data science project examining patterns/trends in the outcomes of asylum claims made on the basis of sexual orientation or gender identity. I had a data engineering role working on a Python web scraper, helping to define regular expressions.</p>\n<p>I was glad I set up a project website on GitHub Pages, because it lets us showcase our project - and is something that is good for linking to, as in this <a href=\"https://medium.com/@pjhakra90/lgbtq-in-tech-a-safe-space-ad5177c1d79d\">write-up</a> by the organiser Mindy (of Expedia).</p>\n<p>Mindy and Expedia are amazing: on hack day there was barista coffee available all day, the food was good, and they even booked us a room for a <em>post-hack</em> session so our team could meet up again and do some more work on the project.</p>\n<p>Three charities were represented at the hackathon but I chose the project proposed by another attendee because I felt I could contribute more value as one of four, than as one of seven or eight.</p>\n<p>I think I prefer this kind of hackathon. Somehow it felt more relaxed.</p>\n<h3>Competitive hackathons</h3>\n<p>And this was my second hackathon.</p>\n<blockquote>\n<p><a href=\"https://www.btng.tech\">BTNG</a>:\n<em>BTNG is a non-profit organisation committed to accelerating innovation for the Nigerian Tech Space.</em></p>\n<p><strong>Theme</strong>: <em>Curbing the Effect of Brain-Drain in Emerging Economies</em>\n<strong>Hackathon</strong>: Saturday, 3rd August 2019 &amp; Sunday, 4th August 2019\n<strong>Venue</strong>: Microsoft Reactor, London</p>\n</blockquote>\n<p>We called our project <em>FaaSTrac</em> - think FaaS as in <a href=\"https://www.google.com/search?q=farming%20as%20a%20service\">Farming-as-a-Service</a>, which I learned is actually a thing. The idea is to provide affordable access to farming equipment for subsistence and community farmers on a pay per use basis.</p>\n<p>This was a chance for me to take up a frontend role. I produced an interactive HTML/CSS demo of our solution, based on a Bootstrap-based template our mentor had recommended to us.</p>\n<p>With there being prizes on offer, there was a much greater turn out for this one. I think there were three times as many people at this hackathon than there were at the WDD one, 90:30. Competitive hackathons usually have corporate sponsors - as was the case for this one - or companies may run hackathons themselves.</p>\n<p>Since there are potential prizes involved, the rules of this hackathon specified a maximum team size.</p>\n<h2>Bonus: Code Jams</h2>\n<p>By this part of my post, you have some idea of what a hackathon is. If hackathons sound good to you, you may also like to take a look at <strong><em>code jams</em></strong>. Code jams usually run over a longer period of time, and are usually online rather than requiring attendance at a physical venue.</p>\n<p>Solo entries may be more common due to the remote nature of the event. Indeed, one of Google's coding competitions - their <a href=\"https://codingcompetitions.withgoogle.com/codejam\">Code Jam</a> is a solo event.</p>\n<p>Due to the greater time commitment, I haven't taken part in any jams recently as I don't think I'd be able to give it my best. Although, all those years ago when I was a university student, I did take part in <a href=\"https://imaginecup.microsoft.com/\">Microsoft's Imagine Cup</a> competitions - any school/college/university students reading this post might like to check it out.</p>\n<p>The structure of the Imagine Cup competition could have changed since I took part in it but as I recall, your team has <em>months</em> to create and submit your entry. And then if you make it to the National Finals (or even World Finals), you have to prepare and present your pitches - think <a href=\"https://en.wikipedia.org/wiki/Dragons%27_Den_(British_TV_programme)\"><em>Dragon's Den</em></a>.</p>\n<p>I definitely want to do one of the <a href=\"https://itch.io/jams\">itch.io Game Jams</a>. </p>\n<p>Down the line, I also plan to try <a href=\"https://codingcompetitions.withgoogle.com/\">Google's coding competitions</a>, beginning with the easier(?) <a href=\"https://codingcompetitions.withgoogle.com/kickstart\">Kick Start</a>.</p>\n<h2>Finding hackathons</h2>\n<p>Here are some good places to look. Obviously if you're not based in London, search for your own location. </p>\n<ul>\n<li><a href=\"https://www.meetup.com/UK-Hackathons-and-Jams/\">Meetup: Hackathons and Jams UK</a></li>\n<li><a href=\"https://www.eventbrite.co.uk/d/united-kingdom--london/hackathon/\">Eventbrite: London, United Kingdom Hackathon Events</a></li>\n<li><em>Or search on your favourite search engine</em></li>\n</ul>\n<h2>Further reading</h2>\n<ul>\n<li><a href=\"https://www.hackerearth.com/hackathon/info/participant/\">Hackathon 101 For participants</a></li>\n<li><a href=\"https://www.cleverism.com/guide-to-hackathon/\">Guide to Hackathon – What, Why, How and Examples</a></li>\n</ul>\n<hr />\n<p><em>Edit</em>: Just <em>refactoring</em> my blog post. No change in content.</p>", "published": "2022-11-27T11:14:45.484Z", "lastEdited": "2022-11-27T11:14:45.484Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160998.png", "source": "https://dev.to/dafuloth/two-kinds-of-hackathons-3ag7", "stars": [], "saves": []}}, {"model": "main.post", "pk": 75, "fields": {"author": 224, "title": "The Role Of Tech In Business Growth", "slug": "the-role-of-tech-in-business-growth-75", "description": "Some Tricks and Tips to Grow Your Business. ", "content": "<hr />\n<p>title:The Role Of Tech In Business Growth\npublished: True\ndescription: Some Tricks and Tips to Grow Your Business. \ntags: Technology Business</p>\n<hr />\n<p>Growing a business is challenging. Growth almost always refers to getting more sales, which requires a robust strategy. However, there are many principles to follow that result in growth. Consider a few proven methods to take any company to the next level.</p>\n<p>Lean on Technology</p>\n<p>You would be hard-pressed to find any successful companies these days that ignore technology. Some solutions can enhance </span><a href=\"https://www.thebalancesmb.com/how-to-technology-in-small-business-2951633.=\"font-weight: 400;\">every aspect</span></a><span style=\"font-weight: 400;\"> of a business. It's worth exploring options to find the services that drive more sales.</p>\n<p>A shortlist of invaluable programs include CRM, marketing automation, and analytics. Those are just scratching the service. There are programs to help every business become more productive, no matter which industry. Naturally, training your team will be the most crucial part of determining success. If they master the programs, they will do a more thorough job.</p>\n<p>Training and tools go hand in hand. Bringing in a brand new platform is always challenging, but with the proper education and tools in place, it won't take long to recoup the investment. Modern tech streamlines processes and easily justifies the expense with increasing efficiency. If your company has been holding out on upgrades, adding a significant new program will supercharge growth.</p>\n<p>Know Your Customers and Their Problems</p>\n<p>It's essential to dig in and </span><a href=\"https://smallbiztrends.com/2018/04/how-to-grow-your-small-business.html.=\"font-weight: 400;\">understand your customers</span></a><span style=\"font-weight: 400;\"> and their greatest needs. Companies that tap into that knowledge can offer products and services to match their requirements. Extensive research will teach you what the customers want and how your company can get it for them. There are many unfilled niches. Exploiting those can help drive revenues, with low competition.</p>\n<p>Knowing the customer's mindset also gives a glimpse into how much they'll pay for service. Study them and ask for feedback directly anytime there are questions. Most people are straightforward and will gladly give their opinions. It's worth listening and making a game-plan to appeal to their requests.</p>\n<p>Never Forget the Power of New Offerings</p>\n<p>Introducing new features and products to existing customers is a traditional method to drive sales. New customers bring in more revenue, and so does selling more stuff to existing ones. Those two principles are always in play for companies who grow year after year.</p>\n<p>They find ways to enlarge order sizes through up-sells while also bringing in brand new customers from competitors. Both tactics require marketing and advertising and a commitment to top-end growth. A relentless push for new business is what separates successful companies from failing enterprises.</p>\n<p>Use the Proper Legal Framework</p>\n<p>Setting up and maintaining the correct legal framework will save business owners a lot of headaches. The corporate form and the legal structure work to protect the company and customers. Legal fees are not something most companies want to pay, but there's no avoiding the need for agreements.</p>\n<p>It's not nearly as difficult to get affordable legal work as it once was. All kinds of reliable services are available online, reducing the costs for businesses. No matter which type of contract you need, you can find it. It's no longer a challenge to find services like </span><a href=\"https://naegeliusa.com/portland/\"font-weight: 400;\">Portland court reporters</span></a><span style=\"font-weight: 400;\">. when you want to fill in the blanks of your legal framework.</p>\n<p>Positive Attitudes Fuel Growth</p>\n<p>It may be worth teaching your team how to think positive. Most people aren't aware of how challenging it can be, especially in a tense environment. Teamwork is vital, but so is the idea that things are working well and everyone is on the same page.</p>\n<p>Team building exercises help create long-lasting bonds. It's worth doing them now and again to keep spirits high. If you're not great at that, bring in third parties who specialize in recharging everyone's batter. Motivation is not something that lasts forever. Instead, it will wane if nobody energizes the employees. Growth requires motivated employees who want to push themselves further every day. That comes from a constant stream of encouraging words and a positive management style.   </p>", "published": "2022-11-27T11:14:47.713Z", "lastEdited": "2022-11-27T11:14:47.713Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/160999.png", "source": "https://dev.to/brettclawson75/the-role-of-tech-in-business-growth-1edi", "stars": [], "saves": []}}, {"model": "main.post", "pk": 76, "fields": {"author": 238, "title": "Usando Scrapy para obter metadados das músicas dos Parcels através do Genius", "slug": "usando-scrapy-para-obter-metadados-das-musicas-dos-parcels-atraves-do-genius-76", "description": "Uso de webcrawler para extração de metadados de músicas", "content": "<hr />\n<p>title: Usando Scrapy para obter metadados das músicas dos Parcels através do Genius\npublished: true\ndescription: Uso de webcrawler para extração de metadados de músicas\ntags: crawling, music, ptbr, scrapy</p>\n<hr />\n<p>Você já quis obter dados de um serviço que não disponibiliza uma API? Se você faz Computação na UFCG, provavelmente já escutou alguém falando do bot de matrícula. Já perguntou como ele funciona? Pois bem, no post de hoje você aprenderá como é possível fazer essas coisinhas e poderá usar sua criatividade para brincar e explorar ainda mais.</p>\n<h2>Mr. Robot</h2>\n<p><img alt=\"\" src=\"https://media.giphy.com/media/l0IyiADcZ3Ecjrn5m/giphy.gif\" /></p>\n<p>Um <strong>web crawler</strong> pode ser definido como um script ou programa que é utilizado para acessar um website, extrair conteúdo e descobrir páginas relacionadas ao mesmo, repetindo o processo até que não existam mais páginas a ser pesquisadas.\nEles são muito importantes, pois as engines de busca os utilizam para retornar resultados eficientes; devido a isso, frequentemente, algumas pessoas se referem a eles como bots da internet. De uma forma superficial, você pode pensar no crawler como um carinha que faz requisições para as páginas que ele encontra e, à medida que percorre essas páginas, faz o parse do seu HTML.</p>\n<h2>Pré-Requisitos</h2>\n<p>Para conseguir reproduzir o que faremos nesse tutorial você precisará ter o Python 3 configurado. Uma alternativa é usar o <a href=\"https://www.digitalocean.com/community/tutorial_series/how-to-install-and-set-up-a-local-programming-environment-for-python-3\">virtualenv</a>, que possibilita a criação de um ambiente de desenvolvimento isolado.</p>\n<p>Além do Python 3, faremos uso do <a href=\"https://scrapy.org/\"><strong>Scrapy</strong></a>, um framework que possui as ferramentas necessárias para <strong>extrair</strong> dados de websites, <strong>processar</strong> os que você queira e <strong>armazená-los</strong> na estrutura de seu interesse. Apesar de ser possível construir um crawler usando módulos fornecidos pelo próprio Python, à medida que o seu projeto cresce, pode se tornar complicado gerenciar a execução do seu robôzinho, por isso faremos uso desse framework. Entretanto, caso você tenha interesse em conhecer outras alternativas, deixarei links nas referências.</p>\n<p>Para instalá-lo, utilize o índice de pacotes do Python(<a href=\"https://pypi.org/\"><code>PyPI</code></a>), através do seguinte comando:</p>\n<p><code>pip install Scrapy</code></p>\n<p>Feito isso, podemos dar início à nossa implementação.</p>\n<h2>Além das letras</h2>\n<p>Se você usa o Spotify, já viu que vez ou outra em algumas músicas são exibidas as letras e algumas informações interessantes que são extraídas do <a href=\"https://genius.com/\"><strong>Genius</strong></a>. Motivada em obter essas informações de uma banda que eu conheci recentemente, chamada <a href=\"https://open.spotify.com/artist/3oKRxpszQKUjjaHz388fVA\"><strong>Parcels</strong></a> (inclusive, fica aqui a sugestão: se você gosta de <em>Daft Punk</em>, provavelmente vai curtir a música deles), decidi construir esse crawler.</p>\n<p><img alt=\"\" src=\"https://spotifysupport.freetls.fastly.net/article-gallery/articles2/android/android_behind_the_lyrics.png\" /></p>\n<p>A primeira coisa que um crawler precisa é de um ponto inicial, também chamado de <strong>seed</strong>, que será usado para iniciar a extração dos conteúdos. No nosso caso, esse ponto será a página da banda no Genius (<a href=\"https://genius.com/artists/Parcels\">essa aqui</a>).</p>\n<p>Uma vez que temos isso, podemos iniciar a construção do nosso robôzinho. Crie um arquivo python chamado <code>genius.py</code>, que possui o seguinte conteúdo:</p>\n<p>```python\nimport scrapy</p>\n<p>class GeniusSpider(scrapy.Spider):\n    name = \"genius\"\n    start_urls = ['https://genius.com/artists/Parcels']</p>\n<p>```</p>\n<p>Primeiro, importamos o <strong>Scrapy</strong> para ter acesso às funcionalidades que esse módulo fornece. Em seguida, criamos um classe chamada <code>GeniusSpider</code>, baseada na <code>Spider</code> do Scrapy; é ela que define quais métodos estamos hábeis a usar, métodos estes que poderão nos auxiliar durante a execução do crawler. Por fim, definimos o nome do spider como <strong>genius</strong> e o nosso <em>seed</em> como sendo a página dos Parcels.</p>\n<p>Diferentemente do que fazemos para executar scripts em Python, usaremos o comando que o próprio Scrapy provê por meio da sua CLI:</p>\n<p><code>scrapy runspider genius</code></p>\n<p><img alt=\"\" src=\"https://media.giphy.com/media/J5vyIVNU6PI2QVVMm7/source.gif\" /></p>\n<p>Certo, temos várias letrinhas bonitinhas e outras nem tanto, mas o que tudo isso quer dizer?</p>\n<ol>\n<li>O Scrapy carregou e configurou o que precisava para iniciar;</li>\n<li>Requisitou a url que definimos no <code>start_urls</code>, e baixou o seu conteúdo;</li>\n<li>Repassou esse conteúdo para um método parse. Como não o tínhamos criado, nada aconteceu e ele finalizou a execução.</li>\n</ol>\n<h2>Extraindo metadados</h2>\n<p>O próximo passo é definir <strong>como</strong> o Scrapy deve extrair o conteúdo: fazemos isso definindo o método <strong>parse</strong>. Nesse passo, é importante que você entenda como estão organizados os elementos da sua página, pois será essencial para transmitir ao crawler quais locais ele deve <strong>raspar</strong> quando extrair a página.</p>\n<p><img alt=\"\" src=\"https://i.imgur.com/YJ9G6sg.png\" /></p>\n<p>Analisando a imagem acima, você pode ver que à sua direita existe uma listagem de cards com as músicas populares que, quando clicados, nos levam ao conteúdo que queremos. Dessa forma, esse deve ser o local de onde nosso crawler irá extrair os links.</p>\n<p>O Scrapy extrai o conteúdo através de seletores, que são \"padrões\" ou \"modelos\" que casam com os elementos de uma árvore do documento e portanto podem ser usados para selecionar os nós de um documento HTML. Para conseguir fazer isso, o Scrapy fornece duas formas: através do Xpath e através de seletores CSS; usaremos os seletores CSS por questão de simplicidade.</p>\n<p>Usando o inspetor do meu browser para analisar quais os nós que contêm esse link e então formar o nosso seletor, consegui notar que o elemento que contém essa lista de cards é uma div. Veja no GIF:</p>\n<p>```html</p>\n<div class=\"mini_card_grid-song\">\n  <a href=\"...\">...</a>\n</div>\n<p>```</p>\n<p><img alt=\"\" src=\"https://media.giphy.com/media/IfgHqsThQhDxkhy6C5/source.gif\" /></p>\n<p>Sendo assim, podemos informar ao <strong>Scrapy</strong> que ele deve obter algo como:</p>\n<p><code>div.mini_clard_grid-song a::attr(href)</code></p>\n<p>Isso indica que queremos os links que são filhos de um elemento da classe <code>mini_card_grid-song</code>, por isso o <code>.</code> (como em CSS). Além disso, adicionamos esse trecho <code>::attr(href)</code> depois da tag <code>a</code>, porque se definíssemos o padrão apenas com a tag teríamos todo o nó HTML, e não apenas a url.</p>\n<p>Para entender melhor sobre os seletores CSS, veja <a href=\"https://docs.scrapy.org/en/latest/topics/selectors.html\">esse link</a> da documentação.</p>\n<p>Assim, podemos construir nosso método:</p>\n<p><code>python\n def parse(self, response):\n        songs_urls = response.css('div.mini_card_grid-song a::attr(href)').getall()\n        for song_url in songs_urls:\n            yield scrapy.Request(url=song_url, callback=self.parse_lyrics_page)</code></p>\n<p>O método é composto por um parâmetro <strong>response</strong>, que indica o conteúdo obtido após o crawler ter requisitado nossa url inicial. Feito isso, temos as urls das músicas sendo obtidas a partir do nosso seletor; essa lista de urls que o crawler requisitará é chamada de <strong>frontier</strong>. É importante ressaltar que usamos o <code>getAll()</code>, porque queremos extrair <strong>todos</strong> os seletores que casarem com o padrão que passamos, mas às vezes estamos interessados apenas na primeira ocorrência e podemos fazer uso do <code>get()</code>. Uma vez que temos as urls, fazemos as requisições, passando a url e uma <strong>callback</strong>, que é uma função que será executada após o crawler fazer download da url que passamos.</p>\n<p>Ótimo, conseguimos alcançar as páginas das nossas músicas, mas depois que chegamos nelas, o que faremos? Seguimos um processo muito parecido com o anterior, diferindo apenas que, ao invés de tentar extrair links, poderemos extrair as informações desejadas. Do passo anterior, vemos que o método que será executado após ser consultada a página da música é o <code>parse_lyrics_page</code>, então adicione esse trecho ao seu arquivo:</p>\n<p>```python</p>\n<pre><code>def parse_lyrics_page(self, response):\n    title = response.css('div.song_body-lyrics h2::text').get()\n    song_metadata = response.css('div.rich_text_formatting p::text').getall()\n    artists = set(response.css('span.metadata_unit-info a::text').getall())\n    lyric = response.css('div.lyrics p::text').getall()\n    annotations_ids = response.css('a::attr(annotation-fragment)').getall()\n\n    item = {\n        'title': title,\n        'artists': artists,\n        'lyric': lyric,\n        'metadata': song_metadata,\n        'snippet_lyric': [],\n        'annotations': []\n    }\n\n    if annotations_ids:\n        return self.get_annotations(response, annotations_ids, item)\n    else:\n        return item\n\ndef get_annotations(self, response, annotations_ids, item):\n    for annotation_id in annotations_ids:\n        url = urljoin(response.url, annotation_id)\n        yield scrapy.Request(\n            url=url,\n            callback=self.parse_annotation_page,\n            meta={'item': item}\n</code></pre>\n<p>)\n```</p>\n<p>Muita coisa, né? Mas vamos por partes, como diria Jack.</p>\n<p>Para extração das informações básicas como os artistas, a letra, o título e os metadados, não temos nenhuma novidade em relação ao que fizemos na extração dos links, já que só precisamos fornecer o seletor e ele irá obter a informação.</p>\n<p>No entanto, as anotações seguem um comportamento diferente. Olhando a página, você verá que os elementos que deveriam conter as informações de anotações das músicas contém apenas um identificador, que redireciona para outra página que abriga o conteúdo delas. Então, o que estamos fazendo é: </p>\n<p>Se existem anotações, obtenha seus ids e, para cada id obtido, concatene a nossa url inicial: </p>\n<p><code>urljoin(response.url, annotation_id)</code></p>\n<p>E, em seguida, fazemos uma requisição para cada um deles. Mas espere, essa requisição tem algo que ainda não vimos antes: um parâmetro chamado <code>meta</code>.</p>\n<p><img alt=\"\" src=\"https://media.giphy.com/media/a5viI92PAF89q/giphy.gif\" /></p>\n<p>O <code>meta</code> é a forma que o Scrapy provê para que consigamos nos comunicar entre uma página e outra. Então, o que estamos querendo dizer é que toda vez que ele consultar as páginas das anotações, leve consigo as informações que já extraímos dessa. Isso será útil para unirmos os dois objetos e retornamos os resultados.</p>\n<p>Agora que você está na página de anotações, encontre os seletores das anotações e retorne o resultado, e pronto, você terá feito o crawler. Deve ficar algo como mostrado no trecho abaixo:</p>\n<p>```python\n    def parse_annotation_page(self, response):\n        snippet_lyric = response.css(\"meta[property='og:title']::attr(content)\").getall()\n        annotations = response.css(\"meta[property='og:description']::attr(content)\").getall()\n        item = response.meta['item']\n        item['snippet_lyric'] = snippet_lyric\n        item['annotations']= annotations</p>\n<pre><code>return item\n</code></pre>\n<p>```</p>\n<p>Caso não existam anotações, ele já retornará o resultado, que é o objeto com as informações que obtivemos na primeira página. Para salvar o que coletamos em um <code>json</code>, usamos o comando:</p>\n<p><code>scrapy runspider genius -o parcels-lyrics.json</code></p>\n<p>Você terá algo com:\n{% gist https://gist.github.com/fanny/06aaad556fcba66abbfba4dd22e18f3c file=parcels-lyrics.json %}</p>\n<p><strong>Nota:</strong> É possível salvar o dado em outros formatos, como csv, dê uma olhada na <a href=\"https://docs.scrapy.org/en/latest/topics/feed-exports.html#topics-feed-exports\">documentação</a>.</p>\n<p>E é isso, você construiu o crawler! :hoo-ray:</p>\n<p><img alt=\"\" src=\"https://media.giphy.com/media/PSKAppO2LH56w/giphy.gif\" /></p>\n<h2>Considerações finais</h2>\n<p>Até aqui você aprendeu os conceitos básicos para construir um crawler. À medida que seu projeto expandir, você precisará lidar com outras coisas, como <em>politeness policies</em>, porque pense: se fizermos muitas requisições para um site, podemos sobrecarregá-lo e torná-lo indisponível por algum tempo para outros usuários. Leitura de sitemaps também são importantes para garantir que o crawler consiga obter efetivamente certos links que o website acredita ser essenciais, além de várias outras técnicas.</p>\n<p>Entretanto, agora que você já sabe o básico, me conta nos comentários alguma ideia que você pensa em construir! E se tiver qualquer dúvida ou sugestão, fique à vontade para adicionar comentários neste post ou trocar uma ideia comigo fora dele (minhas redes sociais estão mapeadas no meu perfil).</p>\n<p>E se quiser estar por dentro do que eu tô fazendo e escutando (música é realmente uma das minhas paixões além de Computação), me segue no <a href=\"https://open.spotify.com/user/anotherfanny\">Spotify</a> ou <a href=\"https://www.last.fm/pt/user/Fannyvieira25\">Last.fm</a> e <a href=\"https://github.com/fanny\">GitHub</a>.</p>\n<h2>Referências</h2>\n<h3>Tutoriais</h3>\n<ul>\n<li><a href=\"https://docs.scrapy.org/en/latest/intro/overview.html\">Documentacão do Scrapy</a>;  </li>\n<li><a href=\"https://www.datacamp.com/community/tutorials/making-web-crawlers-scrapy-python\">Fazendo web crawlers em Python - Inglês</a>;</li>\n<li><a href=\"https://medium.com/@marlessonsantana/utilizando-o-scrapy-do-python-para-monitoramento-em-sites-de-not%C3%ADcias-web-crawler-ebdf7f1e4966\">Utilizando o Scrapy do Python para monitoramento em sites de notícias - PTBR</a>.</li>\n</ul>\n<h3>Livros</h3>\n<ul>\n<li><a href=\"https://www.amazon.com.br/Learning-Scrapy-Dimitris-Kouzis-Loukas/dp/1784399787\">Learning Scrapy</a>; </li>\n<li><a href=\"https://www.amazon.com/Web-Scraping-Python-Collecting-Modern/dp/1491910291/ref=as_li_ss_tl?ie=UTF8&amp;qid=1469961194&amp;sr=8-1&amp;keywords=web+scraping+with+python&amp;linkCode=sl1&amp;tag=scraping06-20&amp;linkId=eda03663399eeff90133094d677e4cd4\">Web Scraping with Python</a>.</li>\n</ul>\n<h2>Obrigada</h2>\n<p>Muito obrigada pela leitura! Fique atento: em breve, teremos novos artigos de contribuidores do OpenDevUFCG aqui no dev.to. Acompanhe o OpenDevUFCG no <a href=\"https://www.twitter.com/OpenDevUFCG/\">Twitter</a>, no <a href=\"https://www.instagram.com/OpenDevUFCG/\">Instagram</a> e, claro, no <a href=\"https://www.github.com/OpenDevUFCG/\">GitHub</a>.</p>", "published": "2022-11-27T11:14:51.821Z", "lastEdited": "2022-11-27T11:14:51.821Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161000.png", "source": "https://dev.to/opendevufcg/usando-scrapy-para-obter-metadados-das-musicas-dos-parcels-atraves-do-genius-1dhj", "stars": [238, 239, 240, 241], "saves": [239, 238, 241]}}, {"model": "main.post", "pk": 77, "fields": {"author": 242, "title": "FFmpeg: Cut up andio/video", "slug": "ffmpeg-cut-up-andiovideo-77", "description": "With FFmpeg, it's able to manipulate audio or video files. Here shows an example to cut up mp3 into specific duration.", "content": "<hr />\n<p>title: FFmpeg: Cut up andio/video\npublished: true\ndescription: With FFmpeg, it's able to manipulate audio or video files. Here shows an example to cut up mp3 into specific duration.\ntags: ffmpeg, video, audio, manipulation</p>\n<hr />\n<p>With <a href=\"https://www.ffmpeg.org/\">FFmpeg</a>, it's able to manipulate audio or video files.\nHere shows an example to cut up mp3 into specific duration.</p>\n<p><code>shell\nffmpeg -i &lt;some-video.mp3&gt; -ss 00:00:22 -t 00:00:32 &lt;cut-up-some-video.mp3&gt;</code></p>\n<p><code>-ss</code> is the start position. <code>-t</code> is the <strong>duration</strong> (not the end position).\nThe command above brings that of 00:00:22-00:00:53 (32 sec), instead of 00:00:22-00:00:32 (10 sec).</p>\n<p>The official documentation on its options is <a href=\"https://ffmpeg.org/ffmpeg.html#Main-options\">here</a>.</p>", "published": "2022-11-27T11:15:02.250Z", "lastEdited": "2022-11-27T11:15:02.250Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161004.png", "source": "https://dev.to/nabbisen/ffmpeg-cut-up-andio-video-29p6", "stars": [], "saves": []}}, {"model": "main.post", "pk": 78, "fields": {"author": 243, "title": "Do you use web assembly? Help me with this 🐙", "slug": "do-you-use-web-assembly-help-me-with-this-78", "description": "Hi everyone, I have a question about web assembly (I don't know if someone here use it), the thing is...", "content": "<hr />\n<p>title: Do you use web assembly? Help me with this 🐙\npublished: true\ndescription: \ntags: webassembly, Javascript, question, rust</p>\n<hr />\n<p>Hi everyone, I have a question about web assembly (I don't know if someone here use it), the thing is that, why this technology has its own variations in other languages? I mean, I can write web assembly code in Python, Java, JavaScript, c#, rust, etc... But this affect the result? If I write my code in Python, will affect the performance if I write the same in rust? Or the output in both would be the same? I'm asking this because I have one idea, which is, all the heavy code that my server needs to be care, I can write in web assembly and the front end does the heavy stuff. Like for example, if I want to rotate an image and then add it some colors, instead of using a lambda function or whatever that needs a server, I can use this awesome front-end technology! What do you think? Thanks!</p>", "published": "2022-11-27T11:15:09.189Z", "lastEdited": "2022-11-27T11:15:09.189Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161010.png", "source": "https://dev.to/andresmontoyain/do-you-use-web-assembly-help-me-with-this-12ce", "stars": [244, 243], "saves": [243]}}, {"model": "main.post", "pk": 79, "fields": {"author": 245, "title": "Dotnet Core Webapi With Microsoft SQL Server in Docker - Part 1", "slug": "dotnet-core-webapi-with-microsoft-sql-server-in-docker-part-1-79", "description": "", "content": "<hr />\n<p>title: Dotnet Core Webapi With Microsoft SQL Server in Docker - Part 1\npublished: true\ndescription: \ntags: dotnet core, webapi, mssql, docker</p>\n<hr />\n<blockquote>\n<p>This blog post first appeared on <a href=\"https://blog.mrcsharp.com.au\">my blog</a></p>\n</blockquote>\n<p>I have been hearing a lot of people talking about docker and all of the benefits it introduces and they got me interested in the technology. However, I only recently managed to get some time to play around with Docker.</p>\n<p>What I attempted to do was to take a DotNet Core WebApi project that I'm building and containerize it. The WebApi project was build initially with no intention of containerizing and it was surprising how easy it is to get it up and running in docker.</p>\n<p>The project also uses a Microsoft SQL database and for me, this was a bit challenging to setup and get the WebApi to communicate with it properly.</p>\n<p>In this post, I'll explain the steps I took to set it up with sample dockerfiles and docker compose configurations.</p>\n<h2>What do you need?</h2>\n<p>To get started, you'll need to install docker on you development machine. I'm using a Windows 10 Machine. You can read the <a href=\"https://docs.docker.com/docker-for-windows/install/\">install instructions here</a></p>\n<h2>Creating the DockerFile for the WebApi Project</h2>\n<p>The dockerfile will take care of setting up the image for the WebApi project. If you don't know what docker images are, I strongly suggest reading the Docker <a href=\"https://docs.docker.com/get-started/\">Getting Started section here</a>.</p>\n<p>In this dockerfile we will execute the same commands we do on our machine when building and publishing any dotnet core application via the <em>dotnet</em> cli.</p>\n<p>Usually we do this (at the root of the project):</p>\n<p>```</p>\n<blockquote>\n<p>dotnet restore\ndotnet publish -c Release -o out</p>\n</blockquote>\n<p>```</p>\n<p>then when we inspect the <em>out</em> directory in the project root, we will find the compiled assemblies of our project and we can then simply execute this command to run the application/webapi:</p>\n<p>```</p>\n<blockquote>\n<p>dotnet MyProjectEntryPointAssembly.dll</p>\n</blockquote>\n<p>```</p>\n<p>But there are a few extra command we will execute in the dockerfile to setup the base image and the entrypoint for the resulting image.</p>\n<p>First, let's look at my project's folder structure:</p>\n<pre><code>/root\n    - src\n        - webapi\n    - dockerfile\n    - docker-compose.yml\n</code></pre>\n<p>Let's look at my dockerfile and I'll explain what every command is doing:</p>\n<p><code>FROM mcr.microsoft.com/dotnet/core/sdk as build\nWORKDIR /app\nCOPY src/. .\nRUN dotnet restore\nRUN dotnet publish -c Debug -o out\nFROM mcr.microsoft.com/dotnet/core/aspnet as runtime\nWORKDIR /app\nCOPY --from=build /app/webapi/out ./\nEXPOSE 80\nCMD [ \"dotnet\", \"webapi.dll\" ]</code></p>\n<p>Ok, let's start with the first line:</p>\n<p><code>FROM mcr.microsoft.com/dotnet/core/sdk as build</code></p>\n<p>This is telling docker that we are going to use the <em>DotNet Core SDK</em> image from microsoft as our base image. You can find the image <a href=\"https://hub.docker.com/_/microsoft-dotnet-core-sdk\">here in Docker Hub</a>.</p>\n<p>The <em>... as build</em> is an alias given to a build stage. This makes it easier when you want to reference a build stage from another one as it is more friendly to work with names. By default docker doesn't name build stages. You can still reference build stages that don't have an alias defined by using then integer number which starts from <em>0</em> for the first build stage.</p>\n<p>The next step in the dockerfile is to set a working directory within the image we just pulled from docker hub. The working directory name can be anything and docker will create that directory if it doesn't already exist in the base image. I chose to name my working directory as <em>App</em> but feel free to use whatever name you like. To set a working directory, we execute this command:</p>\n<p><code>WORKDIR /app</code></p>\n<p>Next, we need to copy our project files from our local dev environemnt to the base image. You can think of the base image we just pulled as a Virtual Machine (they aren't actually VMs but this might help when working with them) that docker will initialize and run so it won't have access to our files. We copy the files to the base image by executing this comand:</p>\n<p><code>COPY src/. .</code></p>\n<p>This is copying everything inside the /src directory into the working directory we specified earlier.</p>\n<p>Ok, so now that we have all the source code in the base image we're ready to build it. Since we are still inside the DotNet Core SDK image, the <em>dotnet</em> command is available in the shell, so we will tell docker to execute a couple of <em>dotnet</em> cli commands for us to build the project:</p>\n<p><code>RUN dotnet restore\nRUN dotnet publish -c Debug -o out</code></p>\n<p>The <em>RUN</em> keyword here is telling docker to execute the following commands in the shell of the base image. So this will restore nuget packages and then performs the publish command and outputs the results to the <em>out</em> directory. Remember, we are still in the work directory we specified so everything is happening under <em>/app</em>, our code is in <em>/app/webapi/.</em> and the outout folder will be in <em>/app/webapi/out/.</em></p>\n<p>Awesome! now that we have successfully got our code to compile and publish (inside the base image) we will move to the next build stage.</p>\n<p>The reason we have multiple stages in this dockerfile and the reason to use them (at least in this case) is to avoid creating big images.</p>\n<p>The Microsoft DotNet Core SDK base image is about <em>400MB</em>. While we can build the project and also run it inside this image, using <em>~400MB</em> + <em>~75MB</em> for my webapi project seems like a waste when we can instead use the Microsoft DotNet Core Runtime base image which is much smaller in size to run my webapi.</p>\n<p>To start a new stage in the dockerfile we use the <em>FROM</em> statement. For this stage, we will pull the Microsoft DotNet Core Runtime image <a href=\"https://hub.docker.com/_/microsoft-dotnet-core-aspnet/\">found here</a> by executing this command:</p>\n<p><code>FROM mcr.microsoft.com/dotnet/core/aspnet as runtime</code></p>\n<p>we name this stage as <em>runtime</em> and we set its working directory also to <em>/app</em>:</p>\n<p><code>WORKDIR /app</code></p>\n<p>Next step we need to grab the build outout files from the previous stage and copy it over to the currect stage. We do this by executing this command:</p>\n<p><code>COPY --from=build /app/webapi/out ./</code>\nThe <em>--from=[stage name]</em> is specifying the source of the files to be from another image/stage. <em>/app/webapi/out</em> is the source of the files in that step and <em>./</em> is the destination (the root of the working directory in this step).</p>\n<p>Once the copy is complete, and since this is a webapi project that will run on <em>port 80</em>, we need to tell docker that we port 80 should be expesed to incoming network traffic:</p>\n<p><code>EXPOSE 80</code></p>\n<p>Simple, way too simple!</p>\n<p>The final command we run is literally running our webapi. To do this we execute:</p>\n<p><code>CMD [ \"dotnet\", \"webapi.dll\" ]</code></p>\n<p>Now that we have a complete dockerfile we can test it by using the docker cli to build the final image and running it.</p>\n<p>To do that, open a terminal, and set the working directory to the root of you project (where the dockerfile is located) and run:</p>\n<p><code>docker build --tag=MyWebApiProject .</code></p>\n<p>the <em>build</em> command will execute the commands in the dockerfile we created. <em>--tag=[name]</em> gives the resulting image a name. the period after the command sets the build context to the current directory. docker will attempt to find the dockerfile in the current context and all the commands inside the dockerfile will run within that context. This is important for when we copy the files to the SDK image as we are using relative paths. All relative paths will rely on the build context we set.</p>\n<p>If your build is successful, you will have a docker image stored on your machine.</p>\n<p>Use <em>docker image ls</em> to list the images on your machine. You can see the image you created and it's size.</p>\n<p>On my machine, the SDK image is <em>1.74GB</em> but the webapi image is only <em>283MB</em> because it is using the runtime image as per the multi-stage dockerfile above.</p>\n<p>Now it is time to run the containerized application and this is as simple as:</p>\n<p><code>docker run -p 5000:80 MyWebApiProject</code></p>\n<p><em>docker run</em> is the CLI command to run a containerized application's image.</p>\n<p>With <em>-p [OS port]:[Container port]</em> I'm are binding a port on my operating system (in this case port 5000) to the port we exposed earlier in the dockerfile (port 80). This binding will allow us to use HTTP REST Clients such as <a href=\"https://insomnia.rest/\">Insomnia</a> to send HTTP requests to the webapi application in the container.</p>\n<p>That's it! This is how I took an existing and under development DotNet Core WebApi project and containerized it in docker.</p>\n<p>In the next part, I'll explain how to setup a containerized MS-SQL server and create a docker swarm to have my WebApi project talking to the containerized MS-SQL server.</p>", "published": "2022-11-27T11:15:13.888Z", "lastEdited": "2022-11-27T11:15:13.888Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161011.png", "source": "https://dev.to/mrcsharp/dotnet-core-webapi-with-microsoft-sql-server-in-docker-part-1-2i4l", "stars": [], "saves": []}}, {"model": "main.post", "pk": 80, "fields": {"author": 246, "title": "Test Setup rails 5.2", "slug": "test-setup-rails-52-80", "description": "Capybara, Selenium and Devise   So have been looking at these three for quite some time. Mos...", "content": "<h1>Capybara, Selenium and Devise</h1>\n<p>So have been looking at these three for quite some time. Mostly in older versions of rails and as an after effect at the older version of these gems. </p>\n<p>Started working in a hobby project with rails 5.2 (why not rails 6?). This is what I had to do to make it all work.</p>\n<p>First things first, capybara and selenium come preinstalled.</p>\n<p>What else do you need:</p>\n<ul>\n<li>capybara-screenshot: Find the details <a href=\"https://github.com/mattheworiordan/capybara-screenshot\">here</a></li>\n<li>database_cleaner: Find the details <a href=\"https://github.com/DatabaseCleaner/database_cleaner\">here</a></li>\n</ul>\n<p>Capybara screenshot takes screenshots every time there is an error in your test and will help you when you scratch(pull out?) your head (hair?).</p>\n<p>database_cleaner is used to clean out test DB to start each test with a clean DB.</p>\n<p>Ok quickly moving on, where do you add the settings and what are the settings</p>\n<p><em>Assumption</em>: the Testing framework is RSpec</p>\n<h2>Capybara</h2>\n<p>In spec helper (rspec/spec_helper.rb) add the following at the very top</p>\n<p><code>require 'capybara/rspec'</code></p>\n<h2>Capybara Screenshot</h2>\n<p>In spec helper (rspec/spec_helper.rb) add the following right below require capybara</p>\n<p><code>require 'capybara-screenshot/rspec'</code></p>\n<h2>Selenium</h2>\n<p>In spec helper (rspec/spec_helper.rb) add the following below capybara-screeshot\n<code>require 'selenium-webdriver'</code></p>\n<h2>Database cleaner</h2>\n<p>Add a file inside rspec/support called database_cleaner.rb. Add the following inside the file.</p>\n<p>```\nRSpec.configure do |config|</p>\n<p>config.before(:suite) do\n    DatabaseCleaner.clean_with(:truncation)\n  end</p>\n<p>config.before(:each) do\n    DatabaseCleaner.strategy = :truncation\n  end</p>\n<p>config.before(:each, js: true) do\n    DatabaseCleaner.strategy = :truncation\n  end</p>\n<p>config.before(:each) do\n    DatabaseCleaner.start\n  end</p>\n<p>config.after(:each) do\n    DatabaseCleaner.clean\n  end\nend\n```</p>\n<p>Pay special attention to \n<code>config.before(:each) do\n  DatabaseCleaner.strategy = :truncation\nend</code>\nThis setting becomes important when we use selenium with devise to login by visiting the login page in a headless chrome(<em>More about this in another post</em>).</p>\n<p>Ok, now the main setting to make selenium work with capybara, inside spec helper, after the require statements add the following.\n```\nCapybara.default_driver = :selenium</p>\n<p>options = Selenium::WebDriver::Chrome::Options.new(\n  args: %w[headless disable-gpu no-sandbox disable-dev-shm-usage window-size=1600,1200 verbose]\n)</p>\n<p>Capybara.register_driver :selenium do |app|\n  Capybara::Selenium::Driver.new(app, browser: :chrome, options: options)\nend</p>\n<p>Capybara.javascript_driver = :selenium\n```\none by one now,</p>\n<ul>\n<li>we set the default driver for running tests on a headless browser as selenium. There are others, like <a href=\"https://github.com/teampoltergeist/poltergeist\">poltergeist</a></li>\n<li>Options that we choose for the browser that will run our test suite, <em>headless</em> part is important, you don't want the browser popping up for every test.</li>\n<li>Setting the javascript_driver to selenium to make capybara pay heed JS (the ajax and async goodness).</li>\n</ul>\n<p>Now that all the setting is done, when you actually write a test for logging in, how will it run?</p>\n<p>In order for all this to work, inside rspec/rails_helper.rb there is a setting</p>\n<p><code>config.use_transactional_fixtures</code> turn it off (= false). Selenium has no idea what happens in the transaction (details <a href=\"https://stackoverflow.com/questions/12326096/capybara-selenium-fault-and-redirect-example-com-when-without-everything-is-gre/12330557#12330557\">here</a> and <a href=\"https://stackoverflow.com/questions/6154687/rails-integration-test-with-selenium-as-webdriver-cant-sign-in\">here</a>) and because of this, all you get are errors for invalid logins.</p>\n<p>Remember the <strong>pay attention to this</strong> part in database settings, ya well if you don't make it truncation all this won't work. </p>\n<p>Why is that? Haven't dug deep enough to write about it yet, but expect an article soon.</p>\n<p>Alright, that's it for now. Later.</p>\n<p>Keep coding.</p>", "published": "2022-11-27T11:15:16.695Z", "lastEdited": "2022-11-27T11:15:16.695Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161013.png", "source": "https://dev.to/tallerguy/test-setup-rails-5-2-i5m", "stars": [], "saves": []}}, {"model": "main.post", "pk": 81, "fields": {"author": 247, "title": "I’m Starting a Newsletter!", "slug": "im-starting-a-newsletter-81", "description": "Subscribe to my newsletter and get an email every time I publish.", "content": "<hr />\n<p>title: I’m Starting a Newsletter!\npublished: true\ndescription: Subscribe to my newsletter and get an email every time I publish.\ntags: newsletter\ncover_image: https://firebasestorage.googleapis.com/v0/b/ashleemboyer-2018.appspot.com/o/images%2Fnewsletter.png?alt=media&amp;token=3520f578-4b74-4f84-b7bb-31dc5c093734</p>\n<hr />\n<p>Sign up to get an email every time I publish a new blog post. Hope to catch you in the e-box! 😊</p>\n<p>https://ashleemboyer.com/newsletter/</p>", "published": "2022-11-27T11:15:20.511Z", "lastEdited": "2022-11-27T11:15:20.511Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/ashleemboyer/i-m-starting-a-newsletter-17be", "stars": [], "saves": []}}, {"model": "main.post", "pk": 82, "fields": {"author": 248, "title": "Finding the Courage to Code", "slug": "finding-the-courage-to-code-82", "description": "Once I overheard someone describe a kid they met that knew he wanted to be a podiatrist 👣👨‍⚕️ at ag...", "content": "<hr />\n<p>title: Finding the Courage to Code\npublished: true\ntags: beginners, webdev, career, motivation\ncanonical_url: https://leewarrick.com/blog/the-courage-to-code/</p>\n<hr />\n<p><a href=\"https://leewarrick.com/blog/static/6d10004003ed837c7402cd1283b0d75b/971c4/roadsign.jpg\"><img alt=\"Photo of Lonely Winding Road Sign by Fabien Bazanegue\" src=\"https://leewarrick.com/blog/static/6d10004003ed837c7402cd1283b0d75b/a111b/roadsign.jpg\" title=\"Photo of Lonely Winding Road Sign by Fabien Bazanegue\" /></a></p>\n<p>Once I overheard someone describe a kid they met that knew he wanted to be a podiatrist 👣👨‍⚕️ at age 6. This story is not about that person.</p>\n<p>My life has been rife with indecision. In fact, a good friend once described me as the <em>“male Barbie of careers”</em>. Sure, I eventually found my way to coding, but it was a long, winding road.</p>\n<h2>The Early Years</h2>\n<p>As a kid, I always thought I would like to do …<em>stuff</em> with computers. I wasn’t quite sure what that stuff was, but I wanted to do it.</p>\n<p>What I <em>did</em> know, was that programming seemed dense and mystical. Actually I didn’t even really know what programming was. I basically thought it was like the movie “Hackers”.</p>\n<p>In elementary and middle school, my only exposure to computers was through playing Math Blaster, Oregon Trail, and a Super Mario typing game. In high school I took an introductory computer course (basically a Microsoft A+ certification class), and a web design class where we learned a little HTML.</p>\n<p>Writing math formula scripts on my graphing calculator was as close as I got to really coding something in grade school. Those miniature programs were silly, but also <em>exciting</em>.</p>\n<h2>Clueless in College</h2>\n<p>The smart kids in my high school seemed to be all applying and getting accepted to college. So I blindly followed suit.</p>\n<p>I applied and was accepted to the University of Florida as a chemical engineering student. I stuck with it for about a month before catching wind of what those folks actually do, then changed majors to Computer Science.</p>\n<p>I was going for it folks, I was going to pursue my <strong>dream</strong>.</p>\n<p>The first day of my intro to computer science class went like this:</p>\n<p>A lanky, disheveled man strode into the auditorium fifteen minutes late. He stood at the podium and addressed the class:</p>\n<p><em>“A little news in the life of Pete. I just found out my</em> <strong><em>former</em></strong> <em>best friend has been sleeping with my ex-wife.”</em></p>\n<p>Pete then proceeded to teach us binary, hexidecimal, and other very low-level computer science concepts. For homework, we had to solve small, boring puzzles with Java like <em>Given a number N, print a triangle of #‘s to the screen that is N wide and N tall.</em></p>\n<p>I stubbornly worked through those assignments. I coded in notepad.exe and ran my code with the windows command line. I didn’t know what an IDE was and I didn’t understand how this was going to add up to writing actual software.</p>\n<p>In class, there was one student up front that nodded along with everything the instructor said, answered every question, and giggled at every Java idiosyncracy that arose during the lecture.</p>\n<p>I <em>hated</em> that student. I hated him because I wished I <strong><em>was</em></strong> him. How did he know so much in an intro class? I felt so incredibly lost by comparison.</p>\n<p>I spent two semesters suffering through Java. Our final project of the second semester was hangman. I finished it while having absolutely no idea what I was doing.</p>\n<p>I thought, <em>“If I’ve spent a year learning to code, and this is how far I’ve come, how will I ever make anything useful?”</em></p>\n<h2>Succombing to Self-doubt</h2>\n<p><a href=\"https://leewarrick.com/blog/static/850489fa2701f344d35eca8247973d96/971c4/desert.jpg\"><img alt=\"Photo of a man walking through the desert by Dan Grinwis\" src=\"https://leewarrick.com/blog/static/850489fa2701f344d35eca8247973d96/a111b/desert.jpg\" title=\"Photo of a man walking through the desert by Dan Grinwis\" /></a></p>\n<p>I saw myself as hopelessly outmatched. I convinced myself that coding was for child prodigies and geniuses only seen on TV. I did all the mental gymnastics required to convince myself that I was the problem.</p>\n<p>I switched majors again and got my degree in Japanese language.（こんいちは皆さん！）But I doubted my language skills too. In my mind, I couldn’t possibly be good enough to work as a translator or interpreter.</p>\n<p>So I went back to school to be a firefighter. I reasoned that my father did it for 30 years, had a great retirement plan, and seemed to enjoy the job, so why shouldn’t I do the same?</p>\n<p>I somehow made it through fire school. Then I became an EMT and a Paramedic. I got hired. Soon I was keeping the roads hot with my lights and sirens blaring, kicking down doors and saving lives!</p>\n<p>Except it wasn’t like that at all. Most 911 calls are not emergencies—most are monotonous and mundane. And of the calls I ran, the 10% that <em>were</em> true emergencies still haunt me from time to time.</p>\n<p>And the pay was awful. I was exposed to a lot of chemicals, disease, and stress for about $14 an hour.</p>\n<p>I convinced myself I needed to do better. I went back to school and became a registered nurse, and worked in intensive care and the emergency room.</p>\n<p>My situation had improved: now I was being exposed to a lot of chemicals, disease, and stress for about $25 an hour.</p>\n<h2>Changing Course</h2>\n<p>At some point I found myself looking back on my life and wondering how I ended up so far from my dreams. As a kid, I wanted to make things. I wanted to code.</p>\n<p>Sometimes I’d find myself sitting at the nurse’s station absent-mindedly clicking through Codecademy or freeCodeCamp tutorials.</p>\n<p>Then I discovered coding bootcamps.</p>\n<p>There’s a lot of noise out there about bootcamps. You’d be forgiven for thinking that they’re the ponzi scheme of our time after doing a little research on the internet.</p>\n<p>The risk didn’t matter though. I saw it as an opportunity to escape. I signed up.</p>\n<p>Going to code bootcamp turned out to be a transformative experience for a few reasons:</p>\n<ol>\n<li><strong>I was surrounded by career changers.</strong> When we introduced ourselves on the first day I found myself in the company of marketing executives, fast-food workers, database administrators, school teachers, and even computer science undergrads.</li>\n<li><strong>Everyone struggled to get their code to run.</strong> Sure, some were better than others, but absolutely everyone had difficulties in class and doing the homework.</li>\n<li><strong>We built fun things.</strong> Not once did I have to print a triangle with <code>for</code> loops. We built personal websites, games, toy apps, and more. I could feel myself making progress. I actually enjoyed learning.</li>\n<li><strong>We were encouraged to find our own answers.</strong> From day one we were told to “google it.” It was our mantra. We weren’t expected to know everything, but we had to be able to search for the answers.</li>\n</ol>\n<p>So there I was with like-minded, indecisive people that were struggling to learn, having fun building things, and just as clueless as I was. It was so radically different from that college class I had taken fifteen years ago. It was invigorating.</p>\n<h2>Getting Hired as a Developer</h2>\n<p><a href=\"https://leewarrick.com/blog/static/611c7daf802a5a15a05cc4c0bd3df098/971c4/climbing.jpg\"><img alt=\"Photo of man climbing a mountain in Yosemite by Billy Onjea\" src=\"https://leewarrick.com/blog/static/611c7daf802a5a15a05cc4c0bd3df098/a111b/climbing.jpg\" title=\"Photo of man climbing a mountain in Yosemite by Billy Onjea\" /></a></p>\n<p>I worked very, very hard in class. I knew that this was my chance to change course. I took it very seriously.</p>\n<p>I also knew going in that getting a job was not guaranteed or even likely.</p>\n<p>Most employers don’t like junior developers, and they like bootcamp grads even less. They view juniors as a liability not worth the money they’ll save on a lower salary.</p>\n<p>I needed to stand out in a positive way. I needed to convince someone to give me a chance despite my inexperience.</p>\n<p>The bootcamp did not bless me with a great resume nor a great portfolio, and as a brand new developer living an hour outside of town, I had no network.</p>\n<p>So I went to meetups. I got on a developer slack channel in town and asked a boatload of stupid questions. I worked tirelessly on my resume and portfolio, soliciting feedback from anyone willing to give it. And all the while I machine-gunned my resume to every developer job on indeed that I was remotely qualified for.</p>\n<p>Eventually I saw a job-listing on slack. I messaged the poster, sent my resume and portfolio, and setup an interview.</p>\n<p>In that interview, I was calm and collected. I made them laugh and answered their questions. My past careers had taught me to maintain my composure and stay calm. One of my interviewers even remarked how it would be great to have a nurse on the team.</p>\n<p>I got the job. I quit nursing and became a fulltime developer.</p>\n<h2>Words of Wisdom</h2>\n<p>Here’s what I wish someone had told me many years ago at the start of this journey:</p>\n<ul>\n<li><strong>Stop doubting yourself.</strong> With enough patience and effort, you can learn anything.</li>\n<li><strong>Do the things that make you happy</strong> and make you feel fulfilled. Don’t do something because it’s “a good job” or “a steady paycheck”.</li>\n<li><strong>Find comfort in the fact that you’re not alone.</strong> We’re all making this up as we go along. <a href=\"https://twitter.com/getify/status/972495616600293381\">Even our mentors struggle to get their code to work</a>. Nobody has all the answers.</li>\n<li><strong>Don’t ever forget where you came from.</strong> Remember the things that confused, infuriated, and discouraged you. It will help you remember how far you’ve come, keep you humble, and remind you to be kind to those following in your footsteps.</li>\n</ul>\n<p>Learn from my mistakes, then pay it forward.</p>\n<p><em>Originally published at <a href=\"https://leewarrick.com/blog/the-courage-to-code/\">leewarrick.com/blog</a>.</em></p>\n<p><em>Please <a href=\"https://tinyletter.com/leewarrick\">subscribe</a> for updates.</em></p>", "published": "2022-11-27T11:15:22.856Z", "lastEdited": "2022-11-27T11:15:22.856Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161015.png", "source": "https://dev.to/leewarrickjr/finding-the-courage-to-code-4dlh", "stars": [], "saves": [31]}}, {"model": "main.post", "pk": 83, "fields": {"author": 249, "title": "Awesome CSS Animation Hamburger Menu", "slug": "awesome-css-animation-hamburger-menu-83", "description": "Awesome Animation CSS Hamburger Menu  - HTML5 CSS3 Tutorial         Do Not Forget To Like &amp;...", "content": "<hr />\n<p>title: Awesome CSS Animation Hamburger Menu\npublished: true\ntags: codepen, javascript, html, css</p>\n<hr />\n<p>Awesome Animation CSS Hamburger Menu  - HTML5 CSS3 Tutorial</p>\n\n<p>{% codepen https://codepen.io/ahmadbassamemran/pen/abopOMY %}</p>\n<hr/>\n<p><a href=\"https://www.youtube.com/AhmadEmran?sub_confirmation=1\">Do Not Forget To Like &amp; Subscribe In The Channel:</a></p>\n<hr/>\n\n<p>{% youtube pzBTF31iiCo %}</p>", "published": "2022-11-27T11:15:25.714Z", "lastEdited": "2022-11-27T11:15:25.714Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_83_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--4ab1DzI0--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/wc9g8dartktj03c6xgl8.png", "source": "https://dev.to/ahmadbassamemran/awesome-css-animation-hamburger-menu-2aec", "stars": [250, 251, 252, 249, 253, 254, 114, 255, 215, 256, 257, 258, 259, 260, 261], "saves": [251, 249, 114, 255, 215, 257, 259, 261, 31]}}, {"model": "main.post", "pk": 84, "fields": {"author": 262, "title": "Mosaic gallery, Expanding footer, Video hero | Module Monday 53", "slug": "mosaic-gallery-expanding-footer-video-hero-module-monday-53-84", "description": "Module Monday 53", "content": "<hr />\n<p>title: Mosaic gallery, Expanding footer, Video hero | Module Monday 53\npublished: true\ndescription: Module Monday 53\ntags: showdev, githunt, webdev, javascript\ncover_image: https://res.cloudinary.com/component/image/upload/b_rgb:ffffff,c_lpad,h_350,w_800/v1566432444/mosaic-gallery_kd8i6f.gif\ncanonical_url: https://guide.anymod.com/module-monday/53.html</p>\n<hr />\n<h2>Everything below is open source</h2>\n<p>It's free to use on any website, web app, or anywhere else. There are hundreds more like these built &amp; shared on <a href=\"https://anymod.com\">AnyMod</a>.</p>\n<p>Click a mod to see it along with its source code.</p>\n<h2>Mosaic gallery</h2>\n<p>Beautiful gradient gallery with overlay you can add with one line of code.\n<a class=\"btn btn-sm\" href=\"https://anymod.com/mod/mosaic-images-mladll?preview=true\">View mod</a>\n<a href=\"https://anymod.com/mod/mosaic-images-mladll?preview=true\">\n  <img src=\"https://res.cloudinary.com/component/image/upload/v1566432444/mosaic-gallery_kd8i6f.gif\"/>\n</a></p>\n<h2>Expandable footer</h2>\n<p>Hides at the bottom until needed. Expands with about &amp; contact info.\n<a class=\"btn btn-sm\" href=\"https://anymod.com/mod/expandable-footer-with-social-network-links-alrolk?preview=true\">View mod</a>\n<a href=\"https://anymod.com/mod/expandable-footer-with-social-network-links-alrolk?preview=true\">\n  <img src=\"https://res.cloudinary.com/component/image/upload/v1566432442/footer_tit3tt.gif\"/>\n</a></p>\n<h2>Video hero with navbar</h2>\n<p>A bold intro section with side navigation.\n<a class=\"btn btn-sm\" href=\"https://anymod.com/mod/video-hero-with-navbar-nkonmr?preview=true\">View mod</a>\n<a href=\"https://anymod.com/mod/video-hero-with-navbar-nkonmr?preview=true\">\n  <img src=\"https://res.cloudinary.com/component/image/upload/v1566432443/hero_u8feqk.gif\"/>\n</a></p>\n<h2>Background columns</h2>\n<p>Three content columns with a fixed background behind.\n<a class=\"btn btn-sm\" href=\"https://anymod.com/mod/background-columns-nkomrr?preview=true&lorem=true\">View mod</a>\n<a href=\"https://anymod.com/mod/background-columns-nkomrr?preview=true&lorem=true\">\n  <img src=\"https://res.cloudinary.com/component/image/upload/v1566432442/content-columns_l2u3zv.png\"/>\n</a></p>\n<h2>Features list</h2>\n<p>Easy way to show off your features along with a \"Learn more\" button.\n<a class=\"btn btn-sm\" href=\"https://anymod.com/mod/features-list-section-dkdona\">View mod</a>\n<a href=\"https://anymod.com/mod/features-list-section-dkdona\">\n  <img src=\"https://res.cloudinary.com/component/image/upload/v1566432442/features_e5eu5z.png\"/>\n</a></p>\n<hr>\n\n<p>I post new mods from the community <a href=\"https://dev.to/tyrw\">here</a> every (Module) Monday -- I hope you find them useful!</p>\n<p>Happy coding ✌️</p>", "published": "2022-11-27T11:15:49.058Z", "lastEdited": "2022-11-27T11:15:49.058Z", "status": "published", "thumbnail": "", "thumbnail_url": null, "source": "https://dev.to/tyrw/mosaic-gallery-expanding-footer-video-hero-module-monday-53-bpl", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 85, "fields": {"author": 263, "title": "Custom React Navigation Transition | Implementation and Demo", "slug": "custom-react-navigation-transition-implementation-and-demo-85", "description": "In this tutorial, we are going to learn how to customize React Navigation transition. If you are just...", "content": "<hr />\n<p>title: Custom React Navigation Transition | Implementation and Demo\npublished: true\ntags: reactjs,javascript-developme,javascript,javascript-tips\ncanonical_url: https://kriss.io/custom-react-navigation-transition-implementation-and-demo/\ncover_image: https://cdn-images-1.medium.com/max/1024/1*CWZm0DvrW0KkLg3rCrwC4g.png</p>\n<hr />\n<p>In this tutorial, we are going to learn how to customize React Navigation transition. If you are just about to learn about React Native navigation, you should probably go through <a href=\"https://facebook.github.io/react-native/docs/navigation#react-navigation\">React Navigation</a> first. This will make things easier for you in this tutorial.</p>\n<p>Here, to exemplify the use of React Native navigation and customized transitions, we are going to add transition effect when we change the screens in the React Native app.</p>\n<p>First, I have prepared a <a href=\"https://snack.expo.io/@krissnawat/8a3193\">seed project</a> here in expo so that you can get the boilerplate to implement the customized navigation transitions. Then, you can follow step by step instruction in this tutorial in order to create your own customized transitions while navigating to different screens.</p>\n<p>The simulation given below shows the transitions from one screen to another without animation:</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/proxy/1*MaXY1tecRsnozOlb9-OOKA.gif\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/299/1*OpXPcbv6NfZFwiKv8G66eA.gif\" /></p>\n<h3>1. Bootstrap Animation for React Navigation Transition</h3>\n<p>In this step, we are going to get started with our animation with different props. Here, we need to create a new variable to handle animation properties in our <strong>App.js</strong> file. The code to handle this is provided in the code snippet below:</p>\n<p><code>javascript\nconst NavigationOptions = () =&gt;{\n  return {\n    screenInterpolator:(sceneProps)=&gt;{\n      const { layout, position, scene } = sceneProps;\n      const { index } = scene;\n      return FadeTransition(position,index);\n    }\n  }\n}</code></p>\n<p>In the code above, we use <strong>screenInterpolator</strong> method to intercept navigation data.</p>\n<ul>\n<li><strong>position</strong> refers to screen position.</li>\n<li><strong>index</strong> refers to the current screen index.</li>\n</ul>\n<p>Then, we need to pass data to the Animation function i.e. <strong>FadeTransition</strong> function in the code above.</p>\n<h3>2. Create Animation function</h3>\n<p>In this step, we are going to create the Animation function that we mentioned above. The animation function we are going to create is <strong>FadeTransition</strong> that will accept two arguments <strong>position</strong> and <strong>index</strong>. The code to implement the animation function is provided in the code snippet below:</p>\n<p><code>javascript\nconst FadeTransition = (position,index) =&gt;{\n  const sceneRange = [index-1,index]\n  const outputOpacity = [0,1]\n  const transition = position.interpolate({\n    inputRange:sceneRange,\n    outputRange:outputOpacity\n  })\n  return {\n    opacity:transition\n  }\n}</code></p>\n<p>Here, we are creating two variables. <strong>sceneRange</strong> to defined start screen and previous screen and then, <strong>outputRange</strong> to control opacity range. Then, finally, we need to add these two variables to <strong>interpolate</strong> function that we are using for initializing animation.</p>\n<h3>3. Add to main navigation</h3>\n<p>The last thing we need to do is to add all the options to <strong>AppNavigator</strong> variable initialized to <strong>createStackNavigator</strong> method. The code to add all the options to our main navigation constant AppNavigator is provided in the code snippet below:</p>\n<p><code>javascript\nconst AppNavigator = createStackNavigator(\n  {\n    Home: {\n      screen: Home\n    },\n     Screen1: {\n      screen: Screen1\n    },Screen2: {\n      screen: Screen2\n    }\n  },\n  {\n    headerMode:'none',\n **transitionConfig:NavigationOptions**\n  });</code></p>\n<p>Here, as we can see we have added our <strong>NavigationOptions</strong> to <strong>transitionConfig</strong> in order to integrate our animation to the transition.</p>\n<p>Now, we need to test if everything works as expected. The simulation of the test is shown in the emulator simulation below:</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/proxy/1*w2CW7n-3OeOq5m5w50PbeQ.gif\" /></p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/proxy/1*lIUXblelDlCmuj5jKNgaDA.gif\" /></p>\n<p>Hence, we have got the result of our implementation. The customized navigation transitions work as expected as per the above simulations.</p>\n<h3>4. Adding other Animations</h3>\n<p>In this step, we try to further customize our animation. Here, we are going to other animation styles such as <strong>translateY.</strong> In order to do this, we need to create a new animation function named <strong>BottomTransition</strong> as shown in the code snippet below.</p>\n<p><code>javascript\nconst BottomTransition = (position,index,height)=&gt;{\n  let sceneRange = [index-1,index]\n  let outputHeight = [height,0]\n  let transition = position.interpolate({\n    inputRange:sceneRange,\n    outputRange:outputOpacity\n  })\n  return {\n   transform:[{translateY:transition}]\n  }\n}</code></p>\n<p>Here, we need to do just as in the second step but we need to replace <strong>opacity</strong> with <strong>translateY.</strong> Then, the animation function also receives a new parameter i.e.  <strong>height</strong>.</p>\n<p>Then, we also need to change the function in <strong>NavigationOptions</strong> from <strong>FadeTransition</strong> to <strong>BottomTransition</strong> as shown in the code snippet below:</p>\n<p><code>javascript\nconst NavigationOptions = () =&gt;{\n  return {\n    screenInterpolator:(sceneProps)=&gt;{\n      const { layout, position, scene } = sceneProps;\n      const { index } = scene;\n      const height = layout.initHeight;\n       return BottomTransition(position,index,height);\n      // return FadeTransition(position,index);\n    }\n  }\n}</code></p>\n<p>Here, you can see that the FadeTransition method is commented out.</p>\n<p>Now, let’s try to run our new customized navigation transition animation on our emulator:</p>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/proxy/1*2ZlYJC75HWfkX2DlJzzMzQ.gif\" /></p>\n<p>Thus, our navigation transition for one screen to another is now vertical animation. This successfully completes our tutorial to create customized navigation transitions.</p>\n<p><strong><em>Hope you enjoyed the tutorial!</em></strong></p>\n<h3>Conclusion</h3>\n<p>In this tutorial, we learned how to use customized transitions in React Native navigations. We also learned to implement react-native animations in a simple and basic way. With this tutorial, you will be able to create your very own React Native animations as well as add customized navigation transitions. The full demo of the tutorial is available in the <a href=\"https://snack.expo.io/@krissnawat/8a3193\">snack</a>.</p>\n<p><em>Originally published at</em> <a href=\"https://kriss.io/custom-react-navigation-transition-implementation-and-demo/\"><em>https://kriss.io</em></a> <em>on August 24, 2019.</em></p>\n<hr />", "published": "2022-11-27T11:15:52.425Z", "lastEdited": "2022-11-27T11:15:52.425Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_85_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--j1I2JyO1--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://cdn-images-1.medium.com/max/1024/1%2ACWZm0DvrW0KkLg3rCrwC4g.png", "source": "https://dev.to/kris/custom-react-navigation-transition-implementation-and-demo-d1m", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 86, "fields": {"author": 264, "title": "How Can I Land A Software Job If I Have No Experience", "slug": "how-can-i-land-a-software-job-if-i-have-no-experience-86", "description": "This is everyone's story, right?   1.) Graduated valedictorian from an A Ranked School and b...", "content": "<h1>This is everyone's story, right?</h1>\n<p>1.) Graduated valedictorian from an A Ranked School and being captain of the Programming Club at 17 years of age. \n2.) Graduated Summa Cum Laude from MIT with a Bachelors in Computer Science, minor in Mathematics in 3 years. \n3.) Became an intern at Google which converted into a full time role after a year. </p>\n<p>This story, as stereotypical as it may seem, is not the be-all when it comes to the background of software engineers. Some of the largest names in the game (Bill Gates, Steve Jobs, Mark Zuckerberg) did not finish college yet led/lead wildly successful careers in tech. </p>\n<p>However, the tech scene is competitive and if you don't have the right skills or package them the right way, you may find yourself at the bottom of the pile. What if you don't have any skills yet? What if you can't go to a traditional brick and mortar school? What if you don't have any connections? This post is to provide some suggestions for those who find themselves to be the underdogs of the interview process. </p>\n<h1>I Got No Skills</h1>\n<p><img alt=\"Napoleon Skills\" src=\"https://thepracticaldev.s3.amazonaws.com/i/fr62f4xoc4oplwl5hc1i.jpg\" /></p>\n<p>The road to being an engineer is a winding road of topics, technologies, projects, collaboration, etc. As an engineer, you will never stop learning. There will always be some new tech on the horizon, some new pattern that's better for creating applications, some new build tool that automates the process better. With that comes the responsibility to continue to hone your craft and add new tools to your toolkit. </p>\n<p>Now, at the beginning of journey, making a selection as to what kind of engineer you want to be can be quite daunting. There are Software Engineers, QA Engineers, Test Automation Engineers, Dev Ops Engineers, Data Engineers and many more. It may serve you better to figure out what you want to build and break that down. That can help to build out a pathway of learning.</p>\n<h2>Example</h2>\n<p>Future Engineer: I want to build the next Amazon.\nLet's break that down:\nAmazon is a <code>web site</code>. It is an <code>e-commerce</code> app. It has a <code>catalog</code> of items. For this goal, I can see a couple of skillsets that would be useful. Web Development, Database Administration, API development, just to name a few. Those are possible pathways to pursue. </p>\n<h2>What About Edjamacation</h2>\n<p>With so many avenues for education out there, it can be quite daunting to figure out what works best for your situation. There are universities and colleges, MOOCs, Bootcamps, Meetups, Books, one-off online courses, and many other avenues to learn how to build things using code. So which  should you do? While I can't make the choice for you, I can give some sample questions that you can ask yourself to help evaluate which form of learning is best for you.</p>\n<h3>Questions</h3>\n<p>1.) Can I teach myself effectively?\n2.) Do I need the structure of a classroom setting?\n3.) Would I qualify for financial aid if I can't afford classes?\n4.) Do I need access to professors or tutors if I am having trouble?\n5.) How much schooling does my schedule allow for on a weekly basis?\n6.) Do I need the assurance of a degree or certificate once I finish my training?\n7.) Can I pace my own learning or do I need someone else to pace my learning?\n8.) Do I have uninterrupted study time at home or would I need to leave to go to an establishment?\n9.) Do I have good enough software or hardware at home or will I need to use public facilities?\n10.) Would I be comfortable seeking work myself after my schooling or would I want assistance from my educational establishment?</p>\n<p>Of course, there are pros and cons to every type of schooling. I have created a chart from my own personal experience:</p>\n<p>| Schooling Type |      Pros      |    Cons   |\n| ---------------| -------------- |-----------|\n| Universities/Colleges   | Receive Degree. Most expected way to receive education.    | May teach out of date techniques and technologies. Expensive. Takes a lot of time and a long time. Necessity to take unrelated courses.\n| Massively Open Online Courses (MOOC)  | Self paced. Taught only what's relevant to track. Open to anyone who can access. No entrance exams. Relatively inexpensive compared to college and bootcamps.      | Limited help when trouble arises. Need to be able to teach yourself. Homework can be lacking. Most likely no certificate for completing.   |\n| Bootcamp  | Consolidated track that still has access to teachers and tutors. Being able to meet other students. May provide certificate of completion. Less $$ than university.   | Very condensed program means a lot of time in classroom per week. May not be as respected as College or University. Can be a challenge finding a good one since so many are out there. Inflexible schedule. Can still be expensive for some.|\n| One-Off Online Courses   | Self paced. Often has student community online. Usually inexpensive. Frequent course updates. Large catalog of topics to learn. Reviews for courses to aid purchasing decision.   | Large amounts of variance between courses. Pre-requisites are not always well defined. Must be able to learn in the provided format.  |</p>\n<h1>I Got Skills! Now what?</h1>\n<p><img alt=\"I Know JavaScript\" src=\"https://thepracticaldev.s3.amazonaws.com/i/o20iojeawnqjcbo4kqw3.jpeg\" /></p>\n<p>Show us! Build, dangit! Build like you've never built before! Software development is very interesting because it's one of the few industries where credentials don't really mean too much if you can't prove in the interview process that you can do the work. </p>\n<p>It helps immensely if you have some public code or artifacts from said code to share with whoever you are interviewing with. That being said, what should you build? Glad you asked! There are many initiatives that can help if app ideas are lacking. </p>\n<p>1.) <strong>30 apps in 30 days (or a variant of that)</strong>\nUse web search and social media to your advantage. Many people have done the challenge of developing a certain number of apps in a certain number of days (i.e. 30 apps in 30 days) and have documented their journey of doing so. You can take a look at some of the app ideas they had and try your hand at the challenge as well.</p>\n<p>2.) <strong>Open Source Projects</strong>\nMany large companies put their code out there for contributors to help out with. GitHub, Microsoft, Facebook, Elastic, Mozilla, etc. These companies have projects that are out in the open with issues being tracked to help those looking to contribute to discover them. </p>\n<p>You can also join communities of different projects by looking the project up and finding where they congregate. Could be via IRC, Slack, Discord or other. </p>\n<p><a href=\"https://github.com/MunGell/awesome-for-beginners#javascript\">This repo</a> is also a good one for finding a project for a good first pull request. </p>\n<p>3.) <strong>Blog about it!</strong>\nTried a new approach to building a web app? Write about it. Spun up your own CI server using a tutorial? Write about it. Finding your college coursework underwhelming? Write about it. If you are doing something of interest....what should you do? Write about it. See how that works? This will help you retain what you learned, articulate yourself better, etc.</p>\n<h1>Start Interviewing</h1>\n<p>Once you have put together a portfolio of work that you have done, articles that you have written, projects you have contributed to it's time to start interviewing. In your interviews, you will likely be able to call upon your experiences from building things, blogging things, etc. Even if some interviews don't end in an offer, take those interviews as opportunities to improve. Ask for actionable feedback from the interviewers. Work on exercises that feature the concepts from the coding interviews. Most of all, keep at it! Persistence and refinement through iteration will definitely yield results. </p>\n<h1>In Conclusion</h1>\n<p>The road to a job offer can be a challenging one when you have no experience. It's hard, but doable. I have shared a few tips on how to bridge the gap between inexperienced and Jr. Developer. If this helps even one person out there, I consider this late night write up a success. </p>", "published": "2022-11-27T11:15:56.632Z", "lastEdited": "2022-11-27T11:15:56.632Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161022.png", "source": "https://dev.to/the_power_coder/how-can-i-land-a-job-if-i-have-no-experience-1d12", "stars": [], "saves": [31]}}, {"model": "main.post", "pk": 87, "fields": {"author": 73, "title": "Jest for Sinon Stubs", "slug": "jest-for-sinon-stubs-87", "description": "At work, we recently converted from Mocha, Karma, Chai, and Sinon to Jest. It was not immediately...", "content": "<hr />\n<p>title: Jest for Sinon Stubs\npublished: true\ndescription: \ntags: #testing #JavaScript #jest #sinon</p>\n<hr />\n<p>At work, we recently converted from Mocha, Karma, Chai, and Sinon to Jest. It was not immediately obvious what the direct replacement was for <code>tsx\nsinon.stub(object, 'methodName').callsFake(() =&gt; {})</code>\nFound out Jest provides similar functionality with\n<code>tsx\njest.spyOn(object, 'methodName').mockImplementation(() =&gt; {})</code></p>", "published": "2022-11-27T11:15:58.250Z", "lastEdited": "2022-11-27T11:15:58.250Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161023.png", "source": "https://dev.to/2ezpz2plzme/jest-for-sinon-stubs-5bdb", "stars": [265, 73, 266, 267, 31], "saves": [265, 266]}}, {"model": "main.post", "pk": 88, "fields": {"author": 268, "title": "New kid on the block. ", "slug": "new-kid-on-the-block-88", "description": "Hello everyone,  I'm a recent newbie software dev hire that is enthusiastic about the possibilities o...", "content": "<p>Hello everyone,</p>\n<p>I'm a recent newbie software dev hire that is enthusiastic about the possibilities of software.My goal is to add value to the dev community while building interesting side projects outside of work.</p>\n<p>Please, let me know any inputs that could helpful on my journey.</p>", "published": "2022-11-27T11:16:07.889Z", "lastEdited": "2022-11-27T11:16:07.889Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161024.png", "source": "https://dev.to/logunlaja26/new-kid-on-the-block-38kd", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 89, "fields": {"author": 269, "title": "Apache Camel #4 - Bean Validation", "slug": "apache-camel-4-bean-validation-89", "description": "Validate data in Camel", "content": "<hr />\n<p>title: Apache Camel #4 - Bean Validation\npublished: true\ndescription: Validate data in Camel\ntags: #java #apache #camel #apachecamel</p>\n<hr />\n<p>There is a lot of cases where we needed to write validation for data input. This \"problem\" can be easily solved in Camel by using Bean Validation component.</p>\n<p>Imagine we have a JSON input in our route and we want to validate payload.</p>\n<div class=\"highlight\">\n<pre class=\"highlight javascript\">\n{\n     \"name\":\"Jane Doe\",\n     \"cardNumber\":\"377198642272436\",\n     \"email\":\"jane@doe.com\",\n     \"paid\":true,\n     \"price\":1.25\n}\n</pre>\n</div>\n\n<p>To do that, we first we must unmarshall that payload to POJO.\nBut first, we must create a class with the same parameters as JSON and add Hibernate Validation annotations.</p>\n<div class=\"highlight\">\n     @NotNull\n     @Length(min = 1, max = 60)\n     private String name;\n\n     @CreditCardNumber\n     private String cardNumber;\n\n     @Email\n     private String email;\n\n     @NotNull\n     private boolean paid;\n\n     @Min(0.1)\n     private int price;\n</div>\n\n<p>And then we add this to our Camel route.</p>\n<div class=\"highlight\">\n<pre class=\"highlight javascript\">\n   //define a datasource for the class you want to validate.\n   GsonDataSource dataSource = new GsonDatasource(JsonDto.class);\n\n   //unmarshal JSON to POJO\n   .unmarshall(dataSource)\n\n   //Validate data\n   .to(\"bean-validator:someLabelHere)\n</pre>\n</div>\n\n<p>When that unmarshalled data is sent to bean validator, that objects will be validated by annotations we set for JsonDto fields.</p>\n<p>Thank you for your attention.</p>", "published": "2022-11-27T11:16:10.895Z", "lastEdited": "2022-11-27T11:16:10.895Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161025.png", "source": "https://dev.to/djoleb/apache-camel-4-bean-validation-3pil", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 90, "fields": {"author": 270, "title": "A Quick Review of JavaScript’s Array.prototype.sort() Method", "slug": "a-quick-review-of-javascripts-arrayprototypesort-method-90", "description": "a quick review of javascript’s Array.protoype.sort() method using json", "content": "<hr />\n<p>title: A Quick Review of JavaScript’s Array.prototype.sort() Method\npublished: true\ndescription: a quick review of javascript’s Array.protoype.sort() method using json\ntags: javascript, node, sort, career\nseries: [\"Junior JavaScript Jobhunting: Quick Tips for Technicals and Takehomes\"]\ncover_image: https://thepracticaldev.s3.amazonaws.com/i/4olljtrz2tqd4y10y573.png</p>\n<hr />\n<p><em>Cover image credit: <a href=\"https://en.wikipedia.org/wiki/Hunter_%C3%97_Hunter\"><strong>Hunter x Hunter</strong> manga</a> by Yoshihiro Togashi, meme-ified by yours truly. &lt;3</em></p>\n<p>In interviews, it is essential to know the basics of a language you choose to use. It sounds like common sense, but gaps in basic knowledge can make you look bad. After an <strong>(ahem)</strong> unflattering experience involving skimming the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">MDN documents on JavaScript’s Array.protoype.sort()</a> method a little too quickly, I wanted to break down a simple implementation using the same JSON object we retrieved earlier in this series.</p>\n<p><img alt=\"gif of hisoka holding out a hand of playing cards, some of them facing the wrong direction\" src=\"https://thepracticaldev.s3.amazonaws.com/i/o8fk857mzi5bqvesp5o2.gif\" />\n<em>Sorting things is important! Just ask this guy, he clearly knows what he's doing!</em></p>\n<h1>Default Array.protoype.sort() Behavior</h1>\n<p>By default, calling <code>.sort()</code> on a JavaScript array will attempt some basic lowest-to-highest ordering, based on either a string’s alphabetical order or a number’s value. However, the default behavior will compare only the <strong>FIRST ELEMENT</strong> of the string (first letter only) or number (first digit encountered). </p>\n<p>Here are the examples of each from the MDN docs:</p>\n<p>```javascript\n// sorting strings alphabetically, based on the first letter\nvar months = ['March', 'Jan', 'Feb', 'Dec'];\nmonths.sort();\nconsole.log(months);\n// expected output: Array [\"Dec\", \"Feb\", \"Jan\", \"March\"]</p>\n<p>// sorting integers by their first digit\nvar array1 = [1, 30, 4, 21, 100000];\narray1.sort();\nconsole.log(array1);\n// expected output: Array [1, 100000, 21, 30, 4]\n```</p>\n<p>Understandably, you may be caught off-guard by seeing 100000 come between 1 and 21. Luckily, JavaScript gives us a built-in way to customize our sorting behavior using a <code>compareFunction</code> inside <code>.sort()</code>!</p>\n<h1>Defining Sorting Behavior with a compareFunction, .sort( function(a, b) { … } )</h1>\n<p>We can change the default sorting behavior by adding an anonymous function, called the <code>compareFunction</code>. We add this inside the <code>.sort()</code> call, and pass arguments <code>a</code> and <code>b</code> to represent the Array’s elements. </p>\n<p>For example, instead of comparing only the first digit of integers, we can compare the entire value of <code>a</code> and <code>b</code> and sort based on that. </p>\n<p>Adapted again from the MDN docs:</p>\n<p>```javascript\n// sorting integers by their value\nvar array1 = [1, 30, 4, 21, 100000];</p>\n<p>array1.sort(function(a, b) {   // this anonymous function is the compareFunction\n    if (a &lt; b) {    // now the entire values of a &amp; b are compared\n        return -1;\n    };\n    if (a &gt; b) {\n        return 1;\n    };\n    // a must be equal to b, no change to index\n    return 0;\n});</p>\n<p>console.log(array1);\n// expected output: Array [1, 4, 21, 30, 100000]\n```</p>\n<p>Great! Now, by explicitly comparing the <em>entire</em> values of <code>a</code> and <code>b</code>, instead of just their first digit, we get the numeric sorting we'd expect.</p>\n<p>Note that the anonymous <code>compareFunction</code> is special, because it is looking for a return that is negative(-1), zero(0), or positive(1):</p>\n<p><code>Negative  =&gt;  lower index\nZero      =&gt;  no change\nPositive  =&gt;  higher index</code></p>\n<p>Thus, we can create any conditionals we want to ultimately return a negative/zero/positive value.</p>\n<h1>Sorting JSON Based on Nested Properties</h1>\n<p><strong>TL;DR: Assign your nested properties to variables you can easily use in your comparison logic!</strong></p>\n<p>Let’s look at a more complicated example: sorting the JSON from <a href=\"https://www.reddit.com/r/popular.json\">https://www.reddit.com/r/popular.json</a> alphabetically by their <code>\"title\"</code> property. </p>\n<p>As a reminder, here’s the JSON we’ll be sorting, specifically based on properties inside the <code>data.children</code> Array:</p>\n<p><img alt=\"sorted json from reddit's /r/popular board\" src=\"https://thepracticaldev.s3.amazonaws.com/i/0zcaz3mscl2fwfu7iwb5.png\" /></p>\n<p>We’ll use the same <a href=\"https://www.npmjs.com/package/node-fetch\">node-fetch package</a> explored in the <a href=\"https://dev.to/isalevine/three-ways-to-retrieve-json-from-the-web-using-node-js-3c88\">previous post in this series</a>:</p>\n<p>```javascript\nconst url = \"https://www.reddit.com/r/popular.json\"</p>\n<p>// use the node-fetch package to retrieve JSON from the URL above\nconst fetch = require('node-fetch');</p>\n<p>let settings = {\n    method: \"Get\"\n};</p>\n<p>fetch(url, settings)\n.then(res =&gt; res.json())\n.then((json) =&gt; {\n    sortJson(json);\n});\n```</p>\n<p>Inside our <code>sortJson()</code> function, we’ll use the following steps:</p>\n<ol>\n<li>We select a property to read inside each Object inside the <code>data.children</code> Array, accessed via <code>data.children[i].data[property]</code>.</li>\n<li>We define a <code>compareFunction</code> that compares the properties of <code>a</code> and <code>b</code>, using our defined <code>”property”</code>. We assign the nested values to easily accessible variables, <code>property1</code> and <code>property2</code>. </li>\n<li>Compare <code>property1</code> and <code>property2</code>. As usual, these comparisons return a negative(-1), zero(0), or positive(1) value. The original Array will be re-ordered based on the property. </li>\n</ol>\n<p>Here’s our function, sorting by upvotes using the <code>”title”</code> property:</p>\n<p>```javascript\n// sort Array json.data.children alphabetically by \"title\"\nfunction sortJson(json) {</p>\n<pre><code>// you can easily change this to any property, such as “ups” or “author_fullname\"\nlet property = \"title\";\n\n\njson.data.children.sort(function(a, b) {\n\n    // create new variables to easily access nested data for sorting\n    let propertyA = a.data[property];\n    let propertyB = b.data[property];\n\n    if (propertyA &lt; propertyB) {    // checks for a “lower” alphabetical order\n        return -1\n    };\n    if (propertyA &gt; propertyB) {    // checks for a “higher” alphabetical order\n        return 1\n    };\n    return 0    // if titles are equal\n\n});\n</code></pre>\n<p>// First 3 Objects in Array json.data.children BEFORE sort():\n// [0].data.title: What do you NEVER f*** with?\n// [1].data.title: [Game Thread] Florida vs. Miami (7:00PM ET)\n// [2].data.title: 🎉 100.000.000 SUBSCRIBERS 🎉</p>\n<p>// First 3 Objects in Array json.data.children AFTER sort():\n// [0].data.title: 'Like you've been fired from your job': YouTubers have lost thousands of dollars after their channels were mistakenly demonetized for months\n// [1].data.title: Disney+ episodes will release on a weekly basis, instead of the all at once “binge” model\n// [2].data.title: Employee spits in food for Instagram likes\n```</p>\n<p>Note in our output that normal JavaScript string alphabetizing rules apply, such as the apostrophe  <strong>'</strong> coming before the letter <strong>D</strong>.</p>\n<h1>Conclusion</h1>\n<p>Sorting is an essential function in any language, so make sure to practice it before going into a technical challenge! Additionally, for languages like JavaScript and Ruby, make sure to dig into how sorting methods are implemented under-the-hood, as you may be asked to create some customized sorting functionality.</p>\n<p>And, as usual, it won't hurt to take some time and familiarize yourself with the MDN docs, in case you need them for quick reference: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\">MDN docs for Array.protoype.sort()</a></p>\n<p>Feel free to comment below with any additional sorting tips or tricks!</p>\n<h1>UPDATE 8/28/19</h1>\n<p><a href=\"https://dev.to/philnash\">Phil Nash</a> just posted an INCREDIBLE writeup of gotchas and inconsistencies in JavaScript's <code>Array.prototype.sort()</code>. Specifically, he covers a two important topics that are complementary to this review:</p>\n<ul>\n<li>How nulls are handled (coerced into either string \"null\" or integer 0)</li>\n<li>How undefineds/objects with undefined values are handled</li>\n</ul>\n<p><strong><a href=\"https://dev.to/philnash/how-not-to-sort-an-array-in-javascript-l9o\">Check out his article here!</a></strong></p>", "published": "2022-11-27T11:16:16.344Z", "lastEdited": "2022-11-27T11:16:16.344Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_90_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--RJbO8qsn--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/4olljtrz2tqd4y10y573.png", "source": "https://dev.to/isalevine/a-quick-review-of-javascript-s-array-prototype-sort-method-7cm", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 91, "fields": {"author": 271, "title": "Promise.all (ES2015) vs Promise.allSettled (ES2020). What's changed? 🤔", "slug": "promiseall-es2015-vs-promiseallsettled-es2020-whats-changed-91", "description": "Hey! 👋  Check out today's ⚡️ Dev Tip 💡 👇   Follow me on Twitter @shahzaibkhalid for more Dev Tips! ✨...", "content": "<p>Hey! 👋</p>\n<p>Check out today's <code>⚡️ Dev Tip 💡</code> 👇</p>\n<blockquote>\n<p>Follow me on Twitter <a href=\"https://www.twitter.com/shahzaibkhalid\">@shahzaibkhalid</a> for more Dev Tips! ✨</p>\n</blockquote>\n<p>Let’s say we want to run many promises to execute in\nparallel and wait till all of them are ready. 🧐</p>\n<p><code>javascript\n// some dummy promises to play with 🍭\nconst p1 = new Promise(resolve =&gt; resolve('Shahzaib'));\nconst p2 = new Promise((_ ,reject) =&gt; reject('User does not exists!'));\nconst p3 = new Promise(resolve =&gt; resolve('Lahore'));</code></p>\n<h3>Promise.all (short-circuits if any of the promises is rejected)</h3>\n<p>If any of the passed promises is rejected, the promise\nreturned by <code>Promise.all</code> immediately rejects with that error. ❌</p>\n<p><code>javascript\nPromise.all([p1, p2, p3])\n  .then(response =&gt; console.log(response))\n  .catch(error =&gt; console.log(error)); // 👉'User does not exists!'</code></p>\n<h3>Promise.allSettled (does not short-circuits)</h3>\n<p>Waits for all passed promises to settle (either resolved or rejected). 🥳</p>\n<p>The resulting array has:\n- <code>{status: 'fulfilled', value: result}</code> - for successful responses\n- <code>{status: 'rejected', reason: error}</code> - for errors</p>\n<p>```javascript\nPromise.allSettled([p1, p2, p3])\n  .then(response =&gt; console.log(response));</p>\n<p>/*<em>\n * 👉 [ {status: 'fulfilled', value: 'Shahzaib'},\n *      {status: 'rejected', reason: 'User does not exists!'},\n *      {status: 'fulfilled, value: 'Lahore'} ] 🚀\n </em>/\n```</p>\n<p>Hope you learned something new today. Do let me know what do you think about this Dev Tip in the comments below. 👀</p>\n<p>Peace. ✌️</p>", "published": "2022-11-27T11:16:20.796Z", "lastEdited": "2022-11-27T11:16:20.796Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161029.png", "source": "https://dev.to/shahzaibkhalid/promise-all-es2015-vs-promise-allsettled-es2020-what-s-changed-3k9d", "stars": [272, 271, 273, 274, 31], "saves": [272, 273, 271]}}, {"model": "main.post", "pk": 92, "fields": {"author": 275, "title": "Resolve a Promise from outside, after return", "slug": "resolve-a-promise-from-outside-after-return-92", "description": "Resolve / reject a Promise from outside, after return", "content": "<hr />\n<p>title: Resolve a Promise from outside, after return\npublished: true\ndescription: Resolve / reject a Promise from outside, after return\ntags: Promise, JavaScript, Frontend, Node.js</p>\n<hr />\n<p>Have you ever been at a situation where you wanted to resolve a Promise you returned from outside, when needed?</p>\n<p>If so, this may help you. It's actually pretty simple and straight forward as shown below, but many of us wouldn't have thought of this.</p>\n<p>{% codepen https://codepen.io/karthikaruna/pen/BaBWzrK default-tab=js %}</p>", "published": "2022-11-27T11:16:30.485Z", "lastEdited": "2022-11-27T11:16:30.485Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161030.png", "source": "https://dev.to/karthikaruna/resolve-a-promise-from-outside-after-return-dfg", "stars": [], "saves": [31]}}, {"model": "main.post", "pk": 93, "fields": {"author": 276, "title": "Performance benchmark: gRPC vs. REST in .NET Core 3 Preview 8", "slug": "performance-benchmark-grpc-vs-rest-in-net-core-3-preview-8-93", "description": "Evaluating Performance of REST vs. gRPC in .NET Core 3 Preview 8", "content": "<hr />\n<p>title: Performance benchmark: gRPC vs. REST in .NET Core 3 Preview 8\npublished: true\ndescription: Evaluating Performance of REST vs. gRPC in .NET Core 3 Preview 8\ntags: grpc,rest,dotnet,dotnetcore</p>\n<hr />\n<p>Recently, I have used gRPC and REST in the same host on my project. And I always wonder what if I can know at least what makes different between gRPC and REST when I do the inter-communication between services inside a Kubernetes cluster.</p>\n<p><img alt=\"Alt Text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/jo61y4optpiddvoae0ie.png\" /></p>\n<p>I have found the blog about the performance benchmark written by <a href=\"https://medium.com/@EmperorRXF\">Ruwan Fernando</a>. That was awesome, and that's clear after spent sometimes to have a look the code-based. I decide to fork it and write out some more code for .NET Core Preview 8 to see how different between gRPC and REST protocol in this new SDK which is published by Microsoft and also using it for my project.</p>\n<p>Let run the benchmark as following</p>\n<ul>\n<li>REST API:</li>\n</ul>\n<p><code>bash\n$ cd RESTvsGRPC\\RestAPI\n$ dotnet run -p RestAPI.csproj -c Release</code></p>\n<ul>\n<li>gRPC API:</li>\n</ul>\n<p><code>bash\n$ cd RESTvsGRPC\\GrpcAPI\n$ dotnet run -p GrpcAPI.csproj -c Release</code></p>\n<ul>\n<li>Benchmark project:</li>\n</ul>\n<p><code>bash\n$ cd RESTvsGRPC\\RESTvsGRPC\n$ dotnet run -p RESTvsGRPC.csproj -c Release</code></p>\n<p>Now, what we can do is waiting until it finished. And we will have a result as below</p>\n<p><img alt=\"Alt Text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/q5cf4r1z8txv2r1qb27v.png\" /></p>\n<p>When you get the small data with REST, then it is quite faster than gRPC</p>\n<p><code>bash\n$ RestGetSmallPayloadAsync |            100 |    14.99 ms |  0.2932 ms |  0.2743 ms |</code> </p>\n<p><code>bash\n$ GrpcGetSmallPayloadAsync |            100 |    19.60 ms |  0.3096 ms |  0.2896 ms |</code></p>\n<p>This is I think because .NET Core team has already optimized the performance of JSON processing in the core. But it is not effective if we run with the large data with REST. See below</p>\n<p><code>bash\n$ RestGetLargePayloadAsync |            100 | 1,181.00 ms | 13.9860 ms | 12.3982 ms |</code></p>\n<p><code>bash\n$ GrpcGetLargePayloadAsListAsync |            100 |   187.93 ms |  1.7881 ms |  1.6726 ms |</code></p>\n<p>You can see how different gRPC vs. REST when we deal with the big chunk of data.</p>\n<h3>Summary</h3>\n<p>.NET Team makes a huge difference when dealing with small data in the payload of the message, but actually with the large payload of data, the different has gone. gRPC is still a winner in this area. I'm not saying which one is better than another. What I'm going to say is we need the appropriate strategy for using what kind of protocol with your business cases.</p>\n<p>I usually use REST communication in outside communication with the external world such as external service integration, communication with front-end... And the whole communication inside the Kubernetes is all about gRPC because of power that we have with HTTP/2. I know that we can configure HTTP/2 with REST on the Kestrel as well, but it comes with a cost and ineffective because we need to maintain the cert in Kestrel. Otherwise, we normally offload inside the Kubernetes cluster to make it simple and fast for the performance in communication.</p>\n<p>I love what Kubernetes architecture used the payload format for the transport protocol as following</p>\n<p><img alt=\"Alt Text\" src=\"https://thepracticaldev.s3.amazonaws.com/i/ippmfy7fyjsijshgxdv3.png\" /></p>\n<p>The source code can be found at https://github.com/thangchung/RESTvsGRPC, and the original code-based at https://github.com/EmperorRXF/RESTvsGRPC </p>\n<h3>References:</h3>\n<ul>\n<li>https://medium.com/@EmperorRXF/evaluating-performance-of-rest-vs-grpc-1b8bdf0b22da</li>\n<li>https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel</li>\n<li>https://gooroo.io/GoorooTHINK/Article/16623/One-Weird-Trick-To-Improve-Web-Performance/21564#.Vx9o5UdkldB</li>\n<li>https://devblogs.microsoft.com/aspnet/asp-net-core-2-2-0-preview1-http-2-in-kestrel/</li>\n<li>https://kubernetes.io/blog/2018/07/18/11-ways-not-to-get-hacked/</li>\n</ul>", "published": "2022-11-27T11:16:35.596Z", "lastEdited": "2022-11-27T11:16:35.596Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161033.png", "source": "https://dev.to/thangchung/performance-benchmark-grpc-vs-rest-in-net-core-3-preview-8-45ak", "stars": [], "saves": [31]}}, {"model": "main.post", "pk": 94, "fields": {"author": 277, "title": "Responsive Web Design Projects - Build a Personal Portfolio Webpage", "slug": "responsive-web-design-projects-build-a-personal-portfolio-webpage-94", "description": "Salaam there. . .Iam sure InshaAllah  that I can do better but this the project to pass the test at m...", "content": "<p>Salaam there. . .Iam sure InshaAllah  that I can do better but this the project to pass the test at minimum </p>\n<p>{% codepen https://codepen.io/Imranzace89/pen/eYOZPyL %}</p>", "published": "2022-11-27T11:16:39.731Z", "lastEdited": "2022-11-27T11:16:39.731Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161034.png", "source": "https://dev.to/zmaniace/responsive-web-design-projects-build-a-personal-portfolio-webpage-172a", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 95, "fields": {"author": 278, "title": "Learn and Build Web Authentication System (Universal Principles)", "slug": "learn-and-build-web-authentication-system-universal-principles-95", "description": "What's an Authentication?   Servers are basically stupid computer programs who cannot rememb...", "content": "<h1>What's an Authentication?</h1>\n<p>Servers are basically <em>stupid</em> computer programs who cannot remember who and what made a request after serving it once. The communication between clients and servers over HTTP model is <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview#HTTP_is_stateless_but_not_sessionless\">stateless</a> in the sense that server cannot confirm the identity of client (user-agent) for each request without some sort of Authentication. Also, they have been over burdened with responsibilities like not showing your personal Twitter DM(s) to someone else, remembering stuff you added to your cart on Amazon, keeping your drafts on DEV articles safe from being copied by other people, preventing you from hacking your Ex's Facebook. All of this is going to need a way to tell server who you are and what should be served to you. </p>\n<p>Authentication is more than storing an \"user email\". Emails and usernames are public facing digital identity you create for yourself on the web. Other people can see and use it too. So we also use passwords and tokens to protect your non-public resources.</p>\n<h1>Passwords</h1>\n<p>The most basic and unsafe approach for storing passwords is just to save them as they are. Once saved, you query and match them with password provided by user. This approach is extremely bad because the passwords can be stolen over wire as well as when database is hacked. Most people use same password for multiple services, You are likely to expose all of them for all the users signed up on your website.</p>\n<blockquote>\n<p>\"<em>Storing passwords in a plain text is a sin.</em>\" - J ✝️</p>\n</blockquote>\n<p>One approach would be to <strong>encrypt</strong> the password and then store it.\n<img alt=\"encryption\" src=\"https://res.cloudinary.com/springboard-images/image/upload/q_auto,f_auto,fl_lossy/wordpress/2018/07/image3.png\" /> <figcaption>Encryption and Descryption</figcaption></p>\n<ol>\n<li>You chose a key with which you will mix the password to generate a random string using an algorithm.</li>\n<li>This password (gibberish text) will be stored in the database.</li>\n<li>\n<p>At the time of authentication:</p>\n</li>\n<li>\n<p>you can decrypt the password from database using the same key to generate a value and match it with password provided by user.</p>\n</li>\n<li>Or you can encrypt the password at input with same key and match it with value stored in the database.</li>\n</ol>\n<p>There are many encryption algorithms which are available as <a href=\"https://golang.org/pkg/crypto/\">go</a> libraries to work with. You can find same in other languages of your choice. The drawback with this approach is that if you can decrypt a password to it's original text, so can a hacker. if they are able to guess a key, every other user in your db is compromised too.</p>\n<h1>Hashing</h1>\n<p>To compare password for authentication without decrypting them is made possible using a hash function. Hash function converts strings of random length to a fixed length string using some predefined algorithms. \n<img alt=\"hashing\" src=\"https://ds055uzetaobb.cloudfront.net/brioche/uploads/3MYOioyY35-screen-shot-2016-06-25-at-32727-pm.png?width=1200\" /><figcaption>Hashing</figcaption></p>\n<ol>\n<li>Text generated by hashing functions is not reversible unlike encryption.</li>\n<li>The output will be of fixed length for inputs of variable lengths.</li>\n<li>Even a small change in input text would generate a totally different <em>hash</em>.</li>\n<li>For same input same hashes is generated. We can prevent this using salt and pepper.</li>\n</ol>\n<h2>Salt and Pepper</h2>\n<p>We would need to add a some bytes to the password before passing in to a hashing function. As hashes cannot be decrypted, but still a person can generate a <a href=\"https://en.wikipedia.org/wiki/Rainbow_table\">rainbow table</a> which is a precomputed table of commonly used passwords and their hashing functions. The hacker can match the hashes to the database hashes and will be able to tell the password. This would be prevented if a unique and random string is added to password which before saving a hash. \n <code>saltedhash(password) = hash(password || salt)</code>\n1. The salt would be unique for each password. Hence, all the hashes would be unique.\n2. The salt is not a private entity, it can be saved along with hash as a part of hash or in a different field.\n3. If two users use the same password, when added with salts, their generated hash would be different.</p>\n<p><strong><em>Pepper</em></strong> are also random strings that are added to passwords, they differ from the salt in the fact that they are not unique per user, they are same across all application. They are not stored in database necessarily. We will use them as environment variable in our application demo.</p>\n<h1>Hands On</h1>\n<ol>\n<li>Signup for an online free <a href=\"https://www.elephantsql.com/\">postgres database</a> service and get <code>host, port, username, dbname and password</code>.</li>\n<li>Fork and clone the project from github <a href=\"https://github.com/erdahuja/blog-auth-system\">here</a>.</li>\n<li>Edit database credentials (or use provided).</li>\n<li>Run in the root of the project <code>go run main.go</code>.</li>\n<li>The project consists of home, login, signup, profile and accounts page. To navigate to profile and accounts page you would need to have a token (explained shortly).</li>\n<li>On every restart of server, the database would reset. You can comment out the code <code>setUpDB</code> for so in <code>main.go</code> at root. \n<img alt=\"Preview\" src=\"https://thepracticaldev.s3.amazonaws.com/i/zmq8tmhlvmse6wbv9gbs.png\" /></li>\n</ol>\n<p>To understand application of hashing we would first need to have fields like password and a password-hash.</p>\n<h1>User Model</h1>\n<blockquote>\n<p>The gorm tag (<code>gorm:\"-\"</code>) ignores the password field because we never store password in the database. We would store explicitly defined password hash.</p>\n</blockquote>\n<h1>Sign Up Process</h1>\n<p><img alt=\"Sign up process\" src=\"https://thepracticaldev.s3.amazonaws.com/i/5k9hl7icjx4vgaslvgxz.png\" />\nUse <a href=\"https://godoc.org/golang.org/x/crypto/bcrypt#GenerateFromPassword\"><code>bcrypt.GenerateFromPassword(password, cost)</code></a> to get a hash for the password. The second argument is the cost that is how much work is needed to hash the password. It would change in future when computer gets more powerful. Right now Default Cost is 10.\n{% gist https://gist.github.com/erdahuja/5a98fbb1dd59dd863c9ec27bc2f79a69 %}\nThe code snippet above uses the sign up steps. You can find full working in project repository at path <code>/dev-blog/services/signup.go</code>.</p>\n<h1>Login Process</h1>\n<p><img alt=\"Login Process\" src=\"https://thepracticaldev.s3.amazonaws.com/i/b14jhy8z4vastjrcqng2.png\" />\nUse <a href=\"https://godoc.org/golang.org/x/crypto/bcrypt#CompareHashAndPassword\"><code>bcrypt.CompareHashAndPassword(password, cost)</code></a> to  compare hashed password to it's plain text equivalent.</p>\n<p>{% gist https://gist.github.com/erdahuja/2bf470a077853ae2be804bf45df84087 %}\nThe code snippet above uses the sign up steps. You can find full working in project repository at path <code>/dev-blog/services/login.go</code>.</p>\n<h1>Web server are stateless</h1>\n<p>The servers handles each request independently. It does not save any data from client requests to do stuff and responds. Each request has everything it needs from server and get a response. \nHow to make server remember what you did some time ago on the website?\nFrankly, we don't. we let clients tell in each request who they are and what resources they need. Login each time while browsing is a tedious task, so after login once, we sign in a <a href=\"![Cookie](https://thepracticaldev.s3.amazonaws.com/i/p4rl31fjyk2yegfb536g.png)\"><strong>cookie</strong></a> (data stored in the computer), so each time you browse a website, the browser sends the cookie with each request to the linked website. We will use this cookie data to verify user. This authentication data stored in cookie is called a <code>Remember Token</code>. We have added this in the user schema too earlier. </p>\n<p>Remember token is a series random bytes of a certain length.\nWe create this using following snippet:\n<code>// GenerateRememberToken returns a 32 bytes random token string using\n// crypto/rand packages\nfunc GenerateRememberToken() string {\n    b := make([]byte, 32) // create a placeholder of 32 bytes (big enough)\n    _, err := rand.Read(b) // Fill it with random bytes\n    Must(err)\n    return base64.URLEncoding.EncodeToString(b) // encoded string\n}</code>\nAdd this token to field in user object (RememberToken) and save to database.</p>\n<p>The following snippet helps in setting up cookie for the website.\n<code>cookie := http.Cookie{\n        Name:     \"remember_token\",\n        Value:    user.RememberToken,\n        HttpOnly: true,\n                Expires: time.Now().Add(24 * time.Hour),\n    }\n    http.SetCookie(w, &amp;cookie)</code></p>\n<p>It is very easy to see cookie in a browser and temper it. To protect our cookie from temporary we can use some options like HttpOnly (disallow javascript to temper cookie) or <strong>not</strong> store the remember token in plain text at all.</p>\n<p>Here's your editable cookie: <img alt=\"Cookie in browser\" src=\"https://thepracticaldev.s3.amazonaws.com/i/jfxm04nk1r11d4hi3t8e.png\" /></p>\n<p>We would rather save a hash of same token and on each request compare it with token provided from cookie.\nIf we use bcrypt hashing, we would:\n1. Lookup a user from database using email\n2. Hash the user's password with salt which is part of PasswordHash field\n3. Compare\nBut in case of remember token we cannot lookup a user from database since we are not storing RememberToken in db (only it's hash), we need a way to hash value from cookie first, then find the user.\n The simple hashing function like <a href=\"https://golang.org/pkg/crypto/hmac/#New\">crypto/hmac</a> would work.\n<code>// Hash generates hash for given input with secret key of hmac object\nfunc Hash(token string) string {\n       // sha256 is hashing algorithm\n       // key can be taken from env variable too\n    h := hmac.New(sha256.New, []byte(\"somekey\"))\n    h.Reset() // Clear previous leftover bytes\n    h.Write([]byte(token))\n    b := h.Sum(nil)\n    return base64.URLEncoding.EncodeToString(b)\n}</code></p>\n<figcaption>utils/utils.go</figcaption>\n<p>Here's how we will use all of this:\n{% gist https://gist.github.com/erdahuja/bde6b526b485e5265920c300f5db6780 %}\nThese signIn method will be called once after <em>login</em> or <em>sign up</em> and a remember token would be stored in the browser as cookie and it's hash version would be saved to the database. </p>\n<p>Now when user visits authenticated pages like profile or accounts. We can use the token came into request and compare it with the hashed version stored in the database. \n{% gist https://gist.github.com/erdahuja/4a4417ac3fc3a6245e17555f45d42ef5 %}\nSince we know in <em>hashing</em> for same input string same output is generated. We can hash the remember token came in cookie and compare.\n{% gist https://gist.github.com/erdahuja/3aae745e1c8102a47b69be7fe153e66d %}\nThese are a few parts of building an authentication system. The full working project is available <a href=\"https://github.com/erdahuja/blog-auth-system\">here</a>. This also has html templates parsing in go about which i wrote an in depth guide here:\n{% link https://dev.to/dpkahuja/learn-and-use-templates-in-go-5cei %}\nThe project structure is simplified for easier understanding with error handling, separate handler file for each route etc. Thanks for making it till last.<img alt=\"Yay\" src=\"https://thepracticaldev.s3.amazonaws.com/i/co5tn743v039g88aecvn.gif\" />\nPlease feel free to comment any doubts about unclear things or say hello on <a href=\"https://twitter.com/dpkahuja\">twitter</a>.\nMy other work: \n{% link https://dev.to/dpkahuja/get-a-taste-of-concurrency-in-go-1e58 %}</p>", "published": "2022-11-27T11:16:42.920Z", "lastEdited": "2022-11-27T11:16:42.920Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_95_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--kyMz4QsD--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/gv693pnsfpr45mx6hnpo.jpg", "source": "https://dev.to/dpkahuja/learn-and-build-web-authentication-system-universal-principles-370e", "stars": [279, 280, 278, 281, 282, 283], "saves": [280, 281, 282, 283, 31]}}, {"model": "main.post", "pk": 96, "fields": {"author": 284, "title": "Coercion in JavaScript", "slug": "coercion-in-javascript-96", "description": "What is Coercion?   Coercion is the process of conversion of one data type to another.   1 +...", "content": "<h2>What is Coercion?</h2>\n<p>Coercion is the process of conversion of one data type to another.</p>\n<p>```javascript\n1 + '2'\n// 1 coerces to '1'\n// '12'</p>\n<p>1 + true\n// true coerces to 1\n// 2</p>\n<p>1 + null\n// null coerces to 0\n// 1</p>\n<p>1 + undefined\n// undefined coerces to 0\n// 1</p>\n<p>'abc' + undefined\n// undefined coerces to 'undefined'\n// 'abcundefined'</p>\n<p>1 &lt; 2 &lt; 3\n// =&gt; true &lt; 3 (left to right associativity)\n// =&gt; 1 &lt; 3 (coercion)\n// =&gt; true</p>\n<p>1 &gt; 2 &gt; 3\n// =&gt; false &gt; 3\n// =&gt; 1 &gt; 3\n// =&gt; false\n```</p>\n<p>JavaScript can give weird and unexpected results when comparing. Thus, it is better to use <code>===</code> instead of <code>==</code> for comparisons as <code>===</code> doesn't coerce.</p>\n<p>```javascript\n1 == '1'\n// true\n// coercion</p>\n<p>1 === '1'\n// false\n```</p>\n<blockquote>\n<p>Coercion decisions are made by the <em>JavaScript Engine</em> itself.</p>\n</blockquote>\n<h2>Manual Coercion</h2>\n<p>Here's how you can manually convert to a datatype:\n```javascript\nconst number = 42;\nconst string = '42';</p>\n<p>Number(string);\n// Coerces to number\n// 42</p>\n<p>String(number);\n// Coerces to string\n// '42'</p>\n<p>Boolean(string);\n// Coerces to boolean\n// 1\n```</p>\n<h2>Conditional Statements</h2>\n<p>The conditions inside <em>if</em>, <em>ternary</em> operator, <em>while</em> loop etc. are coerced to <em>Boolean</em>.</p>\n<h4>Truthy and Falsy</h4>\n<p>Any value that coerces to <em>true</em> is called <em>truthy</em> and to <em>false</em> is called falsy.</p>\n<p>There are only 6 <em>falsy</em> values, everything else is <em>truthy</em>:\n1. <em>false</em>\n2. <em>0</em>\n3. <em>''</em>, <em>\"\"</em> (Empty String)\n4. <em>null</em>\n5. <em>undefined</em>\n6. <em>NaN</em></p>\n<h4>Watch out for these:</h4>\n<p>```javascript\nBoolean({});\n// true</p>\n<p>Boolean([]);\n//true</p>\n<p>Boolean(\"0\");\n// true</p>\n<p>null == 0\n// false\n```</p>\n<blockquote>\n<p>And that's all folks! Thank-you for reading and have a wonderful day 😄</p>\n</blockquote>", "published": "2022-11-27T11:16:56.926Z", "lastEdited": "2022-11-27T11:16:56.926Z", "status": "published", "thumbnail": "posts/thumbnails/thumbnail_of_96_from_url.png", "thumbnail_url": "https://res.cloudinary.com/practicaldev/image/fetch/s--WCEZ_Lzs--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://thepracticaldev.s3.amazonaws.com/i/oq6romzwsg84a7zhgh89.jpg", "source": "https://dev.to/godcrampy/coercion-in-javscript-4k7g", "stars": [285, 284, 286, 192, 31], "saves": [285, 286, 192]}}, {"model": "main.post", "pk": 97, "fields": {"author": 287, "title": "Queue in JS", "slug": "queue-in-js-97", "description": "This is how I wrote the Queue without shifting , but just moving the Pointers... Feedback?", "content": "<p>This is how I wrote the Queue without shifting , but just moving the Pointers... Feedback?</p>\n<p>{% replit @chattes/queue-prompt %}</p>", "published": "2022-11-27T11:17:03.621Z", "lastEdited": "2022-11-27T11:17:03.621Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161038.png", "source": "https://dev.to/chattes/queue-in-js-1mio", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 98, "fields": {"author": 288, "title": "LeetCode \"13. Roman to Integer\"", "slug": "leetcode-13-roman-to-integer-98", "description": "Solution of LeetCode \"13. Roman to Integer\"", "content": "<hr />\n<p>title: LeetCode \"13. Roman to Integer\"\npublished: true\ndescription: Solution of LeetCode \"13. Roman to Integer\"\ntags: [leetcode, python]</p>\n<hr />\n<p>Umm...\nHow to remove a lot of<code>pos += 1</code> and <code>pos &lt; len_str</code></p>\n<p><a href=\"https://leetcode.com/problems/roman-to-integer/\">13. Roman to Integer</a></p>\n<p>```python\nclass Solution:\n    def romanToInt(self, s: str) -&gt; int:</p>\n<pre><code>    if not s:\n        return 0\n\n    pos = 0\n    len_str = len(s)\n    numOfDigits = 0\n    symbols = ['dummy', ('I', 'V', 'X'), ('X', 'L', 'C'), ('C', 'D', 'M'), ('M')]\n    s = s[::-1]\n    value = 0\n\n    while pos &lt; len_str:\n        num = 0\n        numOfDigits += 1\n\n        # ex. I ... III, VI ... VIII\n        if s[pos] == symbols[numOfDigits][0]:      \n            num = 1\n            pos += 1\n            while pos &lt; len_str and s[pos] == symbols[numOfDigits][0]:\n                num += 1\n                pos += 1\n            if pos &lt; len_str and s[pos] == symbols[numOfDigits][1]:\n                num += 5\n                pos += 1\n\n        # ex. V, IV\n        elif s[pos] == symbols[numOfDigits][1]:\n            num = 5\n            pos += 1\n            if pos &lt; len_str and s[pos] == symbols[numOfDigits][0]:\n                num -= 1\n                pos += 1\n\n        # ex. IX, XC, M\n        elif s[pos] == symbols[numOfDigits][2]:\n            num = 10\n            pos += 1\n            if pos &lt; len_str and s[pos] == symbols[numOfDigits][0]:\n                num -= 1\n                pos += 1\n\n        value += num * (10 ** (numOfDigits - 1))\n\n    return value\n</code></pre>\n<p>```</p>", "published": "2022-11-27T11:17:06.631Z", "lastEdited": "2022-11-27T11:17:06.631Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161039.png", "source": "https://dev.to/takakd/leetcode-13-roman-to-integer-5f05", "stars": [221, 288, 31], "saves": [221]}}, {"model": "main.post", "pk": 99, "fields": {"author": 289, "title": "Doubt regarding how to execute html code in eclipse", "slug": "doubt-regarding-how-to-execute-html-code-in-eclipse-99", "description": "how can i execute my html code in the eclipse and also the web development projects?", "content": "<p>how can i execute my html code in the eclipse and also the web development projects?</p>", "published": "2022-11-27T11:17:11.140Z", "lastEdited": "2022-11-27T11:17:11.140Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161041.png", "source": "https://dev.to/srisrinu/doubt-regarding-how-to-execute-html-code-in-eclipse-1l8l", "stars": [31], "saves": []}}, {"model": "main.post", "pk": 100, "fields": {"author": 290, "title": "How does python handles \" in a string when \\ is not provided?", "slug": "how-does-python-handles-in-a-string-when-is-not-provided-100", "description": "I am a beginner in python. I knew that \" is a special character and needs \\ to print it. But how does...", "content": "<p>I am a beginner in python. I knew that \" is a special character and needs \\ to print it. But how does python handles \" in a string when \\ is not provided? For example </p>\n<p><code>s = \"Google,\" \"facebook\"\nprint(s)</code></p>\n<p>prints \"Google,facebook\". How does python skips the middle \"?</p>", "published": "2022-11-27T11:17:14.003Z", "lastEdited": "2022-11-27T11:17:14.003Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161042.png", "source": "https://dev.to/farzanrashid/how-does-python-handles-in-a-string-when-is-not-provided-4i8b", "stars": [291, 292], "saves": [291, 31]}}, {"model": "main.post", "pk": 101, "fields": {"author": 293, "title": "Database Domain Driven Design", "slug": "database-domain-driven-design-101", "description": "Are databases dead?   I mean relational databases. I happen to be a highly experienced SQL S...", "content": "<h1>Are databases dead?</h1>\n<p>I mean relational databases. I happen to be a highly experienced SQL Server and Oracle database developer. At the same time, I have very strong .net and CSharp skills server side and web architecture. It is a rare mix, and whilst many claim they are fullstack, they aren't. The reason is, they give zero respect to databases. They don't understand relational modelling, how to get good performance from databases, the benefits of set based data access.</p>\n<p>We now have many ways to completely abstract away the persistence layer, to bring data retrieval into the application layer. Entity Framework, in many ways, is brilliant. It combines the power of linq - a functional approach to data access on objects, and expression tree parsing to SQL.</p>\n<p>This is a godsend to many coders who absolutely hate databases. I know it and have seen it. Firstly, SQL developers are seen as crusty weirdos who somehow shouldn't be in development at all.</p>\n<p>Then there are NoSQL databases, places where data can get persisted, offers large scalability, although, without the ACID features needed to guarantee data consistency.</p>\n<h1>Most fullstack development is a myth</h1>\n<p>It shouldn't be a surprise that each layer within a stack can take months to years to learn. This means we see people specialising despite the management myth that everybody is equally skilled in everything. </p>\n<p>The reason why it is preferable for fullstack capabilities is because it cuts down on translation between layers. If your developer is capable of building a decent front-end and building the effective data model, able to decide where business logic should sit - this is far more optimal than having different teams each doing their part.</p>\n<h1>Technical and Personnel thoughts</h1>\n<h2>The object array is a table?</h2>\n<p>The one common thing to connect everything is the object array. It happens that this is true;\n* A POCO is the same as a record in a table.\n* A rowset is a collection of records.\n* An IEnumerable<POCO> is the same as an SQL Resultset.\n* Table variables are translatable to IEnumerable<POCO>.\n* The json array object maps perfectly to an IEnumerable<POCO> and table variable.</p>\n<h2>SQL Server has some pretty unique features.</h2>\n<ul>\n<li>The output inserted.* collects new identity values.</li>\n<li>Table variables can collect inserted identity records.</li>\n<li>Databases maintain transactions.</li>\n<li>Table variables operates outside transactions, in Oracle, this is known as PRAGMA Autonomous.</li>\n</ul>\n<p>It means, we can pass in a lot of table variables, do stuff with the data and get data back out. The data layer can become, if chosen to be, idempotent and immutable.</p>\n<h2>Why doing too much data access in C# with Entity Framework is a terrible idea</h2>\n<p>Entity Framework is incredible. It lets coders get access to data and if they understand set based data access, engineers proficient with SQL gain a lot through linq. Because .Net requires the assembly to get compiled, any issue with query logic has to be rereleased. As a developer who has worked on large production systems, being able to release an SQL fix as opposed to a new release of a library can be a huge benefit. (Technically, views, functions are compiled but not in the same way).</p>\n<p>Another reason why EF is a real issue, is for this reason;\n``` csharp\n/<em>pseudo code, so don't shoot me :)</em>/</p>\n<p>var customer = dbset<customer>;\nvar order = dbset<order>;\nvar sales = dbset<sales>;</p>\n<p>```</p>\n<p>The above is likely to result in multiple roundtrips. Clever people may state, we could do a join on the above BUT maybe we don't want to.\nThe below is a single round trip.</p>\n<p>``` sql</p>\n<p>SELECT * FROM customer;\nSELECT * FROM order ;\nSELECT * FROM sales ;</p>\n<p>```</p>\n<p>Suddenly, we have reduced the number of connections to and from the database.</p>\n<h2>Table variables and Dapper POCOs</h2>\n<p>Dapper is an incredible framework which undertakes mapping database objects to C#/.Net objects. Even better, it supports retrieval of multiple datasets in one single query execution.</p>\n<p>To get the idea, here is some sample code;\n``` csharp </p>\n<p>public class typOrder\n{\npublic int OrderId {get;set;}\npublic DateTime OrderDate {get;set;}\npublic int CustomerID {get;set;}\npublic int TotalItems {get;set;}\npublic decimal OrderCost {get;set;}\n}\n```</p>\n<p><code>sql\ncreate type app.typOrder as table \n(\n OrderId int, \n OrderDate datetime, \n CustomerID int,\n TotalItems int,\n OrderCost decimal\n)</code></p>\n<p>More interestingly IEnumerable<typOrder> = app.typOrder;</p>\n<h1>What is Database Domain Driven Design (DDDD)</h1>\n<p>I read the book on DDD, read up on the Complex Event Processing pattern, and the Command Query Responsibility Segregation (CQRS). It struck me how perfect SQL Server is for being able to let significant parts of the data management and processing remain in the database.</p>\n<p>Solving the problem of teams specialising</p>\n<p>It became clear, the major reason why multi-layer projects fail is because either, there isn't sufficient cross platform skills or the teams fail to communicate with each other. </p>\n<p>What one team sees is inherently different to another team. This is why business logic was moved out of the database tier to the business layer.</p>\n<p>Model View Controller is a pattern created to solve this. The Model (Data Tier) can do its stuff independently of the View (Presentation Layer). In reality we get many more layers. By creating so much separation, the frontend and backends get obfuscated.</p>\n<p>Thinking object arrays. If every layer, fundamentally operates on the concept of object arrays, it becomes easier for each team to talk with other teams. Sure, there may be some extra presentation considerations and some more specific logic needed in the code layer, but typically, what exists in the database is what gets displayed in the front end.</p>\n<p>This makes sense because data modelling and record state is a complicated problem best solved by SQL.</p>\n<h2>So DDDD is what again?</h2>\n<p>It is letting all layers have aggregate roots, aggregates, value objects and entities. We accept there will be variability in some features of these but, we can look at any layer and see the same structures. This increases understanding across teams.</p>\n<h2>Example of DDDD</h2>\n<p>I am not going to write all the code on this post. I have a complete system for doing this on my projects but it is more about the concepts than implementation.</p>\n<h3>Database</h3>\n<p>(All parameters/variables are table variables).</p>\n<p>``` sql </p>\n<p>create procedure app.SetOrder \n@typOrder app.typOrder\n,@typCustomer app.typCustomer\n,@typProduct app.typProduct\n,@typShipping app.typShipping</p>\n<p>AS </p>\n<p>DECLARE @typOrder_OUTPUT app.typOrder\n,@typCustomer_OUTPUT app.typCustomer\n,@typProduct_OUTPUT app.typProduct\n,@typShipping_OUTPUT app.typShipping </p>\n<p>INSERT INTO @typOrder_OUTPUT\nSELECT ... FROM ETC</p>\n<p>...</p>\n<p>SELECT * FROM @typOrder_OUTPUT \nSELECT * FROM @typCustomer_OUTPUT \nSELECT * FROM @typProduct_OUTPUT \nSELECT * FROM @typShipping_OUTPUT </p>\n<p>```</p>\n<p>Hopefully, you follow the above. We pass in table variables, we do stuff with that data and return the results. Importantly, the database is responsible for managing the state of the data and whether data gets returned, committed etc. I left out a lot of code.</p>\n<p>People will say, that is too much code, well you can write metadata views to return a lot of the repetitive code to avoid lots of the same effort.</p>\n<p>Most importantly, we can see how that above structure could be returned to a front-end MVVM.</p>\n<p>``` csharp\npublic class SetOrder_Data</p>\n<p>(\npublic IEnumerable<typOrder> typOrder{get;set;}\npublic IEnumerable<typCustomer>typCustomer {get;set;}\npublic IEnumerable<typProduct>typProduct{get;set;}\npublic IEnumerable<typShipping>typShipping {get;set;}\n}</p>\n<p>… </p>\n<p>return JsonData(setOrder_Data);\n```</p>\n<p>Within the API controller, we have returned the same object to the client that is in the database. Furthermore, we aren't at risk of overposting attacks because we have decided the objects.</p>\n<h2>Conclusion on DDDD</h2>\n<p>This post will be a lot to take in, a lot has been left out. Noteably my code on top of Dapper to do all the data management within C#. I wrote a number of database objects to use metadata to help generate code automatically too.</p>\n<p>It may seem like a lot of hard work but it significantly simplifies data representation across layers.</p>", "published": "2022-11-27T11:17:20.059Z", "lastEdited": "2022-11-27T11:17:20.059Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161043.png", "source": "https://dev.to/zakwillis/database-domain-driven-design-4bk3", "stars": [], "saves": [31]}}, {"model": "main.post", "pk": 102, "fields": {"author": 294, "title": "How Do You Refactor Any Existing and Very Old Codebase? ", "slug": "how-do-you-refactor-any-existing-and-very-old-codebase-102", "description": "So at work, I have been working on codebase which is almost 2 years old. It seems like its written by...", "content": "<p>So at work, I have been working on codebase which is almost 2 years old. It seems like its written by some students who were just started to learn Android development. Here's some quick facts about codebase:</p>\n<ul>\n<li>\n<p>No architecture like MVP, MVVM or anything. Each single Activity class does everything like UI work, data persistence, network calls, deep links integrations, business logic, and so on. This results in classes with 20,000 lines of code and makes code navigation a lot harder. </p>\n</li>\n<li>\n<p>Some Activity classes include code for 3-4 screens. Like layouts have 4-5 sub layouts and those are being shown/hidden according to the state of app. Again, each screens' logic, network calls, persistence etc goes into same activity class. </p>\n</li>\n<li>\n<p>The code is in Java and uses lots of old libraries like Volley etc. I have recently shifted codebase to use AndroidX which itself was a big problem. There's no Material Components or anything close to Material Design. Sometimes it feels like the designer is more familiar with iOS. So design patterns, UI interactions are more like iOS way. So sometimes it becomes hard to create such in Android. </p>\n</li>\n<li>\n<p>The app uses lots of flavors and dimensions to create white labeled app for each client using different server, databases, color schemes, and which features to enable etc. </p>\n</li>\n</ul>\n<p>Now we are scaling to more clients day by day. We want to refactor the codebase to Kotlin and preferably use some architecture atleast a little. We are currently removing network calls from all classes and shifting them to a repository class at start. </p>\n<p>How do we proceed with this? We would love to know your feedback. </p>", "published": "2022-11-27T11:17:24.150Z", "lastEdited": "2022-11-27T11:17:24.150Z", "status": "published", "thumbnail": "", "thumbnail_url": "https://dev.to/social_previews/article/161045.png", "source": "https://dev.to/wajahatkarim/how-do-you-refactor-any-existing-and-very-old-codebase-2oec", "stars": [295, 294, 296, 297, 31], "saves": [295, 294, 297, 31]}}, {"model": "main.comment", "pk": 1, "fields": {"author": 3, "post": 1, "parent": null, "content": "<p>In case that Matthew James Taylor mention about margin-bottom. You still can solve problem by adding :  </p>\n<p>.ad {  </p>\n<p>margin-bottom: 1em;  </p>\n<p>margin-top: -1em;  </p>\n<p>}</p>\n<p>I love margin bottom cause which means there is no unnecessary space before the first element.  </p>\n<p>For the last element, * + * margin top works &amp; looks cool BUT add *:not(:last-child) margin-bottom is more readable.   </p>\n<p>Sorry for my bad English</p>", "posted_at": "2022-11-27T10:54:04.711Z"}}, {"model": "main.comment", "pk": 2, "fields": {"author": 6, "post": 3, "parent": null, "content": "<p>Loved the article!</p>\n<p>I'm trying to learn more about Unity to make a game where my brother and I could play and code together. It inspired me to code more projects just for fun, cause it's been a while since I just code something that I really want or enjoyed.  </p>\n<p>This is a good habit, a health one and it improves your craft, so why not keep doing?</p>\n<p>Testing the projects and games that I made its the funniest part of the process, beacause when it works (hope it works) you only have fun.</p>\n<p>I'm still in the part where I'm learning from tutorials how to use Unity and make games with it, feel free to give me some tips.</p>", "posted_at": "2022-11-27T10:58:05.995Z"}}, {"model": "main.comment", "pk": 3, "fields": {"author": 5, "post": 3, "parent": 2, "content": "<p>Thanks, I'm glad to hear that I could inspire someone :)</p>\n<p>The coding just for fun is awesome, Coding Dojos are also an excellent place to put that in practice.</p>\n<p>I guess my best tip would be, pick a single game mechanic and play with that. Build something as simple as possible around it. You will be amazed on how cool a game can become with just one mechanic. </p>", "posted_at": "2022-11-27T10:58:06.012Z"}}, {"model": "main.comment", "pk": 4, "fields": {"author": 8, "post": 4, "parent": null, "content": "<p>Please explain why React and Vue are not “truly reactive”.</p>", "posted_at": "2022-11-27T10:58:10.934Z"}}, {"model": "main.comment", "pk": 5, "fields": {"author": 7, "post": 4, "parent": 4, "content": "<p>Thank you for the comment!</p>\n<p>React and VueJs don’t make use of reactive programming. That is, they don’t track the data flow through the application. </p>\n<p>Instead they treat the application as a black box and when a state changes, they rerender the whole component and all it’s children, instead of just the changed value. </p>", "posted_at": "2022-11-27T10:58:10.944Z"}}, {"model": "main.comment", "pk": 6, "fields": {"author": 7, "post": 4, "parent": null, "content": "<p>Thanks for reading!</p>\n<p>But yes, you can use Svelte for progressive enhancement, juse like for Vue or React. You inject it just as you would with vue or React, you can even add svelte to a react or vue app if you would like.</p>\n<p>I also like both Vue, React and Angular. However, I like the way Svelte is making us think about creating user interfaces.</p>", "posted_at": "2022-11-27T10:58:10.952Z"}}, {"model": "main.comment", "pk": 7, "fields": {"author": 9, "post": 4, "parent": null, "content": "<p>Thanks for the article, it has really inspired me to try Svelte :]  </p>\n<p>But what about large applications? Are there any references?</p>", "posted_at": "2022-11-27T10:58:13.426Z"}}, {"model": "main.comment", "pk": 8, "fields": {"author": 7, "post": 4, "parent": 7, "content": "<p>Thank you for reading and for the nice comment 😊</p>\n<p>For building larger applications, there is a project called Sapper. Sapper helps with code splitting, E2E testing and a lot of other nice features. </p>\n<p>Companies like New York Times and goDaddy use Svelte. The have a list of companies on their site. </p>", "posted_at": "2022-11-27T10:58:13.435Z"}}, {"model": "main.comment", "pk": 9, "fields": {"author": 10, "post": 4, "parent": null, "content": "<p>I don't necessarily agree with the \"virtual dom is a bottleneck\" argument, Attachment is an expensive process for the browser and the whole purpose of the virtual DOM is to prevent unnecessary re-paints. I am also curious of how well does Svelte works with immutability as it seems to rely on change-detection as opposed to unidirectional data-flow. Lastly, the word framework has been thrown around but neither Vue or React are frameworks but libraries, and I think Svelte fits that description as well as there are no set ways of doing the data-layer like Angular.</p>", "posted_at": "2022-11-27T10:58:14.999Z"}}, {"model": "main.comment", "pk": 10, "fields": {"author": 7, "post": 4, "parent": 9, "content": "<p>Thanks for reading and thank you for the comments. </p>\n<p>I didn't expand on why I think the virtual DOM is a bottleneck. The short answer is that it performs a lot of unnecessary DOM diffing in the process of deciding what to update, since when using the virtual DOM the framework/library don't have any trace of the data flow. A lot of code also runs more times than necessary. If you don't trust, check out the talk by one of the founders of SvelteJS (<a href=\"https://youtu.be/AdNJ3fydeao\">youtu.be/AdNJ3fydeao</a>).</p>\n<p>I think you could use immutability, but I haven't tried it. But looks like you could do something like this(<a href=\"https://svelte.dev/tutorial/svelte-options\">svelte.dev/tutorial/svelte-options</a>)</p>\n<p>Svelte has a store feature for handling data if that's what you are referring to.</p>", "posted_at": "2022-11-27T10:58:15.009Z"}}, {"model": "main.comment", "pk": 11, "fields": {"author": 11, "post": 4, "parent": null, "content": "<p>Grateful that you wrote this as it means I don't have to look up elsewhere what Svelte is all about :) And your description was very easy to digest! I like that they have gone for the very vanilla JavaScript feeling, but I'm not a big fan of things like the <code>$:</code> label - seems like a bit of hack... 😅</p>", "posted_at": "2022-11-27T10:58:16.980Z"}}, {"model": "main.comment", "pk": 12, "fields": {"author": 7, "post": 4, "parent": 11, "content": "<p>Thank you for the nice comment 😊</p>\n<p>The $: is valid JavaScript, however I get that it can feel a bit unusual at first. I think we can get used to it, since it gives so much value. You can for instance also use it for watching log messages, </p>\n<p>$: console.log(value) </p>\n<p>That will print every time value changes, which is very useful for debugging as well. </p>", "posted_at": "2022-11-27T10:58:16.987Z"}}, {"model": "main.comment", "pk": 13, "fields": {"author": 13, "post": 5, "parent": null, "content": "<p>Tests in pre-commit hooks is a very bad way. You need to commit whenever you want, regardless of compilation and test.  </p>\n<p>```\ngit commit --no-verify</p>\n<p>```</p>", "posted_at": "2022-11-27T10:58:23.530Z"}}, {"model": "main.comment", "pk": 14, "fields": {"author": 15, "post": 6, "parent": null, "content": "<p>😄</p>", "posted_at": "2022-11-27T10:58:29.300Z"}}, {"model": "main.comment", "pk": 15, "fields": {"author": 16, "post": 6, "parent": null, "content": "<p>It's incredibly challenging. But you have to decide what the most important thing is for you.</p>\n<p>It's just like accepting speaking opportunities. Those more than likely pull you away from some other area in your life, wether it be alone/recharge time, time with your partner, time with your friends. You are giving up something to get something.</p>\n<p>I have 2 girls with 1 more on the way. The last 5 years have been some of the most challenging in my life. But I have learned so much! I've transitioned from being a full-time contributor to now leading our entire engineering department.</p>\n<p>Everyone sacrifices different things. For me it's been side projects and basketball, which is one of my favorite things to do. But that being said, I've still pushed to make time for it, and now that my girls are both over 2yrs old, it's much easier for me to schedule that time for myself. It just looks different than when I was 25.</p>\n<p>You did ask for honest feedback, so I will say, my advice would be to remove all other variables and decide if you really want to be a parent. Your job will more than likely change. Your hobbies will more than likely change. Your child will be your child for the rest of your life. I think you just need to decide if that is something that excites you. If it is, then I would say everything else will work out.</p>\n<p><strong>Benefits I have seen:</strong></p>\n<ol>\n<li>My kids have helped expose my areas of weakness and selfishness. Much like my marriage did for the first 5 years without kids.</li>\n<li>My wife and I have become much better partners in life because we have faced a lot of challenging times together.</li>\n<li>Not many things in life have brought me more joy than connecting with my girls.</li>\n<li>I get to watch classic 90's kids movies with them! 🤣</li>\n<li>Truly disconnecting from my work and 'grown-up' life during play time with my kids bring out joy from deep within my heart.</li>\n</ol>\n<p><strong>Downside:</strong></p>\n<ol>\n<li>It's much harder for me to have 'me' time. I recharge during alone time, which means I have to get up super early, or leave the house for that to happen.</li>\n<li>Waking up with a baby in the middle of the night just sucks really bad. But it's only a season.</li>\n<li>Traveling 'can' be harder, but some people overcomplicate it or make it seem impossible to travel with children.</li>\n<li>I'm a very focused person, so working remotely from home is very challenging, but I choose to go into the office because it's easier for me to focus there.</li>\n</ol>\n<p>Kudos for being vulnerable in your posting this and asking for feedback!!</p>", "posted_at": "2022-11-27T10:58:30.704Z"}}, {"model": "main.comment", "pk": 16, "fields": {"author": 14, "post": 6, "parent": null, "content": "<p>From someone who'd like to remain anonymous: </p>\n<p>I'm sure you'll get plenty of advice and tips from parents here. I  </p>\n<p>want to answer from the other side of the spectrum - as someone who  </p>\n<p>had a big battle in thoughts until fairly recently, and eventually  </p>\n<p>settled on the decision NOT to have kids.</p>\n<p>I am 36 years old, and similarly to you, I love my life, my career,  </p>\n<p>but also the overall freedom and flexibility that not having kids  </p>\n<p>provides. I met my husband quite late in life (just turned 30, he's a  </p>\n<p>year younger) and that has impacted a lot of things too. Around the  </p>\n<p>similar age as you, so still fairly early in our relationship, I  </p>\n<p>started having similar doubts. Should we try to have kids? Neither of  </p>\n<p>us was really terribly excited about the idea, but we also felt a bit  </p>\n<p>\"if not now then when\". At the same time, we had so many things we  </p>\n<p>wanted to do and kept postponing trying to conceive. It just never  </p>\n<p>felt the right time.  </p>\n<p>I went through a phase where the \"clock ticking\" sounded really loud.  </p>\n<p>Even then, the idea of motherhood did not sound very appealing. I  </p>\n<p>mean, some kids are okay, in small doses, but the pregnancy, then  </p>\n<p>birth (I'm absolutely terrified by this), then the period with no  </p>\n<p>sleep, infant crying when you don't know the reason... I think I'd be  </p>\n<p>much more likely to think about having kids seriously if I could get  </p>\n<p>them at around 3 years old.  </p>\n<p>Basically, my whole thinking back then was around the lines of \"I  </p>\n<p>still don't really feel the need to have kids, I am still not sure if  </p>\n<p>I want them - but if I ever do want them, I kind of need to get into  </p>\n<p>it NOW\".</p>\n<p>In the end we had more and more conversations, more and more often  </p>\n<p>saying that well, maybe it really is not for us. And once we finally  </p>\n<p>settled on this, I felt such an incredible RELIEF. That I can stop  </p>\n<p>thinking about it, stop reconsidering, stop obsessing about it.</p>\n<p>You say you didn't think you wanted kids, but you're reconsidering  </p>\n<p>now. You don't say what made you reconsider - is that you actually  </p>\n<p>feel you do want to be a mom, or is it just that you feel the clock  </p>\n<p>ticking (now or never). You also completely don't mention the  </p>\n<p>potential father - what does he think, does he want to have kids, or  </p>\n<p>is he indifferent, or maybe you're thinking of being a single mom  </p>\n<p>through in vitro or something similar.  </p>\n<p>When you talk about \"informed decision\", I can't help but wonder if  </p>\n<p>it's a sign that maybe you are still not fully in the \"I want kids\".  </p>\n<p>When I watch other parents, it's very clear that in order to have kids  </p>\n<p>you have to sacrifice, a lot. Things will change for you, there is no  </p>\n<p>question about it. Yes, of course people make it work, of course it is  </p>\n<p>getting better - and of course (most) parents say it's worth it. But  </p>\n<p>you will leave your previous life behind, and there'll be something  </p>\n<p>very different on the other end. I am not really sure if it can be an  </p>\n<p>\"informed decision\", where you look into \"pros and cons\" and the pros  </p>\n<p>outweigh. Because I'm not sure if from pragmatic / cold perspective  </p>\n<p>this \"calculation\" can ever come out in favour of kids. From pragmatic  </p>\n<p>perspective - there are soooo many cons and limitations and drawbacks</p>\n<ul>\n<li>and yet, and yet, people decide to have kids, because deep down they\nsimply know that it's worth it, for them.</li>\n</ul>\n<p>But I think the whole \"worth it\" is very personal. Since I settled my  </p>\n<p>decision, with a bit of \"but what if I change my mind\", I've come  </p>\n<p>across more child-free-by-choice people. Some of them quite a bit  </p>\n<p>older. All of them say they don't have any regrets. Of course I'm sure  </p>\n<p>equally there are some that do - maybe they prefer not to hang out in  </p>\n<p>certain places. But the point is, it is possible to go through life,  </p>\n<p>not wanting/needing/having kids, and be completely fulfilled.</p>\n<p>So I think ultimately the question should be: do you really want kids?  </p>\n<p>If you do, you have your answer, you will make it work, no matter the  </p>\n<p>challenges, just like thousands of people do. And conversely, if you  </p>\n<p>still don't feel you want it and it's more of \"but what if I miss the  </p>\n<p>time when I can do it\" - it's a personal choice. But for me, I decided  </p>\n<p>that \"fear of missing out\" is not a good enough reason to bring  </p>\n<p>another human onto this planet.</p>", "posted_at": "2022-11-27T10:58:30.720Z"}}, {"model": "main.comment", "pk": 17, "fields": {"author": 17, "post": 6, "parent": null, "content": "<p>I can relate to that and I must say that I exchanged a lot of time that I previously used for mentorship, public speaking, conduct workshops, etc. for time with my family and I don't regret it. Those things are something that will always be there, but the kids are growing so fast that you want to enjoy every moment :).</p>", "posted_at": "2022-11-27T10:58:31.969Z"}}, {"model": "main.comment", "pk": 18, "fields": {"author": 18, "post": 6, "parent": null, "content": "<p>My wife does most of the parenting and I do the working.  </p>\n<p>She hates it every time I have to do a talk but I'm going to do it anyway because she has to accept I have to do them (because that's what my brain tells me to do)</p>\n<p>So I just have to pick and choose my events carefully and ensure their high impact.</p>\n<p>So I can't do as many events or meet as many people as I like I just have to put more effort into each and everything I do.</p>", "posted_at": "2022-11-27T10:58:33.411Z"}}, {"model": "main.comment", "pk": 19, "fields": {"author": 19, "post": 6, "parent": null, "content": "<p>If you decide to have kids, you'll have to make sacrifices. And that's fine. </p>\n<p>Whatever you do, it comes with a cost and an opportunity cost. You only have that much time and energy. Does this mean you'll have to give up your career and public speaking? Definitely not. Maybe you'll force yourself to find - as Ben said - better speaking engagements. Maybe you'll force yourself to work not harder, but smarter.</p>\n<p>If a career means to you - I don't judge or even imply - working 50-60+ hours a week, then yes, you'll have to give that up if you want to raise kids.</p>\n<p>Of course, there are parents, who barely see their kids, but I think if you have the choice, it's better to be part of their lives and let them be a significant part of your life. Hence I use the expression raising kids. In my view, there is a big difference between having kids and raising them.</p>\n<p>You can also consider another aspect. You'll work for decades. For long decades. You'll still have plenty of time to speak even more and work even more than you'd ever want. While having kids in older ages is a possibility, but it has both some dangers and probably more cons than pros. (I speak only of personal experience.)</p>\n<p>I don't think you'd be perceived less seriously with kids unless you'd be the dad/mom who does nothing but shows his/her phone around the office with their little ones all day long. :)</p>\n<p>While being a parent is a difficult job, more difficult than writing code or speaking in front of hundreds of people - at least to me -, I didn't regret and I can only encourage people not to hesitate and not to be afraid if you ever want a family. But that's something you should know!</p>", "posted_at": "2022-11-27T10:58:34.598Z"}}, {"model": "main.comment", "pk": 20, "fields": {"author": 20, "post": 6, "parent": null, "content": "<p>You can do many things for your career and have kids. I have two girls. Not a problem. It's only the wrong mentality and the lack confidence that can hinder you.</p>", "posted_at": "2022-11-27T10:58:36.088Z"}}, {"model": "main.comment", "pk": 21, "fields": {"author": 21, "post": 6, "parent": null, "content": "<p>If you really want a kid then do it now. </p>\n<p>You can speak and work when you're older, but having kids gets riskier with every year.</p>\n<p>It is a lot of work and will probably be the biggest challenge of your life, and it will impact your career heavily, since you'll be out for at least a year. But it's also the best thing there is and ultimately the reason we're all here.</p>\n<p>I'd say after the first year it gets easier to leave it with the dad, babysitter, kindergarden, grandparents for longer, so you can take up talking and working again.</p>", "posted_at": "2022-11-27T10:58:37.188Z"}}, {"model": "main.comment", "pk": 22, "fields": {"author": 22, "post": 6, "parent": null, "content": "<blockquote>\n<p>My speaking career has really exploded and I am consistently getting asked to talk at conferences.</p>\n</blockquote>\n<p>I think this is an area you might be able to look for more vertical growth instead of horizontal. Instead of looking for more speaking engagements, maybe you could angle towards being selective, getting more noteworthy opportunities, and generally saying no to more stuff.</p>\n<p>Otherwise, it <em>seems</em> like our industry is becoming more and more flexible in terms of remote-first organizations which might give you a lot of your time back, conferences which offer better childcare than they used to, and generally more compassion for how parenting and careers need to work together.</p>\n<p>I don't think that \"compassion\" is super evenly distributed, so I can't say it's better for <em>everyone</em>, but if you're in a leadership role, if you're getting these opportunities, understand that you have the leverage to have the career and personal life of your choosing. You will likely face new stigmas, but you'll also find new opportunities.</p>\n<p>I'm 30 years old and not a parent, and not a woman, but I think about some of this as someone who may become a parent and would like to help make this industry a better place for moms and dads. So that was just my 2 cents.</p>\n<p>So take my thoughts in complement to <a href=\"https://dev.to/msarit\">@msarit</a>\n's reply and everyone else who may come at it with a different perspective.</p>\n<p>Here's a comment that may also be helpful from <a href=\"https://dev.to/kaydacode\">@kaydacode</a>\n's <a href=\"https://dev.to/kaydacode/imposter-syndrome-anxiety-me-5372\">wonderful post</a></p>\n<p><a href=\"/syntaxseed\"><img alt=\"syntaxseed profile image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VZTEKZ6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tpHTGNIt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/146027/1b4a6700-5bb2-46ca-86e1-74880593f31b.jpeg\" /></a>\n<a href=\"/syntaxseed\">SyntaxSeed (Sherri W)</a> \n<a href=\"https://twitter.com/SyntaxSeed\"><img alt=\"twitter\" src=\"/assets/twitter-logo.svg\" /></a>\n<a href=\"https://github.com/syntaxseed\"><img alt=\"github\" src=\"/assets/github-logo.svg\" /></a></p>\n<p><a href=\"/syntaxseed/comment/doga\">Aug 6</a> </p>\n<p>This is a topic I have soo many thoughts about!! ❤️</p>\n<p>I've had 3 children during my career as a developer &amp; an extended 7-year stint as a full-time mom, only working very part-time on dev projects during that time.</p>\n<p>These problems are very real. And unfortunately the challenges compound if you have more babies. The 'pregnancy-brain' (a horrible mix of nutrient-drain, dehydration, sleep-deprivation, distraction with thoughts &amp; worries, and the exhausting hyper-alertness you have when taking care of young children &amp; babies) only compounds on itself over time.</p>\n<p>And time outside of our rapidly changing industry is difficult.</p>\n<p>The good news is that it isn't permenent. Your focus will return both with proper self-care (drink water, sleep, recuperate nutrients) and as your children grow less in need of hyper-vigilance (approx 2-3yrs old).</p>\n<p>My focus is fully back, and I used my out of industry time to binge a ton of learning resources &amp; tackle projects I'd never have done otherwise.</p>\n<p>Not to mention my 3 amazing sons. Worth it x 1000!</p>\n<p>We need to talk about this more, to normalise &amp; raise awareness of women's issues in our industry. Creating life, has some side-effects on our professional lives - that is very OK &amp; should come with support from our colleagues &amp; employers. </p>\n<p>This is the perspective of someone who took a <em>substantial</em> time devotion full-time parenting and still came out of it with new perspective and opportunity that wouldn't have had before.</p>\n<blockquote>\n<p>My focus is fully back, and I used my out of industry time to binge a ton of learning resources &amp; tackle projects I'd never have done otherwise.</p>\n</blockquote>\n<p>Still coding, still taking part in the community, still finding new career opportunities, and they seem to say it was worth it. 😄</p>", "posted_at": "2022-11-27T10:58:38.694Z"}}, {"model": "main.comment", "pk": 23, "fields": {"author": 23, "post": 6, "parent": null, "content": "<p>Like <a href=\"https://dev.to/msarit\">@msarit</a>\n, I've tried a few times to write this. Someone once said, and I'm paraphrasing, that the point of parenting is not that adults raise children, but that childen raise adults. Parenting pointed a searchlight at my own childishness and immaturity. I'm a better adult for the experience. </p>\n<p>For example, I remember feeling an enormous amount of jealousy toward our first child when he was born: now there was another man in my wife's life who was demanding all her attention (and getting it!) No longer was I the centre of her world. Having kids forced me to grow up. I was 30 years old. It was about time. </p>\n<p>Now, I'm down the other end of the demographic spectrum with my 60th birthday a little over a year away. My kids are adults themselves. My career is no longer my ultimate reality -- the thing I sacrifice anything and everything for the glory and advancement of -- and arguably never should have been. But would I have even realized that without having been the dad I have been and still strive to be?</p>", "posted_at": "2022-11-27T10:58:40.520Z"}}, {"model": "main.comment", "pk": 24, "fields": {"author": 24, "post": 6, "parent": 23, "content": "<p>Glorious answer ... Thank you for sharinf!</p>", "posted_at": "2022-11-27T10:58:41.730Z"}}, {"model": "main.comment", "pk": 25, "fields": {"author": 25, "post": 6, "parent": null, "content": "<p>I have a 1.5 years old baby, I’m Tech Lead in one of our company projects, I have a babysitter taking care of my son from 9 to 6 when I work as much as I can and then I leave my computer behind and spent my time with my baby. Weekend are also family only time, basically a baby give me a better work-life balance.</p>\n<p>I occasionally talk at local meetups where I go with my son and partner.</p>\n<p>A baby will negatively affect your career only if you let it do it. Most of the time it will not and you will be happier than ever spending time with it.</p>", "posted_at": "2022-11-27T10:58:43.422Z"}}, {"model": "main.comment", "pk": 26, "fields": {"author": 24, "post": 6, "parent": null, "content": "<p>I've written and deleted my answer like 4 times now ... because I'm trying to answer you without writing a dissertation 😄</p>\n<p>Let me say this: As a mom of 2, I would never EVER give back the fact that I am a mother. It's the singular most incredible achievement and calling of my life. Having said that, I completely understand and applaud anyone who says they do not want to have kids. I consider it a blessing that such people KNOW that about themselves, why? Because parenthood is as selfless a calling as they come.</p>\n<p>I wish you deep wisdom as you make your decision. Good luck either way ❤️ 🤗 I blog a lot about the intersection between motherhood and my transition into tech <a href=\"https://arit.dev\">arit.dev</a></p>", "posted_at": "2022-11-27T10:58:43.430Z"}}, {"model": "main.comment", "pk": 27, "fields": {"author": 14, "post": 6, "parent": null, "content": "<p><em>From someone who'd like to remain anonymous:</em></p>\n<p>Hey Sloan thanks for posting this and hey to the anonymous person! I hope in the end you make the decision that makes you happy and keeps you happy!</p>\n<p>I am a father of two extremely energetic boys, one is 5 and the other is just over 1. I am a computer science teacher by profession and love programming on the side as a hobby and some personal work.</p>\n<p>I love my children they are a blessing in my life and this is something I could never regret! They make me happy at sad times and annoy the hell out of me at worst of times :-)</p>\n<p>I have my set 8am to 4pm Mon-Fri work, as soon as I come home I find energy to speak to them, cuddle them, basically make time for them no matter how tired or tied up I am.</p>\n<p>There will be sacrifices needed to be made that's just how it is. As I am writing this I have been interrupted four times (now six and counting) by my elder one, he's got questions about cars, what's faster a Lamborghini or a Ferrari? Why didn't I buy a Sport's style Audi instead of a Saloon :-)</p>\n<p>Yes it has taken me probably twice or more times longer but that's the juggle I have to do when I am at home. I may have to put my laptop to sleep in a moment to see if the toddler is stuck under a table and then continue when I come back.</p>\n<p>This isn't about my life around children, I just want to point out that this is what my life is like now and I love it, yes it is different but good different. I embraced it with many sacrifices, these sacrifices are my investment to my children.</p>\n<p>Life changes when you have children, cherish it! Give up some work if you have to for the children. They bring better happiness I promise!</p>\n<p>Check this video if you haven't already.</p>\n<p><a href=\"https://www.bbc.co.uk/news/av/world-39232538/bbc-interview-with-robert-kelly-interrupted-by-children-live-on-air\">bbc.co.uk/news/av/world-39232538/b...</a></p>\n<p>Good luck and God bless!</p>", "posted_at": "2022-11-27T10:58:43.439Z"}}, {"model": "main.comment", "pk": 28, "fields": {"author": 29, "post": 9, "parent": null, "content": "<p>Minification process can reduce 10% – 95% the size of code  </p>\n<p>For HTML compression, you can also use the following links  </p>\n<p><a href=\"https://url-decode.com/tool/minifyhtml\">url-decode.com/tool/minifyhtml</a>  </p>\n<p><a href=\"https://minifyhtml.org/\">minifyhtml.org/</a></p>", "posted_at": "2022-11-27T10:58:57.874Z"}}, {"model": "main.comment", "pk": 29, "fields": {"author": 33, "post": 19, "parent": null, "content": "<p>Very thorough write up. Graphql is so great to work with. </p>", "posted_at": "2022-11-27T10:59:33.295Z"}}, {"model": "main.comment", "pk": 30, "fields": {"author": 37, "post": 23, "parent": null, "content": "<p>Thanks for sharing this!</p>", "posted_at": "2022-11-27T10:59:48.062Z"}}, {"model": "main.comment", "pk": 31, "fields": {"author": 39, "post": 24, "parent": null, "content": "<p>You can also use <code>React.FC</code> instead of <code>React.FunctionComponent</code> 😃</p>", "posted_at": "2022-11-27T10:59:54.284Z"}}, {"model": "main.comment", "pk": 32, "fields": {"author": 38, "post": 24, "parent": 31, "content": "<p>Thx) Awesome!</p>", "posted_at": "2022-11-27T10:59:54.293Z"}}, {"model": "main.comment", "pk": 33, "fields": {"author": 40, "post": 24, "parent": null, "content": "<p>Nice article! you've made a small typo  </p>\n<p>```\nexport const Button: React.FunctionComonent<IProps> = ({ block, ...shared }) =&gt; {\n  return <button {...shared}>{children}</button>;\n}</p>\n<p>```</p>\n<p>should be Component or .FC</p>", "posted_at": "2022-11-27T10:59:56.419Z"}}, {"model": "main.comment", "pk": 34, "fields": {"author": 38, "post": 24, "parent": 33, "content": "<p><code>React.FC</code> and <code>React.FunctionComponent</code> is the same</p>", "posted_at": "2022-11-27T10:59:56.427Z"}}, {"model": "main.comment", "pk": 35, "fields": {"author": 41, "post": 24, "parent": null, "content": "<p>Although, there are differences between interface extends and &amp;</p>", "posted_at": "2022-11-27T10:59:58.127Z"}}, {"model": "main.comment", "pk": 36, "fields": {"author": 42, "post": 24, "parent": null, "content": "<p>Instead of <code>defaultProps</code>, I use:  </p>\n<p>```\nexport const Button: React.FunctionComponent<IProps> = ({ block, children, type = 'button', ...shared }) =&gt; {\n  return <button type={type} {...shared}>{children}</button>;</p>\n<p>}</p>\n<p>```</p>", "posted_at": "2022-11-27T11:00:00.472Z"}}, {"model": "main.comment", "pk": 37, "fields": {"author": 43, "post": 24, "parent": null, "content": "<p>It also would be better to use Extract on the shared button props to extract only <code>InputHTMLAttributes&lt;HTMLInputElement&gt;</code> props for <code>&lt;button {...extractedProps}&gt;</code>. In case if you decided to use some custom props for example <code>loading: boolean</code> it will also be sent to <code>&lt;button/&gt;</code> and cause warnings that your <code>loading</code> prop is not in default button props.</p>", "posted_at": "2022-11-27T11:00:02.485Z"}}, {"model": "main.comment", "pk": 38, "fields": {"author": 44, "post": 24, "parent": null, "content": "<p>I'm a little confused. You keep saying this provides \"strict\" typing, which I assume you mean strong typing. Since typescript happens before runtime and converts the code to javascript which will be executed in a javascript runtime, which is weakly typed your code will also be weakly typed. Typescript won't magically make the javascript runtime strongly typed. Are you meaning to say it provides static typing? Sorry, this very much is a semantic issue I'm trying to clarify.</p>", "posted_at": "2022-11-27T11:00:04.347Z"}}, {"model": "main.comment", "pk": 39, "fields": {"author": 38, "post": 24, "parent": 38, "content": "<p>I mean, that you have typings better than <code>any</code> and unnecessary to declare each native html property.</p>", "posted_at": "2022-11-27T11:00:04.357Z"}}, {"model": "main.comment", "pk": 40, "fields": {"author": 46, "post": 25, "parent": null, "content": "<p>I would recommend to have 2 collections in root: Profiles and Posts. Each Post should have <code>userId</code> and <code>userName</code> (or any other field you want to be able to filter). </p>", "posted_at": "2022-11-27T11:00:09.022Z"}}, {"model": "main.comment", "pk": 41, "fields": {"author": 50, "post": 28, "parent": null, "content": "<p>The history has proven that the standard education process is not the best knowledge one can obtain.  </p>\n<p>See the bio of Bill Gates and Albert Einstein as examples.  </p>\n<p>I do not know anything about you, Graciano, but I am sure your way of thinking has some advantages over mine way of thinking (I give myself as an example of a person who passed through the standard education process).  </p>\n<p>Cheers and be happy about this!</p>", "posted_at": "2022-11-27T11:00:25.147Z"}}, {"model": "main.comment", "pk": 42, "fields": {"author": 51, "post": 28, "parent": null, "content": "<p>It's inevitable to do so, unfortunately. I compare myself to others (especially via viewing their lives on social media), which I find to be unhealthy. it's true what you wrote, that people rarely (or never) post about / show their hard days on social media. I think it's OK to compare yourself with others but don't overdo it...</p>", "posted_at": "2022-11-27T11:00:26.580Z"}}, {"model": "main.comment", "pk": 43, "fields": {"author": 52, "post": 28, "parent": null, "content": "<p>I struggle with relaxing on weekends due to this sort of comparison. I feel like I am wasting my time if I am not doing something productive.</p>\n<p>But, if I focus solely on those around me, such as my colleagues, they don't tend to work on things over the weekend and yet they are still great.</p>\n<p>That helps me relax a bit. If they don't need to, then I don't need to. That is a helpful comparison.</p>\n<p>I try to focus on comparing my current self to where I want to get to. Normally that takes the form of admiring my colleagues' skills. Just makes think, \"if I can be like this in 5 years, I'll be well happy\".</p>\n<p>I'll never be the best. I can accept that. But, I definitely have the room to grow and get somewhere towards the top.</p>\n<p>Maybe, if we all had this sort of mindset of just doing what we can. We will generally be happier.</p>", "posted_at": "2022-11-27T11:00:28.446Z"}}, {"model": "main.comment", "pk": 44, "fields": {"author": 53, "post": 28, "parent": null, "content": "<p>Hi, yes! Being a mentor to others in a different industry I’ve discovered self comparison to be a downer. But if anything it can be used to motivate oneself in therapy too... if I look at the traits and qualities of certain individuals I admire and strive to adopt them, I too can be like them. </p>\n<p>I definitely don’t think I’ll ever be like anyone with a CS degree and it’s pointless comparing... plus I don’t have the youth those nerds lol</p>", "posted_at": "2022-11-27T11:00:30.622Z"}}, {"model": "main.comment", "pk": 45, "fields": {"author": 54, "post": 28, "parent": null, "content": "<p>Why would someone's ideas have authority over yours? Both your and their ideas should be treated equal. Your code is your creativity, your personality. The best approach to treating everyone equally is to accept people's personalities and code as they are. There are of course important things like code readability and maintainability, as well as important personal qualities like professionalism, but that's it, the rest is your personal quirks that should be accepted by others. Think of your friends, you accept them the way they are, and if you are your own friend, you will accept yourself as you are, with your own quirks and good weirdness. Everyone is different in their own weirdness and it makes them better or worse suited for every specific situation, but you are as important and valued as your manager, superior, coworker, etc. In other words, love and accept yourself as you do to your friends and your family, and embrace what makes you different from others.</p>", "posted_at": "2022-11-27T11:00:32.049Z"}}, {"model": "main.comment", "pk": 46, "fields": {"author": 55, "post": 28, "parent": 45, "content": "<p>Imagine that you were the CEO of some company. There is a problem and your best senior and an intern come to 2 different solutions. You hear them out both... Fine.</p>\n<p>Now imagine you had to do it 50 times a day, this would take much of your time and it would be ineffective because the senior would probably have a better solution 99% of the time.</p>\n<p>The senior has authority over the intern. It's nothing personal, it's just that those years and years of experience make a difference. And in the finite amount of time we have, we can't treat everyone the same.</p>\n<p>If we did, when you go to the doctor, you would listen to janitor's advice as well.</p>", "posted_at": "2022-11-27T11:00:33.404Z"}}, {"model": "main.comment", "pk": 47, "fields": {"author": 58, "post": 30, "parent": null, "content": "<p>Updated browser support</p>\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8_XPsjFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://caniuse.bitsofco.de/image/details.jpg\"><img alt=\"Data on support for the details feature across the major browsers from caniuse.com\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8_XPsjFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://caniuse.bitsofco.de/image/details.jpg\" /></a></p>", "posted_at": "2022-11-27T11:00:40.428Z"}}, {"model": "main.comment", "pk": 48, "fields": {"author": 57, "post": 30, "parent": 47, "content": "<p>This is good. All browsers supporting it now. No reason to create custom components with <code>divs</code> and <code>span</code> anymore</p>", "posted_at": "2022-11-27T11:00:40.438Z"}}, {"model": "main.comment", "pk": 49, "fields": {"author": 61, "post": 32, "parent": null, "content": "<p>like reactjs &lt;3 thank bro </p>", "posted_at": "2022-11-27T11:00:49.641Z"}}, {"model": "main.comment", "pk": 50, "fields": {"author": 64, "post": 34, "parent": null, "content": "<p>Thanks great article !!</p>", "posted_at": "2022-11-27T11:00:58.913Z"}}, {"model": "main.comment", "pk": 51, "fields": {"author": 63, "post": 34, "parent": 50, "content": "<p>Thank you! Glad it could be of some help :)</p>", "posted_at": "2022-11-27T11:00:58.923Z"}}, {"model": "main.comment", "pk": 52, "fields": {"author": 66, "post": 35, "parent": null, "content": "<p>Love the scientific focus. We need to be better at tracking stuff like this because not all code has the same level of risk.</p>", "posted_at": "2022-11-27T11:01:06.343Z"}}, {"model": "main.comment", "pk": 53, "fields": {"author": 65, "post": 35, "parent": 52, "content": "<p>The \"scientific focus\" is what I was going for. This article will be one I update as I gather more information on various projects (may even include data passed on to me via reliable sources).</p>", "posted_at": "2022-11-27T11:01:06.355Z"}}, {"model": "main.comment", "pk": 54, "fields": {"author": 70, "post": 38, "parent": null, "content": "<p>I will just be honest, do what makes you happy and don't feel bad about it. That is what vacation is about. If being in front of your computer makes you happy then so be it. Don't let others tell you what vacation meens because you are you. One other point is try not to regret it, I feel it is not productive. </p>", "posted_at": "2022-11-27T11:01:26.198Z"}}, {"model": "main.comment", "pk": 55, "fields": {"author": 54, "post": 38, "parent": 54, "content": "<p>Even though this is true, the fact that the author felt regret is a sign that there was something missing. Something that makes you happy in the moment is not something you should always do. Sometimes it's important to spend time with friends and loved ones, sometimes it's important to take a \"me time\" break. It gives you a different kind of happiness, a more lasting happiness, even if it doesn't make you happy in the moment.</p>", "posted_at": "2022-11-27T11:01:26.208Z"}}, {"model": "main.comment", "pk": 56, "fields": {"author": 71, "post": 38, "parent": 54, "content": "<p>I agree. Completely.</p>\n<p>In my first job I thought I had to know <strong>everything</strong>, I'm not talking about the project itself, I'm talking about the internals of how the language was compiled, how the intermediate code would look like...</p>\n<p>I had to quit in 7 months because I was burned out and starting to develop a depression (Well, if I don't know anything, how will I survive in this business?).</p>\n<p>That depression took almost 3 years of my life. Of course YMMV, but, as <a href=\"https://dev.to/buphmin\">@buphmin</a>\n said \"do what makes you happy and don't feel bad about it\"</p>", "posted_at": "2022-11-27T11:01:28.707Z"}}, {"model": "main.comment", "pk": 57, "fields": {"author": 72, "post": 38, "parent": 54, "content": "<p>yea.. if it made you feel okay at the moment then it's okay. Don't think about it that much.. I just had one week vacation after working my ass off for a year and a half and you know what I did? I just cleaned and reorganized my house and computer. Also, I scheduled health appointments to check me since I didn't do it for a long time. At the end of my vacation, I was exhausted since I didn't really \"rest\" properly during that week but in the end, I was satisfied I could have the time to do what I wanted to do for some time. The next weekend I slept for 18 hours lol. </p>", "posted_at": "2022-11-27T11:01:30.284Z"}}, {"model": "main.comment", "pk": 58, "fields": {"author": 73, "post": 38, "parent": null, "content": "<p>I often ask myself this question. I had done this before, and it can definitely lead to burnout. Gotta be careful.</p>", "posted_at": "2022-11-27T11:01:32.102Z"}}, {"model": "main.comment", "pk": 59, "fields": {"author": 74, "post": 38, "parent": null, "content": "<p>Once I explained (many years ago) to my wife that coding gives me great joy, it was much easier to explain. So now when I code and she reads Marley and Me, we are both happy...well kinda.</p>\n<p>However we always agree no phones at the dinner table.</p>", "posted_at": "2022-11-27T11:01:34.275Z"}}, {"model": "main.comment", "pk": 60, "fields": {"author": 75, "post": 38, "parent": null, "content": "<p>I think it's important to stay on top of your game. Not even joking, but you can get really rusty and behind your normal flows if you completely don't touch a keyboard at all. This being said, the trick for me is to find a balance. At daily work, I need to be completely involved in coding. Writing a lot, deleting a lot, attending meetings, emergency bugs, etc, and it can be draining.  </p>\n<p>In holidays, I do much more passive activities: reading books, articles and blogs and writing code on paper to solve algorithm interview questions purely on conceptual levels. Thinking about inefficient algorithms, trying to optimize them, looking up online if stuck but always on paper. Then I write some code 2/3x a week</p>", "posted_at": "2022-11-27T11:01:36.035Z"}}, {"model": "main.comment", "pk": 61, "fields": {"author": 76, "post": 38, "parent": null, "content": "<blockquote>\n<p>Really nothing had changed from my day to day activities other than the setting and that I was working on fun problems by choice.</p>\n</blockquote>\n<p>I think this is the important sentence. You say \"nothing had changed\" but actually quite a lot had changed.</p>\n<p>Of course, it's often very good to completely distance yourself from work-related activities but at least for me, hacking away on some funny projects with zero pressure, zero deadlines and knowing I can just stop working on it if I don't enjoy it, is a great way to relax.</p>\n<p>I got into this industry because I loved coding. That has not changed so on my free time, if I have time and energy and I get excited about coding, I'll code to my heart's content.</p>", "posted_at": "2022-11-27T11:01:37.479Z"}}, {"model": "main.comment", "pk": 62, "fields": {"author": 77, "post": 38, "parent": null, "content": "<p>I write code all the time. Even during vacations. I look at coding as a form of catharsis. That said, sometimes I just switch off all electronics and just read a book(s). If writing a few lines of code for your project makes you happy then that is what you need. </p>", "posted_at": "2022-11-27T11:01:39.912Z"}}, {"model": "main.comment", "pk": 63, "fields": {"author": 78, "post": 38, "parent": null, "content": "<p>Take some time off to avoid burnout! You might form some new perspectives and be more productive when you return</p>", "posted_at": "2022-11-27T11:01:42.020Z"}}, {"model": "main.comment", "pk": 64, "fields": {"author": 79, "post": 38, "parent": null, "content": "<p>Code love code.</p>", "posted_at": "2022-11-27T11:01:43.818Z"}}, {"model": "main.comment", "pk": 65, "fields": {"author": 80, "post": 38, "parent": null, "content": "<p>Well, NoCodeRevolution by tools like Webflow is really making the code or no code debate easier by going with NoCode for small projects.</p>", "posted_at": "2022-11-27T11:01:46.344Z"}}, {"model": "main.comment", "pk": 66, "fields": {"author": 81, "post": 38, "parent": null, "content": "<p>Vacation, or plain off-time (weekends, after-hours, so on), I have a hard rule: No. Friggin. Building. None of it. </p>\n<p>I don't like that rule because my brain doesn't stop, but I need it for sanity. I have a compromise: No code, but I can ponder.</p>\n<p>I take that time away from the screen to do fun things - hiking, playing handball, watching raindrops, real-world things - but I allow myself to reflect on what I've built, and think-through what I plan on building. </p>\n<p>The outcome is a happy, well-balanced me, and a very clear direction once I'm allowed to lay down SLOCs again. </p>\n<p>Frankly, some of my best architectural decisions have come from this. I hike, I make my way to a good sit-rock in the middle of a raging creek, sit for a few hours and watch the water, then I go back to Intellij on Monday and build a streaming-data solution that has no problem with billion+ records/day </p>", "posted_at": "2022-11-27T11:01:47.652Z"}}, {"model": "main.comment", "pk": 67, "fields": {"author": 82, "post": 38, "parent": null, "content": "<p>Also, would love to add that if you like to code on vacations / free time, I can only congratulate you. It really shows passion for what you do.</p>\n<p>That's passion in my book.</p>", "posted_at": "2022-11-27T11:01:49.516Z"}}, {"model": "main.comment", "pk": 68, "fields": {"author": 83, "post": 38, "parent": null, "content": "<p>I disagree with the \"what makes you happy\". There are other things that make us happy and are not good for us. Actually most things in life are like that. I'm more for moderation. I used to be like that when I was younger but I got burned up. Back then I didn't realize the importance of disconnecting and I always felt that I had the energy.</p>\n<p>Don't get me wrong, some people cope well and don't get affected. But always remember that you only hear the successful stories and never the unhappy ones. Having said that, my advice is to be careful and always try to protect your health.</p>", "posted_at": "2022-11-27T11:01:51.160Z"}}, {"model": "main.comment", "pk": 69, "fields": {"author": 84, "post": 38, "parent": null, "content": "<p>hi. as I wrote <a href=\"https://dev.to/dvddpl/do-you-bring-your-laptop-on-vacation-5gpj\">here</a> I kinda have the same - but opposite - dilemma.  </p>\n<p>For me coding on vacation is a absolutely a no-go. I need to recharge, I need to keep some distance from what takes my mind busy all year round. and I do all I dont have much time or opportunity to do otherwise - that is mostly travelling, doing sports and be in the nature. ( as you can see not much of social things anyway. :-) )  </p>\n<p>But what you do on vacation is up to you. It is your vacation and you should do whatever makes you feel good and happy. It could be partying, and binge drinking and sleeping 4 h each night or could be coding your fun projects. Then over the years you will realize that some of the things you like to do are not that healthy ( coding on vacation might be one of these :-) ) and you might learn to stay away from it or reach some more balance. Until then, have fun and do what you love. </p>", "posted_at": "2022-11-27T11:01:52.822Z"}}, {"model": "main.comment", "pk": 70, "fields": {"author": 82, "post": 38, "parent": null, "content": "<p>Do what you want, how about that?</p>\n<p>My perspective on this - you are going to be working your ass off later until the point looking at code will become depressive without taking time off.</p>", "posted_at": "2022-11-27T11:01:52.830Z"}}, {"model": "main.comment", "pk": 71, "fields": {"author": 85, "post": 38, "parent": null, "content": "<p>Vacation is all about unwinding; if coding is your unwind then go for it. Personally, I like to give my vacation time to something other than coding. </p>", "posted_at": "2022-11-27T11:01:54.898Z"}}, {"model": "main.comment", "pk": 72, "fields": {"author": 86, "post": 38, "parent": null, "content": "<p>Since I have two kids, vacation mean I cannot be in front of my screen, even though sometimes I want to :D, but friend/family time is important, trust me they will be there when you down unless if you never socialize with them</p>\n<p>It's easier to find a new job rather than find a new family</p>\n<p>Just my 2 cents </p>", "posted_at": "2022-11-27T11:01:56.565Z"}}, {"model": "main.comment", "pk": 73, "fields": {"author": 87, "post": 38, "parent": null, "content": "<p>This thread and discussion section has been helpful for me. I'm also having a 2 week vacation from coding. Back to work starts tomorrow.</p>\n<p>My mindset was like, try to avoid from code as possible in these 2 weeks. It's very confusing, really; I want to solve / accomplish my tasks at work but at the same time I want to avoid it for the time being.</p>\n<p>This makes me kinda regretting it, because right off the bat, you can say that I'm not willing to accomplish my tasks.</p>\n<p>as <a href=\"https://dev.to/buphmin\">@buphmin</a>\n mentioned, \"One other point is try not to regret it, I feel it is not productive.\"</p>\n<p><a href=\"https://dev.to/ben\">@ben</a>\n also said \"Does it seem more out of work pressure, stress, and anxiety of not coding? Then work on finding time away from the screen.\"</p>\n<p>My pessimistic side tells me that I'm just fooling myself that what I'm doing (avoiding to code for the meantime) is right. But whatever. I know that I'll do my tasks anyway after this vacation.</p>\n<p>I'll try to gain these mindsets bit by bit.</p>", "posted_at": "2022-11-27T11:01:58.540Z"}}, {"model": "main.comment", "pk": 74, "fields": {"author": 88, "post": 38, "parent": null, "content": "<p>Yass..planning to spend my vacation like that as well. Keep doing what you love without thinking of others!!</p>", "posted_at": "2022-11-27T11:02:00.359Z"}}, {"model": "main.comment", "pk": 75, "fields": {"author": 89, "post": 38, "parent": null, "content": "<p>There is lots of great advice in the comments. Biggest thing about vacations is finding time to reflect on yourself &amp; as many said do what you enjoy. </p>\n<p>However, if you are on vacation with others the point of the vacation is to balance your enjoyments with the group. If that is what happened overall, then no guilt should be felt.</p>\n<p>But, when a vacation is all for you, then CODE LIKE THE WIND. Or do whatever your mind &amp; body is needing of you to enjoy your time away from work/school.</p>\n<p>Bottom line, if you still feel guilt about the vacation then you need to talk to those important to you from the vacation to make sure your relationships are solid. Once that is resolved, then there wont be any feelings of guilt.</p>", "posted_at": "2022-11-27T11:02:03.261Z"}}, {"model": "main.comment", "pk": 76, "fields": {"author": 90, "post": 38, "parent": null, "content": "<p>I find vacation a fun time to dig into something that I have wanted to explore and learn about, but will not provide value to my work right away.</p>\n<p>I also have a family with small children at home so I find it important to be intentional about it. I set some time boundaries, this is usually when kids wake up from nap. I set a goal to touch on certain things. But I don't set goals about the end product. This is my time to have fun and explore new things, not feel guilty that I didn't finish or that it was a crappy result. You need a few shitty projects under your belt to really understand new things sometimes.</p>\n<p>Most importantly do what you enjoy and don't feel guilty about it. It's your vacation spend it how you want to.</p>", "posted_at": "2022-11-27T11:02:05.375Z"}}, {"model": "main.comment", "pk": 77, "fields": {"author": 91, "post": 38, "parent": null, "content": "<p>I refrain completely from anything related to work on vacay. TBH I really want a complete digital detox while I vacate, but try to limit smartphone interactions to apps that provide a modicum of utility. </p>\n<p>Don’t get me wrong. I ❤️ coding but when it starts interfering with relationships it’s time to re-examine priorities. Vacations for me are time to spend with people I care about doing things we can share together. Vacations are a time to explore and my spirit yearns for that sort of unimpeded adventure from time to time. Last year we really didn’t get a vacation, so this year I’m finding at least two weeks to play hard, see parts of the world I haven’t and be with the people I love. I’ll bring a camera, but no laptop.</p>", "posted_at": "2022-11-27T11:02:07.785Z"}}, {"model": "main.comment", "pk": 78, "fields": {"author": 92, "post": 38, "parent": null, "content": "<p>Hello,</p>\n<p>To be honest, I just came back from a two week vacation and the same thing happened with me. I found myself taking my laptop to a coffee shop and coding and it was a lot of fun!</p>\n<p>It made me happy and I enjoyed every second. I totally agree with <a href=\"https://dev.to/buphmin\">@buphmin</a>\n, if that makes you happy too, then don't worry about it.</p>\n<p>Just make sure to see the people you love at least every other day if you live with them to keep in touch and all will be great.</p>", "posted_at": "2022-11-27T11:02:11.018Z"}}, {"model": "main.comment", "pk": 79, "fields": {"author": 93, "post": 38, "parent": null, "content": "<p>Code is refreshing 😂👍</p>", "posted_at": "2022-11-27T11:02:13.369Z"}}, {"model": "main.comment", "pk": 80, "fields": {"author": 94, "post": 38, "parent": null, "content": "<p>I think, as with most things, there are seasons where you can't get enough code and then there are seasons where you need breaks. I just try to listen to my body. Am I getting more frustrated than intrigued by problems? Maybe it's time for other activities. As I've gotten into my 6th year of writing software professionally I find myself coding less outside of work, but it could just be a season! Listen to your body and if you can find someone to check in with that knows you well that can be a great help too! I have a couple of people I check in with, one is my wife who really knows me well and can tell when I'm agitated or not happy, and then another is a coworker I trust to be honest with me about my work and how I'm interacting with others. At the end of the day, just ask yourself why you're doing what you do, and if the why is lined up with what you really value I think it will all shake out in the end. (Whether you're on vacation or not ha)</p>", "posted_at": "2022-11-27T11:02:15.830Z"}}, {"model": "main.comment", "pk": 81, "fields": {"author": 95, "post": 38, "parent": null, "content": "<p>My take is to not let inspiration go to waste. If you're inspired, code. If you're not, don't touch the dang coding machine. </p>\n<p>Sometimes I find that inspiration gets in the way of enjoying vacation, time with friends, etc. But I know it's a jerk move to my friends when I grab my coding machine out of habit. </p>", "posted_at": "2022-11-27T11:02:17.546Z"}}, {"model": "main.comment", "pk": 82, "fields": {"author": 96, "post": 38, "parent": null, "content": "<p>During a family trip overseas a few years back, I didn't code. We went to a 3-star full board hotel in a warm climate by the sea.</p>\n<p>My favourite memory from that holiday is of myself, wife &amp; son playing all day long in the approx 2m swell on the beach.</p>\n<p>Last year, my wife &amp; I were to go on an adults only holiday, 5-star all inclusive, right on the beach. She unfortunately couldn't come, so I went alone. My daily routine was breakfast, swim in the sea, comedy podcasts until the bar opened &amp; then sit under a tree writing code &amp; steadily drinking free beer (coding the way coding should be done...).</p>\n<p>I don't have anything near the same level of memories, but the point of the latter holiday was to unwind &amp; de-stress. I did that successfully.</p>\n<p>Different type of holiday, different activities, different memories.</p>\n<p>Both were very good holidays.</p>", "posted_at": "2022-11-27T11:02:19.382Z"}}, {"model": "main.comment", "pk": 83, "fields": {"author": 97, "post": 38, "parent": null, "content": "<p>While coding on vacation is something I personally do and enjoy as well, I try to manage my time to also hang out with friends and family as well :)</p>\n<p>If you feel satisfied doing something, there's no reason to feel bad about it , just make sure to give yourself some relaxation as well , because our line of work is mentally demanding and resting is a must ;)</p>", "posted_at": "2022-11-27T11:02:21.704Z"}}, {"model": "main.comment", "pk": 84, "fields": {"author": 22, "post": 38, "parent": null, "content": "<p>I think your feelings towards coding on vacation will, and probably should, change depending on your situation.</p>\n<p>Are you excited and itching to code? Then code!</p>\n<p>Does it seem more out of work pressure, stress, and anxiety of not coding? Then work on finding time away from the screen. It doesn't seem like this is how you were feeling.</p>\n<blockquote>\n<p>Inadvertently on this vacation, I isolated myself from my friends and family.</p>\n</blockquote>\n<p>I'd advise you to get in the habit of being very communicative about your planned activities, and set expectations. If you are excited about coding, make sure people know you're genuinely having a good time with it so they don't worry about you.</p>\n<p>I personally do try to get away from coding a bit, because I have been coding too much for too many years and time away is good for me. I used to spend all my vacation time coding and I loved it!</p>\n<p>I typically do more explicit reading about code while I'm on vacation. Loading up a book on a Kindle is a good way to keep learning if that's what's most interesting to you at the time while eliminating some stigma you get from your friends and family, because reading a book on vacation is non-controversial.</p>\n<p>Self-awareness is key. Pay attention to your mental health and do what's good for you. Remember, it's a marathon not a sprint.</p>", "posted_at": "2022-11-27T11:02:21.714Z"}}, {"model": "main.comment", "pk": 85, "fields": {"author": 98, "post": 38, "parent": null, "content": "<p><a href=\"https://dev.to/buphmin\">@buphmin</a>\n nailed it ... and the chili peppers said (quoting another group) \"It's better to regret something you did, then something you didn't do.\" - don't regret it, be happy! eat candy and write code #devLife</p>", "posted_at": "2022-11-27T11:02:23.046Z"}}, {"model": "main.comment", "pk": 86, "fields": {"author": 99, "post": 38, "parent": null, "content": "<p>It's good to have a great moment doing and follow your passions. But... I think it's also good to share that passion with someone :) In my experience, it's better when is shared :)</p>", "posted_at": "2022-11-27T11:02:24.983Z"}}, {"model": "main.comment", "pk": 87, "fields": {"author": 100, "post": 38, "parent": null, "content": "<p>I'm barely learning to code, so I can't usually offer anything helpful on here, but having grown up in a very strict religious family I think I'm something of an expert on guilt! I personally find Dr. David Burns' advice in Feeling Good to be super helpful. He dedicates am entire chapter to it, and I think it's well worth reading.</p>\n<p>As for what to do on vacation, I think the philosophical discussion in the comments is really interesting. My take on it is that \"vacation\" is a social construct and it's impossible not to be influenced by information from social dictates of what a vacation \"should\" look like. I guess it seems like a good idea to try to get in the weeds of what you actually want from a vacation vs. what other people say a vacation \"should\" be, although there's no getting around the fact that even our wants are shaped by social constructs. But to the extent possible, trying to figure out what you actually personally want from a vacation and basing your choices in that seems like a good idea going forward. Wouldn't worry about what's already past, though!</p>", "posted_at": "2022-11-27T11:02:27.447Z"}}, {"model": "main.comment", "pk": 88, "fields": {"author": 71, "post": 39, "parent": null, "content": "<p>I don't know if you're being serious or not.</p>\n<p>The best example is responsive images, you can see an example at <a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">MDN Docs</a></p>\n<p>The idea is... you have a set of sources (in this case, images in different sizes) that you control with CSS (<code>media queries</code>).</p>\n<p>But let's use the example from MDN:  </p>\n<p>```\n<img srcset=\"elva-fairy-320w.jpg 320w, elva-fairy-480w.jpg 480w, elva-fairy-800w.jpg 800w\" sizes=\"(max-width: 320px) 280px, (max-width: 480px) 440px, 800px\" src=\"elva-fairy-800w.jpg\" alt=\"Elva dressed as a fairy\"> </p>\n<p>```</p>\n<p>Notice the different images in the <code>set</code> of <code>src</code>?  </p>\n<p>Well, that's your <code>srcset</code>!</p>\n<p>In this example the author is using the CSS queries within the <code>&lt;img&gt;</code> tag with the attribute <code>sizes</code>.</p>\n<p>Let's transform it into a tiny CSS:  </p>\n<p>```\nimg {\n  width: 800px;\n}</p>\n<p>@media screen and (max-width: 480px) {\n  img {\n    width: 440px;\n  }\n}</p>\n<p>@media screen and (max-width: 320px) {\n  img {\n    width: 280px;\n  }\n}</p>\n<p>```</p>\n<p>I'm using <code>img</code> as a selector.</p>\n<p>Another thing, you might ask:  </p>\n<p>\"Why is the author setting the size to <code>280px</code> and the image has a width of 320px\"? That's - IMO - a way to avoid distortion (I can imagine some others explanations, but that's is the most simple).</p>\n<p>Anyway, take a few minutes to read the link I sent you and search the web for \"responsive image srcset example\" and you'll get some <em>way</em> better explanation that I just gave you!   </p>\n<p>(I'm on mobile and kinda in a hurry, but feel free to hit me up!)</p>\n<p>I hope I cleared the path a little.</p>", "posted_at": "2022-11-27T11:02:31.443Z"}}, {"model": "main.comment", "pk": 89, "fields": {"author": 101, "post": 39, "parent": 88, "content": "<p>I'm serious. For example:</p>\n<p>```\n  <img srcset=\"rufy1.jpg 850w, rufy2.jpg 900w\"\n       sizes=\"(max-width: 600px) 680px, (max-width: 2900px) 799px\"\n       src=\"rufy1.jpg\"\n       alt=\"One Piece\"></p>\n<p>```</p>\n<p>Why <code>rufy2.jpg</code> is shown when the viewport is 1200 pixels wide?</p>", "posted_at": "2022-11-27T11:02:31.454Z"}}, {"model": "main.comment", "pk": 90, "fields": {"author": 103, "post": 40, "parent": null, "content": "<p>Incase if anyone didn't watched this 🤣  </p>\n<p><a href=\"https://youtu.be/dKjCWfuvYxQ\">youtu.be/dKjCWfuvYxQ</a></p>", "posted_at": "2022-11-27T11:02:35.921Z"}}, {"model": "main.comment", "pk": 91, "fields": {"author": 106, "post": 43, "parent": null, "content": "<p>Refactoring code is a great skill that not so many developers have...</p>\n<p>Many developers feel afraid of doing these kind of tasks, it's actually scary cuz even changing one line could break things!</p>\n<p>Great job, <a href=\"https://dev.to/feruzoripov\">@feruzoripov</a>\n ✋</p>", "posted_at": "2022-11-27T11:02:48.744Z"}}, {"model": "main.comment", "pk": 92, "fields": {"author": 107, "post": 43, "parent": 91, "content": "<p>I've always found refactoring to be refreshing ans even fun.  </p>\n<p>Thinking of better and more efficient ways to do something.</p>\n<p>But thats just me. I always keep a copy of my original code just incase which helps me to not be afraid to royaly screw itup 😁.</p>", "posted_at": "2022-11-27T11:02:50.951Z"}}, {"model": "main.comment", "pk": 93, "fields": {"author": 108, "post": 43, "parent": 91, "content": "<p>This is how I started my open source contribution journey, thanks )</p>", "posted_at": "2022-11-27T11:02:53.275Z"}}, {"model": "main.comment", "pk": 94, "fields": {"author": 108, "post": 43, "parent": null, "content": "<p>I'm so inspired after reading it. Thank you so much )</p>", "posted_at": "2022-11-27T11:02:53.283Z"}}, {"model": "main.comment", "pk": 95, "fields": {"author": 109, "post": 43, "parent": null, "content": "<p>Great job <a href=\"https://dev.to/feruzoripov\">@feruzoripov</a>\n!</p>", "posted_at": "2022-11-27T11:02:55.661Z"}}, {"model": "main.comment", "pk": 96, "fields": {"author": 108, "post": 43, "parent": 95, "content": "<p>Thanks)</p>", "posted_at": "2022-11-27T11:02:55.670Z"}}, {"model": "main.comment", "pk": 97, "fields": {"author": 110, "post": 43, "parent": null, "content": "<p>Factoring is so important!</p>", "posted_at": "2022-11-27T11:02:57.987Z"}}, {"model": "main.comment", "pk": 98, "fields": {"author": 22, "post": 45, "parent": null, "content": "<p>This is truly fabulous advice.</p>", "posted_at": "2022-11-27T11:03:06.802Z"}}, {"model": "main.comment", "pk": 99, "fields": {"author": 112, "post": 45, "parent": 98, "content": "<p>Thank you Ben, much appreciated!</p>", "posted_at": "2022-11-27T11:03:06.811Z"}}, {"model": "main.comment", "pk": 100, "fields": {"author": 113, "post": 45, "parent": null, "content": "<p>Thanks a lot! </p>", "posted_at": "2022-11-27T11:03:08.942Z"}}, {"model": "main.comment", "pk": 101, "fields": {"author": 112, "post": 45, "parent": 100, "content": "<p>You're welcome - thanks for reading!</p>", "posted_at": "2022-11-27T11:03:08.950Z"}}, {"model": "main.comment", "pk": 102, "fields": {"author": 114, "post": 45, "parent": null, "content": "<blockquote>\n<p>Reflect on your experiences regularly</p>\n</blockquote>\n<p>Yes! Internships go so fast. I have to take a final one in my upcoming school year. Taking notes, no matter how small, has definitely saved me last time so I'll do that again.</p>\n<p>Thanks for writing down your thoughts this early :) </p>", "posted_at": "2022-11-27T11:03:11.103Z"}}, {"model": "main.comment", "pk": 103, "fields": {"author": 112, "post": 45, "parent": 102, "content": "<p>Good luck with it! And thank you for reading my post😊</p>", "posted_at": "2022-11-27T11:03:11.111Z"}}, {"model": "main.comment", "pk": 104, "fields": {"author": 115, "post": 45, "parent": null, "content": "<p>Next day 16 I'll start in a company as Java developer intern, and man... Your post came in a such good time. Actually, my future manager sent me this link 😂 I think he knows that I'm nervous and anxious. Keep writing about your thoughts, and progress. I'd love to know!  </p>\n<p>Thank you :D</p>", "posted_at": "2022-11-27T11:03:13.028Z"}}, {"model": "main.comment", "pk": 105, "fields": {"author": 112, "post": 45, "parent": 104, "content": "<p>Oh wow that's amazing that a manager thought my post was good enough to share! I will try my best to continue posting.   </p>\n<p>Thanks for reading and I hope your internship is going well😊</p>", "posted_at": "2022-11-27T11:03:13.035Z"}}, {"model": "main.comment", "pk": 106, "fields": {"author": 117, "post": 46, "parent": null, "content": "<p>Too much code... the over-complexity of this is outstanding </p>", "posted_at": "2022-11-27T11:03:20.872Z"}}, {"model": "main.comment", "pk": 107, "fields": {"author": 116, "post": 46, "parent": 106, "content": "<p>I can't disagree at all, @vsync  </p>\n<p>It must be due to my lack of understanding of hooks &amp; IntersectionObservers.</p>\n<p>Would you have any direction I can take to make it simpler?</p>", "posted_at": "2022-11-27T11:03:20.884Z"}}, {"model": "main.comment", "pk": 108, "fields": {"author": 118, "post": 46, "parent": null, "content": "<p>Sticky is always tricky :) thanks for the post, and the list of resources!</p>", "posted_at": "2022-11-27T11:03:22.146Z"}}, {"model": "main.comment", "pk": 109, "fields": {"author": 116, "post": 46, "parent": 108, "content": "<p>You're welcome &amp; great rhyming, Chris 🤣</p>", "posted_at": "2022-11-27T11:03:22.153Z"}}, {"model": "main.comment", "pk": 110, "fields": {"author": 119, "post": 46, "parent": null, "content": "<p>Great article. I'm adapting your code for use in a project and I had two questions about <code>stickyRefs</code>. </p>\n<p>First, are these refs removed from the <code>Map</code> when items (aka <code>StickyBoundary</code> + <code>Sticky</code> pairs) are unmounted in a dynamic list? If not, then I assume this is not good because if new items are created dynamically then you'll end up with zombie refs sticking around in that Map... and therefore a memory leak.</p>\n<p>Second, why is this context stored at the <code>StickyViewport</code> level? From a cursory look at the code, it seems that this context could be stored at the <code>StickyBoundary</code> level instead, which would simplify things because no Map would be needed, and would remove the memory leak risk noted above because if a section is unmounted then the context provider would be unmounted too. Is this correct?</p>\n<p>And one more question: I'm assuming that only one <code>&lt;Sticky&gt;</code> can be inside a <code>&lt;StickyBoundary&gt;</code>. Is this correct? If yes then while moving the context as noted above, I may add some error handling to prevent duplicate <code>&lt;Sticky&gt;</code> elements in a boundary. </p>", "posted_at": "2022-11-27T11:03:24.806Z"}}, {"model": "main.comment", "pk": 111, "fields": {"author": 116, "post": 46, "parent": 110, "content": "<p>Thank you for the questions and thoughtful comments/suggestions, Justin.</p>\n<blockquote>\n<p>First, are these refs removed from the Map when items (aka StickyBoundary + Sticky pairs) are unmounted in a dynamic list?</p>\n</blockquote>\n<p>No, they are not. Sticky refs are added using <code>addStickyRef</code> but not removed on unmount. That's a very nice catch. So <code>&lt;Sticky /&gt;</code> component should probably call a method like (not implemented in the post) <code>removeStickyRef</code> to destroy the ref.</p>\n<blockquote>\n<p>Second, why is this context stored at the StickyViewport level?</p>\n</blockquote>\n<p>You can have multiple <code>StickyViewport</code> components, each of which can fire different intersection events. The <code>StickyViewport</code> has <code>containerRef</code>, against which intersection observer (for each <code>Sticky</code> component) events are fire, not relative to <code>StickyBoundary</code>.</p>\n<blockquote>\n<p>I'm assuming that only one can be inside a . Is this correct?</p>\n</blockquote>\n<p>You can have multiple <code>Sticky</code> components but event will fire for the last one   </p>\n<p>Yes. You can have one <code>Sticky</code> component under <code>StickyBoundary</code>. I believe the original implementation in Google doc didn't allow this either (maybe too restrictive)...</p>", "posted_at": "2022-11-27T11:03:24.818Z"}}, {"model": "main.comment", "pk": 112, "fields": {"author": 121, "post": 47, "parent": null, "content": "<p>As a backend developer I love exploring different paths. Just discovered this series and liked so much. Thank you, very informative post and podcast indeed :)</p>", "posted_at": "2022-11-27T11:03:30.547Z"}}, {"model": "main.comment", "pk": 113, "fields": {"author": 120, "post": 47, "parent": 112, "content": "<p>Thanks so much for your comment, we are really glad you like the series and find everything very informative! Andrew has a way of putting things and he's got a lot of insights he's clearly been thinking about, so we're glad to bring this to you.</p>\n<p>On the point of exploring different paths, if cloud computing is something you're interested in, Andrew is kindly giving away free courses to get you certified - he usually charges for these but the first 100 commenters on this post get them without charge. If you want access to that just DM us on here and we'll send it over.</p>\n<p>Thanks for engaging regardless! :)</p>", "posted_at": "2022-11-27T11:03:30.558Z"}}, {"model": "main.comment", "pk": 114, "fields": {"author": 122, "post": 47, "parent": null, "content": "<p>My top tech skill is not giving up and just learning enough to get productive. (I hope that counts.) </p>", "posted_at": "2022-11-27T11:03:32.342Z"}}, {"model": "main.comment", "pk": 115, "fields": {"author": 104, "post": 47, "parent": 114, "content": "<p>It is. I'm N years in the industry and still find something to learn every day. There is no way one person will know everything. Learning on the go and solving an actual problem in front of you is a pragmatic approach. 👍</p>", "posted_at": "2022-11-27T11:03:32.351Z"}}, {"model": "main.comment", "pk": 116, "fields": {"author": 123, "post": 47, "parent": null, "content": "<p>My top skills are JavaScript, Go and PHP with React. Different language for different things!</p>", "posted_at": "2022-11-27T11:03:34.701Z"}}, {"model": "main.comment", "pk": 117, "fields": {"author": 120, "post": 47, "parent": 116, "content": "<p>You're very diverse there! Having both async + sync and functional + OOP languages under your belt is a huge advantage in this industry. Let's add cloud to that stack - free course access coming your way!</p>", "posted_at": "2022-11-27T11:03:34.711Z"}}, {"model": "main.comment", "pk": 118, "fields": {"author": 124, "post": 47, "parent": null, "content": "<p>My top skill is javascript and react native.</p>", "posted_at": "2022-11-27T11:03:36.331Z"}}, {"model": "main.comment", "pk": 119, "fields": {"author": 120, "post": 47, "parent": 118, "content": "<p>Nice! Into that JS Mobile Dev Stack! I'll send you free AWS course access shortly.</p>", "posted_at": "2022-11-27T11:03:36.338Z"}}, {"model": "main.comment", "pk": 120, "fields": {"author": 125, "post": 47, "parent": null, "content": "<p>Top skill is JS</p>", "posted_at": "2022-11-27T11:03:37.831Z"}}, {"model": "main.comment", "pk": 121, "fields": {"author": 126, "post": 47, "parent": null, "content": "<p>Can someone help me? I graduated as a full stack developer and feel stuck. I want to make a mobile app. My number is+14692265917 </p>", "posted_at": "2022-11-27T11:03:40.290Z"}}, {"model": "main.comment", "pk": 122, "fields": {"author": 120, "post": 47, "parent": 121, "content": "<p>We wouldn't help over phone Chad but you can always put #help posts on here! It's an open community and everyone's happy to help.</p>", "posted_at": "2022-11-27T11:03:40.310Z"}}, {"model": "main.comment", "pk": 123, "fields": {"author": 127, "post": 47, "parent": null, "content": "<p>Full stack is a competitive market? LOL ok. We're talking about people doing 3 - 4 jobs in one, which very few can effectively do. Any true full stack dev can get any job he wants.</p>", "posted_at": "2022-11-27T11:03:41.877Z"}}, {"model": "main.comment", "pk": 124, "fields": {"author": 128, "post": 47, "parent": null, "content": "<p>My top skills at present are HTML &amp; CSS. I am currently learning Javascript with the intention of adding React, VUE, Node &amp; WebGL/Three.js to my skills. </p>", "posted_at": "2022-11-27T11:03:44.246Z"}}, {"model": "main.comment", "pk": 125, "fields": {"author": 129, "post": 47, "parent": null, "content": "<p>My top skill right now would be JS mainly using in front end with React! Thank you! </p>", "posted_at": "2022-11-27T11:03:47.079Z"}}, {"model": "main.comment", "pk": 126, "fields": {"author": 120, "post": 47, "parent": 125, "content": "<p>Awesome, Alexis! Are you working currently or in the learning stages and looking to get a job?</p>\n<p>Also, we'll send you free access to the course from Andrew's company if you send us a DM. Thanks for commenting!</p>", "posted_at": "2022-11-27T11:03:47.088Z"}}, {"model": "main.comment", "pk": 127, "fields": {"author": 87, "post": 47, "parent": null, "content": "<p>My top skill is more on the back-end side of things, as my creative side is not that good to perform UI/UX and stuff. But I can definitely do front-end programming given that I have the UI design and whatnot =)</p>", "posted_at": "2022-11-27T11:03:47.098Z"}}, {"model": "main.comment", "pk": 128, "fields": {"author": 120, "post": 47, "parent": 127, "content": "<p>Thanks Ken! A lot of UI isn't being creative - I'm terrible at creative thinking for design but there are a lot of principles you can read and follow in your designs to make things stand out.</p>\n<p>Anyway, DM coming your way with a free course! Thanks!</p>", "posted_at": "2022-11-27T11:03:47.105Z"}}, {"model": "main.comment", "pk": 129, "fields": {"author": 130, "post": 47, "parent": null, "content": "<p>My top skill is discipline. It helps me to develop another skills :)</p>", "posted_at": "2022-11-27T11:03:48.590Z"}}, {"model": "main.comment", "pk": 130, "fields": {"author": 120, "post": 47, "parent": 129, "content": "<p>Gotta develop those soft skills too! :)</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:03:48.599Z"}}, {"model": "main.comment", "pk": 131, "fields": {"author": 131, "post": 47, "parent": null, "content": "<p>I have been working as a Php backend developer for 3 years now and I would say backend programming is my top skill, I'm trying to also learn some frontend tech, trying to learn React right now 💪</p>", "posted_at": "2022-11-27T11:03:50.358Z"}}, {"model": "main.comment", "pk": 132, "fields": {"author": 120, "post": 47, "parent": 131, "content": "<p>Awesome! Do you use a framework when working in PHP? And React is a great choice and fairly future proof. I'd suggest checking out Vue too as it ties in quite well with PHP's Laravel.</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:03:50.365Z"}}, {"model": "main.comment", "pk": 133, "fields": {"author": 132, "post": 47, "parent": null, "content": "<p>Backend development aside, my top tech skill would most probably be being able to use Python to automate most of the simple things I repeatedly do :D though I'm still just learning about automating stuff related to servers and deployment (devops, SRE, etc).</p>\n<p>Awesome post, got me more motivated to learn more 👍</p>", "posted_at": "2022-11-27T11:03:55.001Z"}}, {"model": "main.comment", "pk": 134, "fields": {"author": 133, "post": 47, "parent": null, "content": "<p>My top skill is back-end architecture design. I use .Net core, Go.</p>", "posted_at": "2022-11-27T11:03:57.156Z"}}, {"model": "main.comment", "pk": 135, "fields": {"author": 120, "post": 47, "parent": 134, "content": "<p>Awesome! I've been trying to learn GoLang, it seems great and unique in the way it handles concurrency.</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:03:57.163Z"}}, {"model": "main.comment", "pk": 136, "fields": {"author": 134, "post": 47, "parent": null, "content": "<p>My top skill is searching solutions for my problems on Internet</p>", "posted_at": "2022-11-27T11:03:59.585Z"}}, {"model": "main.comment", "pk": 137, "fields": {"author": 120, "post": 47, "parent": 136, "content": "<p>100% - isn't that everyone's top skill in development haha.</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:03:59.593Z"}}, {"model": "main.comment", "pk": 138, "fields": {"author": 135, "post": 47, "parent": null, "content": "<p>Yo! I am obsessed with learning new things, My best tech skill is HTML/CSS. Non-tech is UX research </p>", "posted_at": "2022-11-27T11:04:01.194Z"}}, {"model": "main.comment", "pk": 139, "fields": {"author": 136, "post": 47, "parent": null, "content": "<p>My top skill is Node and React........</p>", "posted_at": "2022-11-27T11:04:02.666Z"}}, {"model": "main.comment", "pk": 140, "fields": {"author": 120, "post": 47, "parent": 139, "content": "<p>Nice! If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:04:02.676Z"}}, {"model": "main.comment", "pk": 141, "fields": {"author": 137, "post": 47, "parent": null, "content": "<p>Great read my man, I think I'm personally best at backend development. I appreciate what you're doing for us developers!</p>", "posted_at": "2022-11-27T11:04:04.958Z"}}, {"model": "main.comment", "pk": 142, "fields": {"author": 138, "post": 47, "parent": null, "content": "<p>Top skill, all things considered, would be Javascript</p>", "posted_at": "2022-11-27T11:04:06.360Z"}}, {"model": "main.comment", "pk": 143, "fields": {"author": 139, "post": 47, "parent": null, "content": "<p>I think my Top skill rn is JavaScript.</p>", "posted_at": "2022-11-27T11:04:09.915Z"}}, {"model": "main.comment", "pk": 144, "fields": {"author": 120, "post": 47, "parent": 143, "content": "<p>JS seems to be the most popular answer!</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:04:09.925Z"}}, {"model": "main.comment", "pk": 145, "fields": {"author": 140, "post": 47, "parent": null, "content": "<p>My top skill is ruby &amp; rails, and definitely agree with Andrew in that aws is one of must-have skills.</p>", "posted_at": "2022-11-27T11:04:11.718Z"}}, {"model": "main.comment", "pk": 146, "fields": {"author": 120, "post": 47, "parent": 145, "content": "<p>Indeed, cloud in general is just an amazing way to stand out. Drop us a DM and we'll send you free access to his course!</p>", "posted_at": "2022-11-27T11:04:11.726Z"}}, {"model": "main.comment", "pk": 147, "fields": {"author": 141, "post": 47, "parent": null, "content": "<p>My skill is more on back-end more than front-end .Want to be a senior node js and angular developer.</p>", "posted_at": "2022-11-27T11:04:13.615Z"}}, {"model": "main.comment", "pk": 148, "fields": {"author": 142, "post": 47, "parent": null, "content": "<p>Hey Matthew, my top tech skill is JavaScript.</p>", "posted_at": "2022-11-27T11:04:15.228Z"}}, {"model": "main.comment", "pk": 149, "fields": {"author": 143, "post": 47, "parent": null, "content": "<p>My top skill right now is probably Javascript. But, I'm having fun constantly exploring all sorts of tech.</p>", "posted_at": "2022-11-27T11:04:16.950Z"}}, {"model": "main.comment", "pk": 150, "fields": {"author": 120, "post": 47, "parent": 149, "content": "<p>It's a fantastic attitude to maintain throughout your career to explore different types of tech! You never know what tools can be useful on what project.</p>\n<p>Can you open a DM with us Brian, then we can send you access to the free AWS Course 😄</p>", "posted_at": "2022-11-27T11:04:16.958Z"}}, {"model": "main.comment", "pk": 151, "fields": {"author": 144, "post": 47, "parent": null, "content": "<p>my top skill is javascript but i am constantly trying to fill my language arsenal.</p>", "posted_at": "2022-11-27T11:04:19.582Z"}}, {"model": "main.comment", "pk": 152, "fields": {"author": 120, "post": 47, "parent": 151, "content": "<p>Thanks Tyeshi! Send us a message on here and we'll give you free access to ExamPro.co's CCP course to help you get certified.</p>", "posted_at": "2022-11-27T11:04:19.591Z"}}, {"model": "main.comment", "pk": 153, "fields": {"author": 103, "post": 47, "parent": null, "content": "<p>my top skill is php .</p>", "posted_at": "2022-11-27T11:04:19.601Z"}}, {"model": "main.comment", "pk": 154, "fields": {"author": 120, "post": 47, "parent": 153, "content": "<p>Thanks for the comment Ponick! Open your messages and I'll send you access to the AWS course.</p>", "posted_at": "2022-11-27T11:04:19.608Z"}}, {"model": "main.comment", "pk": 155, "fields": {"author": 145, "post": 47, "parent": null, "content": "<p>My top skills are doing the backend as of now using ExpressJS and doing some frontend using VueJS</p>", "posted_at": "2022-11-27T11:04:21.792Z"}}, {"model": "main.comment", "pk": 156, "fields": {"author": 120, "post": 47, "parent": 155, "content": "<p>Vue is awesome - we use it on most of our projects! It's great that you're learning full stack JS too as it's a great way to get backend and frontend experience without the costly time of learning a backend language too.</p>\n<p>I'll also send you a copy of Andrew's AWS course straight to the DMs!</p>", "posted_at": "2022-11-27T11:04:21.799Z"}}, {"model": "main.comment", "pk": 157, "fields": {"author": 146, "post": 47, "parent": null, "content": "<p>My top skill is ruby. I really love enumerables</p>", "posted_at": "2022-11-27T11:04:23.158Z"}}, {"model": "main.comment", "pk": 158, "fields": {"author": 120, "post": 47, "parent": 157, "content": "<p>Andrew loves Ruby too! He's been using it since the <em>very</em> early version (Andrew, correct me, 0.52??) and ExamPro is built on it.</p>\n<p>We'll send you access to his AWS Certified Cloud Practitioner via DM, you just need to send us one first so we can connect - or follow us back. Either will do :)</p>", "posted_at": "2022-11-27T11:04:23.168Z"}}, {"model": "main.comment", "pk": 159, "fields": {"author": 147, "post": 47, "parent": null, "content": "<p>Matthew great read! MY best tech skill is CSS.</p>", "posted_at": "2022-11-27T11:04:25.462Z"}}, {"model": "main.comment", "pk": 160, "fields": {"author": 120, "post": 47, "parent": 159, "content": "<p>Thanks Stephen! Drop us a DM and we'll drop you free access to Andrew's AWS course</p>", "posted_at": "2022-11-27T11:04:25.470Z"}}, {"model": "main.comment", "pk": 161, "fields": {"author": 148, "post": 47, "parent": null, "content": "<p>A podcast fan here. Nothing better to make dead time a profitable time! My top skill is learning 📚. I'm currently leveling up my Angular skills.</p>", "posted_at": "2022-11-27T11:04:27.296Z"}}, {"model": "main.comment", "pk": 162, "fields": {"author": 120, "post": 47, "parent": 161, "content": "<p>Oh awesome Sebastian, thanks for being a listener! Let us know if there's anyone you want to be on (or even if you want to be on yourself!)</p>\n<p>That's also easily our favourite answer - if you can strategically learn and actually have a passionate for the process of learning something, the skills come naturally. It's something I work on a lot and will forever work on, the process of effective self-teaching.</p>\n<p>Also, free AWS course coming your way! Thanks again for your support and comment :)</p>", "posted_at": "2022-11-27T11:04:27.304Z"}}, {"model": "main.comment", "pk": 163, "fields": {"author": 120, "post": 47, "parent": 161, "content": "<p>Forgot to ask you to DM us first or follow back - either of means we can send you a message! Thanks</p>", "posted_at": "2022-11-27T11:04:27.313Z"}}, {"model": "main.comment", "pk": 164, "fields": {"author": 149, "post": 47, "parent": null, "content": "<p>Hi, mi top skill is PHP + Javascript in many levels now (Laravel + Vuejs). But always near AWS.</p>", "posted_at": "2022-11-27T11:04:29.109Z"}}, {"model": "main.comment", "pk": 165, "fields": {"author": 120, "post": 47, "parent": 164, "content": "<p>Sweet - that's the same stack we use!</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:04:29.118Z"}}, {"model": "main.comment", "pk": 166, "fields": {"author": 150, "post": 47, "parent": null, "content": "<p>My top skill is react.js. I just love working with a virtual DOM and stores like Redux make it even more fun.</p>", "posted_at": "2022-11-27T11:04:31.080Z"}}, {"model": "main.comment", "pk": 167, "fields": {"author": 120, "post": 47, "parent": 166, "content": "<p>Your attitude is on point!!! Check your DMs for free access to Andrew's AWS course :)</p>", "posted_at": "2022-11-27T11:04:31.088Z"}}, {"model": "main.comment", "pk": 168, "fields": {"author": 151, "post": 47, "parent": null, "content": "<p>Hi!   </p>\n<p>My best tech skill is APIs (architect 'em, build 'em, break 'em). Especially in Python!   </p>\n<p>I could definitely use this course so Thanks! </p>", "posted_at": "2022-11-27T11:04:32.435Z"}}, {"model": "main.comment", "pk": 169, "fields": {"author": 120, "post": 47, "parent": 168, "content": "<p>You've got the process down! AWS course link coming your way</p>", "posted_at": "2022-11-27T11:04:32.442Z"}}, {"model": "main.comment", "pk": 170, "fields": {"author": 152, "post": 47, "parent": null, "content": "<p>My top skill would be knowing random stuff of JS but now I’m also adding knowing random stuff about Python and Docker 🐍🐳</p>", "posted_at": "2022-11-27T11:04:34.132Z"}}, {"model": "main.comment", "pk": 171, "fields": {"author": 120, "post": 47, "parent": 170, "content": "<p>Good to see you working across multiple technologies!</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:04:34.139Z"}}, {"model": "main.comment", "pk": 172, "fields": {"author": 153, "post": 47, "parent": null, "content": "<p>My top skill is Javascript, currently interested in API development, and as such I'd like to take the AWS courses in order to learn about working with the Cloud. Cheers. </p>", "posted_at": "2022-11-27T11:04:35.708Z"}}, {"model": "main.comment", "pk": 173, "fields": {"author": 120, "post": 47, "parent": 172, "content": "<p>Access coming your way Marco! Enjoy the course.</p>", "posted_at": "2022-11-27T11:04:35.716Z"}}, {"model": "main.comment", "pk": 174, "fields": {"author": 120, "post": 47, "parent": null, "content": "<p>You'll get there! If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:04:35.723Z"}}, {"model": "main.comment", "pk": 175, "fields": {"author": 154, "post": 47, "parent": null, "content": "<p>My top skills is Javascript, I simply love Frontend but I also practice Backend to become a Fullstack Developer someday!</p>", "posted_at": "2022-11-27T11:04:38.991Z"}}, {"model": "main.comment", "pk": 176, "fields": {"author": 155, "post": 47, "parent": null, "content": "<p>oh..My top skill is Linux. thanks.</p>", "posted_at": "2022-11-27T11:04:41.313Z"}}, {"model": "main.comment", "pk": 177, "fields": {"author": 156, "post": 47, "parent": null, "content": "<p>My top skill is API development with Ruby on Rails and GraphQL 😇</p>", "posted_at": "2022-11-27T11:04:43.191Z"}}, {"model": "main.comment", "pk": 178, "fields": {"author": 157, "post": 47, "parent": null, "content": "<p>My top skill is in DevOps. Especially, using the Cloud Service provider like AWS and creating a CICD pipelines.</p>", "posted_at": "2022-11-27T11:04:45.812Z"}}, {"model": "main.comment", "pk": 179, "fields": {"author": 161, "post": 50, "parent": null, "content": "<p>This has been an amazing tutorial , few bugs but were resolved :)-</p>", "posted_at": "2022-11-27T11:04:58.958Z"}}, {"model": "main.comment", "pk": 180, "fields": {"author": 162, "post": 50, "parent": null, "content": "<p>thanks for sharing this great tutorial.  </p>\n<p>I had issue with ('model' =&gt; \\App\\User::class).  </p>\n<p>so I changed it to ('model' =&gt; \\App\\Models\\User::class),  </p>\n<p>and it works now.</p>", "posted_at": "2022-11-27T11:05:00.760Z"}}, {"model": "main.comment", "pk": 181, "fields": {"author": 163, "post": 50, "parent": null, "content": "<p>getting this error after install jwt </p>\n<p>php artisan jwt:secret</p>\n<p>There are no commands defined in the \"jwt\" namespace.</p>", "posted_at": "2022-11-27T11:05:03.407Z"}}, {"model": "main.comment", "pk": 182, "fields": {"author": 164, "post": 50, "parent": 181, "content": "<p>Had the same issue. </p>\n<p>following the docs here <a href=\"https://jwt-auth.readthedocs.io/en/develop/lumen-installation/\">jwt-auth.readthedocs.io/en/develop...</a>  </p>\n<p>especially the chapter <strong>Bootstrap file changes</strong> fixed the issue</p>\n<p>Add the following snippet to the <code>bootstrap/app.php</code> file under the providers section as follows:  </p>\n<p>```\n// Uncomment this line\n$app-&gt;register(App\\Providers\\AuthServiceProvider::class);</p>\n<p>// Add this line\n$app-&gt;register(Tymon\\JWTAuth\\Providers\\LumenServiceProvider::class);</p>\n<p>```</p>\n<p>Enter fullscreen mode</p>\n<p>Exit fullscreen mode</p>", "posted_at": "2022-11-27T11:05:06.894Z"}}, {"model": "main.comment", "pk": 183, "fields": {"author": 160, "post": 50, "parent": 181, "content": "<p>Please check to make sure <code>tymon/jwt-auth</code> installed successfully</p>\n<p>Also type <code>php artisan</code> to see available commands.</p>\n<p>Keep me posted on your progress.</p>", "posted_at": "2022-11-27T11:05:06.906Z"}}, {"model": "main.comment", "pk": 184, "fields": {"author": 165, "post": 50, "parent": null, "content": "<p>Thanks for the tutorial, helps me a lot</p>", "posted_at": "2022-11-27T11:05:09.302Z"}}, {"model": "main.comment", "pk": 185, "fields": {"author": 166, "post": 50, "parent": null, "content": "<p>Great post! You had save me!</p>", "posted_at": "2022-11-27T11:05:11.414Z"}}, {"model": "main.comment", "pk": 186, "fields": {"author": 167, "post": 50, "parent": null, "content": "<p>how to do this when using mongodb?</p>", "posted_at": "2022-11-27T11:05:14.181Z"}}, {"model": "main.comment", "pk": 187, "fields": {"author": 168, "post": 50, "parent": null, "content": "<p>Wonderful Bro.. It really helped me to understand the concept.. Thank you..</p>", "posted_at": "2022-11-27T11:05:16.213Z"}}, {"model": "main.comment", "pk": 188, "fields": {"author": 169, "post": 50, "parent": null, "content": "<p>Hi,  </p>\n<p>Thanks for your great tutorial.  </p>\n<p>But I want a custom field (email and password) both so could you make it an example for that.</p>\n<p>My field name = USER_NAME, PASSWORD (Both are capital)</p>\n<p>I try but token always false.</p>\n<p>If you do then its great help for me.</p>\n<p>Thank you</p>", "posted_at": "2022-11-27T11:05:18.564Z"}}, {"model": "main.comment", "pk": 189, "fields": {"author": 170, "post": 50, "parent": null, "content": "<p>This was of great help. The only problem I encountered was when running <code>php artisan jwt:secret</code>.  </p>\n<p><code>$app-&gt;register(Tymon\\JWTAuth\\Providers\\LumenServiceProvider::class);</code> needs to be added to app.php <em>before</em> the command is executed.</p>", "posted_at": "2022-11-27T11:05:19.948Z"}}, {"model": "main.comment", "pk": 190, "fields": {"author": 171, "post": 50, "parent": null, "content": "<p>Hy bro, thanks for the tutorial. I want to know how I implements logout</p>", "posted_at": "2022-11-27T11:05:21.452Z"}}, {"model": "main.comment", "pk": 191, "fields": {"author": 172, "post": 50, "parent": 190, "content": "<p>public function logout () {  </p>\n<p>Auth::logout();  </p>\n<p>return response()-&gt;json(['message' =&gt; 'Successfully logged out']);  </p>\n<p>}</p>", "posted_at": "2022-11-27T11:05:23.007Z"}}, {"model": "main.comment", "pk": 192, "fields": {"author": 173, "post": 50, "parent": null, "content": "<p>Does the lumen version affect? I use lumen version 6</p>", "posted_at": "2022-11-27T11:05:24.405Z"}}, {"model": "main.comment", "pk": 193, "fields": {"author": 174, "post": 50, "parent": null, "content": "<p>everything except php artisan jwt::secret is work...  </p>\n<p>so, i write jwt key in .env by myself..</p>\n<p>thank you, nice tutorial...</p>", "posted_at": "2022-11-27T11:05:25.769Z"}}, {"model": "main.comment", "pk": 194, "fields": {"author": 175, "post": 50, "parent": null, "content": "<p>This was really helpful, man! Thanks very much.</p>", "posted_at": "2022-11-27T11:05:27.796Z"}}, {"model": "main.comment", "pk": 195, "fields": {"author": 176, "post": 50, "parent": null, "content": "<p>Thank you, very good tutorial</p>", "posted_at": "2022-11-27T11:05:30.130Z"}}, {"model": "main.comment", "pk": 196, "fields": {"author": 177, "post": 50, "parent": null, "content": "<p>What a great tutorial. Thank you very much!</p>", "posted_at": "2022-11-27T11:05:32.023Z"}}, {"model": "main.comment", "pk": 197, "fields": {"author": 160, "post": 50, "parent": 196, "content": "<p>You are welcome</p>", "posted_at": "2022-11-27T11:05:32.030Z"}}, {"model": "main.comment", "pk": 198, "fields": {"author": 178, "post": 50, "parent": null, "content": "<p>can you go further this post by making role-based auth in lumen?</p>", "posted_at": "2022-11-27T11:05:33.956Z"}}, {"model": "main.comment", "pk": 199, "fields": {"author": 160, "post": 50, "parent": null, "content": "<p>I am yet to come across this issue. Is there an open issue on github? </p>", "posted_at": "2022-11-27T11:05:33.964Z"}}, {"model": "main.comment", "pk": 200, "fields": {"author": 179, "post": 50, "parent": null, "content": "<p>Thanks for this article! Very straightforward and easy to understand : )</p>", "posted_at": "2022-11-27T11:05:36.611Z"}}, {"model": "main.comment", "pk": 201, "fields": {"author": 160, "post": 50, "parent": 200, "content": "<p>I'm glad it helped :)</p>", "posted_at": "2022-11-27T11:05:36.618Z"}}, {"model": "main.comment", "pk": 202, "fields": {"author": 180, "post": 50, "parent": null, "content": "<p>Nice one!</p>", "posted_at": "2022-11-27T11:05:38.265Z"}}, {"model": "main.comment", "pk": 203, "fields": {"author": 160, "post": 50, "parent": 202, "content": "<p>Thanks!</p>", "posted_at": "2022-11-27T11:05:38.272Z"}}, {"model": "main.comment", "pk": 204, "fields": {"author": 181, "post": 50, "parent": null, "content": "<p>you might want to also add  </p>\n<p>```\nuse Illuminate\\Support\\Facades\\Auth;</p>\n<p>```</p>\n<p>when you add <code>respondWithToken</code> to <code>app/Http/Controllers/Controller.php</code> (Lumin 6+)</p>", "posted_at": "2022-11-27T11:05:40.481Z"}}, {"model": "main.comment", "pk": 205, "fields": {"author": 182, "post": 50, "parent": 204, "content": "<p>This saved my life ty</p>", "posted_at": "2022-11-27T11:05:42.533Z"}}, {"model": "main.comment", "pk": 206, "fields": {"author": 183, "post": 50, "parent": 204, "content": "<p>This is key. </p>\n<p>I was followed step by step your tutorial, writing the code by myself (i mean, without clone your github project) and without this line (thanks <a href=\"https://dev.to/cleathley\">@cleathley</a>\n) an error appears.</p>\n<p>I think you should edit your post and add that line after you explain this:  </p>\n<p>«Add a global respondWithToken method to Controller class»</p>\n<p>Anyway, great tutorial. <strong>It help me a lot</strong>!!</p>", "posted_at": "2022-11-27T11:05:45.927Z"}}, {"model": "main.comment", "pk": 207, "fields": {"author": 160, "post": 50, "parent": 204, "content": "<p>Thanks For this, I will update the tutorial to help people not encounter this error in the future.</p>", "posted_at": "2022-11-27T11:05:45.938Z"}}, {"model": "main.comment", "pk": 208, "fields": {"author": 184, "post": 50, "parent": null, "content": "<p>I've just reviewed and coded through. It worked wonderfully~~~ </p>", "posted_at": "2022-11-27T11:05:49.450Z"}}, {"model": "main.comment", "pk": 209, "fields": {"author": 185, "post": 50, "parent": null, "content": "<p>Nice tutorial, very clear and straight to the point. My worry is why the dev-develope branch? The main branch, does it have an issue? </p>", "posted_at": "2022-11-27T11:05:50.962Z"}}, {"model": "main.comment", "pk": 210, "fields": {"author": 160, "post": 50, "parent": 209, "content": "<p>For some reason the dev-develop branch has always worked for new versions of lumen, the next best thing would be version @2.0-dev</p>", "posted_at": "2022-11-27T11:05:50.969Z"}}, {"model": "main.comment", "pk": 211, "fields": {"author": 186, "post": 50, "parent": null, "content": "<p>First of all great tutorial, thanks a lot for all your efforts dude, I've a question, how can I set a remember me system with JWT token ? And also, how to increase expiration duration from the config file (config/auth.php) ?</p>", "posted_at": "2022-11-27T11:05:53.262Z"}}, {"model": "main.comment", "pk": 212, "fields": {"author": 186, "post": 50, "parent": 211, "content": "<p>For the second part of the question, the answer should be:  </p>\n<p><a href=\"https://github.com/tymondesigns/jwt-auth/blob/1.0.0-beta.2/config/config.php#L103\">github.com/tymondesigns/jwt-auth/b...</a></p>", "posted_at": "2022-11-27T11:05:53.273Z"}}, {"model": "main.comment", "pk": 213, "fields": {"author": 160, "post": 50, "parent": 211, "content": "<p>Would there be a need for remember me? As long as the client has the token; they have access to the system.</p>\n<p>You could extend token's time to live for those type of users, that could work...I think.</p>\n<p><strong>Override the token ttl</strong>  </p>\n<p><code>$token = auth()-&gt;setTTL(7200)-&gt;attempt($credentials);</code></p>\n<p>Further Reading  </p>\n<p><a href=\"https://stackoverflow.com/questions/23603801/handling-expiry-remember-me-functionality-with-jwt\">stackoverflow.com/questions/236038...</a></p>", "posted_at": "2022-11-27T11:05:53.283Z"}}, {"model": "main.comment", "pk": 214, "fields": {"author": 187, "post": 50, "parent": null, "content": "<p>Getting this error,</p>\n<p>In Connection.php line 665:</p>\n<p>SQLSTATE[HY000] [2002] Connection refused (SQL: create table <code>migrations</code> (<code>id</code> int unsigned not null auto_increment primary key, <code>migration</code> varchar(255) not null, <code>batch</code> int not  </p>\n<p>null) default character set utf8mb4 collate 'utf8mb4_unicode_ci')</p>\n<p>In Connector.php line 70:</p>\n<p>SQLSTATE[HY000] [2002] Connection refused</p>\n<p>Using Homestead development environment.</p>", "posted_at": "2022-11-27T11:05:54.918Z"}}, {"model": "main.comment", "pk": 215, "fields": {"author": 160, "post": 50, "parent": 214, "content": "<p>This error is due to PHP not being able to connect to MySQL</p>\n<p>\"Create a .env file, copy all contents in .env.example into the .env file and add your database configurations.\"</p>", "posted_at": "2022-11-27T11:05:54.929Z"}}, {"model": "main.comment", "pk": 216, "fields": {"author": 188, "post": 50, "parent": null, "content": "<p>getting this error when doing login request </p>\n<p>\"Method Illuminate\\Auth\\RequestGuard::attempt does not exist.\"</p>\n<p>Any help ?</p>", "posted_at": "2022-11-27T11:05:56.863Z"}}, {"model": "main.comment", "pk": 217, "fields": {"author": 188, "post": 50, "parent": 216, "content": "<p>Sorry, my mistake who put config/auth.php that not in root directory </p>", "posted_at": "2022-11-27T11:05:56.881Z"}}, {"model": "main.comment", "pk": 218, "fields": {"author": 189, "post": 50, "parent": null, "content": "<p>Please, can you explain how to reset the password of user?</p>", "posted_at": "2022-11-27T11:05:59.341Z"}}, {"model": "main.comment", "pk": 219, "fields": {"author": 160, "post": 50, "parent": 218, "content": "<p>Maybe this can help   </p>\n<p><a href=\"https://stackoverflow.com/questions/37338015/trying-to-reset-passwords-in-lumen\">stackoverflow.com/questions/373380...</a></p>", "posted_at": "2022-11-27T11:05:59.350Z"}}, {"model": "main.comment", "pk": 220, "fields": {"author": 191, "post": 51, "parent": null, "content": "<p>This is really interesting. Learnt a lot from it. I am definitley trying this 100%😂😁</p>", "posted_at": "2022-11-27T11:06:11.129Z"}}, {"model": "main.comment", "pk": 221, "fields": {"author": 192, "post": 51, "parent": null, "content": "<p>A developer wandering off can have destructive ideas. Loved your one.</p>", "posted_at": "2022-11-27T11:06:12.327Z"}}, {"model": "main.comment", "pk": 222, "fields": {"author": 193, "post": 51, "parent": null, "content": "<p>This is both interesting and savangly funny, I might tinker with this soon </p>", "posted_at": "2022-11-27T11:06:14.138Z"}}, {"model": "main.comment", "pk": 223, "fields": {"author": 194, "post": 51, "parent": null, "content": "<p>The explanation for how you derived your formula is definitely top-tier Mathematics. 👌</p>", "posted_at": "2022-11-27T11:06:16.061Z"}}, {"model": "main.comment", "pk": 224, "fields": {"author": 195, "post": 51, "parent": null, "content": "<p>\"Due to privacy concerns I replaced my friend's real names with their home addresses\" ROFL :D</p>", "posted_at": "2022-11-27T11:06:17.491Z"}}, {"model": "main.comment", "pk": 225, "fields": {"author": 196, "post": 51, "parent": null, "content": "<p>That was a nice piece of recreational programming, shared in the form of a story.  </p>\n<p>Thanks for sharing it with us :D \\u{1F604}</p>", "posted_at": "2022-11-27T11:06:19.772Z"}}, {"model": "main.comment", "pk": 226, "fields": {"author": 197, "post": 51, "parent": null, "content": "<p>Trying to unzip this on windows and getting invalid file errors. Can you tell me how you extracted the zip and on what os?</p>", "posted_at": "2022-11-27T11:06:22.279Z"}}, {"model": "main.comment", "pk": 227, "fields": {"author": 190, "post": 51, "parent": 226, "content": "<p>Both Windows and macOS with the default unzipper worked fine. I'm pretty sure your zip is corrupted, try downloading again.</p>", "posted_at": "2022-11-27T11:06:22.290Z"}}, {"model": "main.comment", "pk": 228, "fields": {"author": 20, "post": 51, "parent": null, "content": "<p>W8 you had to do all of this and not automate the last part? 😫</p>", "posted_at": "2022-11-27T11:06:22.301Z"}}, {"model": "main.comment", "pk": 229, "fields": {"author": 190, "post": 51, "parent": 228, "content": "<p>You mean the unfriending? I thought about it, but I was already rushing the final part of the article as is 😅</p>", "posted_at": "2022-11-27T11:06:22.309Z"}}, {"model": "main.comment", "pk": 230, "fields": {"author": 198, "post": 52, "parent": null, "content": "<p>Looks like nobody cares.</p>", "posted_at": "2022-11-27T11:06:26.434Z"}}, {"model": "main.comment", "pk": 231, "fields": {"author": 6, "post": 3, "parent": null, "content": "<p>Loved the article!</p>\n<p>I'm trying to learn more about Unity to make a game where my brother and I could play and code together. It inspired me to code more projects just for fun, cause it's been a while since I just code something that I really want or enjoyed.  </p>\n<p>This is a good habit, a health one and it improves your craft, so why not keep doing?</p>\n<p>Testing the projects and games that I made its the funniest part of the process, beacause when it works (hope it works) you only have fun.</p>\n<p>I'm still in the part where I'm learning from tutorials how to use Unity and make games with it, feel free to give me some tips.</p>", "posted_at": "2022-11-27T11:11:30.481Z"}}, {"model": "main.comment", "pk": 232, "fields": {"author": 5, "post": 3, "parent": 231, "content": "<p>Thanks, I'm glad to hear that I could inspire someone :)</p>\n<p>The coding just for fun is awesome, Coding Dojos are also an excellent place to put that in practice.</p>\n<p>I guess my best tip would be, pick a single game mechanic and play with that. Build something as simple as possible around it. You will be amazed on how cool a game can become with just one mechanic. </p>", "posted_at": "2022-11-27T11:11:30.491Z"}}, {"model": "main.comment", "pk": 233, "fields": {"author": 8, "post": 4, "parent": null, "content": "<p>Please explain why React and Vue are not “truly reactive”.</p>", "posted_at": "2022-11-27T11:11:31.096Z"}}, {"model": "main.comment", "pk": 234, "fields": {"author": 7, "post": 4, "parent": 233, "content": "<p>Thank you for the comment!</p>\n<p>React and VueJs don’t make use of reactive programming. That is, they don’t track the data flow through the application. </p>\n<p>Instead they treat the application as a black box and when a state changes, they rerender the whole component and all it’s children, instead of just the changed value. </p>", "posted_at": "2022-11-27T11:11:31.104Z"}}, {"model": "main.comment", "pk": 235, "fields": {"author": 7, "post": 4, "parent": null, "content": "<p>Thanks for reading!</p>\n<p>But yes, you can use Svelte for progressive enhancement, juse like for Vue or React. You inject it just as you would with vue or React, you can even add svelte to a react or vue app if you would like.</p>\n<p>I also like both Vue, React and Angular. However, I like the way Svelte is making us think about creating user interfaces.</p>", "posted_at": "2022-11-27T11:11:31.114Z"}}, {"model": "main.comment", "pk": 236, "fields": {"author": 9, "post": 4, "parent": null, "content": "<p>Thanks for the article, it has really inspired me to try Svelte :]  </p>\n<p>But what about large applications? Are there any references?</p>", "posted_at": "2022-11-27T11:11:31.122Z"}}, {"model": "main.comment", "pk": 237, "fields": {"author": 7, "post": 4, "parent": 236, "content": "<p>Thank you for reading and for the nice comment 😊</p>\n<p>For building larger applications, there is a project called Sapper. Sapper helps with code splitting, E2E testing and a lot of other nice features. </p>\n<p>Companies like New York Times and goDaddy use Svelte. The have a list of companies on their site. </p>", "posted_at": "2022-11-27T11:11:31.134Z"}}, {"model": "main.comment", "pk": 238, "fields": {"author": 10, "post": 4, "parent": null, "content": "<p>I don't necessarily agree with the \"virtual dom is a bottleneck\" argument, Attachment is an expensive process for the browser and the whole purpose of the virtual DOM is to prevent unnecessary re-paints. I am also curious of how well does Svelte works with immutability as it seems to rely on change-detection as opposed to unidirectional data-flow. Lastly, the word framework has been thrown around but neither Vue or React are frameworks but libraries, and I think Svelte fits that description as well as there are no set ways of doing the data-layer like Angular.</p>", "posted_at": "2022-11-27T11:11:31.142Z"}}, {"model": "main.comment", "pk": 239, "fields": {"author": 7, "post": 4, "parent": 238, "content": "<p>Thanks for reading and thank you for the comments. </p>\n<p>I didn't expand on why I think the virtual DOM is a bottleneck. The short answer is that it performs a lot of unnecessary DOM diffing in the process of deciding what to update, since when using the virtual DOM the framework/library don't have any trace of the data flow. A lot of code also runs more times than necessary. If you don't trust, check out the talk by one of the founders of SvelteJS (<a href=\"https://youtu.be/AdNJ3fydeao\">youtu.be/AdNJ3fydeao</a>).</p>\n<p>I think you could use immutability, but I haven't tried it. But looks like you could do something like this(<a href=\"https://svelte.dev/tutorial/svelte-options\">svelte.dev/tutorial/svelte-options</a>)</p>\n<p>Svelte has a store feature for handling data if that's what you are referring to.</p>", "posted_at": "2022-11-27T11:11:31.152Z"}}, {"model": "main.comment", "pk": 240, "fields": {"author": 11, "post": 4, "parent": null, "content": "<p>Grateful that you wrote this as it means I don't have to look up elsewhere what Svelte is all about :) And your description was very easy to digest! I like that they have gone for the very vanilla JavaScript feeling, but I'm not a big fan of things like the <code>$:</code> label - seems like a bit of hack... 😅</p>", "posted_at": "2022-11-27T11:11:31.161Z"}}, {"model": "main.comment", "pk": 241, "fields": {"author": 7, "post": 4, "parent": 240, "content": "<p>Thank you for the nice comment 😊</p>\n<p>The $: is valid JavaScript, however I get that it can feel a bit unusual at first. I think we can get used to it, since it gives so much value. You can for instance also use it for watching log messages, </p>\n<p>$: console.log(value) </p>\n<p>That will print every time value changes, which is very useful for debugging as well. </p>", "posted_at": "2022-11-27T11:11:31.170Z"}}, {"model": "main.comment", "pk": 242, "fields": {"author": 13, "post": 5, "parent": null, "content": "<p>Tests in pre-commit hooks is a very bad way. You need to commit whenever you want, regardless of compilation and test.  </p>\n<p>```\ngit commit --no-verify</p>\n<p>```</p>", "posted_at": "2022-11-27T11:11:31.454Z"}}, {"model": "main.comment", "pk": 243, "fields": {"author": 15, "post": 6, "parent": null, "content": "<p>😄</p>", "posted_at": "2022-11-27T11:11:33.812Z"}}, {"model": "main.comment", "pk": 244, "fields": {"author": 16, "post": 6, "parent": null, "content": "<p>It's incredibly challenging. But you have to decide what the most important thing is for you.</p>\n<p>It's just like accepting speaking opportunities. Those more than likely pull you away from some other area in your life, wether it be alone/recharge time, time with your partner, time with your friends. You are giving up something to get something.</p>\n<p>I have 2 girls with 1 more on the way. The last 5 years have been some of the most challenging in my life. But I have learned so much! I've transitioned from being a full-time contributor to now leading our entire engineering department.</p>\n<p>Everyone sacrifices different things. For me it's been side projects and basketball, which is one of my favorite things to do. But that being said, I've still pushed to make time for it, and now that my girls are both over 2yrs old, it's much easier for me to schedule that time for myself. It just looks different than when I was 25.</p>\n<p>You did ask for honest feedback, so I will say, my advice would be to remove all other variables and decide if you really want to be a parent. Your job will more than likely change. Your hobbies will more than likely change. Your child will be your child for the rest of your life. I think you just need to decide if that is something that excites you. If it is, then I would say everything else will work out.</p>\n<p><strong>Benefits I have seen:</strong></p>\n<ol>\n<li>My kids have helped expose my areas of weakness and selfishness. Much like my marriage did for the first 5 years without kids.</li>\n<li>My wife and I have become much better partners in life because we have faced a lot of challenging times together.</li>\n<li>Not many things in life have brought me more joy than connecting with my girls.</li>\n<li>I get to watch classic 90's kids movies with them! 🤣</li>\n<li>Truly disconnecting from my work and 'grown-up' life during play time with my kids bring out joy from deep within my heart.</li>\n</ol>\n<p><strong>Downside:</strong></p>\n<ol>\n<li>It's much harder for me to have 'me' time. I recharge during alone time, which means I have to get up super early, or leave the house for that to happen.</li>\n<li>Waking up with a baby in the middle of the night just sucks really bad. But it's only a season.</li>\n<li>Traveling 'can' be harder, but some people overcomplicate it or make it seem impossible to travel with children.</li>\n<li>I'm a very focused person, so working remotely from home is very challenging, but I choose to go into the office because it's easier for me to focus there.</li>\n</ol>\n<p>Kudos for being vulnerable in your posting this and asking for feedback!!</p>", "posted_at": "2022-11-27T11:11:33.824Z"}}, {"model": "main.comment", "pk": 245, "fields": {"author": 14, "post": 6, "parent": null, "content": "<p>From someone who'd like to remain anonymous: </p>\n<p>I'm sure you'll get plenty of advice and tips from parents here. I  </p>\n<p>want to answer from the other side of the spectrum - as someone who  </p>\n<p>had a big battle in thoughts until fairly recently, and eventually  </p>\n<p>settled on the decision NOT to have kids.</p>\n<p>I am 36 years old, and similarly to you, I love my life, my career,  </p>\n<p>but also the overall freedom and flexibility that not having kids  </p>\n<p>provides. I met my husband quite late in life (just turned 30, he's a  </p>\n<p>year younger) and that has impacted a lot of things too. Around the  </p>\n<p>similar age as you, so still fairly early in our relationship, I  </p>\n<p>started having similar doubts. Should we try to have kids? Neither of  </p>\n<p>us was really terribly excited about the idea, but we also felt a bit  </p>\n<p>\"if not now then when\". At the same time, we had so many things we  </p>\n<p>wanted to do and kept postponing trying to conceive. It just never  </p>\n<p>felt the right time.  </p>\n<p>I went through a phase where the \"clock ticking\" sounded really loud.  </p>\n<p>Even then, the idea of motherhood did not sound very appealing. I  </p>\n<p>mean, some kids are okay, in small doses, but the pregnancy, then  </p>\n<p>birth (I'm absolutely terrified by this), then the period with no  </p>\n<p>sleep, infant crying when you don't know the reason... I think I'd be  </p>\n<p>much more likely to think about having kids seriously if I could get  </p>\n<p>them at around 3 years old.  </p>\n<p>Basically, my whole thinking back then was around the lines of \"I  </p>\n<p>still don't really feel the need to have kids, I am still not sure if  </p>\n<p>I want them - but if I ever do want them, I kind of need to get into  </p>\n<p>it NOW\".</p>\n<p>In the end we had more and more conversations, more and more often  </p>\n<p>saying that well, maybe it really is not for us. And once we finally  </p>\n<p>settled on this, I felt such an incredible RELIEF. That I can stop  </p>\n<p>thinking about it, stop reconsidering, stop obsessing about it.</p>\n<p>You say you didn't think you wanted kids, but you're reconsidering  </p>\n<p>now. You don't say what made you reconsider - is that you actually  </p>\n<p>feel you do want to be a mom, or is it just that you feel the clock  </p>\n<p>ticking (now or never). You also completely don't mention the  </p>\n<p>potential father - what does he think, does he want to have kids, or  </p>\n<p>is he indifferent, or maybe you're thinking of being a single mom  </p>\n<p>through in vitro or something similar.  </p>\n<p>When you talk about \"informed decision\", I can't help but wonder if  </p>\n<p>it's a sign that maybe you are still not fully in the \"I want kids\".  </p>\n<p>When I watch other parents, it's very clear that in order to have kids  </p>\n<p>you have to sacrifice, a lot. Things will change for you, there is no  </p>\n<p>question about it. Yes, of course people make it work, of course it is  </p>\n<p>getting better - and of course (most) parents say it's worth it. But  </p>\n<p>you will leave your previous life behind, and there'll be something  </p>\n<p>very different on the other end. I am not really sure if it can be an  </p>\n<p>\"informed decision\", where you look into \"pros and cons\" and the pros  </p>\n<p>outweigh. Because I'm not sure if from pragmatic / cold perspective  </p>\n<p>this \"calculation\" can ever come out in favour of kids. From pragmatic  </p>\n<p>perspective - there are soooo many cons and limitations and drawbacks</p>\n<ul>\n<li>and yet, and yet, people decide to have kids, because deep down they\nsimply know that it's worth it, for them.</li>\n</ul>\n<p>But I think the whole \"worth it\" is very personal. Since I settled my  </p>\n<p>decision, with a bit of \"but what if I change my mind\", I've come  </p>\n<p>across more child-free-by-choice people. Some of them quite a bit  </p>\n<p>older. All of them say they don't have any regrets. Of course I'm sure  </p>\n<p>equally there are some that do - maybe they prefer not to hang out in  </p>\n<p>certain places. But the point is, it is possible to go through life,  </p>\n<p>not wanting/needing/having kids, and be completely fulfilled.</p>\n<p>So I think ultimately the question should be: do you really want kids?  </p>\n<p>If you do, you have your answer, you will make it work, no matter the  </p>\n<p>challenges, just like thousands of people do. And conversely, if you  </p>\n<p>still don't feel you want it and it's more of \"but what if I miss the  </p>\n<p>time when I can do it\" - it's a personal choice. But for me, I decided  </p>\n<p>that \"fear of missing out\" is not a good enough reason to bring  </p>\n<p>another human onto this planet.</p>", "posted_at": "2022-11-27T11:11:33.840Z"}}, {"model": "main.comment", "pk": 246, "fields": {"author": 17, "post": 6, "parent": null, "content": "<p>I can relate to that and I must say that I exchanged a lot of time that I previously used for mentorship, public speaking, conduct workshops, etc. for time with my family and I don't regret it. Those things are something that will always be there, but the kids are growing so fast that you want to enjoy every moment :).</p>", "posted_at": "2022-11-27T11:11:33.849Z"}}, {"model": "main.comment", "pk": 247, "fields": {"author": 18, "post": 6, "parent": null, "content": "<p>My wife does most of the parenting and I do the working.  </p>\n<p>She hates it every time I have to do a talk but I'm going to do it anyway because she has to accept I have to do them (because that's what my brain tells me to do)</p>\n<p>So I just have to pick and choose my events carefully and ensure their high impact.</p>\n<p>So I can't do as many events or meet as many people as I like I just have to put more effort into each and everything I do.</p>", "posted_at": "2022-11-27T11:11:33.860Z"}}, {"model": "main.comment", "pk": 248, "fields": {"author": 19, "post": 6, "parent": null, "content": "<p>If you decide to have kids, you'll have to make sacrifices. And that's fine. </p>\n<p>Whatever you do, it comes with a cost and an opportunity cost. You only have that much time and energy. Does this mean you'll have to give up your career and public speaking? Definitely not. Maybe you'll force yourself to find - as Ben said - better speaking engagements. Maybe you'll force yourself to work not harder, but smarter.</p>\n<p>If a career means to you - I don't judge or even imply - working 50-60+ hours a week, then yes, you'll have to give that up if you want to raise kids.</p>\n<p>Of course, there are parents, who barely see their kids, but I think if you have the choice, it's better to be part of their lives and let them be a significant part of your life. Hence I use the expression raising kids. In my view, there is a big difference between having kids and raising them.</p>\n<p>You can also consider another aspect. You'll work for decades. For long decades. You'll still have plenty of time to speak even more and work even more than you'd ever want. While having kids in older ages is a possibility, but it has both some dangers and probably more cons than pros. (I speak only of personal experience.)</p>\n<p>I don't think you'd be perceived less seriously with kids unless you'd be the dad/mom who does nothing but shows his/her phone around the office with their little ones all day long. :)</p>\n<p>While being a parent is a difficult job, more difficult than writing code or speaking in front of hundreds of people - at least to me -, I didn't regret and I can only encourage people not to hesitate and not to be afraid if you ever want a family. But that's something you should know!</p>", "posted_at": "2022-11-27T11:11:33.869Z"}}, {"model": "main.comment", "pk": 249, "fields": {"author": 20, "post": 6, "parent": null, "content": "<p>You can do many things for your career and have kids. I have two girls. Not a problem. It's only the wrong mentality and the lack confidence that can hinder you.</p>", "posted_at": "2022-11-27T11:11:33.878Z"}}, {"model": "main.comment", "pk": 250, "fields": {"author": 21, "post": 6, "parent": null, "content": "<p>If you really want a kid then do it now. </p>\n<p>You can speak and work when you're older, but having kids gets riskier with every year.</p>\n<p>It is a lot of work and will probably be the biggest challenge of your life, and it will impact your career heavily, since you'll be out for at least a year. But it's also the best thing there is and ultimately the reason we're all here.</p>\n<p>I'd say after the first year it gets easier to leave it with the dad, babysitter, kindergarden, grandparents for longer, so you can take up talking and working again.</p>", "posted_at": "2022-11-27T11:11:33.886Z"}}, {"model": "main.comment", "pk": 251, "fields": {"author": 22, "post": 6, "parent": null, "content": "<blockquote>\n<p>My speaking career has really exploded and I am consistently getting asked to talk at conferences.</p>\n</blockquote>\n<p>I think this is an area you might be able to look for more vertical growth instead of horizontal. Instead of looking for more speaking engagements, maybe you could angle towards being selective, getting more noteworthy opportunities, and generally saying no to more stuff.</p>\n<p>Otherwise, it <em>seems</em> like our industry is becoming more and more flexible in terms of remote-first organizations which might give you a lot of your time back, conferences which offer better childcare than they used to, and generally more compassion for how parenting and careers need to work together.</p>\n<p>I don't think that \"compassion\" is super evenly distributed, so I can't say it's better for <em>everyone</em>, but if you're in a leadership role, if you're getting these opportunities, understand that you have the leverage to have the career and personal life of your choosing. You will likely face new stigmas, but you'll also find new opportunities.</p>\n<p>I'm 30 years old and not a parent, and not a woman, but I think about some of this as someone who may become a parent and would like to help make this industry a better place for moms and dads. So that was just my 2 cents.</p>\n<p>So take my thoughts in complement to <a href=\"https://dev.to/msarit\">@msarit</a>\n's reply and everyone else who may come at it with a different perspective.</p>\n<p>Here's a comment that may also be helpful from <a href=\"https://dev.to/kaydacode\">@kaydacode</a>\n's <a href=\"https://dev.to/kaydacode/imposter-syndrome-anxiety-me-5372\">wonderful post</a></p>\n<p><a href=\"/syntaxseed\"><img alt=\"syntaxseed profile image\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--VZTEKZ6c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tpHTGNIt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://thepracticaldev.s3.amazonaws.com/uploads/user/profile_image/146027/1b4a6700-5bb2-46ca-86e1-74880593f31b.jpeg\" /></a>\n<a href=\"/syntaxseed\">SyntaxSeed (Sherri W)</a> \n<a href=\"https://twitter.com/SyntaxSeed\"><img alt=\"twitter\" src=\"/assets/twitter-logo.svg\" /></a>\n<a href=\"https://github.com/syntaxseed\"><img alt=\"github\" src=\"/assets/github-logo.svg\" /></a></p>\n<p><a href=\"/syntaxseed/comment/doga\">Aug 6</a> </p>\n<p>This is a topic I have soo many thoughts about!! ❤️</p>\n<p>I've had 3 children during my career as a developer &amp; an extended 7-year stint as a full-time mom, only working very part-time on dev projects during that time.</p>\n<p>These problems are very real. And unfortunately the challenges compound if you have more babies. The 'pregnancy-brain' (a horrible mix of nutrient-drain, dehydration, sleep-deprivation, distraction with thoughts &amp; worries, and the exhausting hyper-alertness you have when taking care of young children &amp; babies) only compounds on itself over time.</p>\n<p>And time outside of our rapidly changing industry is difficult.</p>\n<p>The good news is that it isn't permenent. Your focus will return both with proper self-care (drink water, sleep, recuperate nutrients) and as your children grow less in need of hyper-vigilance (approx 2-3yrs old).</p>\n<p>My focus is fully back, and I used my out of industry time to binge a ton of learning resources &amp; tackle projects I'd never have done otherwise.</p>\n<p>Not to mention my 3 amazing sons. Worth it x 1000!</p>\n<p>We need to talk about this more, to normalise &amp; raise awareness of women's issues in our industry. Creating life, has some side-effects on our professional lives - that is very OK &amp; should come with support from our colleagues &amp; employers. </p>\n<p>This is the perspective of someone who took a <em>substantial</em> time devotion full-time parenting and still came out of it with new perspective and opportunity that wouldn't have had before.</p>\n<blockquote>\n<p>My focus is fully back, and I used my out of industry time to binge a ton of learning resources &amp; tackle projects I'd never have done otherwise.</p>\n</blockquote>\n<p>Still coding, still taking part in the community, still finding new career opportunities, and they seem to say it was worth it. 😄</p>", "posted_at": "2022-11-27T11:11:33.905Z"}}, {"model": "main.comment", "pk": 252, "fields": {"author": 23, "post": 6, "parent": null, "content": "<p>Like <a href=\"https://dev.to/msarit\">@msarit</a>\n, I've tried a few times to write this. Someone once said, and I'm paraphrasing, that the point of parenting is not that adults raise children, but that childen raise adults. Parenting pointed a searchlight at my own childishness and immaturity. I'm a better adult for the experience. </p>\n<p>For example, I remember feeling an enormous amount of jealousy toward our first child when he was born: now there was another man in my wife's life who was demanding all her attention (and getting it!) No longer was I the centre of her world. Having kids forced me to grow up. I was 30 years old. It was about time. </p>\n<p>Now, I'm down the other end of the demographic spectrum with my 60th birthday a little over a year away. My kids are adults themselves. My career is no longer my ultimate reality -- the thing I sacrifice anything and everything for the glory and advancement of -- and arguably never should have been. But would I have even realized that without having been the dad I have been and still strive to be?</p>", "posted_at": "2022-11-27T11:11:33.919Z"}}, {"model": "main.comment", "pk": 253, "fields": {"author": 24, "post": 6, "parent": 252, "content": "<p>Glorious answer ... Thank you for sharinf!</p>", "posted_at": "2022-11-27T11:11:33.930Z"}}, {"model": "main.comment", "pk": 254, "fields": {"author": 25, "post": 6, "parent": null, "content": "<p>I have a 1.5 years old baby, I’m Tech Lead in one of our company projects, I have a babysitter taking care of my son from 9 to 6 when I work as much as I can and then I leave my computer behind and spent my time with my baby. Weekend are also family only time, basically a baby give me a better work-life balance.</p>\n<p>I occasionally talk at local meetups where I go with my son and partner.</p>\n<p>A baby will negatively affect your career only if you let it do it. Most of the time it will not and you will be happier than ever spending time with it.</p>", "posted_at": "2022-11-27T11:11:33.939Z"}}, {"model": "main.comment", "pk": 255, "fields": {"author": 24, "post": 6, "parent": null, "content": "<p>I've written and deleted my answer like 4 times now ... because I'm trying to answer you without writing a dissertation 😄</p>\n<p>Let me say this: As a mom of 2, I would never EVER give back the fact that I am a mother. It's the singular most incredible achievement and calling of my life. Having said that, I completely understand and applaud anyone who says they do not want to have kids. I consider it a blessing that such people KNOW that about themselves, why? Because parenthood is as selfless a calling as they come.</p>\n<p>I wish you deep wisdom as you make your decision. Good luck either way ❤️ 🤗 I blog a lot about the intersection between motherhood and my transition into tech <a href=\"https://arit.dev\">arit.dev</a></p>", "posted_at": "2022-11-27T11:11:33.948Z"}}, {"model": "main.comment", "pk": 256, "fields": {"author": 14, "post": 6, "parent": null, "content": "<p><em>From someone who'd like to remain anonymous:</em></p>\n<p>Hey Sloan thanks for posting this and hey to the anonymous person! I hope in the end you make the decision that makes you happy and keeps you happy!</p>\n<p>I am a father of two extremely energetic boys, one is 5 and the other is just over 1. I am a computer science teacher by profession and love programming on the side as a hobby and some personal work.</p>\n<p>I love my children they are a blessing in my life and this is something I could never regret! They make me happy at sad times and annoy the hell out of me at worst of times :-)</p>\n<p>I have my set 8am to 4pm Mon-Fri work, as soon as I come home I find energy to speak to them, cuddle them, basically make time for them no matter how tired or tied up I am.</p>\n<p>There will be sacrifices needed to be made that's just how it is. As I am writing this I have been interrupted four times (now six and counting) by my elder one, he's got questions about cars, what's faster a Lamborghini or a Ferrari? Why didn't I buy a Sport's style Audi instead of a Saloon :-)</p>\n<p>Yes it has taken me probably twice or more times longer but that's the juggle I have to do when I am at home. I may have to put my laptop to sleep in a moment to see if the toddler is stuck under a table and then continue when I come back.</p>\n<p>This isn't about my life around children, I just want to point out that this is what my life is like now and I love it, yes it is different but good different. I embraced it with many sacrifices, these sacrifices are my investment to my children.</p>\n<p>Life changes when you have children, cherish it! Give up some work if you have to for the children. They bring better happiness I promise!</p>\n<p>Check this video if you haven't already.</p>\n<p><a href=\"https://www.bbc.co.uk/news/av/world-39232538/bbc-interview-with-robert-kelly-interrupted-by-children-live-on-air\">bbc.co.uk/news/av/world-39232538/b...</a></p>\n<p>Good luck and God bless!</p>", "posted_at": "2022-11-27T11:11:33.959Z"}}, {"model": "main.comment", "pk": 257, "fields": {"author": 29, "post": 9, "parent": null, "content": "<p>Minification process can reduce 10% – 95% the size of code  </p>\n<p>For HTML compression, you can also use the following links  </p>\n<p><a href=\"https://url-decode.com/tool/minifyhtml\">url-decode.com/tool/minifyhtml</a>  </p>\n<p><a href=\"https://minifyhtml.org/\">minifyhtml.org/</a></p>", "posted_at": "2022-11-27T11:11:36.769Z"}}, {"model": "main.comment", "pk": 258, "fields": {"author": 33, "post": 19, "parent": null, "content": "<p>Very thorough write up. Graphql is so great to work with. </p>", "posted_at": "2022-11-27T11:11:47.745Z"}}, {"model": "main.comment", "pk": 259, "fields": {"author": 37, "post": 23, "parent": null, "content": "<p>Thanks for sharing this!</p>", "posted_at": "2022-11-27T11:11:50.617Z"}}, {"model": "main.comment", "pk": 260, "fields": {"author": 39, "post": 24, "parent": null, "content": "<p>You can also use <code>React.FC</code> instead of <code>React.FunctionComponent</code> 😃</p>", "posted_at": "2022-11-27T11:11:50.782Z"}}, {"model": "main.comment", "pk": 261, "fields": {"author": 38, "post": 24, "parent": 260, "content": "<p>Thx) Awesome!</p>", "posted_at": "2022-11-27T11:11:50.792Z"}}, {"model": "main.comment", "pk": 262, "fields": {"author": 40, "post": 24, "parent": null, "content": "<p>Nice article! you've made a small typo  </p>\n<p>```\nexport const Button: React.FunctionComonent<IProps> = ({ block, ...shared }) =&gt; {\n  return <button {...shared}>{children}</button>;\n}</p>\n<p>```</p>\n<p>should be Component or .FC</p>", "posted_at": "2022-11-27T11:11:50.802Z"}}, {"model": "main.comment", "pk": 263, "fields": {"author": 38, "post": 24, "parent": 262, "content": "<p><code>React.FC</code> and <code>React.FunctionComponent</code> is the same</p>", "posted_at": "2022-11-27T11:11:50.811Z"}}, {"model": "main.comment", "pk": 264, "fields": {"author": 41, "post": 24, "parent": null, "content": "<p>Although, there are differences between interface extends and &amp;</p>", "posted_at": "2022-11-27T11:11:50.819Z"}}, {"model": "main.comment", "pk": 265, "fields": {"author": 42, "post": 24, "parent": null, "content": "<p>Instead of <code>defaultProps</code>, I use:  </p>\n<p>```\nexport const Button: React.FunctionComponent<IProps> = ({ block, children, type = 'button', ...shared }) =&gt; {\n  return <button type={type} {...shared}>{children}</button>;</p>\n<p>}</p>\n<p>```</p>", "posted_at": "2022-11-27T11:11:50.831Z"}}, {"model": "main.comment", "pk": 266, "fields": {"author": 43, "post": 24, "parent": null, "content": "<p>It also would be better to use Extract on the shared button props to extract only <code>InputHTMLAttributes&lt;HTMLInputElement&gt;</code> props for <code>&lt;button {...extractedProps}&gt;</code>. In case if you decided to use some custom props for example <code>loading: boolean</code> it will also be sent to <code>&lt;button/&gt;</code> and cause warnings that your <code>loading</code> prop is not in default button props.</p>", "posted_at": "2022-11-27T11:11:50.840Z"}}, {"model": "main.comment", "pk": 267, "fields": {"author": 44, "post": 24, "parent": null, "content": "<p>I'm a little confused. You keep saying this provides \"strict\" typing, which I assume you mean strong typing. Since typescript happens before runtime and converts the code to javascript which will be executed in a javascript runtime, which is weakly typed your code will also be weakly typed. Typescript won't magically make the javascript runtime strongly typed. Are you meaning to say it provides static typing? Sorry, this very much is a semantic issue I'm trying to clarify.</p>", "posted_at": "2022-11-27T11:11:50.850Z"}}, {"model": "main.comment", "pk": 268, "fields": {"author": 38, "post": 24, "parent": 267, "content": "<p>I mean, that you have typings better than <code>any</code> and unnecessary to declare each native html property.</p>", "posted_at": "2022-11-27T11:11:50.857Z"}}, {"model": "main.comment", "pk": 269, "fields": {"author": 46, "post": 25, "parent": null, "content": "<p>I would recommend to have 2 collections in root: Profiles and Posts. Each Post should have <code>userId</code> and <code>userName</code> (or any other field you want to be able to filter). </p>", "posted_at": "2022-11-27T11:11:51.256Z"}}, {"model": "main.comment", "pk": 270, "fields": {"author": 50, "post": 28, "parent": null, "content": "<p>The history has proven that the standard education process is not the best knowledge one can obtain.  </p>\n<p>See the bio of Bill Gates and Albert Einstein as examples.  </p>\n<p>I do not know anything about you, Graciano, but I am sure your way of thinking has some advantages over mine way of thinking (I give myself as an example of a person who passed through the standard education process).  </p>\n<p>Cheers and be happy about this!</p>", "posted_at": "2022-11-27T11:11:55.715Z"}}, {"model": "main.comment", "pk": 271, "fields": {"author": 51, "post": 28, "parent": null, "content": "<p>It's inevitable to do so, unfortunately. I compare myself to others (especially via viewing their lives on social media), which I find to be unhealthy. it's true what you wrote, that people rarely (or never) post about / show their hard days on social media. I think it's OK to compare yourself with others but don't overdo it...</p>", "posted_at": "2022-11-27T11:11:55.725Z"}}, {"model": "main.comment", "pk": 272, "fields": {"author": 52, "post": 28, "parent": null, "content": "<p>I struggle with relaxing on weekends due to this sort of comparison. I feel like I am wasting my time if I am not doing something productive.</p>\n<p>But, if I focus solely on those around me, such as my colleagues, they don't tend to work on things over the weekend and yet they are still great.</p>\n<p>That helps me relax a bit. If they don't need to, then I don't need to. That is a helpful comparison.</p>\n<p>I try to focus on comparing my current self to where I want to get to. Normally that takes the form of admiring my colleagues' skills. Just makes think, \"if I can be like this in 5 years, I'll be well happy\".</p>\n<p>I'll never be the best. I can accept that. But, I definitely have the room to grow and get somewhere towards the top.</p>\n<p>Maybe, if we all had this sort of mindset of just doing what we can. We will generally be happier.</p>", "posted_at": "2022-11-27T11:11:55.734Z"}}, {"model": "main.comment", "pk": 273, "fields": {"author": 53, "post": 28, "parent": null, "content": "<p>Hi, yes! Being a mentor to others in a different industry I’ve discovered self comparison to be a downer. But if anything it can be used to motivate oneself in therapy too... if I look at the traits and qualities of certain individuals I admire and strive to adopt them, I too can be like them. </p>\n<p>I definitely don’t think I’ll ever be like anyone with a CS degree and it’s pointless comparing... plus I don’t have the youth those nerds lol</p>", "posted_at": "2022-11-27T11:11:55.743Z"}}, {"model": "main.comment", "pk": 274, "fields": {"author": 54, "post": 28, "parent": null, "content": "<p>Why would someone's ideas have authority over yours? Both your and their ideas should be treated equal. Your code is your creativity, your personality. The best approach to treating everyone equally is to accept people's personalities and code as they are. There are of course important things like code readability and maintainability, as well as important personal qualities like professionalism, but that's it, the rest is your personal quirks that should be accepted by others. Think of your friends, you accept them the way they are, and if you are your own friend, you will accept yourself as you are, with your own quirks and good weirdness. Everyone is different in their own weirdness and it makes them better or worse suited for every specific situation, but you are as important and valued as your manager, superior, coworker, etc. In other words, love and accept yourself as you do to your friends and your family, and embrace what makes you different from others.</p>", "posted_at": "2022-11-27T11:11:55.751Z"}}, {"model": "main.comment", "pk": 275, "fields": {"author": 55, "post": 28, "parent": 274, "content": "<p>Imagine that you were the CEO of some company. There is a problem and your best senior and an intern come to 2 different solutions. You hear them out both... Fine.</p>\n<p>Now imagine you had to do it 50 times a day, this would take much of your time and it would be ineffective because the senior would probably have a better solution 99% of the time.</p>\n<p>The senior has authority over the intern. It's nothing personal, it's just that those years and years of experience make a difference. And in the finite amount of time we have, we can't treat everyone the same.</p>\n<p>If we did, when you go to the doctor, you would listen to janitor's advice as well.</p>", "posted_at": "2022-11-27T11:11:55.760Z"}}, {"model": "main.comment", "pk": 276, "fields": {"author": 58, "post": 30, "parent": null, "content": "<p>Updated browser support</p>\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8_XPsjFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://caniuse.bitsofco.de/image/details.jpg\"><img alt=\"Data on support for the details feature across the major browsers from caniuse.com\" src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8_XPsjFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://caniuse.bitsofco.de/image/details.jpg\" /></a></p>", "posted_at": "2022-11-27T11:11:56.439Z"}}, {"model": "main.comment", "pk": 277, "fields": {"author": 57, "post": 30, "parent": 276, "content": "<p>This is good. All browsers supporting it now. No reason to create custom components with <code>divs</code> and <code>span</code> anymore</p>", "posted_at": "2022-11-27T11:11:56.450Z"}}, {"model": "main.comment", "pk": 278, "fields": {"author": 61, "post": 32, "parent": null, "content": "<p>like reactjs &lt;3 thank bro </p>", "posted_at": "2022-11-27T11:11:58.073Z"}}, {"model": "main.comment", "pk": 279, "fields": {"author": 64, "post": 34, "parent": null, "content": "<p>Thanks great article !!</p>", "posted_at": "2022-11-27T11:11:59.195Z"}}, {"model": "main.comment", "pk": 280, "fields": {"author": 63, "post": 34, "parent": 279, "content": "<p>Thank you! Glad it could be of some help :)</p>", "posted_at": "2022-11-27T11:11:59.202Z"}}, {"model": "main.comment", "pk": 281, "fields": {"author": 66, "post": 35, "parent": null, "content": "<p>Love the scientific focus. We need to be better at tracking stuff like this because not all code has the same level of risk.</p>", "posted_at": "2022-11-27T11:12:00.452Z"}}, {"model": "main.comment", "pk": 282, "fields": {"author": 65, "post": 35, "parent": 281, "content": "<p>The \"scientific focus\" is what I was going for. This article will be one I update as I gather more information on various projects (may even include data passed on to me via reliable sources).</p>", "posted_at": "2022-11-27T11:12:00.460Z"}}, {"model": "main.comment", "pk": 283, "fields": {"author": 70, "post": 38, "parent": null, "content": "<p>I will just be honest, do what makes you happy and don't feel bad about it. That is what vacation is about. If being in front of your computer makes you happy then so be it. Don't let others tell you what vacation meens because you are you. One other point is try not to regret it, I feel it is not productive. </p>", "posted_at": "2022-11-27T11:12:07.118Z"}}, {"model": "main.comment", "pk": 284, "fields": {"author": 54, "post": 38, "parent": 283, "content": "<p>Even though this is true, the fact that the author felt regret is a sign that there was something missing. Something that makes you happy in the moment is not something you should always do. Sometimes it's important to spend time with friends and loved ones, sometimes it's important to take a \"me time\" break. It gives you a different kind of happiness, a more lasting happiness, even if it doesn't make you happy in the moment.</p>", "posted_at": "2022-11-27T11:12:07.126Z"}}, {"model": "main.comment", "pk": 285, "fields": {"author": 71, "post": 38, "parent": 283, "content": "<p>I agree. Completely.</p>\n<p>In my first job I thought I had to know <strong>everything</strong>, I'm not talking about the project itself, I'm talking about the internals of how the language was compiled, how the intermediate code would look like...</p>\n<p>I had to quit in 7 months because I was burned out and starting to develop a depression (Well, if I don't know anything, how will I survive in this business?).</p>\n<p>That depression took almost 3 years of my life. Of course YMMV, but, as <a href=\"https://dev.to/buphmin\">@buphmin</a>\n said \"do what makes you happy and don't feel bad about it\"</p>", "posted_at": "2022-11-27T11:12:07.138Z"}}, {"model": "main.comment", "pk": 286, "fields": {"author": 72, "post": 38, "parent": 283, "content": "<p>yea.. if it made you feel okay at the moment then it's okay. Don't think about it that much.. I just had one week vacation after working my ass off for a year and a half and you know what I did? I just cleaned and reorganized my house and computer. Also, I scheduled health appointments to check me since I didn't do it for a long time. At the end of my vacation, I was exhausted since I didn't really \"rest\" properly during that week but in the end, I was satisfied I could have the time to do what I wanted to do for some time. The next weekend I slept for 18 hours lol. </p>", "posted_at": "2022-11-27T11:12:07.147Z"}}, {"model": "main.comment", "pk": 287, "fields": {"author": 73, "post": 38, "parent": null, "content": "<p>I often ask myself this question. I had done this before, and it can definitely lead to burnout. Gotta be careful.</p>", "posted_at": "2022-11-27T11:12:07.164Z"}}, {"model": "main.comment", "pk": 288, "fields": {"author": 74, "post": 38, "parent": null, "content": "<p>Once I explained (many years ago) to my wife that coding gives me great joy, it was much easier to explain. So now when I code and she reads Marley and Me, we are both happy...well kinda.</p>\n<p>However we always agree no phones at the dinner table.</p>", "posted_at": "2022-11-27T11:12:07.173Z"}}, {"model": "main.comment", "pk": 289, "fields": {"author": 75, "post": 38, "parent": null, "content": "<p>I think it's important to stay on top of your game. Not even joking, but you can get really rusty and behind your normal flows if you completely don't touch a keyboard at all. This being said, the trick for me is to find a balance. At daily work, I need to be completely involved in coding. Writing a lot, deleting a lot, attending meetings, emergency bugs, etc, and it can be draining.  </p>\n<p>In holidays, I do much more passive activities: reading books, articles and blogs and writing code on paper to solve algorithm interview questions purely on conceptual levels. Thinking about inefficient algorithms, trying to optimize them, looking up online if stuck but always on paper. Then I write some code 2/3x a week</p>", "posted_at": "2022-11-27T11:12:07.182Z"}}, {"model": "main.comment", "pk": 290, "fields": {"author": 76, "post": 38, "parent": null, "content": "<blockquote>\n<p>Really nothing had changed from my day to day activities other than the setting and that I was working on fun problems by choice.</p>\n</blockquote>\n<p>I think this is the important sentence. You say \"nothing had changed\" but actually quite a lot had changed.</p>\n<p>Of course, it's often very good to completely distance yourself from work-related activities but at least for me, hacking away on some funny projects with zero pressure, zero deadlines and knowing I can just stop working on it if I don't enjoy it, is a great way to relax.</p>\n<p>I got into this industry because I loved coding. That has not changed so on my free time, if I have time and energy and I get excited about coding, I'll code to my heart's content.</p>", "posted_at": "2022-11-27T11:12:07.192Z"}}, {"model": "main.comment", "pk": 291, "fields": {"author": 77, "post": 38, "parent": null, "content": "<p>I write code all the time. Even during vacations. I look at coding as a form of catharsis. That said, sometimes I just switch off all electronics and just read a book(s). If writing a few lines of code for your project makes you happy then that is what you need. </p>", "posted_at": "2022-11-27T11:12:07.201Z"}}, {"model": "main.comment", "pk": 292, "fields": {"author": 78, "post": 38, "parent": null, "content": "<p>Take some time off to avoid burnout! You might form some new perspectives and be more productive when you return</p>", "posted_at": "2022-11-27T11:12:07.209Z"}}, {"model": "main.comment", "pk": 293, "fields": {"author": 79, "post": 38, "parent": null, "content": "<p>Code love code.</p>", "posted_at": "2022-11-27T11:12:07.218Z"}}, {"model": "main.comment", "pk": 294, "fields": {"author": 80, "post": 38, "parent": null, "content": "<p>Well, NoCodeRevolution by tools like Webflow is really making the code or no code debate easier by going with NoCode for small projects.</p>", "posted_at": "2022-11-27T11:12:07.226Z"}}, {"model": "main.comment", "pk": 295, "fields": {"author": 81, "post": 38, "parent": null, "content": "<p>Vacation, or plain off-time (weekends, after-hours, so on), I have a hard rule: No. Friggin. Building. None of it. </p>\n<p>I don't like that rule because my brain doesn't stop, but I need it for sanity. I have a compromise: No code, but I can ponder.</p>\n<p>I take that time away from the screen to do fun things - hiking, playing handball, watching raindrops, real-world things - but I allow myself to reflect on what I've built, and think-through what I plan on building. </p>\n<p>The outcome is a happy, well-balanced me, and a very clear direction once I'm allowed to lay down SLOCs again. </p>\n<p>Frankly, some of my best architectural decisions have come from this. I hike, I make my way to a good sit-rock in the middle of a raging creek, sit for a few hours and watch the water, then I go back to Intellij on Monday and build a streaming-data solution that has no problem with billion+ records/day </p>", "posted_at": "2022-11-27T11:12:07.235Z"}}, {"model": "main.comment", "pk": 296, "fields": {"author": 82, "post": 38, "parent": null, "content": "<p>Also, would love to add that if you like to code on vacations / free time, I can only congratulate you. It really shows passion for what you do.</p>\n<p>That's passion in my book.</p>", "posted_at": "2022-11-27T11:12:07.243Z"}}, {"model": "main.comment", "pk": 297, "fields": {"author": 83, "post": 38, "parent": null, "content": "<p>I disagree with the \"what makes you happy\". There are other things that make us happy and are not good for us. Actually most things in life are like that. I'm more for moderation. I used to be like that when I was younger but I got burned up. Back then I didn't realize the importance of disconnecting and I always felt that I had the energy.</p>\n<p>Don't get me wrong, some people cope well and don't get affected. But always remember that you only hear the successful stories and never the unhappy ones. Having said that, my advice is to be careful and always try to protect your health.</p>", "posted_at": "2022-11-27T11:12:07.252Z"}}, {"model": "main.comment", "pk": 298, "fields": {"author": 84, "post": 38, "parent": null, "content": "<p>hi. as I wrote <a href=\"https://dev.to/dvddpl/do-you-bring-your-laptop-on-vacation-5gpj\">here</a> I kinda have the same - but opposite - dilemma.  </p>\n<p>For me coding on vacation is a absolutely a no-go. I need to recharge, I need to keep some distance from what takes my mind busy all year round. and I do all I dont have much time or opportunity to do otherwise - that is mostly travelling, doing sports and be in the nature. ( as you can see not much of social things anyway. :-) )  </p>\n<p>But what you do on vacation is up to you. It is your vacation and you should do whatever makes you feel good and happy. It could be partying, and binge drinking and sleeping 4 h each night or could be coding your fun projects. Then over the years you will realize that some of the things you like to do are not that healthy ( coding on vacation might be one of these :-) ) and you might learn to stay away from it or reach some more balance. Until then, have fun and do what you love. </p>", "posted_at": "2022-11-27T11:12:07.273Z"}}, {"model": "main.comment", "pk": 299, "fields": {"author": 82, "post": 38, "parent": null, "content": "<p>Do what you want, how about that?</p>\n<p>My perspective on this - you are going to be working your ass off later until the point looking at code will become depressive without taking time off.</p>", "posted_at": "2022-11-27T11:12:07.283Z"}}, {"model": "main.comment", "pk": 300, "fields": {"author": 85, "post": 38, "parent": null, "content": "<p>Vacation is all about unwinding; if coding is your unwind then go for it. Personally, I like to give my vacation time to something other than coding. </p>", "posted_at": "2022-11-27T11:12:07.291Z"}}, {"model": "main.comment", "pk": 301, "fields": {"author": 86, "post": 38, "parent": null, "content": "<p>Since I have two kids, vacation mean I cannot be in front of my screen, even though sometimes I want to :D, but friend/family time is important, trust me they will be there when you down unless if you never socialize with them</p>\n<p>It's easier to find a new job rather than find a new family</p>\n<p>Just my 2 cents </p>", "posted_at": "2022-11-27T11:12:07.300Z"}}, {"model": "main.comment", "pk": 302, "fields": {"author": 87, "post": 38, "parent": null, "content": "<p>This thread and discussion section has been helpful for me. I'm also having a 2 week vacation from coding. Back to work starts tomorrow.</p>\n<p>My mindset was like, try to avoid from code as possible in these 2 weeks. It's very confusing, really; I want to solve / accomplish my tasks at work but at the same time I want to avoid it for the time being.</p>\n<p>This makes me kinda regretting it, because right off the bat, you can say that I'm not willing to accomplish my tasks.</p>\n<p>as <a href=\"https://dev.to/buphmin\">@buphmin</a>\n mentioned, \"One other point is try not to regret it, I feel it is not productive.\"</p>\n<p><a href=\"https://dev.to/ben\">@ben</a>\n also said \"Does it seem more out of work pressure, stress, and anxiety of not coding? Then work on finding time away from the screen.\"</p>\n<p>My pessimistic side tells me that I'm just fooling myself that what I'm doing (avoiding to code for the meantime) is right. But whatever. I know that I'll do my tasks anyway after this vacation.</p>\n<p>I'll try to gain these mindsets bit by bit.</p>", "posted_at": "2022-11-27T11:12:07.311Z"}}, {"model": "main.comment", "pk": 303, "fields": {"author": 88, "post": 38, "parent": null, "content": "<p>Yass..planning to spend my vacation like that as well. Keep doing what you love without thinking of others!!</p>", "posted_at": "2022-11-27T11:12:07.320Z"}}, {"model": "main.comment", "pk": 304, "fields": {"author": 89, "post": 38, "parent": null, "content": "<p>There is lots of great advice in the comments. Biggest thing about vacations is finding time to reflect on yourself &amp; as many said do what you enjoy. </p>\n<p>However, if you are on vacation with others the point of the vacation is to balance your enjoyments with the group. If that is what happened overall, then no guilt should be felt.</p>\n<p>But, when a vacation is all for you, then CODE LIKE THE WIND. Or do whatever your mind &amp; body is needing of you to enjoy your time away from work/school.</p>\n<p>Bottom line, if you still feel guilt about the vacation then you need to talk to those important to you from the vacation to make sure your relationships are solid. Once that is resolved, then there wont be any feelings of guilt.</p>", "posted_at": "2022-11-27T11:12:07.327Z"}}, {"model": "main.comment", "pk": 305, "fields": {"author": 90, "post": 38, "parent": null, "content": "<p>I find vacation a fun time to dig into something that I have wanted to explore and learn about, but will not provide value to my work right away.</p>\n<p>I also have a family with small children at home so I find it important to be intentional about it. I set some time boundaries, this is usually when kids wake up from nap. I set a goal to touch on certain things. But I don't set goals about the end product. This is my time to have fun and explore new things, not feel guilty that I didn't finish or that it was a crappy result. You need a few shitty projects under your belt to really understand new things sometimes.</p>\n<p>Most importantly do what you enjoy and don't feel guilty about it. It's your vacation spend it how you want to.</p>", "posted_at": "2022-11-27T11:12:07.336Z"}}, {"model": "main.comment", "pk": 306, "fields": {"author": 91, "post": 38, "parent": null, "content": "<p>I refrain completely from anything related to work on vacay. TBH I really want a complete digital detox while I vacate, but try to limit smartphone interactions to apps that provide a modicum of utility. </p>\n<p>Don’t get me wrong. I ❤️ coding but when it starts interfering with relationships it’s time to re-examine priorities. Vacations for me are time to spend with people I care about doing things we can share together. Vacations are a time to explore and my spirit yearns for that sort of unimpeded adventure from time to time. Last year we really didn’t get a vacation, so this year I’m finding at least two weeks to play hard, see parts of the world I haven’t and be with the people I love. I’ll bring a camera, but no laptop.</p>", "posted_at": "2022-11-27T11:12:07.344Z"}}, {"model": "main.comment", "pk": 307, "fields": {"author": 92, "post": 38, "parent": null, "content": "<p>Hello,</p>\n<p>To be honest, I just came back from a two week vacation and the same thing happened with me. I found myself taking my laptop to a coffee shop and coding and it was a lot of fun!</p>\n<p>It made me happy and I enjoyed every second. I totally agree with <a href=\"https://dev.to/buphmin\">@buphmin</a>\n, if that makes you happy too, then don't worry about it.</p>\n<p>Just make sure to see the people you love at least every other day if you live with them to keep in touch and all will be great.</p>", "posted_at": "2022-11-27T11:12:07.353Z"}}, {"model": "main.comment", "pk": 308, "fields": {"author": 93, "post": 38, "parent": null, "content": "<p>Code is refreshing 😂👍</p>", "posted_at": "2022-11-27T11:12:07.360Z"}}, {"model": "main.comment", "pk": 309, "fields": {"author": 94, "post": 38, "parent": null, "content": "<p>I think, as with most things, there are seasons where you can't get enough code and then there are seasons where you need breaks. I just try to listen to my body. Am I getting more frustrated than intrigued by problems? Maybe it's time for other activities. As I've gotten into my 6th year of writing software professionally I find myself coding less outside of work, but it could just be a season! Listen to your body and if you can find someone to check in with that knows you well that can be a great help too! I have a couple of people I check in with, one is my wife who really knows me well and can tell when I'm agitated or not happy, and then another is a coworker I trust to be honest with me about my work and how I'm interacting with others. At the end of the day, just ask yourself why you're doing what you do, and if the why is lined up with what you really value I think it will all shake out in the end. (Whether you're on vacation or not ha)</p>", "posted_at": "2022-11-27T11:12:07.374Z"}}, {"model": "main.comment", "pk": 310, "fields": {"author": 95, "post": 38, "parent": null, "content": "<p>My take is to not let inspiration go to waste. If you're inspired, code. If you're not, don't touch the dang coding machine. </p>\n<p>Sometimes I find that inspiration gets in the way of enjoying vacation, time with friends, etc. But I know it's a jerk move to my friends when I grab my coding machine out of habit. </p>", "posted_at": "2022-11-27T11:12:07.382Z"}}, {"model": "main.comment", "pk": 311, "fields": {"author": 96, "post": 38, "parent": null, "content": "<p>During a family trip overseas a few years back, I didn't code. We went to a 3-star full board hotel in a warm climate by the sea.</p>\n<p>My favourite memory from that holiday is of myself, wife &amp; son playing all day long in the approx 2m swell on the beach.</p>\n<p>Last year, my wife &amp; I were to go on an adults only holiday, 5-star all inclusive, right on the beach. She unfortunately couldn't come, so I went alone. My daily routine was breakfast, swim in the sea, comedy podcasts until the bar opened &amp; then sit under a tree writing code &amp; steadily drinking free beer (coding the way coding should be done...).</p>\n<p>I don't have anything near the same level of memories, but the point of the latter holiday was to unwind &amp; de-stress. I did that successfully.</p>\n<p>Different type of holiday, different activities, different memories.</p>\n<p>Both were very good holidays.</p>", "posted_at": "2022-11-27T11:12:07.392Z"}}, {"model": "main.comment", "pk": 312, "fields": {"author": 97, "post": 38, "parent": null, "content": "<p>While coding on vacation is something I personally do and enjoy as well, I try to manage my time to also hang out with friends and family as well :)</p>\n<p>If you feel satisfied doing something, there's no reason to feel bad about it , just make sure to give yourself some relaxation as well , because our line of work is mentally demanding and resting is a must ;)</p>", "posted_at": "2022-11-27T11:12:07.400Z"}}, {"model": "main.comment", "pk": 313, "fields": {"author": 22, "post": 38, "parent": null, "content": "<p>I think your feelings towards coding on vacation will, and probably should, change depending on your situation.</p>\n<p>Are you excited and itching to code? Then code!</p>\n<p>Does it seem more out of work pressure, stress, and anxiety of not coding? Then work on finding time away from the screen. It doesn't seem like this is how you were feeling.</p>\n<blockquote>\n<p>Inadvertently on this vacation, I isolated myself from my friends and family.</p>\n</blockquote>\n<p>I'd advise you to get in the habit of being very communicative about your planned activities, and set expectations. If you are excited about coding, make sure people know you're genuinely having a good time with it so they don't worry about you.</p>\n<p>I personally do try to get away from coding a bit, because I have been coding too much for too many years and time away is good for me. I used to spend all my vacation time coding and I loved it!</p>\n<p>I typically do more explicit reading about code while I'm on vacation. Loading up a book on a Kindle is a good way to keep learning if that's what's most interesting to you at the time while eliminating some stigma you get from your friends and family, because reading a book on vacation is non-controversial.</p>\n<p>Self-awareness is key. Pay attention to your mental health and do what's good for you. Remember, it's a marathon not a sprint.</p>", "posted_at": "2022-11-27T11:12:07.410Z"}}, {"model": "main.comment", "pk": 314, "fields": {"author": 98, "post": 38, "parent": null, "content": "<p><a href=\"https://dev.to/buphmin\">@buphmin</a>\n nailed it ... and the chili peppers said (quoting another group) \"It's better to regret something you did, then something you didn't do.\" - don't regret it, be happy! eat candy and write code #devLife</p>", "posted_at": "2022-11-27T11:12:07.418Z"}}, {"model": "main.comment", "pk": 315, "fields": {"author": 99, "post": 38, "parent": null, "content": "<p>It's good to have a great moment doing and follow your passions. But... I think it's also good to share that passion with someone :) In my experience, it's better when is shared :)</p>", "posted_at": "2022-11-27T11:12:07.427Z"}}, {"model": "main.comment", "pk": 316, "fields": {"author": 100, "post": 38, "parent": null, "content": "<p>I'm barely learning to code, so I can't usually offer anything helpful on here, but having grown up in a very strict religious family I think I'm something of an expert on guilt! I personally find Dr. David Burns' advice in Feeling Good to be super helpful. He dedicates am entire chapter to it, and I think it's well worth reading.</p>\n<p>As for what to do on vacation, I think the philosophical discussion in the comments is really interesting. My take on it is that \"vacation\" is a social construct and it's impossible not to be influenced by information from social dictates of what a vacation \"should\" look like. I guess it seems like a good idea to try to get in the weeds of what you actually want from a vacation vs. what other people say a vacation \"should\" be, although there's no getting around the fact that even our wants are shaped by social constructs. But to the extent possible, trying to figure out what you actually personally want from a vacation and basing your choices in that seems like a good idea going forward. Wouldn't worry about what's already past, though!</p>", "posted_at": "2022-11-27T11:12:07.436Z"}}, {"model": "main.comment", "pk": 317, "fields": {"author": 71, "post": 39, "parent": null, "content": "<p>I don't know if you're being serious or not.</p>\n<p>The best example is responsive images, you can see an example at <a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">MDN Docs</a></p>\n<p>The idea is... you have a set of sources (in this case, images in different sizes) that you control with CSS (<code>media queries</code>).</p>\n<p>But let's use the example from MDN:  </p>\n<p>```\n<img srcset=\"elva-fairy-320w.jpg 320w, elva-fairy-480w.jpg 480w, elva-fairy-800w.jpg 800w\" sizes=\"(max-width: 320px) 280px, (max-width: 480px) 440px, 800px\" src=\"elva-fairy-800w.jpg\" alt=\"Elva dressed as a fairy\"> </p>\n<p>```</p>\n<p>Notice the different images in the <code>set</code> of <code>src</code>?  </p>\n<p>Well, that's your <code>srcset</code>!</p>\n<p>In this example the author is using the CSS queries within the <code>&lt;img&gt;</code> tag with the attribute <code>sizes</code>.</p>\n<p>Let's transform it into a tiny CSS:  </p>\n<p>```\nimg {\n  width: 800px;\n}</p>\n<p>@media screen and (max-width: 480px) {\n  img {\n    width: 440px;\n  }\n}</p>\n<p>@media screen and (max-width: 320px) {\n  img {\n    width: 280px;\n  }\n}</p>\n<p>```</p>\n<p>I'm using <code>img</code> as a selector.</p>\n<p>Another thing, you might ask:  </p>\n<p>\"Why is the author setting the size to <code>280px</code> and the image has a width of 320px\"? That's - IMO - a way to avoid distortion (I can imagine some others explanations, but that's is the most simple).</p>\n<p>Anyway, take a few minutes to read the link I sent you and search the web for \"responsive image srcset example\" and you'll get some <em>way</em> better explanation that I just gave you!   </p>\n<p>(I'm on mobile and kinda in a hurry, but feel free to hit me up!)</p>\n<p>I hope I cleared the path a little.</p>", "posted_at": "2022-11-27T11:12:08.224Z"}}, {"model": "main.comment", "pk": 318, "fields": {"author": 101, "post": 39, "parent": 317, "content": "<p>I'm serious. For example:</p>\n<p>```\n  <img srcset=\"rufy1.jpg 850w, rufy2.jpg 900w\"\n       sizes=\"(max-width: 600px) 680px, (max-width: 2900px) 799px\"\n       src=\"rufy1.jpg\"\n       alt=\"One Piece\"></p>\n<p>```</p>\n<p>Why <code>rufy2.jpg</code> is shown when the viewport is 1200 pixels wide?</p>", "posted_at": "2022-11-27T11:12:08.233Z"}}, {"model": "main.comment", "pk": 319, "fields": {"author": 103, "post": 40, "parent": null, "content": "<p>Incase if anyone didn't watched this 🤣  </p>\n<p><a href=\"https://youtu.be/dKjCWfuvYxQ\">youtu.be/dKjCWfuvYxQ</a></p>", "posted_at": "2022-11-27T11:12:08.425Z"}}, {"model": "main.comment", "pk": 320, "fields": {"author": 106, "post": 43, "parent": null, "content": "<p>Refactoring code is a great skill that not so many developers have...</p>\n<p>Many developers feel afraid of doing these kind of tasks, it's actually scary cuz even changing one line could break things!</p>\n<p>Great job, <a href=\"https://dev.to/feruzoripov\">@feruzoripov</a>\n ✋</p>", "posted_at": "2022-11-27T11:12:11.394Z"}}, {"model": "main.comment", "pk": 321, "fields": {"author": 107, "post": 43, "parent": 320, "content": "<p>I've always found refactoring to be refreshing ans even fun.  </p>\n<p>Thinking of better and more efficient ways to do something.</p>\n<p>But thats just me. I always keep a copy of my original code just incase which helps me to not be afraid to royaly screw itup 😁.</p>", "posted_at": "2022-11-27T11:12:11.404Z"}}, {"model": "main.comment", "pk": 322, "fields": {"author": 108, "post": 43, "parent": 320, "content": "<p>This is how I started my open source contribution journey, thanks )</p>", "posted_at": "2022-11-27T11:12:11.412Z"}}, {"model": "main.comment", "pk": 323, "fields": {"author": 108, "post": 43, "parent": null, "content": "<p>I'm so inspired after reading it. Thank you so much )</p>", "posted_at": "2022-11-27T11:12:11.421Z"}}, {"model": "main.comment", "pk": 324, "fields": {"author": 109, "post": 43, "parent": null, "content": "<p>Great job <a href=\"https://dev.to/feruzoripov\">@feruzoripov</a>\n!</p>", "posted_at": "2022-11-27T11:12:11.428Z"}}, {"model": "main.comment", "pk": 325, "fields": {"author": 108, "post": 43, "parent": 324, "content": "<p>Thanks)</p>", "posted_at": "2022-11-27T11:12:11.437Z"}}, {"model": "main.comment", "pk": 326, "fields": {"author": 110, "post": 43, "parent": null, "content": "<p>Factoring is so important!</p>", "posted_at": "2022-11-27T11:12:11.443Z"}}, {"model": "main.comment", "pk": 327, "fields": {"author": 22, "post": 45, "parent": null, "content": "<p>This is truly fabulous advice.</p>", "posted_at": "2022-11-27T11:12:14.777Z"}}, {"model": "main.comment", "pk": 328, "fields": {"author": 112, "post": 45, "parent": 327, "content": "<p>Thank you Ben, much appreciated!</p>", "posted_at": "2022-11-27T11:12:14.787Z"}}, {"model": "main.comment", "pk": 329, "fields": {"author": 113, "post": 45, "parent": null, "content": "<p>Thanks a lot! </p>", "posted_at": "2022-11-27T11:12:14.798Z"}}, {"model": "main.comment", "pk": 330, "fields": {"author": 112, "post": 45, "parent": 329, "content": "<p>You're welcome - thanks for reading!</p>", "posted_at": "2022-11-27T11:12:14.808Z"}}, {"model": "main.comment", "pk": 331, "fields": {"author": 114, "post": 45, "parent": null, "content": "<blockquote>\n<p>Reflect on your experiences regularly</p>\n</blockquote>\n<p>Yes! Internships go so fast. I have to take a final one in my upcoming school year. Taking notes, no matter how small, has definitely saved me last time so I'll do that again.</p>\n<p>Thanks for writing down your thoughts this early :) </p>", "posted_at": "2022-11-27T11:12:14.821Z"}}, {"model": "main.comment", "pk": 332, "fields": {"author": 112, "post": 45, "parent": 331, "content": "<p>Good luck with it! And thank you for reading my post😊</p>", "posted_at": "2022-11-27T11:12:14.833Z"}}, {"model": "main.comment", "pk": 333, "fields": {"author": 115, "post": 45, "parent": null, "content": "<p>Next day 16 I'll start in a company as Java developer intern, and man... Your post came in a such good time. Actually, my future manager sent me this link 😂 I think he knows that I'm nervous and anxious. Keep writing about your thoughts, and progress. I'd love to know!  </p>\n<p>Thank you :D</p>", "posted_at": "2022-11-27T11:12:14.845Z"}}, {"model": "main.comment", "pk": 334, "fields": {"author": 112, "post": 45, "parent": 333, "content": "<p>Oh wow that's amazing that a manager thought my post was good enough to share! I will try my best to continue posting.   </p>\n<p>Thanks for reading and I hope your internship is going well😊</p>", "posted_at": "2022-11-27T11:12:14.856Z"}}, {"model": "main.comment", "pk": 335, "fields": {"author": 117, "post": 46, "parent": null, "content": "<p>Too much code... the over-complexity of this is outstanding </p>", "posted_at": "2022-11-27T11:12:17.576Z"}}, {"model": "main.comment", "pk": 336, "fields": {"author": 116, "post": 46, "parent": 335, "content": "<p>I can't disagree at all, @vsync  </p>\n<p>It must be due to my lack of understanding of hooks &amp; IntersectionObservers.</p>\n<p>Would you have any direction I can take to make it simpler?</p>", "posted_at": "2022-11-27T11:12:17.584Z"}}, {"model": "main.comment", "pk": 337, "fields": {"author": 118, "post": 46, "parent": null, "content": "<p>Sticky is always tricky :) thanks for the post, and the list of resources!</p>", "posted_at": "2022-11-27T11:12:17.593Z"}}, {"model": "main.comment", "pk": 338, "fields": {"author": 116, "post": 46, "parent": 337, "content": "<p>You're welcome &amp; great rhyming, Chris 🤣</p>", "posted_at": "2022-11-27T11:12:17.600Z"}}, {"model": "main.comment", "pk": 339, "fields": {"author": 119, "post": 46, "parent": null, "content": "<p>Great article. I'm adapting your code for use in a project and I had two questions about <code>stickyRefs</code>. </p>\n<p>First, are these refs removed from the <code>Map</code> when items (aka <code>StickyBoundary</code> + <code>Sticky</code> pairs) are unmounted in a dynamic list? If not, then I assume this is not good because if new items are created dynamically then you'll end up with zombie refs sticking around in that Map... and therefore a memory leak.</p>\n<p>Second, why is this context stored at the <code>StickyViewport</code> level? From a cursory look at the code, it seems that this context could be stored at the <code>StickyBoundary</code> level instead, which would simplify things because no Map would be needed, and would remove the memory leak risk noted above because if a section is unmounted then the context provider would be unmounted too. Is this correct?</p>\n<p>And one more question: I'm assuming that only one <code>&lt;Sticky&gt;</code> can be inside a <code>&lt;StickyBoundary&gt;</code>. Is this correct? If yes then while moving the context as noted above, I may add some error handling to prevent duplicate <code>&lt;Sticky&gt;</code> elements in a boundary. </p>", "posted_at": "2022-11-27T11:12:17.610Z"}}, {"model": "main.comment", "pk": 340, "fields": {"author": 116, "post": 46, "parent": 339, "content": "<p>Thank you for the questions and thoughtful comments/suggestions, Justin.</p>\n<blockquote>\n<p>First, are these refs removed from the Map when items (aka StickyBoundary + Sticky pairs) are unmounted in a dynamic list?</p>\n</blockquote>\n<p>No, they are not. Sticky refs are added using <code>addStickyRef</code> but not removed on unmount. That's a very nice catch. So <code>&lt;Sticky /&gt;</code> component should probably call a method like (not implemented in the post) <code>removeStickyRef</code> to destroy the ref.</p>\n<blockquote>\n<p>Second, why is this context stored at the StickyViewport level?</p>\n</blockquote>\n<p>You can have multiple <code>StickyViewport</code> components, each of which can fire different intersection events. The <code>StickyViewport</code> has <code>containerRef</code>, against which intersection observer (for each <code>Sticky</code> component) events are fire, not relative to <code>StickyBoundary</code>.</p>\n<blockquote>\n<p>I'm assuming that only one can be inside a . Is this correct?</p>\n</blockquote>\n<p>You can have multiple <code>Sticky</code> components but event will fire for the last one   </p>\n<p>Yes. You can have one <code>Sticky</code> component under <code>StickyBoundary</code>. I believe the original implementation in Google doc didn't allow this either (maybe too restrictive)...</p>", "posted_at": "2022-11-27T11:12:17.620Z"}}, {"model": "main.comment", "pk": 341, "fields": {"author": 121, "post": 47, "parent": null, "content": "<p>As a backend developer I love exploring different paths. Just discovered this series and liked so much. Thank you, very informative post and podcast indeed :)</p>", "posted_at": "2022-11-27T11:12:17.847Z"}}, {"model": "main.comment", "pk": 342, "fields": {"author": 120, "post": 47, "parent": 341, "content": "<p>Thanks so much for your comment, we are really glad you like the series and find everything very informative! Andrew has a way of putting things and he's got a lot of insights he's clearly been thinking about, so we're glad to bring this to you.</p>\n<p>On the point of exploring different paths, if cloud computing is something you're interested in, Andrew is kindly giving away free courses to get you certified - he usually charges for these but the first 100 commenters on this post get them without charge. If you want access to that just DM us on here and we'll send it over.</p>\n<p>Thanks for engaging regardless! :)</p>", "posted_at": "2022-11-27T11:12:17.858Z"}}, {"model": "main.comment", "pk": 343, "fields": {"author": 122, "post": 47, "parent": null, "content": "<p>My top tech skill is not giving up and just learning enough to get productive. (I hope that counts.) </p>", "posted_at": "2022-11-27T11:12:17.867Z"}}, {"model": "main.comment", "pk": 344, "fields": {"author": 104, "post": 47, "parent": 343, "content": "<p>It is. I'm N years in the industry and still find something to learn every day. There is no way one person will know everything. Learning on the go and solving an actual problem in front of you is a pragmatic approach. 👍</p>", "posted_at": "2022-11-27T11:12:17.876Z"}}, {"model": "main.comment", "pk": 345, "fields": {"author": 123, "post": 47, "parent": null, "content": "<p>My top skills are JavaScript, Go and PHP with React. Different language for different things!</p>", "posted_at": "2022-11-27T11:12:17.885Z"}}, {"model": "main.comment", "pk": 346, "fields": {"author": 120, "post": 47, "parent": 345, "content": "<p>You're very diverse there! Having both async + sync and functional + OOP languages under your belt is a huge advantage in this industry. Let's add cloud to that stack - free course access coming your way!</p>", "posted_at": "2022-11-27T11:12:17.893Z"}}, {"model": "main.comment", "pk": 347, "fields": {"author": 124, "post": 47, "parent": null, "content": "<p>My top skill is javascript and react native.</p>", "posted_at": "2022-11-27T11:12:17.902Z"}}, {"model": "main.comment", "pk": 348, "fields": {"author": 120, "post": 47, "parent": 347, "content": "<p>Nice! Into that JS Mobile Dev Stack! I'll send you free AWS course access shortly.</p>", "posted_at": "2022-11-27T11:12:17.910Z"}}, {"model": "main.comment", "pk": 349, "fields": {"author": 125, "post": 47, "parent": null, "content": "<p>Top skill is JS</p>", "posted_at": "2022-11-27T11:12:17.920Z"}}, {"model": "main.comment", "pk": 350, "fields": {"author": 126, "post": 47, "parent": null, "content": "<p>Can someone help me? I graduated as a full stack developer and feel stuck. I want to make a mobile app. My number is+14692265917 </p>", "posted_at": "2022-11-27T11:12:17.929Z"}}, {"model": "main.comment", "pk": 351, "fields": {"author": 120, "post": 47, "parent": 350, "content": "<p>We wouldn't help over phone Chad but you can always put #help posts on here! It's an open community and everyone's happy to help.</p>", "posted_at": "2022-11-27T11:12:17.939Z"}}, {"model": "main.comment", "pk": 352, "fields": {"author": 127, "post": 47, "parent": null, "content": "<p>Full stack is a competitive market? LOL ok. We're talking about people doing 3 - 4 jobs in one, which very few can effectively do. Any true full stack dev can get any job he wants.</p>", "posted_at": "2022-11-27T11:12:17.946Z"}}, {"model": "main.comment", "pk": 353, "fields": {"author": 128, "post": 47, "parent": null, "content": "<p>My top skills at present are HTML &amp; CSS. I am currently learning Javascript with the intention of adding React, VUE, Node &amp; WebGL/Three.js to my skills. </p>", "posted_at": "2022-11-27T11:12:17.956Z"}}, {"model": "main.comment", "pk": 354, "fields": {"author": 129, "post": 47, "parent": null, "content": "<p>My top skill right now would be JS mainly using in front end with React! Thank you! </p>", "posted_at": "2022-11-27T11:12:17.963Z"}}, {"model": "main.comment", "pk": 355, "fields": {"author": 120, "post": 47, "parent": 354, "content": "<p>Awesome, Alexis! Are you working currently or in the learning stages and looking to get a job?</p>\n<p>Also, we'll send you free access to the course from Andrew's company if you send us a DM. Thanks for commenting!</p>", "posted_at": "2022-11-27T11:12:17.972Z"}}, {"model": "main.comment", "pk": 356, "fields": {"author": 87, "post": 47, "parent": null, "content": "<p>My top skill is more on the back-end side of things, as my creative side is not that good to perform UI/UX and stuff. But I can definitely do front-end programming given that I have the UI design and whatnot =)</p>", "posted_at": "2022-11-27T11:12:17.979Z"}}, {"model": "main.comment", "pk": 357, "fields": {"author": 120, "post": 47, "parent": 356, "content": "<p>Thanks Ken! A lot of UI isn't being creative - I'm terrible at creative thinking for design but there are a lot of principles you can read and follow in your designs to make things stand out.</p>\n<p>Anyway, DM coming your way with a free course! Thanks!</p>", "posted_at": "2022-11-27T11:12:17.988Z"}}, {"model": "main.comment", "pk": 358, "fields": {"author": 130, "post": 47, "parent": null, "content": "<p>My top skill is discipline. It helps me to develop another skills :)</p>", "posted_at": "2022-11-27T11:12:17.995Z"}}, {"model": "main.comment", "pk": 359, "fields": {"author": 120, "post": 47, "parent": 358, "content": "<p>Gotta develop those soft skills too! :)</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.003Z"}}, {"model": "main.comment", "pk": 360, "fields": {"author": 131, "post": 47, "parent": null, "content": "<p>I have been working as a Php backend developer for 3 years now and I would say backend programming is my top skill, I'm trying to also learn some frontend tech, trying to learn React right now 💪</p>", "posted_at": "2022-11-27T11:12:18.012Z"}}, {"model": "main.comment", "pk": 361, "fields": {"author": 120, "post": 47, "parent": 360, "content": "<p>Awesome! Do you use a framework when working in PHP? And React is a great choice and fairly future proof. I'd suggest checking out Vue too as it ties in quite well with PHP's Laravel.</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.024Z"}}, {"model": "main.comment", "pk": 362, "fields": {"author": 132, "post": 47, "parent": null, "content": "<p>Backend development aside, my top tech skill would most probably be being able to use Python to automate most of the simple things I repeatedly do :D though I'm still just learning about automating stuff related to servers and deployment (devops, SRE, etc).</p>\n<p>Awesome post, got me more motivated to learn more 👍</p>", "posted_at": "2022-11-27T11:12:18.033Z"}}, {"model": "main.comment", "pk": 363, "fields": {"author": 133, "post": 47, "parent": null, "content": "<p>My top skill is back-end architecture design. I use .Net core, Go.</p>", "posted_at": "2022-11-27T11:12:18.044Z"}}, {"model": "main.comment", "pk": 364, "fields": {"author": 120, "post": 47, "parent": 363, "content": "<p>Awesome! I've been trying to learn GoLang, it seems great and unique in the way it handles concurrency.</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.052Z"}}, {"model": "main.comment", "pk": 365, "fields": {"author": 134, "post": 47, "parent": null, "content": "<p>My top skill is searching solutions for my problems on Internet</p>", "posted_at": "2022-11-27T11:12:18.063Z"}}, {"model": "main.comment", "pk": 366, "fields": {"author": 120, "post": 47, "parent": 365, "content": "<p>100% - isn't that everyone's top skill in development haha.</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.072Z"}}, {"model": "main.comment", "pk": 367, "fields": {"author": 135, "post": 47, "parent": null, "content": "<p>Yo! I am obsessed with learning new things, My best tech skill is HTML/CSS. Non-tech is UX research </p>", "posted_at": "2022-11-27T11:12:18.082Z"}}, {"model": "main.comment", "pk": 368, "fields": {"author": 136, "post": 47, "parent": null, "content": "<p>My top skill is Node and React........</p>", "posted_at": "2022-11-27T11:12:18.091Z"}}, {"model": "main.comment", "pk": 369, "fields": {"author": 120, "post": 47, "parent": 368, "content": "<p>Nice! If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.101Z"}}, {"model": "main.comment", "pk": 370, "fields": {"author": 137, "post": 47, "parent": null, "content": "<p>Great read my man, I think I'm personally best at backend development. I appreciate what you're doing for us developers!</p>", "posted_at": "2022-11-27T11:12:18.110Z"}}, {"model": "main.comment", "pk": 371, "fields": {"author": 138, "post": 47, "parent": null, "content": "<p>Top skill, all things considered, would be Javascript</p>", "posted_at": "2022-11-27T11:12:18.121Z"}}, {"model": "main.comment", "pk": 372, "fields": {"author": 139, "post": 47, "parent": null, "content": "<p>I think my Top skill rn is JavaScript.</p>", "posted_at": "2022-11-27T11:12:18.130Z"}}, {"model": "main.comment", "pk": 373, "fields": {"author": 120, "post": 47, "parent": 372, "content": "<p>JS seems to be the most popular answer!</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.139Z"}}, {"model": "main.comment", "pk": 374, "fields": {"author": 140, "post": 47, "parent": null, "content": "<p>My top skill is ruby &amp; rails, and definitely agree with Andrew in that aws is one of must-have skills.</p>", "posted_at": "2022-11-27T11:12:18.148Z"}}, {"model": "main.comment", "pk": 375, "fields": {"author": 120, "post": 47, "parent": 374, "content": "<p>Indeed, cloud in general is just an amazing way to stand out. Drop us a DM and we'll send you free access to his course!</p>", "posted_at": "2022-11-27T11:12:18.158Z"}}, {"model": "main.comment", "pk": 376, "fields": {"author": 141, "post": 47, "parent": null, "content": "<p>My skill is more on back-end more than front-end .Want to be a senior node js and angular developer.</p>", "posted_at": "2022-11-27T11:12:18.169Z"}}, {"model": "main.comment", "pk": 377, "fields": {"author": 142, "post": 47, "parent": null, "content": "<p>Hey Matthew, my top tech skill is JavaScript.</p>", "posted_at": "2022-11-27T11:12:18.183Z"}}, {"model": "main.comment", "pk": 378, "fields": {"author": 143, "post": 47, "parent": null, "content": "<p>My top skill right now is probably Javascript. But, I'm having fun constantly exploring all sorts of tech.</p>", "posted_at": "2022-11-27T11:12:18.192Z"}}, {"model": "main.comment", "pk": 379, "fields": {"author": 120, "post": 47, "parent": 378, "content": "<p>It's a fantastic attitude to maintain throughout your career to explore different types of tech! You never know what tools can be useful on what project.</p>\n<p>Can you open a DM with us Brian, then we can send you access to the free AWS Course 😄</p>", "posted_at": "2022-11-27T11:12:18.202Z"}}, {"model": "main.comment", "pk": 380, "fields": {"author": 144, "post": 47, "parent": null, "content": "<p>my top skill is javascript but i am constantly trying to fill my language arsenal.</p>", "posted_at": "2022-11-27T11:12:18.211Z"}}, {"model": "main.comment", "pk": 381, "fields": {"author": 120, "post": 47, "parent": 380, "content": "<p>Thanks Tyeshi! Send us a message on here and we'll give you free access to ExamPro.co's CCP course to help you get certified.</p>", "posted_at": "2022-11-27T11:12:18.223Z"}}, {"model": "main.comment", "pk": 382, "fields": {"author": 103, "post": 47, "parent": null, "content": "<p>my top skill is php .</p>", "posted_at": "2022-11-27T11:12:18.231Z"}}, {"model": "main.comment", "pk": 383, "fields": {"author": 120, "post": 47, "parent": 382, "content": "<p>Thanks for the comment Ponick! Open your messages and I'll send you access to the AWS course.</p>", "posted_at": "2022-11-27T11:12:18.240Z"}}, {"model": "main.comment", "pk": 384, "fields": {"author": 145, "post": 47, "parent": null, "content": "<p>My top skills are doing the backend as of now using ExpressJS and doing some frontend using VueJS</p>", "posted_at": "2022-11-27T11:12:18.248Z"}}, {"model": "main.comment", "pk": 385, "fields": {"author": 120, "post": 47, "parent": 384, "content": "<p>Vue is awesome - we use it on most of our projects! It's great that you're learning full stack JS too as it's a great way to get backend and frontend experience without the costly time of learning a backend language too.</p>\n<p>I'll also send you a copy of Andrew's AWS course straight to the DMs!</p>", "posted_at": "2022-11-27T11:12:18.258Z"}}, {"model": "main.comment", "pk": 386, "fields": {"author": 146, "post": 47, "parent": null, "content": "<p>My top skill is ruby. I really love enumerables</p>", "posted_at": "2022-11-27T11:12:18.266Z"}}, {"model": "main.comment", "pk": 387, "fields": {"author": 120, "post": 47, "parent": 386, "content": "<p>Andrew loves Ruby too! He's been using it since the <em>very</em> early version (Andrew, correct me, 0.52??) and ExamPro is built on it.</p>\n<p>We'll send you access to his AWS Certified Cloud Practitioner via DM, you just need to send us one first so we can connect - or follow us back. Either will do :)</p>", "posted_at": "2022-11-27T11:12:18.276Z"}}, {"model": "main.comment", "pk": 388, "fields": {"author": 147, "post": 47, "parent": null, "content": "<p>Matthew great read! MY best tech skill is CSS.</p>", "posted_at": "2022-11-27T11:12:18.285Z"}}, {"model": "main.comment", "pk": 389, "fields": {"author": 120, "post": 47, "parent": 388, "content": "<p>Thanks Stephen! Drop us a DM and we'll drop you free access to Andrew's AWS course</p>", "posted_at": "2022-11-27T11:12:18.294Z"}}, {"model": "main.comment", "pk": 390, "fields": {"author": 148, "post": 47, "parent": null, "content": "<p>A podcast fan here. Nothing better to make dead time a profitable time! My top skill is learning 📚. I'm currently leveling up my Angular skills.</p>", "posted_at": "2022-11-27T11:12:18.301Z"}}, {"model": "main.comment", "pk": 391, "fields": {"author": 120, "post": 47, "parent": 390, "content": "<p>Oh awesome Sebastian, thanks for being a listener! Let us know if there's anyone you want to be on (or even if you want to be on yourself!)</p>\n<p>That's also easily our favourite answer - if you can strategically learn and actually have a passionate for the process of learning something, the skills come naturally. It's something I work on a lot and will forever work on, the process of effective self-teaching.</p>\n<p>Also, free AWS course coming your way! Thanks again for your support and comment :)</p>", "posted_at": "2022-11-27T11:12:18.310Z"}}, {"model": "main.comment", "pk": 392, "fields": {"author": 120, "post": 47, "parent": 390, "content": "<p>Forgot to ask you to DM us first or follow back - either of means we can send you a message! Thanks</p>", "posted_at": "2022-11-27T11:12:18.320Z"}}, {"model": "main.comment", "pk": 393, "fields": {"author": 149, "post": 47, "parent": null, "content": "<p>Hi, mi top skill is PHP + Javascript in many levels now (Laravel + Vuejs). But always near AWS.</p>", "posted_at": "2022-11-27T11:12:18.330Z"}}, {"model": "main.comment", "pk": 394, "fields": {"author": 120, "post": 47, "parent": 393, "content": "<p>Sweet - that's the same stack we use!</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.340Z"}}, {"model": "main.comment", "pk": 395, "fields": {"author": 150, "post": 47, "parent": null, "content": "<p>My top skill is react.js. I just love working with a virtual DOM and stores like Redux make it even more fun.</p>", "posted_at": "2022-11-27T11:12:18.350Z"}}, {"model": "main.comment", "pk": 396, "fields": {"author": 120, "post": 47, "parent": 395, "content": "<p>Your attitude is on point!!! Check your DMs for free access to Andrew's AWS course :)</p>", "posted_at": "2022-11-27T11:12:18.358Z"}}, {"model": "main.comment", "pk": 397, "fields": {"author": 151, "post": 47, "parent": null, "content": "<p>Hi!   </p>\n<p>My best tech skill is APIs (architect 'em, build 'em, break 'em). Especially in Python!   </p>\n<p>I could definitely use this course so Thanks! </p>", "posted_at": "2022-11-27T11:12:18.368Z"}}, {"model": "main.comment", "pk": 398, "fields": {"author": 120, "post": 47, "parent": 397, "content": "<p>You've got the process down! AWS course link coming your way</p>", "posted_at": "2022-11-27T11:12:18.377Z"}}, {"model": "main.comment", "pk": 399, "fields": {"author": 152, "post": 47, "parent": null, "content": "<p>My top skill would be knowing random stuff of JS but now I’m also adding knowing random stuff about Python and Docker 🐍🐳</p>", "posted_at": "2022-11-27T11:12:18.388Z"}}, {"model": "main.comment", "pk": 400, "fields": {"author": 120, "post": 47, "parent": 399, "content": "<p>Good to see you working across multiple technologies!</p>\n<p>If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.396Z"}}, {"model": "main.comment", "pk": 401, "fields": {"author": 153, "post": 47, "parent": null, "content": "<p>My top skill is Javascript, currently interested in API development, and as such I'd like to take the AWS courses in order to learn about working with the Cloud. Cheers. </p>", "posted_at": "2022-11-27T11:12:18.405Z"}}, {"model": "main.comment", "pk": 402, "fields": {"author": 120, "post": 47, "parent": 401, "content": "<p>Access coming your way Marco! Enjoy the course.</p>", "posted_at": "2022-11-27T11:12:18.413Z"}}, {"model": "main.comment", "pk": 403, "fields": {"author": 120, "post": 47, "parent": null, "content": "<p>You'll get there! If you want free access to Andrew's AWS course, drop us a DM and we'll send you a coupon for 100% off.</p>", "posted_at": "2022-11-27T11:12:18.422Z"}}, {"model": "main.comment", "pk": 404, "fields": {"author": 154, "post": 47, "parent": null, "content": "<p>My top skills is Javascript, I simply love Frontend but I also practice Backend to become a Fullstack Developer someday!</p>", "posted_at": "2022-11-27T11:12:18.430Z"}}, {"model": "main.comment", "pk": 405, "fields": {"author": 155, "post": 47, "parent": null, "content": "<p>oh..My top skill is Linux. thanks.</p>", "posted_at": "2022-11-27T11:12:18.439Z"}}, {"model": "main.comment", "pk": 406, "fields": {"author": 156, "post": 47, "parent": null, "content": "<p>My top skill is API development with Ruby on Rails and GraphQL 😇</p>", "posted_at": "2022-11-27T11:12:18.447Z"}}, {"model": "main.comment", "pk": 407, "fields": {"author": 157, "post": 47, "parent": null, "content": "<p>My top skill is in DevOps. Especially, using the Cloud Service provider like AWS and creating a CICD pipelines.</p>", "posted_at": "2022-11-27T11:12:18.456Z"}}, {"model": "main.comment", "pk": 408, "fields": {"author": 161, "post": 50, "parent": null, "content": "<p>This has been an amazing tutorial , few bugs but were resolved :)-</p>", "posted_at": "2022-11-27T11:12:22.070Z"}}, {"model": "main.comment", "pk": 409, "fields": {"author": 162, "post": 50, "parent": null, "content": "<p>thanks for sharing this great tutorial.  </p>\n<p>I had issue with ('model' =&gt; \\App\\User::class).  </p>\n<p>so I changed it to ('model' =&gt; \\App\\Models\\User::class),  </p>\n<p>and it works now.</p>", "posted_at": "2022-11-27T11:12:22.080Z"}}, {"model": "main.comment", "pk": 410, "fields": {"author": 163, "post": 50, "parent": null, "content": "<p>getting this error after install jwt </p>\n<p>php artisan jwt:secret</p>\n<p>There are no commands defined in the \"jwt\" namespace.</p>", "posted_at": "2022-11-27T11:12:22.089Z"}}, {"model": "main.comment", "pk": 411, "fields": {"author": 164, "post": 50, "parent": 410, "content": "<p>Had the same issue. </p>\n<p>following the docs here <a href=\"https://jwt-auth.readthedocs.io/en/develop/lumen-installation/\">jwt-auth.readthedocs.io/en/develop...</a>  </p>\n<p>especially the chapter <strong>Bootstrap file changes</strong> fixed the issue</p>\n<p>Add the following snippet to the <code>bootstrap/app.php</code> file under the providers section as follows:  </p>\n<p>```\n// Uncomment this line\n$app-&gt;register(App\\Providers\\AuthServiceProvider::class);</p>\n<p>// Add this line\n$app-&gt;register(Tymon\\JWTAuth\\Providers\\LumenServiceProvider::class);</p>\n<p>```</p>\n<p>Enter fullscreen mode</p>\n<p>Exit fullscreen mode</p>", "posted_at": "2022-11-27T11:12:22.099Z"}}, {"model": "main.comment", "pk": 412, "fields": {"author": 160, "post": 50, "parent": 410, "content": "<p>Please check to make sure <code>tymon/jwt-auth</code> installed successfully</p>\n<p>Also type <code>php artisan</code> to see available commands.</p>\n<p>Keep me posted on your progress.</p>", "posted_at": "2022-11-27T11:12:22.108Z"}}, {"model": "main.comment", "pk": 413, "fields": {"author": 165, "post": 50, "parent": null, "content": "<p>Thanks for the tutorial, helps me a lot</p>", "posted_at": "2022-11-27T11:12:22.117Z"}}, {"model": "main.comment", "pk": 414, "fields": {"author": 166, "post": 50, "parent": null, "content": "<p>Great post! You had save me!</p>", "posted_at": "2022-11-27T11:12:22.125Z"}}, {"model": "main.comment", "pk": 415, "fields": {"author": 167, "post": 50, "parent": null, "content": "<p>how to do this when using mongodb?</p>", "posted_at": "2022-11-27T11:12:22.133Z"}}, {"model": "main.comment", "pk": 416, "fields": {"author": 168, "post": 50, "parent": null, "content": "<p>Wonderful Bro.. It really helped me to understand the concept.. Thank you..</p>", "posted_at": "2022-11-27T11:12:22.143Z"}}, {"model": "main.comment", "pk": 417, "fields": {"author": 169, "post": 50, "parent": null, "content": "<p>Hi,  </p>\n<p>Thanks for your great tutorial.  </p>\n<p>But I want a custom field (email and password) both so could you make it an example for that.</p>\n<p>My field name = USER_NAME, PASSWORD (Both are capital)</p>\n<p>I try but token always false.</p>\n<p>If you do then its great help for me.</p>\n<p>Thank you</p>", "posted_at": "2022-11-27T11:12:22.152Z"}}, {"model": "main.comment", "pk": 418, "fields": {"author": 170, "post": 50, "parent": null, "content": "<p>This was of great help. The only problem I encountered was when running <code>php artisan jwt:secret</code>.  </p>\n<p><code>$app-&gt;register(Tymon\\JWTAuth\\Providers\\LumenServiceProvider::class);</code> needs to be added to app.php <em>before</em> the command is executed.</p>", "posted_at": "2022-11-27T11:12:22.160Z"}}, {"model": "main.comment", "pk": 419, "fields": {"author": 171, "post": 50, "parent": null, "content": "<p>Hy bro, thanks for the tutorial. I want to know how I implements logout</p>", "posted_at": "2022-11-27T11:12:22.169Z"}}, {"model": "main.comment", "pk": 420, "fields": {"author": 172, "post": 50, "parent": 419, "content": "<p>public function logout () {  </p>\n<p>Auth::logout();  </p>\n<p>return response()-&gt;json(['message' =&gt; 'Successfully logged out']);  </p>\n<p>}</p>", "posted_at": "2022-11-27T11:12:22.177Z"}}, {"model": "main.comment", "pk": 421, "fields": {"author": 173, "post": 50, "parent": null, "content": "<p>Does the lumen version affect? I use lumen version 6</p>", "posted_at": "2022-11-27T11:12:22.186Z"}}, {"model": "main.comment", "pk": 422, "fields": {"author": 174, "post": 50, "parent": null, "content": "<p>everything except php artisan jwt::secret is work...  </p>\n<p>so, i write jwt key in .env by myself..</p>\n<p>thank you, nice tutorial...</p>", "posted_at": "2022-11-27T11:12:22.194Z"}}, {"model": "main.comment", "pk": 423, "fields": {"author": 175, "post": 50, "parent": null, "content": "<p>This was really helpful, man! Thanks very much.</p>", "posted_at": "2022-11-27T11:12:22.203Z"}}, {"model": "main.comment", "pk": 424, "fields": {"author": 176, "post": 50, "parent": null, "content": "<p>Thank you, very good tutorial</p>", "posted_at": "2022-11-27T11:12:22.210Z"}}, {"model": "main.comment", "pk": 425, "fields": {"author": 177, "post": 50, "parent": null, "content": "<p>What a great tutorial. Thank you very much!</p>", "posted_at": "2022-11-27T11:12:22.219Z"}}, {"model": "main.comment", "pk": 426, "fields": {"author": 160, "post": 50, "parent": 425, "content": "<p>You are welcome</p>", "posted_at": "2022-11-27T11:12:22.226Z"}}, {"model": "main.comment", "pk": 427, "fields": {"author": 178, "post": 50, "parent": null, "content": "<p>can you go further this post by making role-based auth in lumen?</p>", "posted_at": "2022-11-27T11:12:22.235Z"}}, {"model": "main.comment", "pk": 428, "fields": {"author": 160, "post": 50, "parent": null, "content": "<p>I am yet to come across this issue. Is there an open issue on github? </p>", "posted_at": "2022-11-27T11:12:22.242Z"}}, {"model": "main.comment", "pk": 429, "fields": {"author": 179, "post": 50, "parent": null, "content": "<p>Thanks for this article! Very straightforward and easy to understand : )</p>", "posted_at": "2022-11-27T11:12:22.252Z"}}, {"model": "main.comment", "pk": 430, "fields": {"author": 160, "post": 50, "parent": 429, "content": "<p>I'm glad it helped :)</p>", "posted_at": "2022-11-27T11:12:22.259Z"}}, {"model": "main.comment", "pk": 431, "fields": {"author": 180, "post": 50, "parent": null, "content": "<p>Nice one!</p>", "posted_at": "2022-11-27T11:12:22.268Z"}}, {"model": "main.comment", "pk": 432, "fields": {"author": 160, "post": 50, "parent": 431, "content": "<p>Thanks!</p>", "posted_at": "2022-11-27T11:12:22.275Z"}}, {"model": "main.comment", "pk": 433, "fields": {"author": 181, "post": 50, "parent": null, "content": "<p>you might want to also add  </p>\n<p>```\nuse Illuminate\\Support\\Facades\\Auth;</p>\n<p>```</p>\n<p>when you add <code>respondWithToken</code> to <code>app/Http/Controllers/Controller.php</code> (Lumin 6+)</p>", "posted_at": "2022-11-27T11:12:22.287Z"}}, {"model": "main.comment", "pk": 434, "fields": {"author": 182, "post": 50, "parent": 433, "content": "<p>This saved my life ty</p>", "posted_at": "2022-11-27T11:12:22.294Z"}}, {"model": "main.comment", "pk": 435, "fields": {"author": 183, "post": 50, "parent": 433, "content": "<p>This is key. </p>\n<p>I was followed step by step your tutorial, writing the code by myself (i mean, without clone your github project) and without this line (thanks <a href=\"https://dev.to/cleathley\">@cleathley</a>\n) an error appears.</p>\n<p>I think you should edit your post and add that line after you explain this:  </p>\n<p>«Add a global respondWithToken method to Controller class»</p>\n<p>Anyway, great tutorial. <strong>It help me a lot</strong>!!</p>", "posted_at": "2022-11-27T11:12:22.303Z"}}, {"model": "main.comment", "pk": 436, "fields": {"author": 160, "post": 50, "parent": 433, "content": "<p>Thanks For this, I will update the tutorial to help people not encounter this error in the future.</p>", "posted_at": "2022-11-27T11:12:22.312Z"}}, {"model": "main.comment", "pk": 437, "fields": {"author": 184, "post": 50, "parent": null, "content": "<p>I've just reviewed and coded through. It worked wonderfully~~~ </p>", "posted_at": "2022-11-27T11:12:22.321Z"}}, {"model": "main.comment", "pk": 438, "fields": {"author": 185, "post": 50, "parent": null, "content": "<p>Nice tutorial, very clear and straight to the point. My worry is why the dev-develope branch? The main branch, does it have an issue? </p>", "posted_at": "2022-11-27T11:12:22.329Z"}}, {"model": "main.comment", "pk": 439, "fields": {"author": 160, "post": 50, "parent": 438, "content": "<p>For some reason the dev-develop branch has always worked for new versions of lumen, the next best thing would be version @2.0-dev</p>", "posted_at": "2022-11-27T11:12:22.338Z"}}, {"model": "main.comment", "pk": 440, "fields": {"author": 186, "post": 50, "parent": null, "content": "<p>First of all great tutorial, thanks a lot for all your efforts dude, I've a question, how can I set a remember me system with JWT token ? And also, how to increase expiration duration from the config file (config/auth.php) ?</p>", "posted_at": "2022-11-27T11:12:22.346Z"}}, {"model": "main.comment", "pk": 441, "fields": {"author": 186, "post": 50, "parent": 440, "content": "<p>For the second part of the question, the answer should be:  </p>\n<p><a href=\"https://github.com/tymondesigns/jwt-auth/blob/1.0.0-beta.2/config/config.php#L103\">github.com/tymondesigns/jwt-auth/b...</a></p>", "posted_at": "2022-11-27T11:12:22.356Z"}}, {"model": "main.comment", "pk": 442, "fields": {"author": 160, "post": 50, "parent": 440, "content": "<p>Would there be a need for remember me? As long as the client has the token; they have access to the system.</p>\n<p>You could extend token's time to live for those type of users, that could work...I think.</p>\n<p><strong>Override the token ttl</strong>  </p>\n<p><code>$token = auth()-&gt;setTTL(7200)-&gt;attempt($credentials);</code></p>\n<p>Further Reading  </p>\n<p><a href=\"https://stackoverflow.com/questions/23603801/handling-expiry-remember-me-functionality-with-jwt\">stackoverflow.com/questions/236038...</a></p>", "posted_at": "2022-11-27T11:12:22.363Z"}}, {"model": "main.comment", "pk": 443, "fields": {"author": 187, "post": 50, "parent": null, "content": "<p>Getting this error,</p>\n<p>In Connection.php line 665:</p>\n<p>SQLSTATE[HY000] [2002] Connection refused (SQL: create table <code>migrations</code> (<code>id</code> int unsigned not null auto_increment primary key, <code>migration</code> varchar(255) not null, <code>batch</code> int not  </p>\n<p>null) default character set utf8mb4 collate 'utf8mb4_unicode_ci')</p>\n<p>In Connector.php line 70:</p>\n<p>SQLSTATE[HY000] [2002] Connection refused</p>\n<p>Using Homestead development environment.</p>", "posted_at": "2022-11-27T11:12:22.403Z"}}, {"model": "main.comment", "pk": 444, "fields": {"author": 160, "post": 50, "parent": 443, "content": "<p>This error is due to PHP not being able to connect to MySQL</p>\n<p>\"Create a .env file, copy all contents in .env.example into the .env file and add your database configurations.\"</p>", "posted_at": "2022-11-27T11:12:22.410Z"}}, {"model": "main.comment", "pk": 445, "fields": {"author": 188, "post": 50, "parent": null, "content": "<p>getting this error when doing login request </p>\n<p>\"Method Illuminate\\Auth\\RequestGuard::attempt does not exist.\"</p>\n<p>Any help ?</p>", "posted_at": "2022-11-27T11:12:22.422Z"}}, {"model": "main.comment", "pk": 446, "fields": {"author": 188, "post": 50, "parent": 445, "content": "<p>Sorry, my mistake who put config/auth.php that not in root directory </p>", "posted_at": "2022-11-27T11:12:22.429Z"}}, {"model": "main.comment", "pk": 447, "fields": {"author": 189, "post": 50, "parent": null, "content": "<p>Please, can you explain how to reset the password of user?</p>", "posted_at": "2022-11-27T11:12:22.438Z"}}, {"model": "main.comment", "pk": 448, "fields": {"author": 160, "post": 50, "parent": 447, "content": "<p>Maybe this can help   </p>\n<p><a href=\"https://stackoverflow.com/questions/37338015/trying-to-reset-passwords-in-lumen\">stackoverflow.com/questions/373380...</a></p>", "posted_at": "2022-11-27T11:12:22.445Z"}}, {"model": "main.comment", "pk": 449, "fields": {"author": 191, "post": 51, "parent": null, "content": "<p>This is really interesting. Learnt a lot from it. I am definitley trying this 100%😂😁</p>", "posted_at": "2022-11-27T11:12:26.934Z"}}, {"model": "main.comment", "pk": 450, "fields": {"author": 192, "post": 51, "parent": null, "content": "<p>A developer wandering off can have destructive ideas. Loved your one.</p>", "posted_at": "2022-11-27T11:12:26.944Z"}}, {"model": "main.comment", "pk": 451, "fields": {"author": 193, "post": 51, "parent": null, "content": "<p>This is both interesting and savangly funny, I might tinker with this soon </p>", "posted_at": "2022-11-27T11:12:26.957Z"}}, {"model": "main.comment", "pk": 452, "fields": {"author": 194, "post": 51, "parent": null, "content": "<p>The explanation for how you derived your formula is definitely top-tier Mathematics. 👌</p>", "posted_at": "2022-11-27T11:12:26.967Z"}}, {"model": "main.comment", "pk": 453, "fields": {"author": 195, "post": 51, "parent": null, "content": "<p>\"Due to privacy concerns I replaced my friend's real names with their home addresses\" ROFL :D</p>", "posted_at": "2022-11-27T11:12:26.979Z"}}, {"model": "main.comment", "pk": 454, "fields": {"author": 196, "post": 51, "parent": null, "content": "<p>That was a nice piece of recreational programming, shared in the form of a story.  </p>\n<p>Thanks for sharing it with us :D \\u{1F604}</p>", "posted_at": "2022-11-27T11:12:26.989Z"}}, {"model": "main.comment", "pk": 455, "fields": {"author": 197, "post": 51, "parent": null, "content": "<p>Trying to unzip this on windows and getting invalid file errors. Can you tell me how you extracted the zip and on what os?</p>", "posted_at": "2022-11-27T11:12:27.002Z"}}, {"model": "main.comment", "pk": 456, "fields": {"author": 190, "post": 51, "parent": 455, "content": "<p>Both Windows and macOS with the default unzipper worked fine. I'm pretty sure your zip is corrupted, try downloading again.</p>", "posted_at": "2022-11-27T11:12:27.011Z"}}, {"model": "main.comment", "pk": 457, "fields": {"author": 20, "post": 51, "parent": null, "content": "<p>W8 you had to do all of this and not automate the last part? 😫</p>", "posted_at": "2022-11-27T11:12:27.030Z"}}, {"model": "main.comment", "pk": 458, "fields": {"author": 190, "post": 51, "parent": 457, "content": "<p>You mean the unfriending? I thought about it, but I was already rushing the final part of the article as is 😅</p>", "posted_at": "2022-11-27T11:12:27.040Z"}}, {"model": "main.comment", "pk": 459, "fields": {"author": 198, "post": 52, "parent": null, "content": "<p>Looks like nobody cares.</p>", "posted_at": "2022-11-27T11:12:27.166Z"}}, {"model": "main.comment", "pk": 460, "fields": {"author": 71, "post": 53, "parent": null, "content": "<p>It all falls down to which Stack you want to use.</p>\n<p>If you think it is overwhelming and don't mind PHP, I'd recommend WordPress. You'll need a simple <code>Apache</code>/<code>NginX</code> server + <code>MySQL</code> and PHP. I've worked with WP for some time and you'll need to learn its functions, page hierarchy. It's like a \"dialect\" inside PHP.</p>\n<p>It's very easy to maintain and it's pretty much plug and play, it has a huge variety of plugins and themes (both free and paid), all you have to do - in most cases, assuming you'll go with the \"default\" - all of this is just a click away. I'm not a fan of PHP, but <a href=\"https://www.theregister.co.uk/2018/03/05/wordpress_is_now_30_per_cent_of_the_web/\">WordPress is now 30 per cent of the web.</a> </p>", "posted_at": "2022-11-27T11:12:31.360Z"}}, {"model": "main.comment", "pk": 461, "fields": {"author": 199, "post": 53, "parent": 460, "content": "<p>The front end will be all custom, I just looking for some help on the cms part so I don't have to write everything from scratch nor waste valuable time on things, although important, that don't bring value to the business perspective. I've read wp is not as fast as is use to be, and that's a concern to me. </p>", "posted_at": "2022-11-27T11:12:31.372Z"}}, {"model": "main.comment", "pk": 462, "fields": {"author": 202, "post": 55, "parent": null, "content": "<p>Great article, keep up the good work!</p>", "posted_at": "2022-11-27T11:12:41.782Z"}}, {"model": "main.comment", "pk": 463, "fields": {"author": 201, "post": 55, "parent": 462, "content": "<p>Thanks!</p>", "posted_at": "2022-11-27T11:12:41.793Z"}}, {"model": "main.comment", "pk": 464, "fields": {"author": 203, "post": 55, "parent": null, "content": "<p>You could make this aware of the user's preference by defaulting the initial mode to the user's <code>prefers-color-theme</code> setting. See <a href=\"https://github.com/GoogleChromeLabs/dark-mode-toggle\"><dark-mode-toggle></a> for how I have dealt with this.</p>", "posted_at": "2022-11-27T11:12:43.719Z"}}, {"model": "main.comment", "pk": 465, "fields": {"author": 201, "post": 55, "parent": 464, "content": "<p>I thought about doing this, but I kind of wanted to force people to hit the button initially. I feel like the transition makes the neon, flickering effect more fun. Good suggestion though, and nice repo - I gave you a ⭐️!</p>", "posted_at": "2022-11-27T11:12:43.727Z"}}, {"model": "main.comment", "pk": 466, "fields": {"author": 204, "post": 55, "parent": null, "content": "<p>Hi, can you help me with isolated scope in CSS. I am trying to crawl a website and it has random class names that change with every session could you suggest something..</p>", "posted_at": "2022-11-27T11:12:46.002Z"}}, {"model": "main.comment", "pk": 467, "fields": {"author": 200, "post": 57, "parent": null, "content": "<p>Bonus example - I was </p>\n<ol>\n<li>working on adding <a href=\"https://foxdot.org/\">foxdot</a> support to arepl when I</li>\n<li>found a bug with vscode's <a href=\"https://github.com/Microsoft/vscode-python/issues/5375\">python extension</a></li>\n<li>but it was actually a bug with <a href=\"https://github.com/Microsoft/ptvsd/issues/1379\">ptsvd</a></li>\n<li>but it was actually a bug with <a href=\"https://bugs.python.org/issue38023\">python core</a></li>\n</ol>\n<p>That's four layers deep. What's next, a bug with the C compiler? If this was Inception I would be in limbo by now.</p>", "posted_at": "2022-11-27T11:13:05.123Z"}}, {"model": "main.comment", "pk": 468, "fields": {"author": 207, "post": 58, "parent": null, "content": "<p>It was an interesting read :-)</p>", "posted_at": "2022-11-27T11:13:11.963Z"}}, {"model": "main.comment", "pk": 469, "fields": {"author": 208, "post": 58, "parent": null, "content": "<p>async await is built in top of generator</p>", "posted_at": "2022-11-27T11:13:13.900Z"}}, {"model": "main.comment", "pk": 470, "fields": {"author": 209, "post": 58, "parent": null, "content": "<p>Generators are really useful when handling side effects . Redux saga is a very good example . Nice article </p>", "posted_at": "2022-11-27T11:13:16.124Z"}}, {"model": "main.comment", "pk": 471, "fields": {"author": 206, "post": 58, "parent": 470, "content": "<p>I did not know that. I'll be sure to check it out. Thanks :)</p>", "posted_at": "2022-11-27T11:13:16.148Z"}}, {"model": "main.comment", "pk": 472, "fields": {"author": 210, "post": 58, "parent": null, "content": "<p>That title could have been about Python a decade or two ago.  </p>\n<p>I smiled. </p>", "posted_at": "2022-11-27T11:13:18.344Z"}}, {"model": "main.comment", "pk": 473, "fields": {"author": 212, "post": 60, "parent": null, "content": "<p>What's Hostsailor?</p>", "posted_at": "2022-11-27T11:13:30.912Z"}}, {"model": "main.comment", "pk": 474, "fields": {"author": 212, "post": 60, "parent": null, "content": "<p>Glad you found it helpful!</p>", "posted_at": "2022-11-27T11:13:30.921Z"}}, {"model": "main.comment", "pk": 475, "fields": {"author": 215, "post": 64, "parent": null, "content": "<p>have you tried out anything with it?</p>", "posted_at": "2022-11-27T11:13:45.687Z"}}, {"model": "main.comment", "pk": 476, "fields": {"author": 25, "post": 64, "parent": null, "content": "<p>I think there are legal and licensing reasons why Netflix, Spotify and similar apps can’t do that.</p>", "posted_at": "2022-11-27T11:13:45.698Z"}}, {"model": "main.comment", "pk": 477, "fields": {"author": 215, "post": 64, "parent": null, "content": "<p>I did build a P2P streaming test/play app as well as p2p file sharing and it blew me away. I ran into difficulty on something i couldnt not remember right now and kinda gave up. I think it was the topic of how to notify and share a seed to other users who may not know the magnet link.</p>", "posted_at": "2022-11-27T11:13:45.710Z"}}, {"model": "main.comment", "pk": 478, "fields": {"author": 216, "post": 64, "parent": null, "content": "<p>Netflix has a complex DRM implemented on their stream. Plus a lot of contents are region-locked licensed. These stuff are hard to control on decentralised technology like web-torrent. But I would like them to use a more modern encoding. Single 1080p 25min episode used 1.4GB of my internet. While I found entire season of 1080p x265 encoded, for 2.1GB. </p>", "posted_at": "2022-11-27T11:13:47.199Z"}}, {"model": "main.comment", "pk": 479, "fields": {"author": 220, "post": 67, "parent": null, "content": "<blockquote>\n<p>...in no particular order</p>\n</blockquote>\n<p>Let me order them for you. :-)</p>\n<p>boolean  </p>\n<p>byte, char, short, int, long  </p>\n<p>float, double</p>", "posted_at": "2022-11-27T11:13:59.039Z"}}, {"model": "main.comment", "pk": 480, "fields": {"author": 221, "post": 67, "parent": null, "content": "<p>Question: if I am running on a 64bit system. Does an integer take less space than a long in the java process?  </p>\n<p>If not, why shouldn't I just use long instead of int all the time?</p>", "posted_at": "2022-11-27T11:14:00.903Z"}}, {"model": "main.comment", "pk": 481, "fields": {"author": 219, "post": 67, "parent": 480, "content": "<p>Great question! Honestly, this is a bit outside of my systems knowledge, but I would assume that each primitive type would only take up as much space as it needs (i.e. 32 bits for an integer). That said, I'll defer to the systems experts on this one.</p>\n<p><a href=\"https://stackoverflow.com/questions/32608153/why-not-use-long-for-all-integer-values\">Here's</a> a nice discussion that might better address your question. </p>\n<p>In addition, I think we can take this question a step further and ask: \"Why not always use something like BigInteger?\"</p>", "posted_at": "2022-11-27T11:14:00.915Z"}}, {"model": "main.comment", "pk": 482, "fields": {"author": 222, "post": 67, "parent": null, "content": "<p>Awesome explanation...</p>", "posted_at": "2022-11-27T11:14:02.160Z"}}, {"model": "main.comment", "pk": 483, "fields": {"author": 223, "post": 67, "parent": null, "content": "<p>Good. You wrote so much vital information.</p>", "posted_at": "2022-11-27T11:14:03.924Z"}}, {"model": "main.comment", "pk": 484, "fields": {"author": 227, "post": 71, "parent": null, "content": "<p>Inspirational! Just starting that 30 Day challenge. Did your clock hands move? Mine didn’t and it took hours for me to figure out that I used single quotes but should have used apostrophes....</p>", "posted_at": "2022-11-27T11:14:19.612Z"}}, {"model": "main.comment", "pk": 485, "fields": {"author": 226, "post": 71, "parent": 484, "content": "<p>That was part of the challenge? I haven't seen any like that.</p>", "posted_at": "2022-11-27T11:14:19.623Z"}}, {"model": "main.comment", "pk": 486, "fields": {"author": 228, "post": 71, "parent": null, "content": "<p>I totally relate mehnnn. Great job on the game too!😁</p>", "posted_at": "2022-11-27T11:14:20.797Z"}}, {"model": "main.comment", "pk": 487, "fields": {"author": 229, "post": 71, "parent": null, "content": "<p>Precisely.... Search \"angular tutorial\" and just see the ocean of results... It's nightmare</p>", "posted_at": "2022-11-27T11:14:22.187Z"}}, {"model": "main.comment", "pk": 488, "fields": {"author": 230, "post": 71, "parent": null, "content": "<p>I struggle with this stuff too. I have a hard time getting motivated to work on anything that isn't real. After a while it starts to feel like a hobby instead of a job, when I really want it to be both at the same time. </p>", "posted_at": "2022-11-27T11:14:23.923Z"}}, {"model": "main.comment", "pk": 489, "fields": {"author": 231, "post": 71, "parent": null, "content": "<p>Ah the ColT Steele's web dev bootcamp course. I actuallt built basic version of this color guessing game, but I really like your advanced version. Keep uo with good work and best of luck</p>", "posted_at": "2022-11-27T11:14:25.994Z"}}, {"model": "main.comment", "pk": 490, "fields": {"author": 226, "post": 71, "parent": 489, "content": "<p>Thanks...</p>", "posted_at": "2022-11-27T11:14:26.003Z"}}, {"model": "main.comment", "pk": 491, "fields": {"author": 232, "post": 71, "parent": null, "content": "<p>Thanks for the quick inspirational post. I too have been stuck in tutorial hell (Udemy, LinkedIn, Frontend Masters). I to have been slowly moving away from just learning to actually doing. It's the best way to learn really.</p>", "posted_at": "2022-11-27T11:14:28.627Z"}}, {"model": "main.comment", "pk": 492, "fields": {"author": 226, "post": 71, "parent": 491, "content": "<p>It certainly is...</p>", "posted_at": "2022-11-27T11:14:28.635Z"}}, {"model": "main.comment", "pk": 493, "fields": {"author": 233, "post": 71, "parent": null, "content": "<p>great post, I've been feeling the same way. after a while you start to hone your interests and topics into such a specific hodgepodge that you realize there really isn't any tutorial for what you want to do, and if there was, you'd be the only one interested in it</p>", "posted_at": "2022-11-27T11:14:30.902Z"}}, {"model": "main.comment", "pk": 494, "fields": {"author": 226, "post": 71, "parent": 493, "content": "<p>Yeah  </p>\n<p>Most real projects have no tutorial because it's usually a combination of a lot of other smaller things.</p>", "posted_at": "2022-11-27T11:14:30.910Z"}}, {"model": "main.comment", "pk": 495, "fields": {"author": 234, "post": 71, "parent": null, "content": "<p>Have you checked out this repo? It could be a good way to get started.</p>\n<p><a href=\"https://github.com/MunGell/awesome-for-beginners\">github.com/MunGell/awesome-for-beg...</a></p>", "posted_at": "2022-11-27T11:14:32.532Z"}}, {"model": "main.comment", "pk": 496, "fields": {"author": 226, "post": 71, "parent": 495, "content": "<p>Wow</p>\n<p>Thanks a lot.</p>", "posted_at": "2022-11-27T11:14:32.565Z"}}, {"model": "main.comment", "pk": 497, "fields": {"author": 239, "post": 76, "parent": null, "content": "<p>Fanny você é incrível</p>", "posted_at": "2022-11-27T11:14:54.822Z"}}, {"model": "main.comment", "pk": 498, "fields": {"author": 240, "post": 76, "parent": null, "content": "<p>Não sei se fiz algo errado, mas quando fui rodas o script tive que fazer:</p>\n<p>\"scrapy runspider genius.py -o parcels-lyrics.json\"</p>\n<p>Quando tentei o comando:</p>\n<p>\"scrapy crawl genius -o parcels-lyrics.json\"</p>\n<p>Disse que o scrapy nao tem a função crawl</p>", "posted_at": "2022-11-27T11:14:56.569Z"}}, {"model": "main.comment", "pk": 499, "fields": {"author": 238, "post": 76, "parent": 498, "content": "<p>Oi <a href=\"https://dev.to/davidedup\">@davidedup</a>\n, você tem razão, o comando <code>crawl</code> não vai funcionar, porque o <code>crawl</code> executa através do nome definido em um arquivo <code>settings</code> que faz parte da configuração, via projeto do scrapy, enquanto o <code>runspider</code> necessita apenas de um arquivo python para sua execução.</p>\n<p>Obrigada pela observação, editei o post, se você quiser ver funcionando usando esse outro comando, o projeto completo se encontra no <a href=\"https://github.com/fanny/genius-crawler\">meu github</a></p>", "posted_at": "2022-11-27T11:14:56.582Z"}}, {"model": "main.comment", "pk": 500, "fields": {"author": 240, "post": 76, "parent": null, "content": "<p>topppp!!!! muito bom! eu amei! </p>\n<p>s2s2s2 </p>", "posted_at": "2022-11-27T11:14:56.595Z"}}, {"model": "main.comment", "pk": 501, "fields": {"author": 241, "post": 76, "parent": null, "content": "<p>Post incrível e muito bem feito! &lt;3</p>", "posted_at": "2022-11-27T11:14:58.238Z"}}, {"model": "main.comment", "pk": 502, "fields": {"author": 244, "post": 78, "parent": null, "content": "<p>Hey, cool that you are interested in WebAssembly! I'll try to explain some basics as good as possible. :-)  </p>\n<p>WebAssembly is a binary format, just like Java or Python has its byte code which is the thing that is actually run by the respective runtimes. (You can read more about it here: <a href=\"https://webassembly.org/\">webassembly.org/</a>)  </p>\n<p>The idea is to put something on JavaScript's side which can better be targeted by high-level languages like C/C++, Java, C# or, as you mentioned, Rust or Python and can also be used from JavaScript (like Python has a great native Interface and which is one of the reasons it got so popular beside its elegance and simplicity) easily. Some nice side effects are that it is also really fast and brings more speed to the web.  </p>\n<p>To target WebAssembly you will most likely need an alternative compiler or a plugin for your language of choice to target WebAssembly. That will also affect the resulting byte code, so yea, output may vary. BUT: It is more important to use a language you are actually capable of or like working with than worrying about performance. The differences will not be so huge that the choice actually matters, at least for a small project.  </p>\n<p>For a larger project, the quality and performance of the resulting code and also the file size may be more important but I would only start wrapping my head around that when it's time and become necessary.</p>", "posted_at": "2022-11-27T11:15:11.892Z"}}, {"model": "main.comment", "pk": 503, "fields": {"author": 243, "post": 78, "parent": 502, "content": "<p>Thank you so much for your long response!☕🎉</p>", "posted_at": "2022-11-27T11:15:11.904Z"}}, {"model": "main.comment", "pk": 504, "fields": {"author": 250, "post": 83, "parent": null, "content": "<p>Great!</p>", "posted_at": "2022-11-27T11:15:28.622Z"}}, {"model": "main.comment", "pk": 505, "fields": {"author": 251, "post": 83, "parent": null, "content": "<p>I feel like the animation is a little too long to be usable on a live website, but other than that this is a really nice animation!</p>", "posted_at": "2022-11-27T11:15:29.928Z"}}, {"model": "main.comment", "pk": 506, "fields": {"author": 252, "post": 83, "parent": null, "content": "<p>Very cool</p>", "posted_at": "2022-11-27T11:15:31.566Z"}}, {"model": "main.comment", "pk": 507, "fields": {"author": 249, "post": 83, "parent": 506, "content": "<p>Thanks</p>", "posted_at": "2022-11-27T11:15:31.577Z"}}, {"model": "main.comment", "pk": 508, "fields": {"author": 253, "post": 83, "parent": null, "content": "<p>Looks sleak dude! 👏👏</p>", "posted_at": "2022-11-27T11:15:32.857Z"}}, {"model": "main.comment", "pk": 509, "fields": {"author": 249, "post": 83, "parent": 508, "content": "<p>Thanks</p>", "posted_at": "2022-11-27T11:15:32.866Z"}}, {"model": "main.comment", "pk": 510, "fields": {"author": 254, "post": 83, "parent": null, "content": "<p>This is cool. Do you have codepen link for this code?</p>", "posted_at": "2022-11-27T11:15:34.266Z"}}, {"model": "main.comment", "pk": 511, "fields": {"author": 249, "post": 83, "parent": 510, "content": "<p>Thanks,  </p>\n<p>The Source Code link in description below youtube video</p>", "posted_at": "2022-11-27T11:15:34.274Z"}}, {"model": "main.comment", "pk": 512, "fields": {"author": 114, "post": 83, "parent": 510, "content": "<p>If you click on the codepen logo in the upper right it will take you to the webpage. Full link to the pen is <a href=\"https://codepen.io/ahmadbassamemran/pen/abopOMY\">codepen.io/ahmadbassamemran/pen/ab...</a></p>\n<p>cheers ✌🏽️</p>", "posted_at": "2022-11-27T11:15:34.285Z"}}, {"model": "main.comment", "pk": 513, "fields": {"author": 114, "post": 83, "parent": null, "content": "<p>This animation is so cool, seriously keep it up!</p>", "posted_at": "2022-11-27T11:15:34.295Z"}}, {"model": "main.comment", "pk": 514, "fields": {"author": 249, "post": 83, "parent": 513, "content": "<p>thanks</p>", "posted_at": "2022-11-27T11:15:34.302Z"}}, {"model": "main.comment", "pk": 515, "fields": {"author": 255, "post": 83, "parent": null, "content": "<p>Nice job man!</p>", "posted_at": "2022-11-27T11:15:35.522Z"}}, {"model": "main.comment", "pk": 516, "fields": {"author": 249, "post": 83, "parent": 515, "content": "<p>Thanks</p>", "posted_at": "2022-11-27T11:15:35.529Z"}}, {"model": "main.comment", "pk": 517, "fields": {"author": 215, "post": 83, "parent": null, "content": "<p>Nice but not scaleable. Just try changing the width/height, falls apart, animation and axis alignment no longer looks right.</p>", "posted_at": "2022-11-27T11:15:35.539Z"}}, {"model": "main.comment", "pk": 518, "fields": {"author": 256, "post": 83, "parent": 517, "content": "<p>It is perfectly scalable.</p>\n<p>Just add <code>scale(.5);</code> in line 14 in .wrapper transform and you will have it half the size.</p>", "posted_at": "2022-11-27T11:15:37.829Z"}}, {"model": "main.comment", "pk": 519, "fields": {"author": 257, "post": 83, "parent": null, "content": "<p>Man, that's the slickest animation I've seen using just simple spans. How easy is it for you to create these type of animations, does it require a lot of trial and error?</p>", "posted_at": "2022-11-27T11:15:39.599Z"}}, {"model": "main.comment", "pk": 520, "fields": {"author": 258, "post": 83, "parent": null, "content": "<p>This is fantastic. I love CSS.</p>", "posted_at": "2022-11-27T11:15:41.589Z"}}, {"model": "main.comment", "pk": 521, "fields": {"author": 259, "post": 83, "parent": null, "content": "<p>Expected a hamburger with lettuce, tomatoe, pickles, cheese, and beef. My disappointment is immeasurable and my day is ruined. I would like a refund. </p>", "posted_at": "2022-11-27T11:15:43.176Z"}}, {"model": "main.comment", "pk": 522, "fields": {"author": 260, "post": 83, "parent": null, "content": "<p>good times!</p>", "posted_at": "2022-11-27T11:15:44.835Z"}}, {"model": "main.comment", "pk": 523, "fields": {"author": 261, "post": 83, "parent": null, "content": "<p>Sweet!</p>", "posted_at": "2022-11-27T11:15:46.458Z"}}, {"model": "main.comment", "pk": 524, "fields": {"author": 249, "post": 83, "parent": 523, "content": "<p>Thanks</p>", "posted_at": "2022-11-27T11:15:46.467Z"}}, {"model": "main.comment", "pk": 525, "fields": {"author": 265, "post": 87, "parent": null, "content": "<p>How to handle it if there is callback ?</p>", "posted_at": "2022-11-27T11:16:01.429Z"}}, {"model": "main.comment", "pk": 526, "fields": {"author": 73, "post": 87, "parent": 525, "content": "<p>What callback are you talking about? Got an example?</p>", "posted_at": "2022-11-27T11:16:01.438Z"}}, {"model": "main.comment", "pk": 527, "fields": {"author": 266, "post": 87, "parent": null, "content": "<p>Thank you very much, I spent a lot of time trying to figure out how to solve this kind of problem.  </p>\n<p>Here's the solution.</p>", "posted_at": "2022-11-27T11:16:03.638Z"}}, {"model": "main.comment", "pk": 528, "fields": {"author": 267, "post": 87, "parent": null, "content": "<p>ThankYou very much... I have been looking for this exact thing for hours on internet  </p>\n<p>.... you saved my day</p>", "posted_at": "2022-11-27T11:16:05.027Z"}}, {"model": "main.comment", "pk": 529, "fields": {"author": 272, "post": 91, "parent": null, "content": "<p>Thanks for sharing!</p>\n<p>As far as I know, you can achieve the same result with Promise.all by attaching a ‘.catch()’ to each promise in your array.</p>", "posted_at": "2022-11-27T11:16:23.529Z"}}, {"model": "main.comment", "pk": 530, "fields": {"author": 271, "post": 91, "parent": 529, "content": "<p>Yes, we could but <code>Promise.allSettled</code> is more concise. 🚀</p>", "posted_at": "2022-11-27T11:16:23.545Z"}}, {"model": "main.comment", "pk": 531, "fields": {"author": 273, "post": 91, "parent": 529, "content": "<p>I think you can only handle the first error that way, not the other errors or successes.</p>", "posted_at": "2022-11-27T11:16:25.393Z"}}, {"model": "main.comment", "pk": 532, "fields": {"author": 274, "post": 91, "parent": null, "content": "<p>I feel like for consistency, it should be <code>status: 'resolved'</code> rather than <code>status: 'fulfilled'</code>. Otherwise, that's pretty neat!</p>\n<p>The concept is great, but some renaming I think would be nice. I think the most important renaming should be <code>status: 'resolved'</code> rather than <code>'fulfilled'</code>, and perhaps renaming <code>Promise.allSettled</code> to something else... Not quite sure yet.</p>", "posted_at": "2022-11-27T11:16:27.200Z"}}, {"model": "main.comment", "pk": 533, "fields": {"author": 271, "post": 91, "parent": 532, "content": "<p>Dean, the specification uses the following naming convention:</p>\n<ul>\n<li>fulfilled - The action relating to the promise succeeded</li>\n<li>rejected - The action relating to the promise failed</li>\n<li>pending - Hasn't fulfilled or rejected yet</li>\n<li>settled - Has fulfilled or rejected</li>\n</ul>", "posted_at": "2022-11-27T11:16:27.210Z"}}, {"model": "main.comment", "pk": 534, "fields": {"author": 279, "post": 95, "parent": null, "content": "<p>Web server can be made stateful by adding <a href=\"https://github.com/expressjs/session#compatible-session-stores\">session storage</a>. I don't know when it is required, though.</p>", "posted_at": "2022-11-27T11:16:45.562Z"}}, {"model": "main.comment", "pk": 535, "fields": {"author": 280, "post": 95, "parent": null, "content": "<p>Nice post. It helped me to understand a few concepts I was in doubt. Thank you.</p>", "posted_at": "2022-11-27T11:16:48.469Z"}}, {"model": "main.comment", "pk": 536, "fields": {"author": 278, "post": 95, "parent": 535, "content": "<p>Thanks a ton for reading it through! Please implement it on your own in a side project before using ready made authentication services. It gets real easy to understand and explain. One cool thing you could do is add some sort of caching so that you don't have to query database using rememeberTokenHash for each page visit.</p>", "posted_at": "2022-11-27T11:16:48.487Z"}}, {"model": "main.comment", "pk": 537, "fields": {"author": 281, "post": 95, "parent": null, "content": "<p>It is very informative and valuable blog for me in order to understand \"Web Authentication System By Universal Principles\". But I would suggest one blog should be on \"clean code core concept\"</p>", "posted_at": "2022-11-27T11:16:50.252Z"}}, {"model": "main.comment", "pk": 538, "fields": {"author": 278, "post": 95, "parent": 537, "content": "<p>Thanks a lot for reading it through! Yes Clean Code practices is a thing i wanted todo since a while now. I think a pocket guide is a good idea with examples. Cheat sheets comes out handy and people use it more often so it is retained in memory.</p>", "posted_at": "2022-11-27T11:16:50.265Z"}}, {"model": "main.comment", "pk": 539, "fields": {"author": 282, "post": 95, "parent": null, "content": "<p>I had to build an authentication system just like you described this weekend and there are lot of things that I have done in the same way.</p>\n<p>One thing that it is worth noting is that bcrypt is not the most recommended way for salting &amp; hashing passwords anymore, I will not try to get in details because I'm not and security expert, but there are several blogs and questions about this and the consensus today is to use Argon2. I suggest people to make a research to the their own conclusions.</p>\n<p>ps: There is a typo on <code>remember</code> in the <code>GenerateRemeberToken</code> function.</p>", "posted_at": "2022-11-27T11:16:51.596Z"}}, {"model": "main.comment", "pk": 540, "fields": {"author": 278, "post": 95, "parent": 539, "content": "<p>Thanks a ton for reading the article thoroughly! I get it there are many other better and worst alternatives, but for most cases (like person starting out web dev journey) with decent computer the compression algorithm to generate hash would be just fine. There are alternatives like <code>scrypt</code>, <code>PBKDF2</code> and <code>argon2</code> which are said to be better but i'd say not every platform i have seen supports scrypt, argon2 needs a GPU to churn out better results. The idea is to learn what hashing is and how it is different from encryption, Then these can be looked into. Thanks for pointing out the typo. I am truly grateful for guiding readers towards more curious driven solutions.</p>", "posted_at": "2022-11-27T11:16:51.603Z"}}, {"model": "main.comment", "pk": 541, "fields": {"author": 283, "post": 95, "parent": null, "content": "<p>what do you think of JWT tokens</p>", "posted_at": "2022-11-27T11:16:53.819Z"}}, {"model": "main.comment", "pk": 542, "fields": {"author": 278, "post": 95, "parent": 541, "content": "<p>Once you get a hang of these basic principles you can chose any readymade stuff you want. The idea is to learn why certain service exist and how to create our own. The ready made services are not much alter able :)</p>", "posted_at": "2022-11-27T11:16:53.827Z"}}, {"model": "main.comment", "pk": 543, "fields": {"author": 285, "post": 96, "parent": null, "content": "<p>simplest way to convert a string to a number just add + in front of the string eg: <code>+\"3\"</code></p>", "posted_at": "2022-11-27T11:17:00.154Z"}}, {"model": "main.comment", "pk": 544, "fields": {"author": 284, "post": 96, "parent": 543, "content": "<p>Yea, <em>\"+\"</em> followed by any data type coerces it into <em>Number</em> data type. Also, using <em>\"-\"</em> followed by the data type coerces it to the negative of the <em>Number</em>. Point to note is that this does'nt work with other operators like *, /, %.</p>\n<p>Thank you for letting me know about this feature! Learnt something new today 😄.</p>", "posted_at": "2022-11-27T11:17:00.165Z"}}, {"model": "main.comment", "pk": 545, "fields": {"author": 286, "post": 96, "parent": null, "content": "<p>Thanks for the informative article! I ran the code in my Chrome console and found a difference.   </p>\n<p>1 + undefined evaluated to NaN. It looks like undefined does not get coerced to 0. </p>", "posted_at": "2022-11-27T11:17:01.279Z"}}, {"model": "main.comment", "pk": 546, "fields": {"author": 284, "post": 96, "parent": 545, "content": "<p>Yup you are correct! Thank you for letting me know the mistake. I checked in chrome as well as node, both of them do evaluate it to <em>NaN</em>. 😄</p>", "posted_at": "2022-11-27T11:17:01.292Z"}}, {"model": "main.comment", "pk": 547, "fields": {"author": 192, "post": 96, "parent": null, "content": "<p>You earned a follower. Where have you been driving these unique ideas? </p>", "posted_at": "2022-11-27T11:17:01.313Z"}}, {"model": "main.comment", "pk": 548, "fields": {"author": 284, "post": 96, "parent": 547, "content": "<p>Thank you!🙂</p>", "posted_at": "2022-11-27T11:17:01.329Z"}}, {"model": "main.comment", "pk": 549, "fields": {"author": 221, "post": 98, "parent": null, "content": "<p>Besides <code>pos += 1</code> appearing multiple times in the code, I think there is a bigger problem with <code>s[pos] == symbols[numOfDigits][X]</code>: it makes it difficult to understand what number each roman character is <em>mapped</em> to. Since each roman character is mapped to a decimal number, it makes sense putting them in a <code>dict</code> like so:  </p>\n<p>```\nROMAN_TO_DECIMAL = {'I': 1, 'V': 5 ...}</p>\n<p>```</p>\n<p>This makes things easy. Let's assume for a moment that we have a roman number without reverse-order subtractions (e.g: without <code>IV</code>, <code>IX</code>).</p>\n<p>Than you could simply write:  </p>\n<p>```\nnumber = 0\nfor roman in s:\n   number += ROMAN_TO_DECIMAL[roman]\nreturn number</p>\n<p>```</p>\n<p>This is very neat. And can even be written in one line: <code>sum(ROMAN_TO_DECIMAL[c] for c in s)</code></p>\n<p>How to add the reverse-order subtractions now? Consider and try to implement this pseudo-code:  </p>\n<p>```\nfor roman in s:\n   value = ROMAN_TO_DECIMAL[roman]\n   if the next roman character is larger than the current:\n      # e.g: this character is the 'I' in 'IV', so it should be subtracted from the result\n      number -= value\n   else:\n      number += value</p>\n<p>```</p>", "posted_at": "2022-11-27T11:17:07.644Z"}}, {"model": "main.comment", "pk": 550, "fields": {"author": 288, "post": 98, "parent": 549, "content": "<p>Wow! Thank you for the detailed explanation and code example!😍</p>\n<p>I implemented:  </p>\n<p>```\nROMAN_TO_DECIMAL = {'I': 1, 'V':5, 'X':10, 'L':50, 'C':100, 'D': 500, 'M':1000}</p>\n<p>len_s = len(s)\nnumber = 0\nfor i in range(len_s - 1):\n    value = ROMAN_TO_DECIMAL[s[i]]\n    if ROMAN_TO_DECIMAL[s[i]] &lt; ROMAN_TO_DECIMAL[s[i + 1]]:\n        number -= value\n    else:\n        number += value</p>\n<h1>last</h1>\n<p>number += ROMAN_TO_DECIMAL[s[len_s - 1]]\nreturn number</p>\n<p>```</p>\n<p>I could not come up with the idea of <code>ROMAN_TO_DECIMAL</code>.😭</p>\n<p>When thinking about this problem, did you first think about <code>ROMAN_TO_DECIMAL</code> and then the logic?  </p>\n<p>Or is the logic first?</p>\n<p>If it's ok with you, could you tell me about your thought process?</p>", "posted_at": "2022-11-27T11:17:07.672Z"}}, {"model": "main.comment", "pk": 551, "fields": {"author": 291, "post": 100, "parent": null, "content": "<p>In this case you actually have two strings which are concatenated with each other. See <a href=\"https://docs.python.org/3.7/reference/lexical_analysis.html#string-literal-concatenation\">related part of Python docs</a>.</p>", "posted_at": "2022-11-27T11:17:15.955Z"}}, {"model": "main.comment", "pk": 552, "fields": {"author": 292, "post": 100, "parent": null, "content": "<p>In this example, the strings get concatenated. Also, you don't necessarily need \\ to escape \". You could also do <code>s = 'Google,\" facebook'</code> and the \" would be printed normally.</p>", "posted_at": "2022-11-27T11:17:17.986Z"}}, {"model": "main.comment", "pk": 553, "fields": {"author": 295, "post": 102, "parent": null, "content": "<p>Just run action <code>convert Java to kotlin</code> and you are done.</p>\n<p>No seriously the book on the subject is</p>\n<p><a href=\"https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052\">amazon.com/Working-Effectively-Leg...</a></p>", "posted_at": "2022-11-27T11:17:27.634Z"}}, {"model": "main.comment", "pk": 554, "fields": {"author": 294, "post": 102, "parent": 553, "content": "<p>Thanks for the book reference. I will look into it. </p>", "posted_at": "2022-11-27T11:17:27.644Z"}}, {"model": "main.comment", "pk": 555, "fields": {"author": 294, "post": 102, "parent": null, "content": "<p>Thank you for your suggestions. Actually creating proposal is proving to be a lot harder than I had imagined. </p>", "posted_at": "2022-11-27T11:17:27.654Z"}}, {"model": "main.comment", "pk": 556, "fields": {"author": 296, "post": 102, "parent": null, "content": "<p>Well, no surprise, that's how app has been written 8 or 10 years ago. </p>\n<p>I would suggest, firstly, try to adhere any architectural pattern. It could be MVVM or MVP. My recommendation would be MVVM as it is easy to understand and personally I was able to convert a pretty big project from no architecture to MVVM with less pain. You can't complete this in a shot, pick a module and then a package, start from there and eventually it has to be done for the whole project. Sometimes I heard from the experts to adhere multiple architectural patterns which isn't a bad idea either, like a combination of MVVM and MVP.</p>\n<p>Parallelly you can start converting classes to kotlin which is not easy again. Pick module or package to start with.</p>\n<p>Use dagger or kotlin specific dependency injections like Koin which will eventually save you lot of time and open doors for unit testing.</p>\n<p>Happy coding</p>", "posted_at": "2022-11-27T11:17:29.202Z"}}, {"model": "main.comment", "pk": 557, "fields": {"author": 297, "post": 102, "parent": null, "content": "<p>There isn't any proper case to refactor it step-by-step. Depending on the time/money pressure it could make sense to start on a complete new green field and build the entire thing from scratch.</p>\n<p>If you want to stick with the existing project, you could add <a href=\"https://developer.android.com/training/testing/ui-testing/uiautomator-testing\">UI Automator tests</a>. These are independent on the code base and didn't need any reference to the code. But have in mind, these tests are only happy path testing, but after you've written tests for all requirements and use-cases. You could refactore the app code without fear (at least for one specifig language / layout)</p>", "posted_at": "2022-11-27T11:17:30.581Z"}}, {"model": "taggit.tag", "pk": 1, "fields": {"name": "todayilearned", "slug": "todayilearned"}}, {"model": "taggit.tag", "pk": 2, "fields": {"name": "css", "slug": "css"}}, {"model": "taggit.tag", "pk": 3, "fields": {"name": "maintainers", "slug": "maintainers"}}, {"model": "taggit.tag", "pk": 4, "fields": {"name": "packages", "slug": "packages"}}, {"model": "taggit.tag", "pk": 5, "fields": {"name": "opensource", "slug": "opensource"}}, {"model": "taggit.tag", "pk": 6, "fields": {"name": "beginners", "slug": "beginners"}}, {"model": "taggit.tag", "pk": 7, "fields": {"name": "python", "slug": "python"}}, {"model": "taggit.tag", "pk": 8, "fields": {"name": "gamedev", "slug": "gamedev"}}, {"model": "taggit.tag", "pk": 9, "fields": {"name": "pyxel", "slug": "pyxel"}}, {"model": "taggit.tag", "pk": 10, "fields": {"name": "svelte", "slug": "svelte"}}, {"model": "taggit.tag", "pk": 11, "fields": {"name": "sveltejs", "slug": "sveltejs"}}, {"model": "taggit.tag", "pk": 12, "fields": {"name": "javascript", "slug": "javascript"}}, {"model": "taggit.tag", "pk": 13, "fields": {"name": "frameworks", "slug": "frameworks"}}, {"model": "taggit.tag", "pk": 14, "fields": {"name": "git", "slug": "git"}}, {"model": "taggit.tag", "pk": 15, "fields": {"name": "swift", "slug": "swift"}}, {"model": "taggit.tag", "pk": 16, "fields": {"name": "career", "slug": "career"}}, {"model": "taggit.tag", "pk": 17, "fields": {"name": "anonymous", "slug": "anonymous"}}, {"model": "taggit.tag", "pk": 18, "fields": {"name": "discuss", "slug": "discuss"}}, {"model": "taggit.tag", "pk": 19, "fields": {"name": "motivation", "slug": "motivation"}}, {"model": "taggit.tag", "pk": 20, "fields": {"name": "techtalks", "slug": "techtalks"}}, {"model": "taggit.tag", "pk": 21, "fields": {"name": "webcomponents", "slug": "webcomponents"}}, {"model": "taggit.tag", "pk": 22, "fields": {"name": "linting", "slug": "linting"}}, {"model": "taggit.tag", "pk": 23, "fields": {"name": "openwc", "slug": "openwc"}}, {"model": "taggit.tag", "pk": 24, "fields": {"name": "htmlemail", "slug": "htmlemail"}}, {"model": "taggit.tag", "pk": 25, "fields": {"name": "gmail", "slug": "gmail"}}, {"model": "taggit.tag", "pk": 26, "fields": {"name": "html", "slug": "html"}}, {"model": "taggit.tag", "pk": 27, "fields": {"name": "docker", "slug": "docker"}}, {"model": "taggit.tag", "pk": 28, "fields": {"name": "linux", "slug": "linux"}}, {"model": "taggit.tag", "pk": 29, "fields": {"name": "kubernetes", "slug": "kubernetes"}}, {"model": "taggit.tag", "pk": 30, "fields": {"name": "openstack", "slug": "openstack"}}, {"model": "taggit.tag", "pk": 31, "fields": {"name": "azure", "slug": "azure"}}, {"model": "taggit.tag", "pk": 32, "fields": {"name": "weave", "slug": "weave"}}, {"model": "taggit.tag", "pk": 33, "fields": {"name": "kontena", "slug": "kontena"}}, {"model": "taggit.tag", "pk": 34, "fields": {"name": "istio", "slug": "istio"}}, {"model": "taggit.tag", "pk": 35, "fields": {"name": "rancher", "slug": "rancher"}}, {"model": "taggit.tag", "pk": 36, "fields": {"name": "hetzner", "slug": "hetzner"}}, {"model": "taggit.tag", "pk": 37, "fields": {"name": "scaleway", "slug": "scaleway"}}, {"model": "taggit.tag", "pk": 38, "fields": {"name": "containers", "slug": "containers"}}, {"model": "taggit.tag", "pk": 39, "fields": {"name": "datascience", "slug": "datascience"}}, {"model": "taggit.tag", "pk": 40, "fields": {"name": "machinelearning", "slug": "machinelearning"}}, {"model": "taggit.tag", "pk": 41, "fields": {"name": "continuousdelivery", "slug": "continuousdelivery"}}, {"model": "taggit.tag", "pk": 42, "fields": {"name": "serverless", "slug": "serverless"}}, {"model": "taggit.tag", "pk": 43, "fields": {"name": "traefik", "slug": "traefik"}}, {"model": "taggit.tag", "pk": 44, "fields": {"name": "mesos", "slug": "mesos"}}, {"model": "taggit.tag", "pk": 45, "fields": {"name": "k3s", "slug": "k3s"}}, {"model": "taggit.tag", "pk": 46, "fields": {"name": "graphql", "slug": "graphql"}}, {"model": "taggit.tag", "pk": 47, "fields": {"name": "gatsby", "slug": "gatsby"}}, {"model": "taggit.tag", "pk": 48, "fields": {"name": "react", "slug": "react"}}, {"model": "taggit.tag", "pk": 49, "fields": {"name": "codingbootcamp", "slug": "codingbootcamp"}}, {"model": "taggit.tag", "pk": 50, "fields": {"name": "womenwhocode", "slug": "womenwhocode"}}, {"model": "taggit.tag", "pk": 51, "fields": {"name": "personalstory", "slug": "personalstory"}}, {"model": "taggit.tag", "pk": 52, "fields": {"name": "microsoftleap", "slug": "microsoftleap"}}, {"model": "taggit.tag", "pk": 53, "fields": {"name": "library", "slug": "library"}}, {"model": "taggit.tag", "pk": 54, "fields": {"name": "android", "slug": "android"}}, {"model": "taggit.tag", "pk": 55, "fields": {"name": "kotlin", "slug": "kotlin"}}, {"model": "taggit.tag", "pk": 56, "fields": {"name": "typescript", "slug": "typescript"}}, {"model": "taggit.tag", "pk": 57, "fields": {"name": "tutorial", "slug": "tutorial"}}, {"model": "taggit.tag", "pk": 58, "fields": {"name": "firestore", "slug": "firestore"}}, {"model": "taggit.tag", "pk": 59, "fields": {"name": "firebase", "slug": "firebase"}}, {"model": "taggit.tag", "pk": 60, "fields": {"name": "data", "slug": "data"}}, {"model": "taggit.tag", "pk": 61, "fields": {"name": "modelling", "slug": "modelling"}}, {"model": "taggit.tag", "pk": 62, "fields": {"name": "news", "slug": "news"}}, {"model": "taggit.tag", "pk": 63, "fields": {"name": "productivity", "slug": "productivity"}}, {"model": "taggit.tag", "pk": 64, "fields": {"name": "mentalhealth", "slug": "mentalhealth"}}, {"model": "taggit.tag", "pk": 65, "fields": {"name": "rust", "slug": "rust"}}, {"model": "taggit.tag", "pk": 66, "fields": {"name": "testing", "slug": "testing"}}, {"model": "taggit.tag", "pk": 67, "fields": {"name": "programming", "slug": "programming"}}, {"model": "taggit.tag", "pk": 68, "fields": {"name": "accessible", "slug": "accessible"}}, {"model": "taggit.tag", "pk": 69, "fields": {"name": "semantic", "slug": "semantic"}}, {"model": "taggit.tag", "pk": 70, "fields": {"name": "node", "slug": "node"}}, {"model": "taggit.tag", "pk": 71, "fields": {"name": "themeprovider", "slug": "themeprovider"}}, {"model": "taggit.tag", "pk": 72, "fields": {"name": "angular", "slug": "angular"}}, {"model": "taggit.tag", "pk": 73, "fields": {"name": "work", "slug": "work"}}, {"model": "taggit.tag", "pk": 74, "fields": {"name": "nextjs", "slug": "nextjs"}}, {"model": "taggit.tag", "pk": 75, "fields": {"name": "unittesting", "slug": "unittesting"}}, {"model": "taggit.tag", "pk": 76, "fields": {"name": "bugs", "slug": "bugs"}}, {"model": "taggit.tag", "pk": 77, "fields": {"name": "webdev", "slug": "webdev"}}, {"model": "taggit.tag", "pk": 78, "fields": {"name": "ios", "slug": "ios"}}, {"model": "taggit.tag", "pk": 79, "fields": {"name": "swiftui", "slug": "swiftui"}}, {"model": "taggit.tag", "pk": 80, "fields": {"name": "queue", "slug": "queue"}}, {"model": "taggit.tag", "pk": 81, "fields": {"name": "php", "slug": "php"}}, {"model": "taggit.tag", "pk": 82, "fields": {"name": "help", "slug": "help"}}, {"model": "taggit.tag", "pk": 83, "fields": {"name": "computerscience", "slug": "computerscience"}}, {"model": "taggit.tag", "pk": 84, "fields": {"name": "explainlikeimfive", "slug": "explainlikeimfive"}}, {"model": "taggit.tag", "pk": 85, "fields": {"name": "scala", "slug": "scala"}}, {"model": "taggit.tag", "pk": 86, "fields": {"name": "refactoring", "slug": "refactoring"}}, {"model": "taggit.tag", "pk": 87, "fields": {"name": "meta", "slug": "meta"}}, {"model": "taggit.tag", "pk": 88, "fields": {"name": "architecture", "slug": "architecture"}}, {"model": "taggit.tag", "pk": 89, "fields": {"name": "devops", "slug": "devops"}}, {"model": "taggit.tag", "pk": 90, "fields": {"name": "design", "slug": "design"}}, {"model": "taggit.tag", "pk": 91, "fields": {"name": "codenewbie", "slug": "codenewbie"}}, {"model": "taggit.tag", "pk": 92, "fields": {"name": "laravel", "slug": "laravel"}}, {"model": "taggit.tag", "pk": 93, "fields": {"name": "lumen", "slug": "lumen"}}, {"model": "taggit.tag", "pk": 94, "fields": {"name": "github", "slug": "github"}}, {"model": "taggit.tag", "pk": 95, "fields": {"name": "outsource", "slug": "outsource"}}, {"model": "taggit.tag", "pk": 96, "fields": {"name": "codinghorror", "slug": "codinghorror"}}, {"model": "taggit.tag", "pk": 97, "fields": {"name": "ranorex", "slug": "ranorex"}}, {"model": "taggit.tag", "pk": 98, "fields": {"name": "automation", "slug": "automation"}}, {"model": "taggit.tag", "pk": 99, "fields": {"name": "darkmode", "slug": "darkmode"}}, {"model": "taggit.tag", "pk": 100, "fields": {"name": "postgres", "slug": "postgres"}}, {"model": "taggit.tag", "pk": 101, "fields": {"name": "performance", "slug": "performance"}}, {"model": "taggit.tag", "pk": 102, "fields": {"name": "distraction", "slug": "distraction"}}, {"model": "taggit.tag", "pk": 103, "fields": {"name": "howdoi", "slug": "howdoi"}}, {"model": "taggit.tag", "pk": 104, "fields": {"name": "iterationprotocol", "slug": "iterationprotocol"}}, {"model": "taggit.tag", "pk": 105, "fields": {"name": "iterators", "slug": "iterators"}}, {"model": "taggit.tag", "pk": 106, "fields": {"name": "generators", "slug": "generators"}}, {"model": "taggit.tag", "pk": 107, "fields": {"name": "codepen", "slug": "codepen"}}, {"model": "taggit.tag", "pk": 108, "fields": {"name": "svg", "slug": "svg"}}, {"model": "taggit.tag", "pk": 109, "fields": {"name": "strokepatterns", "slug": "strokepatterns"}}, {"model": "taggit.tag", "pk": 110, "fields": {"name": "frontend", "slug": "frontend"}}, {"model": "taggit.tag", "pk": 111, "fields": {"name": "torrent", "slug": "torrent"}}, {"model": "taggit.tag", "pk": 112, "fields": {"name": "bdd", "slug": "bdd"}}, {"model": "taggit.tag", "pk": 113, "fields": {"name": "hexagonal", "slug": "hexagonal"}}, {"model": "taggit.tag", "pk": 114, "fields": {"name": "django", "slug": "django"}}, {"model": "taggit.tag", "pk": 115, "fields": {"name": "debugging", "slug": "debugging"}}, {"model": "taggit.tag", "pk": 116, "fields": {"name": "java", "slug": "java"}}, {"model": "taggit.tag", "pk": 117, "fields": {"name": "technology", "slug": "technology"}}, {"model": "taggit.tag", "pk": 118, "fields": {"name": "security", "slug": "security"}}, {"model": "taggit.tag", "pk": 119, "fields": {"name": "business", "slug": "business"}}, {"model": "taggit.tag", "pk": 120, "fields": {"name": "starlette", "slug": "starlette"}}, {"model": "taggit.tag", "pk": 121, "fields": {"name": "slack", "slug": "slack"}}, {"model": "taggit.tag", "pk": 122, "fields": {"name": "dlang", "slug": "dlang"}}, {"model": "taggit.tag", "pk": 123, "fields": {"name": "hackathons", "slug": "hackathons"}}, {"model": "taggit.tag", "pk": 124, "fields": {"name": "technologybusiness", "slug": "technologybusiness"}}, {"model": "taggit.tag", "pk": 125, "fields": {"name": "ptbr", "slug": "ptbr"}}, {"model": "taggit.tag", "pk": 126, "fields": {"name": "scrapy", "slug": "scrapy"}}, {"model": "taggit.tag", "pk": 127, "fields": {"name": "music", "slug": "music"}}, {"model": "taggit.tag", "pk": 128, "fields": {"name": "crawling", "slug": "crawling"}}, {"model": "taggit.tag", "pk": 129, "fields": {"name": "manipulation", "slug": "manipulation"}}, {"model": "taggit.tag", "pk": 130, "fields": {"name": "ffmpeg", "slug": "ffmpeg"}}, {"model": "taggit.tag", "pk": 131, "fields": {"name": "audio", "slug": "audio"}}, {"model": "taggit.tag", "pk": 132, "fields": {"name": "video", "slug": "video"}}, {"model": "taggit.tag", "pk": 133, "fields": {"name": "question", "slug": "question"}}, {"model": "taggit.tag", "pk": 134, "fields": {"name": "webassembly", "slug": "webassembly"}}, {"model": "taggit.tag", "pk": 135, "fields": {"name": "dotnetcore", "slug": "dotnetcore"}}, {"model": "taggit.tag", "pk": 136, "fields": {"name": "webapi", "slug": "webapi"}}, {"model": "taggit.tag", "pk": 137, "fields": {"name": "mssql", "slug": "mssql"}}, {"model": "taggit.tag", "pk": 138, "fields": {"name": "devise", "slug": "devise"}}, {"model": "taggit.tag", "pk": 139, "fields": {"name": "selenium", "slug": "selenium"}}, {"model": "taggit.tag", "pk": 140, "fields": {"name": "capybara", "slug": "capybara"}}, {"model": "taggit.tag", "pk": 141, "fields": {"name": "newsletter", "slug": "newsletter"}}, {"model": "taggit.tag", "pk": 142, "fields": {"name": "githunt", "slug": "githunt"}}, {"model": "taggit.tag", "pk": 143, "fields": {"name": "showdev", "slug": "showdev"}}, {"model": "taggit.tag", "pk": 144, "fields": {"name": "javascriptdevelopme", "slug": "javascriptdevelopme"}}, {"model": "taggit.tag", "pk": 145, "fields": {"name": "javascripttips", "slug": "javascripttips"}}, {"model": "taggit.tag", "pk": 146, "fields": {"name": "softskills", "slug": "softskills"}}, {"model": "taggit.tag", "pk": 147, "fields": {"name": "portfolio", "slug": "portfolio"}}, {"model": "taggit.tag", "pk": 148, "fields": {"name": "sinon", "slug": "sinon"}}, {"model": "taggit.tag", "pk": 149, "fields": {"name": "jest", "slug": "jest"}}, {"model": "taggit.tag", "pk": 150, "fields": {"name": "welcome", "slug": "welcome"}}, {"model": "taggit.tag", "pk": 151, "fields": {"name": "apachecamel", "slug": "apachecamel"}}, {"model": "taggit.tag", "pk": 152, "fields": {"name": "apache", "slug": "apache"}}, {"model": "taggit.tag", "pk": 153, "fields": {"name": "camel", "slug": "camel"}}, {"model": "taggit.tag", "pk": 154, "fields": {"name": "sort", "slug": "sort"}}, {"model": "taggit.tag", "pk": 155, "fields": {"name": "vue", "slug": "vue"}}, {"model": "taggit.tag", "pk": 156, "fields": {"name": "promise", "slug": "promise"}}, {"model": "taggit.tag", "pk": 157, "fields": {"name": "rest", "slug": "rest"}}, {"model": "taggit.tag", "pk": 158, "fields": {"name": "dotnet", "slug": "dotnet"}}, {"model": "taggit.tag", "pk": 159, "fields": {"name": "grpc", "slug": "grpc"}}, {"model": "taggit.tag", "pk": 160, "fields": {"name": "replit", "slug": "replit"}}, {"model": "taggit.tag", "pk": 161, "fields": {"name": "leetcode", "slug": "leetcode"}}, {"model": "taggit.tag", "pk": 162, "fields": {"name": "codefirst", "slug": "codefirst"}}, {"model": "taggit.tag", "pk": 163, "fields": {"name": "csharp", "slug": "csharp"}}, {"model": "taggit.tag", "pk": 164, "fields": {"name": "dapper", "slug": "dapper"}}, {"model": "taggit.tag", "pk": 165, "fields": {"name": "sql", "slug": "sql"}}, {"model": "taggit.tag", "pk": 166, "fields": {"name": "refactorit", "slug": "refactorit"}}, {"model": "taggit.taggeditem", "pk": 1, "fields": {"tag": 1, "content_type": 7, "object_id": 1}}, {"model": "taggit.taggeditem", "pk": 2, "fields": {"tag": 2, "content_type": 7, "object_id": 1}}, {"model": "taggit.taggeditem", "pk": 3, "fields": {"tag": 3, "content_type": 7, "object_id": 2}}, {"model": "taggit.taggeditem", "pk": 4, "fields": {"tag": 4, "content_type": 7, "object_id": 2}}, {"model": "taggit.taggeditem", "pk": 5, "fields": {"tag": 5, "content_type": 7, "object_id": 2}}, {"model": "taggit.taggeditem", "pk": 6, "fields": {"tag": 8, "content_type": 7, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 7, "fields": {"tag": 9, "content_type": 7, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 8, "fields": {"tag": 6, "content_type": 7, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 9, "fields": {"tag": 7, "content_type": 7, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 10, "fields": {"tag": 10, "content_type": 7, "object_id": 4}}, {"model": "taggit.taggeditem", "pk": 11, "fields": {"tag": 11, "content_type": 7, "object_id": 4}}, {"model": "taggit.taggeditem", "pk": 12, "fields": {"tag": 12, "content_type": 7, "object_id": 4}}, {"model": "taggit.taggeditem", "pk": 13, "fields": {"tag": 13, "content_type": 7, "object_id": 4}}, {"model": "taggit.taggeditem", "pk": 14, "fields": {"tag": 14, "content_type": 7, "object_id": 5}}, {"model": "taggit.taggeditem", "pk": 15, "fields": {"tag": 15, "content_type": 7, "object_id": 5}}, {"model": "taggit.taggeditem", "pk": 16, "fields": {"tag": 16, "content_type": 7, "object_id": 6}}, {"model": "taggit.taggeditem", "pk": 17, "fields": {"tag": 17, "content_type": 7, "object_id": 6}}, {"model": "taggit.taggeditem", "pk": 18, "fields": {"tag": 18, "content_type": 7, "object_id": 6}}, {"model": "taggit.taggeditem", "pk": 19, "fields": {"tag": 16, "content_type": 7, "object_id": 7}}, {"model": "taggit.taggeditem", "pk": 20, "fields": {"tag": 19, "content_type": 7, "object_id": 7}}, {"model": "taggit.taggeditem", "pk": 21, "fields": {"tag": 20, "content_type": 7, "object_id": 7}}, {"model": "taggit.taggeditem", "pk": 22, "fields": {"tag": 12, "content_type": 7, "object_id": 8}}, {"model": "taggit.taggeditem", "pk": 23, "fields": {"tag": 21, "content_type": 7, "object_id": 8}}, {"model": "taggit.taggeditem", "pk": 24, "fields": {"tag": 22, "content_type": 7, "object_id": 8}}, {"model": "taggit.taggeditem", "pk": 25, "fields": {"tag": 23, "content_type": 7, "object_id": 8}}, {"model": "taggit.taggeditem", "pk": 26, "fields": {"tag": 24, "content_type": 7, "object_id": 9}}, {"model": "taggit.taggeditem", "pk": 27, "fields": {"tag": 25, "content_type": 7, "object_id": 9}}, {"model": "taggit.taggeditem", "pk": 28, "fields": {"tag": 2, "content_type": 7, "object_id": 9}}, {"model": "taggit.taggeditem", "pk": 29, "fields": {"tag": 26, "content_type": 7, "object_id": 10}}, {"model": "taggit.taggeditem", "pk": 30, "fields": {"tag": 27, "content_type": 7, "object_id": 10}}, {"model": "taggit.taggeditem", "pk": 31, "fields": {"tag": 12, "content_type": 7, "object_id": 10}}, {"model": "taggit.taggeditem", "pk": 32, "fields": {"tag": 28, "content_type": 7, "object_id": 10}}, {"model": "taggit.taggeditem", "pk": 33, "fields": {"tag": 27, "content_type": 7, "object_id": 11}}, {"model": "taggit.taggeditem", "pk": 34, "fields": {"tag": 29, "content_type": 7, "object_id": 11}}, {"model": "taggit.taggeditem", "pk": 35, "fields": {"tag": 30, "content_type": 7, "object_id": 11}}, {"model": "taggit.taggeditem", "pk": 36, "fields": {"tag": 31, "content_type": 7, "object_id": 11}}, {"model": "taggit.taggeditem", "pk": 37, "fields": {"tag": 32, "content_type": 7, "object_id": 12}}, {"model": "taggit.taggeditem", "pk": 38, "fields": {"tag": 33, "content_type": 7, "object_id": 12}}, {"model": "taggit.taggeditem", "pk": 39, "fields": {"tag": 27, "content_type": 7, "object_id": 12}}, {"model": "taggit.taggeditem", "pk": 40, "fields": {"tag": 29, "content_type": 7, "object_id": 12}}, {"model": "taggit.taggeditem", "pk": 41, "fields": {"tag": 34, "content_type": 7, "object_id": 13}}, {"model": "taggit.taggeditem", "pk": 42, "fields": {"tag": 35, "content_type": 7, "object_id": 13}}, {"model": "taggit.taggeditem", "pk": 43, "fields": {"tag": 36, "content_type": 7, "object_id": 13}}, {"model": "taggit.taggeditem", "pk": 44, "fields": {"tag": 29, "content_type": 7, "object_id": 13}}, {"model": "taggit.taggeditem", "pk": 45, "fields": {"tag": 32, "content_type": 7, "object_id": 14}}, {"model": "taggit.taggeditem", "pk": 46, "fields": {"tag": 37, "content_type": 7, "object_id": 14}}, {"model": "taggit.taggeditem", "pk": 47, "fields": {"tag": 29, "content_type": 7, "object_id": 14}}, {"model": "taggit.taggeditem", "pk": 48, "fields": {"tag": 38, "content_type": 7, "object_id": 14}}, {"model": "taggit.taggeditem", "pk": 49, "fields": {"tag": 40, "content_type": 7, "object_id": 15}}, {"model": "taggit.taggeditem", "pk": 50, "fields": {"tag": 27, "content_type": 7, "object_id": 15}}, {"model": "taggit.taggeditem", "pk": 51, "fields": {"tag": 37, "content_type": 7, "object_id": 15}}, {"model": "taggit.taggeditem", "pk": 52, "fields": {"tag": 39, "content_type": 7, "object_id": 15}}, {"model": "taggit.taggeditem", "pk": 53, "fields": {"tag": 41, "content_type": 7, "object_id": 16}}, {"model": "taggit.taggeditem", "pk": 54, "fields": {"tag": 42, "content_type": 7, "object_id": 16}}, {"model": "taggit.taggeditem", "pk": 55, "fields": {"tag": 27, "content_type": 7, "object_id": 16}}, {"model": "taggit.taggeditem", "pk": 56, "fields": {"tag": 37, "content_type": 7, "object_id": 16}}, {"model": "taggit.taggeditem", "pk": 57, "fields": {"tag": 43, "content_type": 7, "object_id": 17}}, {"model": "taggit.taggeditem", "pk": 58, "fields": {"tag": 35, "content_type": 7, "object_id": 17}}, {"model": "taggit.taggeditem", "pk": 59, "fields": {"tag": 44, "content_type": 7, "object_id": 17}}, {"model": "taggit.taggeditem", "pk": 60, "fields": {"tag": 31, "content_type": 7, "object_id": 17}}, {"model": "taggit.taggeditem", "pk": 61, "fields": {"tag": 45, "content_type": 7, "object_id": 18}}, {"model": "taggit.taggeditem", "pk": 62, "fields": {"tag": 27, "content_type": 7, "object_id": 18}}, {"model": "taggit.taggeditem", "pk": 63, "fields": {"tag": 36, "content_type": 7, "object_id": 18}}, {"model": "taggit.taggeditem", "pk": 64, "fields": {"tag": 29, "content_type": 7, "object_id": 18}}, {"model": "taggit.taggeditem", "pk": 65, "fields": {"tag": 48, "content_type": 7, "object_id": 19}}, {"model": "taggit.taggeditem", "pk": 66, "fields": {"tag": 12, "content_type": 7, "object_id": 19}}, {"model": "taggit.taggeditem", "pk": 67, "fields": {"tag": 46, "content_type": 7, "object_id": 19}}, {"model": "taggit.taggeditem", "pk": 68, "fields": {"tag": 47, "content_type": 7, "object_id": 19}}, {"model": "taggit.taggeditem", "pk": 69, "fields": {"tag": 49, "content_type": 7, "object_id": 20}}, {"model": "taggit.taggeditem", "pk": 70, "fields": {"tag": 50, "content_type": 7, "object_id": 20}}, {"model": "taggit.taggeditem", "pk": 71, "fields": {"tag": 51, "content_type": 7, "object_id": 20}}, {"model": "taggit.taggeditem", "pk": 72, "fields": {"tag": 52, "content_type": 7, "object_id": 20}}, {"model": "taggit.taggeditem", "pk": 73, "fields": {"tag": 53, "content_type": 7, "object_id": 21}}, {"model": "taggit.taggeditem", "pk": 74, "fields": {"tag": 54, "content_type": 7, "object_id": 21}}, {"model": "taggit.taggeditem", "pk": 75, "fields": {"tag": 55, "content_type": 7, "object_id": 21}}, {"model": "taggit.taggeditem", "pk": 76, "fields": {"tag": 27, "content_type": 7, "object_id": 22}}, {"model": "taggit.taggeditem", "pk": 77, "fields": {"tag": 42, "content_type": 7, "object_id": 22}}, {"model": "taggit.taggeditem", "pk": 78, "fields": {"tag": 35, "content_type": 7, "object_id": 22}}, {"model": "taggit.taggeditem", "pk": 79, "fields": {"tag": 29, "content_type": 7, "object_id": 22}}, {"model": "taggit.taggeditem", "pk": 80, "fields": {"tag": 16, "content_type": 7, "object_id": 23}}, {"model": "taggit.taggeditem", "pk": 81, "fields": {"tag": 18, "content_type": 7, "object_id": 23}}, {"model": "taggit.taggeditem", "pk": 82, "fields": {"tag": 48, "content_type": 7, "object_id": 24}}, {"model": "taggit.taggeditem", "pk": 83, "fields": {"tag": 57, "content_type": 7, "object_id": 24}}, {"model": "taggit.taggeditem", "pk": 84, "fields": {"tag": 56, "content_type": 7, "object_id": 24}}, {"model": "taggit.taggeditem", "pk": 85, "fields": {"tag": 6, "content_type": 7, "object_id": 24}}, {"model": "taggit.taggeditem", "pk": 86, "fields": {"tag": 58, "content_type": 7, "object_id": 25}}, {"model": "taggit.taggeditem", "pk": 87, "fields": {"tag": 59, "content_type": 7, "object_id": 25}}, {"model": "taggit.taggeditem", "pk": 88, "fields": {"tag": 60, "content_type": 7, "object_id": 25}}, {"model": "taggit.taggeditem", "pk": 89, "fields": {"tag": 61, "content_type": 7, "object_id": 25}}, {"model": "taggit.taggeditem", "pk": 90, "fields": {"tag": 62, "content_type": 7, "object_id": 26}}, {"model": "taggit.taggeditem", "pk": 91, "fields": {"tag": 18, "content_type": 7, "object_id": 27}}, {"model": "taggit.taggeditem", "pk": 92, "fields": {"tag": 16, "content_type": 7, "object_id": 28}}, {"model": "taggit.taggeditem", "pk": 93, "fields": {"tag": 18, "content_type": 7, "object_id": 28}}, {"model": "taggit.taggeditem", "pk": 94, "fields": {"tag": 64, "content_type": 7, "object_id": 28}}, {"model": "taggit.taggeditem", "pk": 95, "fields": {"tag": 63, "content_type": 7, "object_id": 28}}, {"model": "taggit.taggeditem", "pk": 96, "fields": {"tag": 65, "content_type": 7, "object_id": 29}}, {"model": "taggit.taggeditem", "pk": 97, "fields": {"tag": 66, "content_type": 7, "object_id": 29}}, {"model": "taggit.taggeditem", "pk": 98, "fields": {"tag": 67, "content_type": 7, "object_id": 29}}, {"model": "taggit.taggeditem", "pk": 99, "fields": {"tag": 6, "content_type": 7, "object_id": 29}}, {"model": "taggit.taggeditem", "pk": 100, "fields": {"tag": 2, "content_type": 7, "object_id": 30}}, {"model": "taggit.taggeditem", "pk": 101, "fields": {"tag": 26, "content_type": 7, "object_id": 30}}, {"model": "taggit.taggeditem", "pk": 102, "fields": {"tag": 68, "content_type": 7, "object_id": 30}}, {"model": "taggit.taggeditem", "pk": 103, "fields": {"tag": 69, "content_type": 7, "object_id": 30}}, {"model": "taggit.taggeditem", "pk": 104, "fields": {"tag": 12, "content_type": 7, "object_id": 31}}, {"model": "taggit.taggeditem", "pk": 105, "fields": {"tag": 70, "content_type": 7, "object_id": 31}}, {"model": "taggit.taggeditem", "pk": 106, "fields": {"tag": 72, "content_type": 7, "object_id": 32}}, {"model": "taggit.taggeditem", "pk": 107, "fields": {"tag": 71, "content_type": 7, "object_id": 32}}, {"model": "taggit.taggeditem", "pk": 108, "fields": {"tag": 73, "content_type": 7, "object_id": 33}}, {"model": "taggit.taggeditem", "pk": 109, "fields": {"tag": 63, "content_type": 7, "object_id": 33}}, {"model": "taggit.taggeditem", "pk": 110, "fields": {"tag": 56, "content_type": 7, "object_id": 34}}, {"model": "taggit.taggeditem", "pk": 111, "fields": {"tag": 57, "content_type": 7, "object_id": 34}}, {"model": "taggit.taggeditem", "pk": 112, "fields": {"tag": 48, "content_type": 7, "object_id": 34}}, {"model": "taggit.taggeditem", "pk": 113, "fields": {"tag": 74, "content_type": 7, "object_id": 34}}, {"model": "taggit.taggeditem", "pk": 114, "fields": {"tag": 75, "content_type": 7, "object_id": 35}}, {"model": "taggit.taggeditem", "pk": 115, "fields": {"tag": 12, "content_type": 7, "object_id": 35}}, {"model": "taggit.taggeditem", "pk": 116, "fields": {"tag": 77, "content_type": 7, "object_id": 35}}, {"model": "taggit.taggeditem", "pk": 117, "fields": {"tag": 76, "content_type": 7, "object_id": 35}}, {"model": "taggit.taggeditem", "pk": 118, "fields": {"tag": 79, "content_type": 7, "object_id": 36}}, {"model": "taggit.taggeditem", "pk": 119, "fields": {"tag": 78, "content_type": 7, "object_id": 36}}, {"model": "taggit.taggeditem", "pk": 120, "fields": {"tag": 15, "content_type": 7, "object_id": 36}}, {"model": "taggit.taggeditem", "pk": 121, "fields": {"tag": 80, "content_type": 7, "object_id": 37}}, {"model": "taggit.taggeditem", "pk": 122, "fields": {"tag": 81, "content_type": 7, "object_id": 37}}, {"model": "taggit.taggeditem", "pk": 123, "fields": {"tag": 12, "content_type": 7, "object_id": 37}}, {"model": "taggit.taggeditem", "pk": 124, "fields": {"tag": 70, "content_type": 7, "object_id": 37}}, {"model": "taggit.taggeditem", "pk": 125, "fields": {"tag": 18, "content_type": 7, "object_id": 38}}, {"model": "taggit.taggeditem", "pk": 126, "fields": {"tag": 82, "content_type": 7, "object_id": 38}}, {"model": "taggit.taggeditem", "pk": 127, "fields": {"tag": 77, "content_type": 7, "object_id": 38}}, {"model": "taggit.taggeditem", "pk": 128, "fields": {"tag": 6, "content_type": 7, "object_id": 38}}, {"model": "taggit.taggeditem", "pk": 129, "fields": {"tag": 82, "content_type": 7, "object_id": 39}}, {"model": "taggit.taggeditem", "pk": 130, "fields": {"tag": 18, "content_type": 7, "object_id": 39}}, {"model": "taggit.taggeditem", "pk": 131, "fields": {"tag": 57, "content_type": 7, "object_id": 40}}, {"model": "taggit.taggeditem", "pk": 132, "fields": {"tag": 12, "content_type": 7, "object_id": 40}}, {"model": "taggit.taggeditem", "pk": 133, "fields": {"tag": 77, "content_type": 7, "object_id": 40}}, {"model": "taggit.taggeditem", "pk": 134, "fields": {"tag": 31, "content_type": 7, "object_id": 40}}, {"model": "taggit.taggeditem", "pk": 135, "fields": {"tag": 83, "content_type": 7, "object_id": 41}}, {"model": "taggit.taggeditem", "pk": 136, "fields": {"tag": 12, "content_type": 7, "object_id": 41}}, {"model": "taggit.taggeditem", "pk": 137, "fields": {"tag": 6, "content_type": 7, "object_id": 41}}, {"model": "taggit.taggeditem", "pk": 138, "fields": {"tag": 84, "content_type": 7, "object_id": 41}}, {"model": "taggit.taggeditem", "pk": 139, "fields": {"tag": 85, "content_type": 7, "object_id": 42}}, {"model": "taggit.taggeditem", "pk": 140, "fields": {"tag": 5, "content_type": 7, "object_id": 43}}, {"model": "taggit.taggeditem", "pk": 141, "fields": {"tag": 86, "content_type": 7, "object_id": 43}}, {"model": "taggit.taggeditem", "pk": 142, "fields": {"tag": 87, "content_type": 7, "object_id": 43}}, {"model": "taggit.taggeditem", "pk": 143, "fields": {"tag": 88, "content_type": 7, "object_id": 44}}, {"model": "taggit.taggeditem", "pk": 144, "fields": {"tag": 89, "content_type": 7, "object_id": 44}}, {"model": "taggit.taggeditem", "pk": 145, "fields": {"tag": 90, "content_type": 7, "object_id": 44}}, {"model": "taggit.taggeditem", "pk": 146, "fields": {"tag": 29, "content_type": 7, "object_id": 44}}, {"model": "taggit.taggeditem", "pk": 147, "fields": {"tag": 48, "content_type": 7, "object_id": 46}}, {"model": "taggit.taggeditem", "pk": 148, "fields": {"tag": 2, "content_type": 7, "object_id": 46}}, {"model": "taggit.taggeditem", "pk": 149, "fields": {"tag": 16, "content_type": 7, "object_id": 47}}, {"model": "taggit.taggeditem", "pk": 150, "fields": {"tag": 91, "content_type": 7, "object_id": 47}}, {"model": "taggit.taggeditem", "pk": 151, "fields": {"tag": 77, "content_type": 7, "object_id": 47}}, {"model": "taggit.taggeditem", "pk": 152, "fields": {"tag": 6, "content_type": 7, "object_id": 47}}, {"model": "taggit.taggeditem", "pk": 153, "fields": {"tag": 39, "content_type": 7, "object_id": 48}}, {"model": "taggit.taggeditem", "pk": 154, "fields": {"tag": 81, "content_type": 7, "object_id": 50}}, {"model": "taggit.taggeditem", "pk": 155, "fields": {"tag": 93, "content_type": 7, "object_id": 50}}, {"model": "taggit.taggeditem", "pk": 156, "fields": {"tag": 92, "content_type": 7, "object_id": 50}}, {"model": "taggit.taggeditem", "pk": 157, "fields": {"tag": 77, "content_type": 7, "object_id": 50}}, {"model": "taggit.taggeditem", "pk": 158, "fields": {"tag": 12, "content_type": 7, "object_id": 51}}, {"model": "taggit.taggeditem", "pk": 159, "fields": {"tag": 77, "content_type": 7, "object_id": 51}}, {"model": "taggit.taggeditem", "pk": 160, "fields": {"tag": 94, "content_type": 7, "object_id": 52}}, {"model": "taggit.taggeditem", "pk": 161, "fields": {"tag": 95, "content_type": 7, "object_id": 52}}, {"model": "taggit.taggeditem", "pk": 162, "fields": {"tag": 18, "content_type": 7, "object_id": 53}}, {"model": "taggit.taggeditem", "pk": 163, "fields": {"tag": 77, "content_type": 7, "object_id": 53}}, {"model": "taggit.taggeditem", "pk": 164, "fields": {"tag": 96, "content_type": 7, "object_id": 54}}, {"model": "taggit.taggeditem", "pk": 165, "fields": {"tag": 97, "content_type": 7, "object_id": 54}}, {"model": "taggit.taggeditem", "pk": 166, "fields": {"tag": 66, "content_type": 7, "object_id": 54}}, {"model": "taggit.taggeditem", "pk": 167, "fields": {"tag": 98, "content_type": 7, "object_id": 54}}, {"model": "taggit.taggeditem", "pk": 168, "fields": {"tag": 48, "content_type": 7, "object_id": 55}}, {"model": "taggit.taggeditem", "pk": 169, "fields": {"tag": 2, "content_type": 7, "object_id": 55}}, {"model": "taggit.taggeditem", "pk": 170, "fields": {"tag": 99, "content_type": 7, "object_id": 55}}, {"model": "taggit.taggeditem", "pk": 171, "fields": {"tag": 12, "content_type": 7, "object_id": 55}}, {"model": "taggit.taggeditem", "pk": 172, "fields": {"tag": 100, "content_type": 7, "object_id": 56}}, {"model": "taggit.taggeditem", "pk": 173, "fields": {"tag": 101, "content_type": 7, "object_id": 56}}, {"model": "taggit.taggeditem", "pk": 174, "fields": {"tag": 67, "content_type": 7, "object_id": 57}}, {"model": "taggit.taggeditem", "pk": 175, "fields": {"tag": 103, "content_type": 7, "object_id": 57}}, {"model": "taggit.taggeditem", "pk": 176, "fields": {"tag": 102, "content_type": 7, "object_id": 57}}, {"model": "taggit.taggeditem", "pk": 177, "fields": {"tag": 63, "content_type": 7, "object_id": 57}}, {"model": "taggit.taggeditem", "pk": 178, "fields": {"tag": 104, "content_type": 7, "object_id": 58}}, {"model": "taggit.taggeditem", "pk": 179, "fields": {"tag": 105, "content_type": 7, "object_id": 58}}, {"model": "taggit.taggeditem", "pk": 180, "fields": {"tag": 106, "content_type": 7, "object_id": 58}}, {"model": "taggit.taggeditem", "pk": 181, "fields": {"tag": 12, "content_type": 7, "object_id": 58}}, {"model": "taggit.taggeditem", "pk": 182, "fields": {"tag": 107, "content_type": 7, "object_id": 59}}, {"model": "taggit.taggeditem", "pk": 183, "fields": {"tag": 108, "content_type": 7, "object_id": 59}}, {"model": "taggit.taggeditem", "pk": 184, "fields": {"tag": 109, "content_type": 7, "object_id": 59}}, {"model": "taggit.taggeditem", "pk": 185, "fields": {"tag": 16, "content_type": 7, "object_id": 60}}, {"model": "taggit.taggeditem", "pk": 186, "fields": {"tag": 67, "content_type": 7, "object_id": 60}}, {"model": "taggit.taggeditem", "pk": 187, "fields": {"tag": 91, "content_type": 7, "object_id": 60}}, {"model": "taggit.taggeditem", "pk": 188, "fields": {"tag": 6, "content_type": 7, "object_id": 60}}, {"model": "taggit.taggeditem", "pk": 189, "fields": {"tag": 72, "content_type": 7, "object_id": 61}}, {"model": "taggit.taggeditem", "pk": 190, "fields": {"tag": 12, "content_type": 7, "object_id": 61}}, {"model": "taggit.taggeditem", "pk": 191, "fields": {"tag": 77, "content_type": 7, "object_id": 61}}, {"model": "taggit.taggeditem", "pk": 192, "fields": {"tag": 110, "content_type": 7, "object_id": 61}}, {"model": "taggit.taggeditem", "pk": 193, "fields": {"tag": 16, "content_type": 7, "object_id": 62}}, {"model": "taggit.taggeditem", "pk": 194, "fields": {"tag": 77, "content_type": 7, "object_id": 62}}, {"model": "taggit.taggeditem", "pk": 195, "fields": {"tag": 6, "content_type": 7, "object_id": 62}}, {"model": "taggit.taggeditem", "pk": 196, "fields": {"tag": 63, "content_type": 7, "object_id": 62}}, {"model": "taggit.taggeditem", "pk": 197, "fields": {"tag": 12, "content_type": 7, "object_id": 64}}, {"model": "taggit.taggeditem", "pk": 198, "fields": {"tag": 77, "content_type": 7, "object_id": 64}}, {"model": "taggit.taggeditem", "pk": 199, "fields": {"tag": 111, "content_type": 7, "object_id": 64}}, {"model": "taggit.taggeditem", "pk": 200, "fields": {"tag": 112, "content_type": 7, "object_id": 65}}, {"model": "taggit.taggeditem", "pk": 201, "fields": {"tag": 113, "content_type": 7, "object_id": 65}}, {"model": "taggit.taggeditem", "pk": 202, "fields": {"tag": 66, "content_type": 7, "object_id": 65}}, {"model": "taggit.taggeditem", "pk": 203, "fields": {"tag": 115, "content_type": 7, "object_id": 66}}, {"model": "taggit.taggeditem", "pk": 204, "fields": {"tag": 114, "content_type": 7, "object_id": 66}}, {"model": "taggit.taggeditem", "pk": 205, "fields": {"tag": 27, "content_type": 7, "object_id": 66}}, {"model": "taggit.taggeditem", "pk": 206, "fields": {"tag": 116, "content_type": 7, "object_id": 67}}, {"model": "taggit.taggeditem", "pk": 207, "fields": {"tag": 6, "content_type": 7, "object_id": 67}}, {"model": "taggit.taggeditem", "pk": 208, "fields": {"tag": 117, "content_type": 7, "object_id": 68}}, {"model": "taggit.taggeditem", "pk": 209, "fields": {"tag": 118, "content_type": 7, "object_id": 68}}, {"model": "taggit.taggeditem", "pk": 210, "fields": {"tag": 119, "content_type": 7, "object_id": 68}}, {"model": "taggit.taggeditem", "pk": 211, "fields": {"tag": 120, "content_type": 7, "object_id": 69}}, {"model": "taggit.taggeditem", "pk": 212, "fields": {"tag": 66, "content_type": 7, "object_id": 69}}, {"model": "taggit.taggeditem", "pk": 213, "fields": {"tag": 77, "content_type": 7, "object_id": 69}}, {"model": "taggit.taggeditem", "pk": 214, "fields": {"tag": 7, "content_type": 7, "object_id": 69}}, {"model": "taggit.taggeditem", "pk": 215, "fields": {"tag": 121, "content_type": 7, "object_id": 70}}, {"model": "taggit.taggeditem", "pk": 216, "fields": {"tag": 59, "content_type": 7, "object_id": 70}}, {"model": "taggit.taggeditem", "pk": 217, "fields": {"tag": 77, "content_type": 7, "object_id": 70}}, {"model": "taggit.taggeditem", "pk": 218, "fields": {"tag": 63, "content_type": 7, "object_id": 70}}, {"model": "taggit.taggeditem", "pk": 219, "fields": {"tag": 57, "content_type": 7, "object_id": 71}}, {"model": "taggit.taggeditem", "pk": 220, "fields": {"tag": 26, "content_type": 7, "object_id": 71}}, {"model": "taggit.taggeditem", "pk": 221, "fields": {"tag": 12, "content_type": 7, "object_id": 71}}, {"model": "taggit.taggeditem", "pk": 222, "fields": {"tag": 6, "content_type": 7, "object_id": 71}}, {"model": "taggit.taggeditem", "pk": 223, "fields": {"tag": 57, "content_type": 7, "object_id": 73}}, {"model": "taggit.taggeditem", "pk": 224, "fields": {"tag": 122, "content_type": 7, "object_id": 73}}, {"model": "taggit.taggeditem", "pk": 225, "fields": {"tag": 123, "content_type": 7, "object_id": 74}}, {"model": "taggit.taggeditem", "pk": 226, "fields": {"tag": 124, "content_type": 7, "object_id": 75}}, {"model": "taggit.taggeditem", "pk": 227, "fields": {"tag": 128, "content_type": 7, "object_id": 76}}, {"model": "taggit.taggeditem", "pk": 228, "fields": {"tag": 125, "content_type": 7, "object_id": 76}}, {"model": "taggit.taggeditem", "pk": 229, "fields": {"tag": 126, "content_type": 7, "object_id": 76}}, {"model": "taggit.taggeditem", "pk": 230, "fields": {"tag": 127, "content_type": 7, "object_id": 76}}, {"model": "taggit.taggeditem", "pk": 231, "fields": {"tag": 129, "content_type": 7, "object_id": 77}}, {"model": "taggit.taggeditem", "pk": 232, "fields": {"tag": 130, "content_type": 7, "object_id": 77}}, {"model": "taggit.taggeditem", "pk": 233, "fields": {"tag": 131, "content_type": 7, "object_id": 77}}, {"model": "taggit.taggeditem", "pk": 234, "fields": {"tag": 132, "content_type": 7, "object_id": 77}}, {"model": "taggit.taggeditem", "pk": 235, "fields": {"tag": 65, "content_type": 7, "object_id": 78}}, {"model": "taggit.taggeditem", "pk": 236, "fields": {"tag": 12, "content_type": 7, "object_id": 78}}, {"model": "taggit.taggeditem", "pk": 237, "fields": {"tag": 133, "content_type": 7, "object_id": 78}}, {"model": "taggit.taggeditem", "pk": 238, "fields": {"tag": 134, "content_type": 7, "object_id": 78}}, {"model": "taggit.taggeditem", "pk": 239, "fields": {"tag": 136, "content_type": 7, "object_id": 79}}, {"model": "taggit.taggeditem", "pk": 240, "fields": {"tag": 137, "content_type": 7, "object_id": 79}}, {"model": "taggit.taggeditem", "pk": 241, "fields": {"tag": 27, "content_type": 7, "object_id": 79}}, {"model": "taggit.taggeditem", "pk": 242, "fields": {"tag": 135, "content_type": 7, "object_id": 79}}, {"model": "taggit.taggeditem", "pk": 243, "fields": {"tag": 66, "content_type": 7, "object_id": 80}}, {"model": "taggit.taggeditem", "pk": 244, "fields": {"tag": 139, "content_type": 7, "object_id": 80}}, {"model": "taggit.taggeditem", "pk": 245, "fields": {"tag": 140, "content_type": 7, "object_id": 80}}, {"model": "taggit.taggeditem", "pk": 246, "fields": {"tag": 138, "content_type": 7, "object_id": 80}}, {"model": "taggit.taggeditem", "pk": 247, "fields": {"tag": 141, "content_type": 7, "object_id": 81}}, {"model": "taggit.taggeditem", "pk": 248, "fields": {"tag": 16, "content_type": 7, "object_id": 82}}, {"model": "taggit.taggeditem", "pk": 249, "fields": {"tag": 19, "content_type": 7, "object_id": 82}}, {"model": "taggit.taggeditem", "pk": 250, "fields": {"tag": 77, "content_type": 7, "object_id": 82}}, {"model": "taggit.taggeditem", "pk": 251, "fields": {"tag": 6, "content_type": 7, "object_id": 82}}, {"model": "taggit.taggeditem", "pk": 252, "fields": {"tag": 26, "content_type": 7, "object_id": 83}}, {"model": "taggit.taggeditem", "pk": 253, "fields": {"tag": 2, "content_type": 7, "object_id": 83}}, {"model": "taggit.taggeditem", "pk": 254, "fields": {"tag": 107, "content_type": 7, "object_id": 83}}, {"model": "taggit.taggeditem", "pk": 255, "fields": {"tag": 12, "content_type": 7, "object_id": 83}}, {"model": "taggit.taggeditem", "pk": 256, "fields": {"tag": 12, "content_type": 7, "object_id": 84}}, {"model": "taggit.taggeditem", "pk": 257, "fields": {"tag": 77, "content_type": 7, "object_id": 84}}, {"model": "taggit.taggeditem", "pk": 258, "fields": {"tag": 142, "content_type": 7, "object_id": 84}}, {"model": "taggit.taggeditem", "pk": 259, "fields": {"tag": 143, "content_type": 7, "object_id": 84}}, {"model": "taggit.taggeditem", "pk": 260, "fields": {"tag": 48, "content_type": 7, "object_id": 85}}, {"model": "taggit.taggeditem", "pk": 261, "fields": {"tag": 145, "content_type": 7, "object_id": 85}}, {"model": "taggit.taggeditem", "pk": 262, "fields": {"tag": 12, "content_type": 7, "object_id": 85}}, {"model": "taggit.taggeditem", "pk": 263, "fields": {"tag": 144, "content_type": 7, "object_id": 85}}, {"model": "taggit.taggeditem", "pk": 264, "fields": {"tag": 146, "content_type": 7, "object_id": 86}}, {"model": "taggit.taggeditem", "pk": 265, "fields": {"tag": 147, "content_type": 7, "object_id": 86}}, {"model": "taggit.taggeditem", "pk": 266, "fields": {"tag": 5, "content_type": 7, "object_id": 86}}, {"model": "taggit.taggeditem", "pk": 267, "fields": {"tag": 63, "content_type": 7, "object_id": 86}}, {"model": "taggit.taggeditem", "pk": 268, "fields": {"tag": 148, "content_type": 7, "object_id": 87}}, {"model": "taggit.taggeditem", "pk": 269, "fields": {"tag": 66, "content_type": 7, "object_id": 87}}, {"model": "taggit.taggeditem", "pk": 270, "fields": {"tag": 12, "content_type": 7, "object_id": 87}}, {"model": "taggit.taggeditem", "pk": 271, "fields": {"tag": 149, "content_type": 7, "object_id": 87}}, {"model": "taggit.taggeditem", "pk": 272, "fields": {"tag": 150, "content_type": 7, "object_id": 88}}, {"model": "taggit.taggeditem", "pk": 273, "fields": {"tag": 152, "content_type": 7, "object_id": 89}}, {"model": "taggit.taggeditem", "pk": 274, "fields": {"tag": 153, "content_type": 7, "object_id": 89}}, {"model": "taggit.taggeditem", "pk": 275, "fields": {"tag": 116, "content_type": 7, "object_id": 89}}, {"model": "taggit.taggeditem", "pk": 276, "fields": {"tag": 151, "content_type": 7, "object_id": 89}}, {"model": "taggit.taggeditem", "pk": 277, "fields": {"tag": 16, "content_type": 7, "object_id": 90}}, {"model": "taggit.taggeditem", "pk": 278, "fields": {"tag": 154, "content_type": 7, "object_id": 90}}, {"model": "taggit.taggeditem", "pk": 279, "fields": {"tag": 12, "content_type": 7, "object_id": 90}}, {"model": "taggit.taggeditem", "pk": 280, "fields": {"tag": 70, "content_type": 7, "object_id": 90}}, {"model": "taggit.taggeditem", "pk": 281, "fields": {"tag": 48, "content_type": 7, "object_id": 91}}, {"model": "taggit.taggeditem", "pk": 282, "fields": {"tag": 155, "content_type": 7, "object_id": 91}}, {"model": "taggit.taggeditem", "pk": 283, "fields": {"tag": 12, "content_type": 7, "object_id": 91}}, {"model": "taggit.taggeditem", "pk": 284, "fields": {"tag": 6, "content_type": 7, "object_id": 91}}, {"model": "taggit.taggeditem", "pk": 285, "fields": {"tag": 70, "content_type": 7, "object_id": 92}}, {"model": "taggit.taggeditem", "pk": 286, "fields": {"tag": 12, "content_type": 7, "object_id": 92}}, {"model": "taggit.taggeditem", "pk": 287, "fields": {"tag": 110, "content_type": 7, "object_id": 92}}, {"model": "taggit.taggeditem", "pk": 288, "fields": {"tag": 156, "content_type": 7, "object_id": 92}}, {"model": "taggit.taggeditem", "pk": 289, "fields": {"tag": 159, "content_type": 7, "object_id": 93}}, {"model": "taggit.taggeditem", "pk": 290, "fields": {"tag": 157, "content_type": 7, "object_id": 93}}, {"model": "taggit.taggeditem", "pk": 291, "fields": {"tag": 158, "content_type": 7, "object_id": 93}}, {"model": "taggit.taggeditem", "pk": 292, "fields": {"tag": 135, "content_type": 7, "object_id": 93}}, {"model": "taggit.taggeditem", "pk": 293, "fields": {"tag": 107, "content_type": 7, "object_id": 94}}, {"model": "taggit.taggeditem", "pk": 294, "fields": {"tag": 57, "content_type": 7, "object_id": 95}}, {"model": "taggit.taggeditem", "pk": 295, "fields": {"tag": 118, "content_type": 7, "object_id": 95}}, {"model": "taggit.taggeditem", "pk": 296, "fields": {"tag": 77, "content_type": 7, "object_id": 95}}, {"model": "taggit.taggeditem", "pk": 297, "fields": {"tag": 6, "content_type": 7, "object_id": 95}}, {"model": "taggit.taggeditem", "pk": 298, "fields": {"tag": 1, "content_type": 7, "object_id": 96}}, {"model": "taggit.taggeditem", "pk": 299, "fields": {"tag": 91, "content_type": 7, "object_id": 96}}, {"model": "taggit.taggeditem", "pk": 300, "fields": {"tag": 12, "content_type": 7, "object_id": 96}}, {"model": "taggit.taggeditem", "pk": 301, "fields": {"tag": 6, "content_type": 7, "object_id": 96}}, {"model": "taggit.taggeditem", "pk": 302, "fields": {"tag": 160, "content_type": 7, "object_id": 97}}, {"model": "taggit.taggeditem", "pk": 303, "fields": {"tag": 12, "content_type": 7, "object_id": 97}}, {"model": "taggit.taggeditem", "pk": 304, "fields": {"tag": 161, "content_type": 7, "object_id": 98}}, {"model": "taggit.taggeditem", "pk": 305, "fields": {"tag": 7, "content_type": 7, "object_id": 98}}, {"model": "taggit.taggeditem", "pk": 306, "fields": {"tag": 26, "content_type": 7, "object_id": 99}}, {"model": "taggit.taggeditem", "pk": 307, "fields": {"tag": 82, "content_type": 7, "object_id": 100}}, {"model": "taggit.taggeditem", "pk": 308, "fields": {"tag": 84, "content_type": 7, "object_id": 100}}, {"model": "taggit.taggeditem", "pk": 309, "fields": {"tag": 6, "content_type": 7, "object_id": 100}}, {"model": "taggit.taggeditem", "pk": 310, "fields": {"tag": 7, "content_type": 7, "object_id": 100}}, {"model": "taggit.taggeditem", "pk": 311, "fields": {"tag": 162, "content_type": 7, "object_id": 101}}, {"model": "taggit.taggeditem", "pk": 312, "fields": {"tag": 163, "content_type": 7, "object_id": 101}}, {"model": "taggit.taggeditem", "pk": 313, "fields": {"tag": 164, "content_type": 7, "object_id": 101}}, {"model": "taggit.taggeditem", "pk": 314, "fields": {"tag": 165, "content_type": 7, "object_id": 101}}, {"model": "taggit.taggeditem", "pk": 315, "fields": {"tag": 88, "content_type": 7, "object_id": 102}}, {"model": "taggit.taggeditem", "pk": 316, "fields": {"tag": 18, "content_type": 7, "object_id": 102}}, {"model": "taggit.taggeditem", "pk": 317, "fields": {"tag": 166, "content_type": 7, "object_id": 102}}, {"model": "taggit.taggeditem", "pk": 318, "fields": {"tag": 54, "content_type": 7, "object_id": 102}}]